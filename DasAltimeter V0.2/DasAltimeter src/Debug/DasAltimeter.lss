
DasAltimeter.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006388  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000004a0  20000000  00006388  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000340  200004a0  00006828  000204a0  2**3
                  ALLOC
  3 .stack        00002000  200007e0  00006b68  000204a0  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  000204a0  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  000204c8  2**0
                  CONTENTS, READONLY
  6 .debug_info   00027cf1  00000000  00000000  00020521  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000030a1  00000000  00000000  00048212  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000021c6  00000000  00000000  0004b2b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000003d0  00000000  00000000  0004d479  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000c28  00000000  00000000  0004d849  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000162ef  00000000  00000000  0004e471  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00009692  00000000  00000000  00064760  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00072eae  00000000  00000000  0006ddf2  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00001048  00000000  00000000  000e0ca0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
 *         retrieved from cpu registers.
 */
void SystemCoreClockUpdate(void)
{
	// Not implemented
	SystemCoreClock = __SYSTEM_CLOCK;
       0:	e0 27 00 20 19 01 00 00 15 01 00 00 15 01 00 00     .'. ............
	...
      2c:	15 01 00 00 00 00 00 00 00 00 00 00 15 01 00 00     ................
      3c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      4c:	19 0f 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      5c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      6c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      7c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      8c:	bd 0f 00 00 25 10 00 00 00 00 00 00 00 00 00 00     ....%...........
      9c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
      ac:	15 01 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	200004a0 	.word	0x200004a0
      d4:	00000000 	.word	0x00000000
      d8:	00006388 	.word	0x00006388

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	200004a4 	.word	0x200004a4
     108:	00006388 	.word	0x00006388
     10c:	00006388 	.word	0x00006388
     110:	00000000 	.word	0x00000000

00000114 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     114:	e7fe      	b.n	114 <Dummy_Handler>
	...

00000118 <Reset_Handler>:
        if (pSrc != pDest) {
     118:	4821      	ldr	r0, [pc, #132]	; (1a0 <Reset_Handler+0x88>)
     11a:	4922      	ldr	r1, [pc, #136]	; (1a4 <Reset_Handler+0x8c>)
{
     11c:	b570      	push	{r4, r5, r6, lr}
        if (pSrc != pDest) {
     11e:	4288      	cmp	r0, r1
     120:	d004      	beq.n	12c <Reset_Handler+0x14>
     122:	2300      	movs	r3, #0
                for (; pDest < &_erelocate;) {
     124:	4c20      	ldr	r4, [pc, #128]	; (1a8 <Reset_Handler+0x90>)
     126:	18ca      	adds	r2, r1, r3
     128:	42a2      	cmp	r2, r4
     12a:	d332      	bcc.n	192 <Reset_Handler+0x7a>
                *pDest++ = 0;
     12c:	2100      	movs	r1, #0
     12e:	4b1f      	ldr	r3, [pc, #124]	; (1ac <Reset_Handler+0x94>)
        for (pDest = &_szero; pDest < &_ezero;) {
     130:	4a1f      	ldr	r2, [pc, #124]	; (1b0 <Reset_Handler+0x98>)
     132:	4293      	cmp	r3, r2
     134:	d331      	bcc.n	19a <Reset_Handler+0x82>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     136:	21ff      	movs	r1, #255	; 0xff
     138:	4b1e      	ldr	r3, [pc, #120]	; (1b4 <Reset_Handler+0x9c>)
     13a:	4a1f      	ldr	r2, [pc, #124]	; (1b8 <Reset_Handler+0xa0>)
     13c:	438b      	bics	r3, r1
     13e:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     140:	2202      	movs	r2, #2
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
     142:	250c      	movs	r5, #12
     144:	2408      	movs	r4, #8
        DMAC->QOSCTRL.bit.DQOS = 2;
     146:	2630      	movs	r6, #48	; 0x30
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     148:	4b1c      	ldr	r3, [pc, #112]	; (1bc <Reset_Handler+0xa4>)
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
     14a:	481d      	ldr	r0, [pc, #116]	; (1c0 <Reset_Handler+0xa8>)
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     14c:	625a      	str	r2, [r3, #36]	; 0x24
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
     14e:	78c3      	ldrb	r3, [r0, #3]
     150:	39fc      	subs	r1, #252	; 0xfc
     152:	438b      	bics	r3, r1
     154:	4313      	orrs	r3, r2
     156:	70c3      	strb	r3, [r0, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
     158:	78c3      	ldrb	r3, [r0, #3]
     15a:	43ab      	bics	r3, r5
     15c:	4323      	orrs	r3, r4
     15e:	70c3      	strb	r3, [r0, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
     160:	4b18      	ldr	r3, [pc, #96]	; (1c4 <Reset_Handler+0xac>)
     162:	7b98      	ldrb	r0, [r3, #14]
     164:	43b0      	bics	r0, r6
     166:	0006      	movs	r6, r0
     168:	2020      	movs	r0, #32
     16a:	4330      	orrs	r0, r6
     16c:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
     16e:	7b98      	ldrb	r0, [r3, #14]
     170:	43a8      	bics	r0, r5
     172:	4304      	orrs	r4, r0
     174:	739c      	strb	r4, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
     176:	7b98      	ldrb	r0, [r3, #14]
     178:	4388      	bics	r0, r1
     17a:	4302      	orrs	r2, r0
     17c:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
     17e:	2380      	movs	r3, #128	; 0x80
     180:	4a11      	ldr	r2, [pc, #68]	; (1c8 <Reset_Handler+0xb0>)
     182:	6851      	ldr	r1, [r2, #4]
     184:	430b      	orrs	r3, r1
     186:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     188:	4b10      	ldr	r3, [pc, #64]	; (1cc <Reset_Handler+0xb4>)
     18a:	4798      	blx	r3
        main();
     18c:	4b10      	ldr	r3, [pc, #64]	; (1d0 <Reset_Handler+0xb8>)
     18e:	4798      	blx	r3
     190:	e7fe      	b.n	190 <Reset_Handler+0x78>
                        *pDest++ = *pSrc++;
     192:	58c5      	ldr	r5, [r0, r3]
     194:	3304      	adds	r3, #4
     196:	6015      	str	r5, [r2, #0]
     198:	e7c5      	b.n	126 <Reset_Handler+0xe>
                *pDest++ = 0;
     19a:	c302      	stmia	r3!, {r1}
     19c:	e7c9      	b.n	132 <Reset_Handler+0x1a>
     19e:	46c0      	nop			; (mov r8, r8)
     1a0:	00006388 	.word	0x00006388
     1a4:	20000000 	.word	0x20000000
     1a8:	200004a0 	.word	0x200004a0
     1ac:	200004a0 	.word	0x200004a0
     1b0:	200007e0 	.word	0x200007e0
     1b4:	00000000 	.word	0x00000000
     1b8:	e000ed00 	.word	0xe000ed00
     1bc:	410070fc 	.word	0x410070fc
     1c0:	41005000 	.word	0x41005000
     1c4:	41004800 	.word	0x41004800
     1c8:	41004000 	.word	0x41004000
     1cc:	000060f1 	.word	0x000060f1
     1d0:	00000a01 	.word	0x00000a01

000001d4 <SystemInit>:
     1d4:	4a01      	ldr	r2, [pc, #4]	; (1dc <SystemInit+0x8>)
     1d6:	4b02      	ldr	r3, [pc, #8]	; (1e0 <SystemInit+0xc>)
     1d8:	601a      	str	r2, [r3, #0]
     1da:	4770      	bx	lr
     1dc:	000f4240 	.word	0x000f4240
     1e0:	20000000 	.word	0x20000000

000001e4 <AT25SFHoldTillReady>:
    pinLow(cs_mem);
    dummy_rx = spiDataTransfer(SPI1,OPCODE_WRITEENABLE);
    pinHigh(cs_mem);
}

void AT25SFHoldTillReady(){
     1e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
}


inline static void pinLow(Pin p) {
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     1e6:	2380      	movs	r3, #128	; 0x80
     1e8:	4f09      	ldr	r7, [pc, #36]	; (210 <AT25SFHoldTillReady+0x2c>)
     1ea:	02db      	lsls	r3, r3, #11
     1ec:	617b      	str	r3, [r7, #20]
	pinLow(cs_mem);
	dummy_rx = spiDataTransfer(SPI1,OPCODE_READSTATUS);
     1ee:	2105      	movs	r1, #5
     1f0:	2001      	movs	r0, #1
     1f2:	4d08      	ldr	r5, [pc, #32]	; (214 <AT25SFHoldTillReady+0x30>)
     1f4:	47a8      	blx	r5
        while (spiDataTransfer(SPI1,dummy_rx) & 0x01);
     1f6:	2401      	movs	r4, #1
	dummy_rx = spiDataTransfer(SPI1,OPCODE_READSTATUS);
     1f8:	4e07      	ldr	r6, [pc, #28]	; (218 <AT25SFHoldTillReady+0x34>)
     1fa:	7030      	strb	r0, [r6, #0]
        while (spiDataTransfer(SPI1,dummy_rx) & 0x01);
     1fc:	7831      	ldrb	r1, [r6, #0]
     1fe:	0020      	movs	r0, r4
     200:	47a8      	blx	r5
     202:	4220      	tst	r0, r4
     204:	d1fa      	bne.n	1fc <AT25SFHoldTillReady+0x18>
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     206:	2380      	movs	r3, #128	; 0x80
     208:	02db      	lsls	r3, r3, #11
     20a:	61bb      	str	r3, [r7, #24]
	pinHigh(cs_mem);
}
     20c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     20e:	46c0      	nop			; (mov r8, r8)
     210:	41004400 	.word	0x41004400
     214:	00002619 	.word	0x00002619
     218:	200004c0 	.word	0x200004c0

0000021c <AT25SFChipErase>:
void AT25SFChipErase() {
     21c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     21e:	2580      	movs	r5, #128	; 0x80
     220:	4c08      	ldr	r4, [pc, #32]	; (244 <AT25SFChipErase+0x28>)
     222:	02ed      	lsls	r5, r5, #11

    pinLow(cs_mem);
    dummy_rx = spiDataTransfer(SPI1,OPCODE_WRITEENABLE);
     224:	4f08      	ldr	r7, [pc, #32]	; (248 <AT25SFChipErase+0x2c>)
     226:	6165      	str	r5, [r4, #20]
     228:	2106      	movs	r1, #6
     22a:	2001      	movs	r0, #1
     22c:	47b8      	blx	r7
     22e:	4e07      	ldr	r6, [pc, #28]	; (24c <AT25SFChipErase+0x30>)
    pinHigh(cs_mem);

    pinLow(cs_mem);
    dummy_rx = spiDataTransfer(SPI1,OPCODE_CHIP_ERASE);
     230:	2160      	movs	r1, #96	; 0x60
    dummy_rx = spiDataTransfer(SPI1,OPCODE_WRITEENABLE);
     232:	7030      	strb	r0, [r6, #0]
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     234:	61a5      	str	r5, [r4, #24]
    dummy_rx = spiDataTransfer(SPI1,OPCODE_CHIP_ERASE);
     236:	2001      	movs	r0, #1
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     238:	6165      	str	r5, [r4, #20]
     23a:	47b8      	blx	r7
     23c:	7030      	strb	r0, [r6, #0]
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     23e:	61a5      	str	r5, [r4, #24]
    pinHigh(cs_mem);
}
     240:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     242:	46c0      	nop			; (mov r8, r8)
     244:	41004400 	.word	0x41004400
     248:	00002619 	.word	0x00002619
     24c:	200004c0 	.word	0x200004c0

00000250 <AT25SFWriteBytes>:
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     250:	2380      	movs	r3, #128	; 0x80
    pinHigh(cs_mem);

    return _byte;
}

void AT25SFWriteBytes(uint32_t address, u8_t len, uint8_t *bytes) {
     252:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     254:	4c19      	ldr	r4, [pc, #100]	; (2bc <AT25SFWriteBytes+0x6c>)
     256:	02db      	lsls	r3, r3, #11
     258:	9201      	str	r2, [sp, #4]
     25a:	0007      	movs	r7, r0


    pinLow(cs_mem);
    dummy_rx = spiDataTransfer(SPI1,OPCODE_WRITEENABLE);
     25c:	4d18      	ldr	r5, [pc, #96]	; (2c0 <AT25SFWriteBytes+0x70>)
void AT25SFWriteBytes(uint32_t address, u8_t len, uint8_t *bytes) {
     25e:	9100      	str	r1, [sp, #0]
    dummy_rx = spiDataTransfer(SPI1,OPCODE_WRITEENABLE);
     260:	2001      	movs	r0, #1
     262:	6163      	str	r3, [r4, #20]
     264:	2106      	movs	r1, #6
     266:	47a8      	blx	r5
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     268:	2380      	movs	r3, #128	; 0x80
     26a:	4e16      	ldr	r6, [pc, #88]	; (2c4 <AT25SFWriteBytes+0x74>)
     26c:	02db      	lsls	r3, r3, #11
     26e:	7030      	strb	r0, [r6, #0]
    pinHigh(cs_mem);

    pinLow(cs_mem);
    dummy_rx = spiDataTransfer(SPI1,OPCODE_PROGRAM);
     270:	2102      	movs	r1, #2
     272:	61a3      	str	r3, [r4, #24]
     274:	2001      	movs	r0, #1
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     276:	6163      	str	r3, [r4, #20]
     278:	47a8      	blx	r5
    dummy_rx = spiDataTransfer(SPI1,((address & 0xFF0000) >> 16));
     27a:	0c39      	lsrs	r1, r7, #16
    dummy_rx = spiDataTransfer(SPI1,OPCODE_PROGRAM);
     27c:	7030      	strb	r0, [r6, #0]
    dummy_rx = spiDataTransfer(SPI1,((address & 0xFF0000) >> 16));
     27e:	b2c9      	uxtb	r1, r1
     280:	2001      	movs	r0, #1
     282:	47a8      	blx	r5
    dummy_rx = spiDataTransfer(SPI1,((address & 0x00FF00) >>  8));
     284:	0a39      	lsrs	r1, r7, #8
    dummy_rx = spiDataTransfer(SPI1,((address & 0xFF0000) >> 16));
     286:	7030      	strb	r0, [r6, #0]
    dummy_rx = spiDataTransfer(SPI1,((address & 0x00FF00) >>  8));
     288:	b2c9      	uxtb	r1, r1
     28a:	2001      	movs	r0, #1
     28c:	47a8      	blx	r5
    dummy_rx = spiDataTransfer(SPI1,((address & 0x0000FF) >>  0));
     28e:	b2f9      	uxtb	r1, r7
    dummy_rx = spiDataTransfer(SPI1,((address & 0x00FF00) >>  8));
     290:	7030      	strb	r0, [r6, #0]
    dummy_rx = spiDataTransfer(SPI1,((address & 0x0000FF) >>  0));
     292:	2001      	movs	r0, #1
     294:	47a8      	blx	r5
     296:	9b00      	ldr	r3, [sp, #0]
     298:	9f01      	ldr	r7, [sp, #4]
     29a:	7030      	strb	r0, [r6, #0]
     29c:	18fb      	adds	r3, r7, r3
     29e:	9300      	str	r3, [sp, #0]

    for (u8_t pos = 0; pos < len; ++pos) {
     2a0:	9b00      	ldr	r3, [sp, #0]
     2a2:	429f      	cmp	r7, r3
     2a4:	d103      	bne.n	2ae <AT25SFWriteBytes+0x5e>
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     2a6:	2380      	movs	r3, #128	; 0x80
     2a8:	02db      	lsls	r3, r3, #11
     2aa:	61a3      	str	r3, [r4, #24]
        dummy_rx = spiDataTransfer(SPI1, bytes[pos]);
    }

    pinHigh(cs_mem);

}
     2ac:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
        dummy_rx = spiDataTransfer(SPI1, bytes[pos]);
     2ae:	7839      	ldrb	r1, [r7, #0]
     2b0:	2001      	movs	r0, #1
     2b2:	47a8      	blx	r5
     2b4:	3701      	adds	r7, #1
     2b6:	7030      	strb	r0, [r6, #0]
     2b8:	e7f2      	b.n	2a0 <AT25SFWriteBytes+0x50>
     2ba:	46c0      	nop			; (mov r8, r8)
     2bc:	41004400 	.word	0x41004400
     2c0:	00002619 	.word	0x00002619
     2c4:	200004c0 	.word	0x200004c0

000002c8 <AT25SEWritePage>:
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     2c8:	2380      	movs	r3, #128	; 0x80
    delay_ms(70);

}


u8_t AT25SEWritePage(u32_t startingAddress, u8_t *data) {
     2ca:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     2cc:	4c18      	ldr	r4, [pc, #96]	; (330 <AT25SEWritePage+0x68>)
     2ce:	02db      	lsls	r3, r3, #11
     2d0:	0007      	movs	r7, r0

    u8_t bytesSent = 0;


    pinLow(cs_mem);
    dummy_rx = spiDataTransfer(SPI1,OPCODE_WRITEENABLE);
     2d2:	4e18      	ldr	r6, [pc, #96]	; (334 <AT25SEWritePage+0x6c>)
u8_t AT25SEWritePage(u32_t startingAddress, u8_t *data) {
     2d4:	9101      	str	r1, [sp, #4]
    dummy_rx = spiDataTransfer(SPI1,OPCODE_WRITEENABLE);
     2d6:	2001      	movs	r0, #1
     2d8:	6163      	str	r3, [r4, #20]
     2da:	2106      	movs	r1, #6
     2dc:	47b0      	blx	r6
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     2de:	2380      	movs	r3, #128	; 0x80
     2e0:	4d15      	ldr	r5, [pc, #84]	; (338 <AT25SEWritePage+0x70>)
     2e2:	02db      	lsls	r3, r3, #11
     2e4:	7028      	strb	r0, [r5, #0]
    pinHigh(cs_mem);


    pinLow(cs_mem);
    dummy_rx = spiDataTransfer(SPI1,OPCODE_PROGRAM);
     2e6:	2102      	movs	r1, #2
     2e8:	61a3      	str	r3, [r4, #24]
     2ea:	2001      	movs	r0, #1
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     2ec:	6163      	str	r3, [r4, #20]
     2ee:	47b0      	blx	r6
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0xFF0000) >> 16));
     2f0:	0c39      	lsrs	r1, r7, #16
    dummy_rx = spiDataTransfer(SPI1,OPCODE_PROGRAM);
     2f2:	7028      	strb	r0, [r5, #0]
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0xFF0000) >> 16));
     2f4:	b2c9      	uxtb	r1, r1
     2f6:	2001      	movs	r0, #1
     2f8:	47b0      	blx	r6
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x00FF00) >>  8));
     2fa:	0a39      	lsrs	r1, r7, #8
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0xFF0000) >> 16));
     2fc:	7028      	strb	r0, [r5, #0]
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x00FF00) >>  8));
     2fe:	b2c9      	uxtb	r1, r1
     300:	2001      	movs	r0, #1
     302:	47b0      	blx	r6
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x0000FF) >>  0));
     304:	b2f9      	uxtb	r1, r7
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x00FF00) >>  8));
     306:	7028      	strb	r0, [r5, #0]
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x0000FF) >>  0));
     308:	2001      	movs	r0, #1
     30a:	47b0      	blx	r6
     30c:	9f01      	ldr	r7, [sp, #4]
     30e:	7028      	strb	r0, [r5, #0]
     310:	1c7b      	adds	r3, r7, #1
     312:	33ff      	adds	r3, #255	; 0xff
     314:	9301      	str	r3, [sp, #4]


    for (u16_t pos = 0; pos < 256; ++pos) {
        ++bytesSent;
        dummy_rx = spiDataTransfer(SPI1,data[pos]);
     316:	7839      	ldrb	r1, [r7, #0]
     318:	2001      	movs	r0, #1
     31a:	47b0      	blx	r6
    for (u16_t pos = 0; pos < 256; ++pos) {
     31c:	9b01      	ldr	r3, [sp, #4]
     31e:	3701      	adds	r7, #1
        dummy_rx = spiDataTransfer(SPI1,data[pos]);
     320:	7028      	strb	r0, [r5, #0]
    for (u16_t pos = 0; pos < 256; ++pos) {
     322:	42bb      	cmp	r3, r7
     324:	d1f7      	bne.n	316 <AT25SEWritePage+0x4e>
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     326:	2380      	movs	r3, #128	; 0x80
     328:	02db      	lsls	r3, r3, #11
    }
    pinHigh(cs_mem);


    return bytesSent;
}
     32a:	2000      	movs	r0, #0
     32c:	61a3      	str	r3, [r4, #24]
     32e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
     330:	41004400 	.word	0x41004400
     334:	00002619 	.word	0x00002619
     338:	200004c0 	.word	0x200004c0

0000033c <AT25SEreadSample>:
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     33c:	2380      	movs	r3, #128	; 0x80

void AT25SEreadSample(u32_t startingAddress, u8_t len, u8_t *data) {
     33e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     340:	4f17      	ldr	r7, [pc, #92]	; (3a0 <AT25SEreadSample+0x64>)
     342:	02db      	lsls	r3, r3, #11
     344:	9201      	str	r2, [sp, #4]
     346:	0004      	movs	r4, r0

    pinLow(cs_mem);
    dummy_rx = spiDataTransfer(SPI1,OPCODE_FASTREAD_ARRAY);
     348:	4d16      	ldr	r5, [pc, #88]	; (3a4 <AT25SEreadSample+0x68>)
void AT25SEreadSample(u32_t startingAddress, u8_t len, u8_t *data) {
     34a:	9100      	str	r1, [sp, #0]
    dummy_rx = spiDataTransfer(SPI1,OPCODE_FASTREAD_ARRAY);
     34c:	2001      	movs	r0, #1
     34e:	617b      	str	r3, [r7, #20]
     350:	210b      	movs	r1, #11
     352:	47a8      	blx	r5
     354:	4e14      	ldr	r6, [pc, #80]	; (3a8 <AT25SEreadSample+0x6c>)
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0xFF0000) >> 16));
     356:	0c21      	lsrs	r1, r4, #16
    dummy_rx = spiDataTransfer(SPI1,OPCODE_FASTREAD_ARRAY);
     358:	7030      	strb	r0, [r6, #0]
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0xFF0000) >> 16));
     35a:	b2c9      	uxtb	r1, r1
     35c:	2001      	movs	r0, #1
     35e:	47a8      	blx	r5
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x00FF00) >>  8));
     360:	0a21      	lsrs	r1, r4, #8
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0xFF0000) >> 16));
     362:	7030      	strb	r0, [r6, #0]
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x00FF00) >>  8));
     364:	b2c9      	uxtb	r1, r1
     366:	2001      	movs	r0, #1
     368:	47a8      	blx	r5
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x0000FF) >>  0));
     36a:	b2e1      	uxtb	r1, r4
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x00FF00) >>  8));
     36c:	7030      	strb	r0, [r6, #0]
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x0000FF) >>  0));
     36e:	2001      	movs	r0, #1
     370:	47a8      	blx	r5
    dummy_rx = spiDataTransfer(SPI1, 0xFF);
     372:	21ff      	movs	r1, #255	; 0xff
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x0000FF) >>  0));
     374:	7030      	strb	r0, [r6, #0]
    dummy_rx = spiDataTransfer(SPI1, 0xFF);
     376:	2001      	movs	r0, #1
     378:	47a8      	blx	r5
     37a:	9b00      	ldr	r3, [sp, #0]
     37c:	9c01      	ldr	r4, [sp, #4]
     37e:	7030      	strb	r0, [r6, #0]
     380:	18e3      	adds	r3, r4, r3
     382:	9300      	str	r3, [sp, #0]


    for (u8_t pos = 0; pos < len; ++pos) {
     384:	9b00      	ldr	r3, [sp, #0]
     386:	429c      	cmp	r4, r3
     388:	d103      	bne.n	392 <AT25SEreadSample+0x56>
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     38a:	2380      	movs	r3, #128	; 0x80
     38c:	02db      	lsls	r3, r3, #11
     38e:	61bb      	str	r3, [r7, #24]
        data[pos] = spiDataTransfer(SPI1,dummy_rx);
    }
    pinHigh(cs_mem);

}
     390:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
        data[pos] = spiDataTransfer(SPI1,dummy_rx);
     392:	7831      	ldrb	r1, [r6, #0]
     394:	2001      	movs	r0, #1
     396:	47a8      	blx	r5
     398:	7020      	strb	r0, [r4, #0]
     39a:	3401      	adds	r4, #1
     39c:	e7f2      	b.n	384 <AT25SEreadSample+0x48>
     39e:	46c0      	nop			; (mov r8, r8)
     3a0:	41004400 	.word	0x41004400
     3a4:	00002619 	.word	0x00002619
     3a8:	200004c0 	.word	0x200004c0

000003ac <AT25SEreadPage>:
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     3ac:	2380      	movs	r3, #128	; 0x80

void AT25SEreadPage(u32_t startingAddress, u8_t *data) {
     3ae:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     3b0:	4f16      	ldr	r7, [pc, #88]	; (40c <AT25SEreadPage+0x60>)
     3b2:	02db      	lsls	r3, r3, #11
     3b4:	0006      	movs	r6, r0


    pinLow(cs_mem);
    dummy_rx = spiDataTransfer(SPI1,OPCODE_FASTREAD_ARRAY);
     3b6:	4c16      	ldr	r4, [pc, #88]	; (410 <AT25SEreadPage+0x64>)
void AT25SEreadPage(u32_t startingAddress, u8_t *data) {
     3b8:	9101      	str	r1, [sp, #4]
    dummy_rx = spiDataTransfer(SPI1,OPCODE_FASTREAD_ARRAY);
     3ba:	2001      	movs	r0, #1
     3bc:	617b      	str	r3, [r7, #20]
     3be:	210b      	movs	r1, #11
     3c0:	47a0      	blx	r4
     3c2:	4d14      	ldr	r5, [pc, #80]	; (414 <AT25SEreadPage+0x68>)
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0xFF0000) >> 16));
     3c4:	0c31      	lsrs	r1, r6, #16
    dummy_rx = spiDataTransfer(SPI1,OPCODE_FASTREAD_ARRAY);
     3c6:	7028      	strb	r0, [r5, #0]
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0xFF0000) >> 16));
     3c8:	b2c9      	uxtb	r1, r1
     3ca:	2001      	movs	r0, #1
     3cc:	47a0      	blx	r4
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x00FF00) >>  8));
     3ce:	0a31      	lsrs	r1, r6, #8
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0xFF0000) >> 16));
     3d0:	7028      	strb	r0, [r5, #0]
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x00FF00) >>  8));
     3d2:	b2c9      	uxtb	r1, r1
     3d4:	2001      	movs	r0, #1
     3d6:	47a0      	blx	r4
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x0000FF) >>  0));
     3d8:	b2f1      	uxtb	r1, r6
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x00FF00) >>  8));
     3da:	7028      	strb	r0, [r5, #0]
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x0000FF) >>  0));
     3dc:	2001      	movs	r0, #1
     3de:	47a0      	blx	r4
    dummy_rx = spiDataTransfer(SPI1, 0xFF);
     3e0:	21ff      	movs	r1, #255	; 0xff
    dummy_rx = spiDataTransfer(SPI1,((startingAddress & 0x0000FF) >>  0));
     3e2:	7028      	strb	r0, [r5, #0]
    dummy_rx = spiDataTransfer(SPI1, 0xFF);
     3e4:	2001      	movs	r0, #1
     3e6:	47a0      	blx	r4
     3e8:	9e01      	ldr	r6, [sp, #4]
     3ea:	7028      	strb	r0, [r5, #0]
     3ec:	1c73      	adds	r3, r6, #1
     3ee:	33ff      	adds	r3, #255	; 0xff
     3f0:	9301      	str	r3, [sp, #4]


    for (u16_t pos = 0; pos < 256; ++pos) {
        data[pos] = spiDataTransfer(SPI1,dummy_rx);
     3f2:	7829      	ldrb	r1, [r5, #0]
     3f4:	2001      	movs	r0, #1
     3f6:	47a0      	blx	r4
    for (u16_t pos = 0; pos < 256; ++pos) {
     3f8:	9b01      	ldr	r3, [sp, #4]
        data[pos] = spiDataTransfer(SPI1,dummy_rx);
     3fa:	7030      	strb	r0, [r6, #0]
     3fc:	3601      	adds	r6, #1
    for (u16_t pos = 0; pos < 256; ++pos) {
     3fe:	429e      	cmp	r6, r3
     400:	d1f7      	bne.n	3f2 <AT25SEreadPage+0x46>
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     402:	2380      	movs	r3, #128	; 0x80
     404:	02db      	lsls	r3, r3, #11
     406:	61bb      	str	r3, [r7, #24]
    }
    pinHigh(cs_mem);

}
     408:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
     40a:	46c0      	nop			; (mov r8, r8)
     40c:	41004400 	.word	0x41004400
     410:	00002619 	.word	0x00002619
     414:	200004c0 	.word	0x200004c0

00000418 <readMS5803AdcResults>:
#include <boardDefines.h>
#include <math.h>
//#include <tgmath.h>


u32_t readMS5803AdcResults() {
     418:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     41a:	2780      	movs	r7, #128	; 0x80
     41c:	4e0c      	ldr	r6, [pc, #48]	; (450 <readMS5803AdcResults+0x38>)
     41e:	01ff      	lsls	r7, r7, #7

    u8_t dummy_tx = 0xFF;
    u8_t dummy_rx;

    pinLow(cs_baro);
    dummy_rx = spiDataTransfer(SPI2, cmdAdcRead_);
     420:	4d0c      	ldr	r5, [pc, #48]	; (454 <readMS5803AdcResults+0x3c>)
     422:	6177      	str	r7, [r6, #20]
     424:	2100      	movs	r1, #0
     426:	2002      	movs	r0, #2
     428:	47a8      	blx	r5
    u8_t _byte1 = spiDataTransfer(SPI2,dummy_tx);
     42a:	21ff      	movs	r1, #255	; 0xff
     42c:	2002      	movs	r0, #2
     42e:	47a8      	blx	r5
    u8_t _byte2 = spiDataTransfer(SPI2,dummy_tx);
     430:	21ff      	movs	r1, #255	; 0xff
    u8_t _byte1 = spiDataTransfer(SPI2,dummy_tx);
     432:	0004      	movs	r4, r0
    u8_t _byte2 = spiDataTransfer(SPI2,dummy_tx);
     434:	2002      	movs	r0, #2
     436:	47a8      	blx	r5
    u8_t _byte3 = spiDataTransfer(SPI2,dummy_tx);
     438:	21ff      	movs	r1, #255	; 0xff
    u8_t _byte2 = spiDataTransfer(SPI2,dummy_tx);
     43a:	9001      	str	r0, [sp, #4]
    u8_t _byte3 = spiDataTransfer(SPI2,dummy_tx);
     43c:	2002      	movs	r0, #2
     43e:	47a8      	blx	r5
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     440:	61b7      	str	r7, [r6, #24]
//    u8_t _byte1 = byteIn(spi2SCK,spi2MISO);
//    u8_t _byte2 = byteIn(spi2SCK,spi2MISO);
//    u8_t _byte3 = byteIn(spi2SCK,spi2MISO);
    pinHigh(cs_baro);

    u32_t _receive = (_byte1 << 16) | (_byte2 << 8) | (_byte3);
     442:	9b01      	ldr	r3, [sp, #4]
     444:	0424      	lsls	r4, r4, #16
     446:	021b      	lsls	r3, r3, #8
     448:	431c      	orrs	r4, r3
     44a:	4320      	orrs	r0, r4
    return _receive;
}
     44c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
     44e:	46c0      	nop			; (mov r8, r8)
     450:	41004400 	.word	0x41004400
     454:	00002619 	.word	0x00002619

00000458 <ConvertPressureTemperature>:

void ConvertPressureTemperature(u32_t pressureRaw, u32_t tempRaw, u32_t* temperatureCelcus, int32_t* pressureMbar ) {
     458:	b5f0      	push	{r4, r5, r6, r7, lr}
    const u16_t C5 = coefficients_[5];
    const u16_t C6 = coefficients_[6];

    // calculate 1st order pressure and temperature (MS5607 1st order algorithm)
    const  int32_t dT = (tempRaw) - ((int32_t)C5 << 8);
    *temperatureCelcus  = 2000 + (((int64_t)dT * C6) >> 23) ;
     45a:	2600      	movs	r6, #0
void ConvertPressureTemperature(u32_t pressureRaw, u32_t tempRaw, u32_t* temperatureCelcus, int32_t* pressureMbar ) {
     45c:	b089      	sub	sp, #36	; 0x24
     45e:	9306      	str	r3, [sp, #24]
    const u16_t C1 = coefficients_[1];
     460:	4b25      	ldr	r3, [pc, #148]	; (4f8 <ConvertPressureTemperature+0xa0>)
void ConvertPressureTemperature(u32_t pressureRaw, u32_t tempRaw, u32_t* temperatureCelcus, int32_t* pressureMbar ) {
     462:	9004      	str	r0, [sp, #16]
     464:	9205      	str	r2, [sp, #20]
    const u16_t C1 = coefficients_[1];
     466:	885a      	ldrh	r2, [r3, #2]
    *temperatureCelcus  = 2000 + (((int64_t)dT * C6) >> 23) ;
     468:	4c24      	ldr	r4, [pc, #144]	; (4fc <ConvertPressureTemperature+0xa4>)
    const u16_t C1 = coefficients_[1];
     46a:	9201      	str	r2, [sp, #4]
    const u16_t C2 = coefficients_[2];
     46c:	889a      	ldrh	r2, [r3, #4]
     46e:	9202      	str	r2, [sp, #8]
    const u16_t C4 = coefficients_[4];
     470:	891a      	ldrh	r2, [r3, #8]
    const u16_t C3 = coefficients_[3];
     472:	88dd      	ldrh	r5, [r3, #6]
    const u16_t C4 = coefficients_[4];
     474:	9203      	str	r2, [sp, #12]
    const  int32_t dT = (tempRaw) - ((int32_t)C5 << 8);
     476:	895f      	ldrh	r7, [r3, #10]
     478:	023f      	lsls	r7, r7, #8
     47a:	1bcf      	subs	r7, r1, r7
    *temperatureCelcus  = 2000 + (((int64_t)dT * C6) >> 23) ;
     47c:	17fa      	asrs	r2, r7, #31
     47e:	9207      	str	r2, [sp, #28]
     480:	8998      	ldrh	r0, [r3, #12]
     482:	003a      	movs	r2, r7
     484:	17fb      	asrs	r3, r7, #31
     486:	0031      	movs	r1, r6
     488:	47a0      	blx	r4
     48a:	23fa      	movs	r3, #250	; 0xfa
     48c:	0249      	lsls	r1, r1, #9
     48e:	0dc0      	lsrs	r0, r0, #23
     490:	4308      	orrs	r0, r1
     492:	00db      	lsls	r3, r3, #3
     494:	18c0      	adds	r0, r0, r3
     496:	9b05      	ldr	r3, [sp, #20]

    const  int64_t OFF   = ((int64_t)C2 << 16) + ((C4 * (int64_t)dT) >> 7);
    const  int64_t SENS  =  ((int64_t)C1 << 15) + ((C3 * (int64_t)dT) >> 8);
     498:	003a      	movs	r2, r7
    *temperatureCelcus  = 2000 + (((int64_t)dT * C6) >> 23) ;
     49a:	6018      	str	r0, [r3, #0]
    const  int64_t SENS  =  ((int64_t)C1 << 15) + ((C3 * (int64_t)dT) >> 8);
     49c:	0031      	movs	r1, r6
     49e:	17fb      	asrs	r3, r7, #31
     4a0:	0028      	movs	r0, r5
     4a2:	47a0      	blx	r4
     4a4:	060c      	lsls	r4, r1, #24
     4a6:	120b      	asrs	r3, r1, #8
     4a8:	0031      	movs	r1, r6
     4aa:	0a02      	lsrs	r2, r0, #8
     4ac:	4322      	orrs	r2, r4
     4ae:	9c01      	ldr	r4, [sp, #4]
     4b0:	03e0      	lsls	r0, r4, #15
     4b2:	1880      	adds	r0, r0, r2
     4b4:	4159      	adcs	r1, r3
    *pressureMbar = ((((pressureRaw * SENS) >> 21) - OFF) >> 15);
     4b6:	4c11      	ldr	r4, [pc, #68]	; (4fc <ConvertPressureTemperature+0xa4>)
     4b8:	9a04      	ldr	r2, [sp, #16]
     4ba:	0033      	movs	r3, r6
     4bc:	47a0      	blx	r4
     4be:	02cb      	lsls	r3, r1, #11
     4c0:	0d44      	lsrs	r4, r0, #21
    const  int64_t OFF   = ((int64_t)C2 << 16) + ((C4 * (int64_t)dT) >> 7);
     4c2:	003a      	movs	r2, r7
    *pressureMbar = ((((pressureRaw * SENS) >> 21) - OFF) >> 15);
     4c4:	431c      	orrs	r4, r3
    const  int64_t OFF   = ((int64_t)C2 << 16) + ((C4 * (int64_t)dT) >> 7);
     4c6:	4f0d      	ldr	r7, [pc, #52]	; (4fc <ConvertPressureTemperature+0xa4>)
     4c8:	9b07      	ldr	r3, [sp, #28]
    *pressureMbar = ((((pressureRaw * SENS) >> 21) - OFF) >> 15);
     4ca:	154d      	asrs	r5, r1, #21
    const  int64_t OFF   = ((int64_t)C2 << 16) + ((C4 * (int64_t)dT) >> 7);
     4cc:	9803      	ldr	r0, [sp, #12]
     4ce:	0031      	movs	r1, r6
     4d0:	47b8      	blx	r7
     4d2:	064f      	lsls	r7, r1, #25
     4d4:	11cb      	asrs	r3, r1, #7
     4d6:	0031      	movs	r1, r6
     4d8:	9e02      	ldr	r6, [sp, #8]
     4da:	09c2      	lsrs	r2, r0, #7
     4dc:	433a      	orrs	r2, r7
     4de:	0430      	lsls	r0, r6, #16
     4e0:	1812      	adds	r2, r2, r0
     4e2:	414b      	adcs	r3, r1
    *pressureMbar = ((((pressureRaw * SENS) >> 21) - OFF) >> 15);
     4e4:	1aa4      	subs	r4, r4, r2
     4e6:	419d      	sbcs	r5, r3
     4e8:	046b      	lsls	r3, r5, #17
     4ea:	0be4      	lsrs	r4, r4, #15
     4ec:	431c      	orrs	r4, r3
     4ee:	9b06      	ldr	r3, [sp, #24]
     4f0:	601c      	str	r4, [r3, #0]

}
     4f2:	b009      	add	sp, #36	; 0x24
     4f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     4f6:	46c0      	nop			; (mov r8, r8)
     4f8:	2000060e 	.word	0x2000060e
     4fc:	00003a21 	.word	0x00003a21

00000500 <paToFeetNOAA>:

double paToFeetNOAA(int32_t pressureMbar) {
     500:	b510      	push	{r4, lr}

    double lower =(((double)(pressureMbar)/10)/1013.25);
     502:	4b0c      	ldr	r3, [pc, #48]	; (534 <paToFeetNOAA+0x34>)
     504:	4798      	blx	r3
     506:	4c0c      	ldr	r4, [pc, #48]	; (538 <paToFeetNOAA+0x38>)
     508:	2200      	movs	r2, #0
     50a:	4b0c      	ldr	r3, [pc, #48]	; (53c <paToFeetNOAA+0x3c>)
     50c:	47a0      	blx	r4
     50e:	2200      	movs	r2, #0
     510:	4b0b      	ldr	r3, [pc, #44]	; (540 <paToFeetNOAA+0x40>)
     512:	47a0      	blx	r4
    double exponent = 0.190284;

    double altFeet = (1-pow(lower,exponent))*145366.45;
     514:	4a0b      	ldr	r2, [pc, #44]	; (544 <paToFeetNOAA+0x44>)
     516:	4b0c      	ldr	r3, [pc, #48]	; (548 <paToFeetNOAA+0x48>)
     518:	4c0c      	ldr	r4, [pc, #48]	; (54c <paToFeetNOAA+0x4c>)
     51a:	47a0      	blx	r4
     51c:	4c0c      	ldr	r4, [pc, #48]	; (550 <paToFeetNOAA+0x50>)
     51e:	0002      	movs	r2, r0
     520:	000b      	movs	r3, r1
     522:	2000      	movs	r0, #0
     524:	490b      	ldr	r1, [pc, #44]	; (554 <paToFeetNOAA+0x54>)
     526:	47a0      	blx	r4
     528:	4a0b      	ldr	r2, [pc, #44]	; (558 <paToFeetNOAA+0x58>)
     52a:	4b0c      	ldr	r3, [pc, #48]	; (55c <paToFeetNOAA+0x5c>)
     52c:	4c0c      	ldr	r4, [pc, #48]	; (560 <paToFeetNOAA+0x60>)
     52e:	47a0      	blx	r4
    return altFeet;

}
     530:	bd10      	pop	{r4, pc}
     532:	46c0      	nop			; (mov r8, r8)
     534:	00005ce5 	.word	0x00005ce5
     538:	000048a9 	.word	0x000048a9
     53c:	40240000 	.word	0x40240000
     540:	408faa00 	.word	0x408faa00
     544:	e279dd3c 	.word	0xe279dd3c
     548:	3fc85b39 	.word	0x3fc85b39
     54c:	00002749 	.word	0x00002749
     550:	00005611 	.word	0x00005611
     554:	3ff00000 	.word	0x3ff00000
     558:	9999999a 	.word	0x9999999a
     55c:	4101beb3 	.word	0x4101beb3
     560:	00005111 	.word	0x00005111

00000564 <readMS5803Coefficients>:
    }
}

*/

void readMS5803Coefficients() {
     564:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     566:	2400      	movs	r4, #0
    for (u8_t coeff_num = 1; coeff_num < 7 ; ++coeff_num ) {
        delay_us(600);
        u8_t _cmd = MS5803_CMD_PROM_READ + ((coeff_num)*2);
        delay_us(600);
        pinLow(cs_baro);
        dummy_rx = spiDataTransfer(SPI2, _cmd);
     568:	2602      	movs	r6, #2
        delay_us(600);
     56a:	2096      	movs	r0, #150	; 0x96
     56c:	4d11      	ldr	r5, [pc, #68]	; (5b4 <readMS5803Coefficients+0x50>)
     56e:	0080      	lsls	r0, r0, #2
     570:	47a8      	blx	r5
        delay_us(600);
     572:	2096      	movs	r0, #150	; 0x96
     574:	0080      	lsls	r0, r0, #2
     576:	47a8      	blx	r5
        dummy_rx = spiDataTransfer(SPI2, _cmd);
     578:	0021      	movs	r1, r4
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     57a:	2380      	movs	r3, #128	; 0x80
     57c:	4f0e      	ldr	r7, [pc, #56]	; (5b8 <readMS5803Coefficients+0x54>)
     57e:	01db      	lsls	r3, r3, #7
     580:	395e      	subs	r1, #94	; 0x5e
     582:	617b      	str	r3, [r7, #20]
     584:	4d0d      	ldr	r5, [pc, #52]	; (5bc <readMS5803Coefficients+0x58>)
     586:	b2c9      	uxtb	r1, r1
     588:	0030      	movs	r0, r6
     58a:	47a8      	blx	r5
        u8_t _byte1 = spiDataTransfer(SPI2,dummy_tx);
     58c:	21ff      	movs	r1, #255	; 0xff
     58e:	0030      	movs	r0, r6
     590:	47a8      	blx	r5
        u8_t _byte2 = spiDataTransfer(SPI2,dummy_tx);
     592:	21ff      	movs	r1, #255	; 0xff
        u8_t _byte1 = spiDataTransfer(SPI2,dummy_tx);
     594:	9001      	str	r0, [sp, #4]
        u8_t _byte2 = spiDataTransfer(SPI2,dummy_tx);
     596:	0030      	movs	r0, r6
     598:	47a8      	blx	r5
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     59a:	2380      	movs	r3, #128	; 0x80
     59c:	01db      	lsls	r3, r3, #7
     59e:	61bb      	str	r3, [r7, #24]
        pinHigh(cs_baro);
        coefficients_[coeff_num] = (_byte1 << 8) | _byte2;
     5a0:	9b01      	ldr	r3, [sp, #4]
     5a2:	4a07      	ldr	r2, [pc, #28]	; (5c0 <readMS5803Coefficients+0x5c>)
     5a4:	021b      	lsls	r3, r3, #8
     5a6:	18a2      	adds	r2, r4, r2
     5a8:	4318      	orrs	r0, r3
     5aa:	3402      	adds	r4, #2
     5ac:	8050      	strh	r0, [r2, #2]
    for (u8_t coeff_num = 1; coeff_num < 7 ; ++coeff_num ) {
     5ae:	2c0c      	cmp	r4, #12
     5b0:	d1db      	bne.n	56a <readMS5803Coefficients+0x6>
    }

}
     5b2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
     5b4:	00000ec1 	.word	0x00000ec1
     5b8:	41004400 	.word	0x41004400
     5bc:	00002619 	.word	0x00002619
     5c0:	2000060e 	.word	0x2000060e

000005c4 <initMS5803Barometer>:

void initMS5803Barometer() {
     5c4:	b570      	push	{r4, r5, r6, lr}
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     5c6:	2580      	movs	r5, #128	; 0x80
     5c8:	4c06      	ldr	r4, [pc, #24]	; (5e4 <initMS5803Barometer+0x20>)
     5ca:	01ed      	lsls	r5, r5, #7

    u8_t dummy_tx = 0xFF;
    u8_t dummy_rx;

    pinLow(cs_baro);
    dummy_rx = spiDataTransfer(SPI2, MS5803_CMD_RES);
     5cc:	211e      	movs	r1, #30
     5ce:	6165      	str	r5, [r4, #20]
     5d0:	4b05      	ldr	r3, [pc, #20]	; (5e8 <initMS5803Barometer+0x24>)
     5d2:	2002      	movs	r0, #2
     5d4:	4798      	blx	r3
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     5d6:	61a5      	str	r5, [r4, #24]
    //byteOut(spi2SCK,spi2MOSI, MS5803_CMD_RES);
    pinHigh(cs_baro);
    delay_ms(200);
     5d8:	20c8      	movs	r0, #200	; 0xc8
     5da:	4b04      	ldr	r3, [pc, #16]	; (5ec <initMS5803Barometer+0x28>)
     5dc:	4798      	blx	r3
    readMS5803Coefficients();
     5de:	4b04      	ldr	r3, [pc, #16]	; (5f0 <initMS5803Barometer+0x2c>)
     5e0:	4798      	blx	r3
    //my_barometer->heightCm = 4000;
    //my_barometer->pressurePa = 10000;
    //my_barometer->rawPressureData = 4311550;
    //my_barometer->rawTempatureData = 8387300;
    //my_barometer->temperatureCelcus = 2000;
}
     5e2:	bd70      	pop	{r4, r5, r6, pc}
     5e4:	41004400 	.word	0x41004400
     5e8:	00002619 	.word	0x00002619
     5ec:	00000eed 	.word	0x00000eed
     5f0:	00000565 	.word	0x00000565

000005f4 <init>:

void init() {


    /* Set 1 Flash Wait State for 48MHz, cf tables 20.9 and 35.27 in SAMD21 Datasheet */
    NVMCTRL->CTRLB.bit.RWS = NVMCTRL_CTRLB_RWS_HALF_Val;
     5f4:	211e      	movs	r1, #30
void init() {
     5f6:	b5f0      	push	{r4, r5, r6, r7, lr}
    NVMCTRL->CTRLB.bit.RWS = NVMCTRL_CTRLB_RWS_HALF_Val;
     5f8:	4af0      	ldr	r2, [pc, #960]	; (9bc <init+0x3c8>)
void init() {
     5fa:	b085      	sub	sp, #20
    NVMCTRL->CTRLB.bit.RWS = NVMCTRL_CTRLB_RWS_HALF_Val;
     5fc:	6853      	ldr	r3, [r2, #4]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     5fe:	2401      	movs	r4, #1
     600:	438b      	bics	r3, r1
     602:	391c      	subs	r1, #28
     604:	430b      	orrs	r3, r1
     606:	6053      	str	r3, [r2, #4]


    /* Turn on the digital interface clock */
    PM->APBAMASK.reg |= PM_APBAMASK_GCLK;
     608:	4aed      	ldr	r2, [pc, #948]	; (9c0 <init+0x3cc>)
     60a:	3106      	adds	r1, #6
     60c:	6993      	ldr	r3, [r2, #24]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = 0x1;
     60e:	260f      	movs	r6, #15
     610:	430b      	orrs	r3, r1
     612:	6193      	str	r3, [r2, #24]


    SystemInit();
     614:	4beb      	ldr	r3, [pc, #940]	; (9c4 <init+0x3d0>)
     616:	4798      	blx	r3
    GclkInit();
     618:	4beb      	ldr	r3, [pc, #940]	; (9c8 <init+0x3d4>)
     61a:	4798      	blx	r3
    RtcInit();
     61c:	4beb      	ldr	r3, [pc, #940]	; (9cc <init+0x3d8>)
     61e:	4798      	blx	r3
    delayInit();
     620:	4beb      	ldr	r3, [pc, #940]	; (9d0 <init+0x3dc>)
     622:	4798      	blx	r3
    adcInit();
     624:	4beb      	ldr	r3, [pc, #940]	; (9d4 <init+0x3e0>)
     626:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
     628:	2240      	movs	r2, #64	; 0x40
{
  if(IRQn < 0) {
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
        (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
  else {
    NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
     62a:	21c1      	movs	r1, #193	; 0xc1
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
     62c:	4bea      	ldr	r3, [pc, #936]	; (9d8 <init+0x3e4>)
    NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
     62e:	0089      	lsls	r1, r1, #2
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
     630:	601a      	str	r2, [r3, #0]
    NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
     632:	585a      	ldr	r2, [r3, r1]
     634:	48e9      	ldr	r0, [pc, #932]	; (9dc <init+0x3e8>)
     636:	4002      	ands	r2, r0
     638:	505a      	str	r2, [r3, r1]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     63a:	4be9      	ldr	r3, [pc, #932]	; (9e0 <init+0x3ec>)
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     63c:	2002      	movs	r0, #2
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     63e:	0019      	movs	r1, r3
     640:	3154      	adds	r1, #84	; 0x54
     642:	780a      	ldrb	r2, [r1, #0]
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     644:	001f      	movs	r7, r3
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     646:	43a2      	bics	r2, r4
     648:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     64a:	2280      	movs	r2, #128	; 0x80
     64c:	0352      	lsls	r2, r2, #13
     64e:	609a      	str	r2, [r3, #8]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = 0x1;
     650:	3921      	subs	r1, #33	; 0x21
     652:	780a      	ldrb	r2, [r1, #0]
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     654:	3794      	adds	r7, #148	; 0x94
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = 0x1;
     656:	43b2      	bics	r2, r6
     658:	4322      	orrs	r2, r4
     65a:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     65c:	7cca      	ldrb	r2, [r1, #19]
     65e:	4322      	orrs	r2, r4
     660:	74ca      	strb	r2, [r1, #19]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     662:	001a      	movs	r2, r3
     664:	32c3      	adds	r2, #195	; 0xc3
     666:	7811      	ldrb	r1, [r2, #0]
     668:	43a1      	bics	r1, r4
     66a:	7011      	strb	r1, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     66c:	7811      	ldrb	r1, [r2, #0]
     66e:	4301      	orrs	r1, r0
     670:	7011      	strb	r1, [r2, #0]
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
     672:	2108      	movs	r1, #8
     674:	468c      	mov	ip, r1
     676:	449c      	add	ip, r3
     678:	4661      	mov	r1, ip
     67a:	3006      	adds	r0, #6
     67c:	67c8      	str	r0, [r1, #124]	; 0x7c
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     67e:	0018      	movs	r0, r3
     680:	2110      	movs	r1, #16
     682:	30b1      	adds	r0, #177	; 0xb1
     684:	7805      	ldrb	r5, [r0, #0]
     686:	4035      	ands	r5, r6
     688:	430d      	orrs	r5, r1
     68a:	7005      	strb	r5, [r0, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     68c:	7815      	ldrb	r5, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     68e:	390e      	subs	r1, #14
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     690:	4325      	orrs	r5, r4
     692:	7015      	strb	r5, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     694:	001d      	movs	r5, r3
     696:	35d7      	adds	r5, #215	; 0xd7
     698:	782a      	ldrb	r2, [r5, #0]
     69a:	43a2      	bics	r2, r4
     69c:	702a      	strb	r2, [r5, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     69e:	2580      	movs	r5, #128	; 0x80
     6a0:	4ad0      	ldr	r2, [pc, #832]	; (9e4 <init+0x3f0>)
     6a2:	042d      	lsls	r5, r5, #16
     6a4:	6015      	str	r5, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     6a6:	001a      	movs	r2, r3
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     6a8:	603d      	str	r5, [r7, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     6aa:	32c2      	adds	r2, #194	; 0xc2
     6ac:	7815      	ldrb	r5, [r2, #0]
     6ae:	43a5      	bics	r5, r4
     6b0:	7015      	strb	r5, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     6b2:	7815      	ldrb	r5, [r2, #0]
     6b4:	430d      	orrs	r5, r1
     6b6:	7015      	strb	r5, [r2, #0]
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
     6b8:	4661      	mov	r1, ip
     6ba:	2504      	movs	r5, #4
     6bc:	67cd      	str	r5, [r1, #124]	; 0x7c
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     6be:	7805      	ldrb	r5, [r0, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     6c0:	2180      	movs	r1, #128	; 0x80
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     6c2:	43b5      	bics	r5, r6
     6c4:	4325      	orrs	r5, r4
     6c6:	7005      	strb	r5, [r0, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     6c8:	7810      	ldrb	r0, [r2, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     6ca:	03c9      	lsls	r1, r1, #15
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     6cc:	4320      	orrs	r0, r4
     6ce:	7010      	strb	r0, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     6d0:	0018      	movs	r0, r3
     6d2:	30d6      	adds	r0, #214	; 0xd6
     6d4:	7802      	ldrb	r2, [r0, #0]
     6d6:	43a2      	bics	r2, r4
     6d8:	7002      	strb	r2, [r0, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     6da:	4ac2      	ldr	r2, [pc, #776]	; (9e4 <init+0x3f0>)
     6dc:	6011      	str	r1, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     6de:	001a      	movs	r2, r3
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     6e0:	6039      	str	r1, [r7, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     6e2:	2102      	movs	r1, #2
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     6e4:	3243      	adds	r2, #67	; 0x43
     6e6:	7810      	ldrb	r0, [r2, #0]
     6e8:	3f4b      	subs	r7, #75	; 0x4b
     6ea:	43a0      	bics	r0, r4
     6ec:	7010      	strb	r0, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     6ee:	7810      	ldrb	r0, [r2, #0]
     6f0:	4308      	orrs	r0, r1
     6f2:	7010      	strb	r0, [r2, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     6f4:	0018      	movs	r0, r3
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
     6f6:	3106      	adds	r1, #6
     6f8:	6059      	str	r1, [r3, #4]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     6fa:	3031      	adds	r0, #49	; 0x31
     6fc:	7805      	ldrb	r5, [r0, #0]
     6fe:	3108      	adds	r1, #8
     700:	4035      	ands	r5, r6
     702:	4329      	orrs	r1, r5
     704:	7001      	strb	r1, [r0, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     706:	7811      	ldrb	r1, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     708:	2502      	movs	r5, #2
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     70a:	4321      	orrs	r1, r4
     70c:	7011      	strb	r1, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     70e:	0019      	movs	r1, r3
     710:	3159      	adds	r1, #89	; 0x59
     712:	780a      	ldrb	r2, [r1, #0]
     714:	43a2      	bics	r2, r4
     716:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     718:	2280      	movs	r2, #128	; 0x80
     71a:	0492      	lsls	r2, r2, #18
     71c:	609a      	str	r2, [r3, #8]
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     71e:	615a      	str	r2, [r3, #20]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     720:	001a      	movs	r2, r3
     722:	3242      	adds	r2, #66	; 0x42
     724:	7811      	ldrb	r1, [r2, #0]
     726:	43a1      	bics	r1, r4
     728:	7011      	strb	r1, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     72a:	7811      	ldrb	r1, [r2, #0]
     72c:	4329      	orrs	r1, r5
     72e:	7011      	strb	r1, [r2, #0]
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
     730:	2104      	movs	r1, #4
     732:	6059      	str	r1, [r3, #4]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     734:	7801      	ldrb	r1, [r0, #0]
     736:	43b1      	bics	r1, r6
     738:	4321      	orrs	r1, r4
     73a:	7001      	strb	r1, [r0, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     73c:	7811      	ldrb	r1, [r2, #0]
     73e:	4321      	orrs	r1, r4
     740:	7011      	strb	r1, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     742:	0019      	movs	r1, r3
     744:	3158      	adds	r1, #88	; 0x58
     746:	780a      	ldrb	r2, [r1, #0]
     748:	43a2      	bics	r2, r4
     74a:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     74c:	2280      	movs	r2, #128	; 0x80
    pinIn(senseDPin);
    pinMux(senseDPin);
    pinOut(fireDPin);
    pinLow(fireDPin);

    charges.Afired = false;
     74e:	2100      	movs	r1, #0
     750:	0452      	lsls	r2, r2, #17
     752:	609a      	str	r2, [r3, #8]
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     754:	615a      	str	r2, [r3, #20]
     756:	4aa4      	ldr	r2, [pc, #656]	; (9e8 <init+0x3f4>)
     758:	7011      	strb	r1, [r2, #0]
    charges.Bfired = false;
     75a:	2100      	movs	r1, #0
     75c:	7051      	strb	r1, [r2, #1]
    charges.Cfired = false;
     75e:	2100      	movs	r1, #0
     760:	7091      	strb	r1, [r2, #2]
    charges.Dfired = false;
     762:	2100      	movs	r1, #0
     764:	70d1      	strb	r1, [r2, #3]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     766:	7dc2      	ldrb	r2, [r0, #23]
     768:	43a2      	bics	r2, r4
     76a:	75c2      	strb	r2, [r0, #23]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     76c:	2280      	movs	r2, #128	; 0x80
     76e:	0052      	lsls	r2, r2, #1
     770:	609a      	str	r2, [r3, #8]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     772:	783a      	ldrb	r2, [r7, #0]
     774:	43a2      	bics	r2, r4
     776:	703a      	strb	r2, [r7, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     778:	2280      	movs	r2, #128	; 0x80
     77a:	0092      	lsls	r2, r2, #2
     77c:	609a      	str	r2, [r3, #8]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     77e:	001a      	movs	r2, r3
     780:	324b      	adds	r2, #75	; 0x4b
     782:	7811      	ldrb	r1, [r2, #0]
     784:	43a1      	bics	r1, r4
     786:	7011      	strb	r1, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     788:	7811      	ldrb	r1, [r2, #0]
     78a:	4329      	orrs	r1, r5
     78c:	7011      	strb	r1, [r2, #0]
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
     78e:	2180      	movs	r1, #128	; 0x80
     790:	0109      	lsls	r1, r1, #4
     792:	6059      	str	r1, [r3, #4]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     794:	2135      	movs	r1, #53	; 0x35
     796:	468c      	mov	ip, r1
     798:	449c      	add	ip, r3
     79a:	4661      	mov	r1, ip
     79c:	7809      	ldrb	r1, [r1, #0]
     79e:	351e      	adds	r5, #30
     7a0:	4031      	ands	r1, r6
     7a2:	4329      	orrs	r1, r5
     7a4:	4665      	mov	r5, ip
     7a6:	7029      	strb	r1, [r5, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     7a8:	7811      	ldrb	r1, [r2, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     7aa:	2520      	movs	r5, #32
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     7ac:	4321      	orrs	r1, r4
     7ae:	7011      	strb	r1, [r2, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     7b0:	0019      	movs	r1, r3
     7b2:	3134      	adds	r1, #52	; 0x34
     7b4:	780a      	ldrb	r2, [r1, #0]
     7b6:	4032      	ands	r2, r6
     7b8:	432a      	orrs	r2, r5
     7ba:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     7bc:	783a      	ldrb	r2, [r7, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     7be:	3d1e      	subs	r5, #30
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     7c0:	4322      	orrs	r2, r4
     7c2:	703a      	strb	r2, [r7, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     7c4:	780a      	ldrb	r2, [r1, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     7c6:	3706      	adds	r7, #6
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     7c8:	43b2      	bics	r2, r6
     7ca:	432a      	orrs	r2, r5
     7cc:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     7ce:	7dc2      	ldrb	r2, [r0, #23]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     7d0:	3196      	adds	r1, #150	; 0x96
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     7d2:	4322      	orrs	r2, r4
     7d4:	75c2      	strb	r2, [r0, #23]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     7d6:	780a      	ldrb	r2, [r1, #0]
     7d8:	43a2      	bics	r2, r4
     7da:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     7dc:	2280      	movs	r2, #128	; 0x80
     7de:	4981      	ldr	r1, [pc, #516]	; (9e4 <init+0x3f0>)
     7e0:	00d2      	lsls	r2, r2, #3
     7e2:	600a      	str	r2, [r1, #0]
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     7e4:	0019      	movs	r1, r3
     7e6:	3198      	adds	r1, #152	; 0x98
     7e8:	600a      	str	r2, [r1, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     7ea:	7e41      	ldrb	r1, [r0, #25]
     7ec:	43a1      	bics	r1, r4
     7ee:	7641      	strb	r1, [r0, #25]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     7f0:	609a      	str	r2, [r3, #8]
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     7f2:	619a      	str	r2, [r3, #24]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     7f4:	7fc2      	ldrb	r2, [r0, #31]
     7f6:	43a2      	bics	r2, r4
     7f8:	77c2      	strb	r2, [r0, #31]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     7fa:	2280      	movs	r2, #128	; 0x80
     7fc:	0252      	lsls	r2, r2, #9
     7fe:	609a      	str	r2, [r3, #8]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     800:	78ba      	ldrb	r2, [r7, #2]
     802:	43a2      	bics	r2, r4
     804:	70ba      	strb	r2, [r7, #2]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     806:	2280      	movs	r2, #128	; 0x80
     808:	0292      	lsls	r2, r2, #10
     80a:	609a      	str	r2, [r3, #8]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     80c:	001a      	movs	r2, r3
     80e:	3253      	adds	r2, #83	; 0x53
     810:	7811      	ldrb	r1, [r2, #0]
     812:	43a1      	bics	r1, r4
     814:	7011      	strb	r1, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     816:	7811      	ldrb	r1, [r2, #0]
     818:	4329      	orrs	r1, r5
     81a:	7011      	strb	r1, [r2, #0]
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
     81c:	2180      	movs	r1, #128	; 0x80
     81e:	0309      	lsls	r1, r1, #12
     820:	6059      	str	r1, [r3, #4]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     822:	2139      	movs	r1, #57	; 0x39
     824:	468c      	mov	ip, r1
     826:	449c      	add	ip, r3
     828:	4661      	mov	r1, ip
     82a:	7809      	ldrb	r1, [r1, #0]
     82c:	351e      	adds	r5, #30
     82e:	4031      	ands	r1, r6
     830:	4329      	orrs	r1, r5
     832:	4665      	mov	r5, ip
     834:	7029      	strb	r1, [r5, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     836:	7811      	ldrb	r1, [r2, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     838:	2520      	movs	r5, #32
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     83a:	4321      	orrs	r1, r4
     83c:	7011      	strb	r1, [r2, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     83e:	0019      	movs	r1, r3
     840:	3138      	adds	r1, #56	; 0x38
     842:	780a      	ldrb	r2, [r1, #0]
     844:	4032      	ands	r2, r6
     846:	432a      	orrs	r2, r5
     848:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     84a:	78ba      	ldrb	r2, [r7, #2]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     84c:	3d1e      	subs	r5, #30
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     84e:	4322      	orrs	r2, r4
     850:	70ba      	strb	r2, [r7, #2]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     852:	780a      	ldrb	r2, [r1, #0]
     854:	43b2      	bics	r2, r6
     856:	432a      	orrs	r2, r5
     858:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     85a:	7fc2      	ldrb	r2, [r0, #31]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     85c:	3114      	adds	r1, #20
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     85e:	4322      	orrs	r2, r4
     860:	77c2      	strb	r2, [r0, #31]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     862:	798a      	ldrb	r2, [r1, #6]
     864:	43a2      	bics	r2, r4
     866:	718a      	strb	r2, [r1, #6]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     868:	2280      	movs	r2, #128	; 0x80
     86a:	02d2      	lsls	r2, r2, #11
     86c:	609a      	str	r2, [r3, #8]
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     86e:	619a      	str	r2, [r3, #24]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     870:	9103      	str	r1, [sp, #12]
     872:	780a      	ldrb	r2, [r1, #0]
     874:	43a2      	bics	r2, r4
     876:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     878:	2280      	movs	r2, #128	; 0x80
     87a:	0152      	lsls	r2, r2, #5
     87c:	609a      	str	r2, [r3, #8]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     87e:	783a      	ldrb	r2, [r7, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     880:	2120      	movs	r1, #32
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     882:	43a2      	bics	r2, r4
     884:	703a      	strb	r2, [r7, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     886:	2280      	movs	r2, #128	; 0x80
     888:	0212      	lsls	r2, r2, #8
     88a:	609a      	str	r2, [r3, #8]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     88c:	001a      	movs	r2, r3
     88e:	324d      	adds	r2, #77	; 0x4d
     890:	7810      	ldrb	r0, [r2, #0]
     892:	43a0      	bics	r0, r4
     894:	7010      	strb	r0, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     896:	7810      	ldrb	r0, [r2, #0]
     898:	4328      	orrs	r0, r5
     89a:	7010      	strb	r0, [r2, #0]
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
     89c:	2080      	movs	r0, #128	; 0x80
     89e:	0180      	lsls	r0, r0, #6
     8a0:	6058      	str	r0, [r3, #4]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     8a2:	0018      	movs	r0, r3
     8a4:	3036      	adds	r0, #54	; 0x36
     8a6:	7805      	ldrb	r5, [r0, #0]
     8a8:	4035      	ands	r5, r6
     8aa:	430d      	orrs	r5, r1
     8ac:	7005      	strb	r5, [r0, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     8ae:	7811      	ldrb	r1, [r2, #0]
     8b0:	000d      	movs	r5, r1
     8b2:	4325      	orrs	r5, r4
     8b4:	7015      	strb	r5, [r2, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     8b6:	2237      	movs	r2, #55	; 0x37
     8b8:	4694      	mov	ip, r2
     8ba:	449c      	add	ip, r3
     8bc:	4662      	mov	r2, ip
     8be:	2120      	movs	r1, #32
     8c0:	7812      	ldrb	r2, [r2, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     8c2:	2502      	movs	r5, #2
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     8c4:	4032      	ands	r2, r6
     8c6:	430a      	orrs	r2, r1
     8c8:	4661      	mov	r1, ip
     8ca:	700a      	strb	r2, [r1, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     8cc:	2102      	movs	r1, #2
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     8ce:	783a      	ldrb	r2, [r7, #0]
     8d0:	4322      	orrs	r2, r4
     8d2:	703a      	strb	r2, [r7, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     8d4:	7802      	ldrb	r2, [r0, #0]
     8d6:	43b2      	bics	r2, r6
     8d8:	430a      	orrs	r2, r1
     8da:	7002      	strb	r2, [r0, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     8dc:	9a03      	ldr	r2, [sp, #12]
     8de:	9903      	ldr	r1, [sp, #12]
     8e0:	7812      	ldrb	r2, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     8e2:	3020      	adds	r0, #32
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     8e4:	4322      	orrs	r2, r4
     8e6:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     8e8:	0019      	movs	r1, r3
     8ea:	314e      	adds	r1, #78	; 0x4e
     8ec:	780a      	ldrb	r2, [r1, #0]
     8ee:	43a2      	bics	r2, r4
     8f0:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     8f2:	2280      	movs	r2, #128	; 0x80
     8f4:	01d2      	lsls	r2, r2, #7
     8f6:	609a      	str	r2, [r3, #8]
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     8f8:	619a      	str	r2, [r3, #24]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     8fa:	001a      	movs	r2, r3
     8fc:	3255      	adds	r2, #85	; 0x55
     8fe:	7811      	ldrb	r1, [r2, #0]
     900:	43a1      	bics	r1, r4
     902:	7011      	strb	r1, [r2, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     904:	2180      	movs	r1, #128	; 0x80
     906:	0389      	lsls	r1, r1, #14
     908:	6099      	str	r1, [r3, #8]
    PORT->Group[p.group].PINCFG[p.pin].reg = p.cfg;
     90a:	2140      	movs	r1, #64	; 0x40
     90c:	7011      	strb	r1, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     90e:	7802      	ldrb	r2, [r0, #0]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     910:	0019      	movs	r1, r3
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     912:	43a2      	bics	r2, r4
     914:	7002      	strb	r2, [r0, #0]
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     916:	2280      	movs	r2, #128	; 0x80
     918:	03d2      	lsls	r2, r2, #15
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     91a:	313b      	adds	r1, #59	; 0x3b
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     91c:	609a      	str	r2, [r3, #8]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     91e:	780a      	ldrb	r2, [r1, #0]
     920:	43b2      	bics	r2, r6
     922:	432a      	orrs	r2, r5
     924:	700a      	strb	r2, [r1, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     926:	7802      	ldrb	r2, [r0, #0]
    pinMux(TxPo);
    pinIn(RxPo);
    pinMux(RxPo);


    sercomClockEnable(SPI2, 3, 4);
     928:	4f30      	ldr	r7, [pc, #192]	; (9ec <init+0x3f8>)
     92a:	4322      	orrs	r2, r4
     92c:	7002      	strb	r2, [r0, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     92e:	001a      	movs	r2, r3
     930:	3257      	adds	r2, #87	; 0x57
     932:	7810      	ldrb	r0, [r2, #0]
     934:	43a0      	bics	r0, r4
     936:	7010      	strb	r0, [r2, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     938:	7810      	ldrb	r0, [r2, #0]
     93a:	4328      	orrs	r0, r5
     93c:	7010      	strb	r0, [r2, #0]
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
     93e:	2080      	movs	r0, #128	; 0x80
     940:	0400      	lsls	r0, r0, #16
     942:	6058      	str	r0, [r3, #4]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     944:	2020      	movs	r0, #32
     946:	780b      	ldrb	r3, [r1, #0]
     948:	4033      	ands	r3, r6
     94a:	4303      	orrs	r3, r0
     94c:	700b      	strb	r3, [r1, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     94e:	7813      	ldrb	r3, [r2, #0]
     950:	0028      	movs	r0, r5
     952:	4323      	orrs	r3, r4
     954:	7013      	strb	r3, [r2, #0]
     956:	2103      	movs	r1, #3
     958:	2204      	movs	r2, #4
     95a:	47b8      	blx	r7
    sercomSpiMasterInit(SPI2, 1, 3, 0, 0, 0x00);
     95c:	2300      	movs	r3, #0
     95e:	4e24      	ldr	r6, [pc, #144]	; (9f0 <init+0x3fc>)
     960:	9301      	str	r3, [sp, #4]
     962:	9300      	str	r3, [sp, #0]
     964:	0021      	movs	r1, r4
     966:	0028      	movs	r0, r5
     968:	2203      	movs	r2, #3
     96a:	47b0      	blx	r6


    sercomClockEnable(SPI0, 3, 4);
     96c:	2204      	movs	r2, #4
     96e:	2103      	movs	r1, #3
     970:	2000      	movs	r0, #0
     972:	47b8      	blx	r7
    sercomSpiMasterInit(SPI0, 3, 0, 0, 0, 0x00);
     974:	2300      	movs	r3, #0
     976:	2103      	movs	r1, #3
     978:	9301      	str	r3, [sp, #4]
     97a:	9300      	str	r3, [sp, #0]
     97c:	001a      	movs	r2, r3
     97e:	0018      	movs	r0, r3
     980:	47b0      	blx	r6


    sercomClockEnable(SPI1, 3, 4);
     982:	0020      	movs	r0, r4
     984:	2204      	movs	r2, #4
     986:	2103      	movs	r1, #3
     988:	47b8      	blx	r7
    sercomSpiMasterInit(SPI1, 3, 0, 0, 0, 0x00);
     98a:	2300      	movs	r3, #0
     98c:	0020      	movs	r0, r4
     98e:	9301      	str	r3, [sp, #4]
     990:	9300      	str	r3, [sp, #0]
     992:	001a      	movs	r2, r3
     994:	2103      	movs	r1, #3
     996:	47b0      	blx	r6


    sercomClockEnable(USART3, 4, 8);
     998:	2208      	movs	r2, #8
     99a:	2104      	movs	r1, #4
     99c:	2003      	movs	r0, #3
     99e:	47b8      	blx	r7
    sercomUartInit(USART3,1,0,19200);
     9a0:	2396      	movs	r3, #150	; 0x96
     9a2:	0021      	movs	r1, r4
     9a4:	2200      	movs	r2, #0
     9a6:	2003      	movs	r0, #3
     9a8:	01db      	lsls	r3, r3, #7
     9aa:	4c12      	ldr	r4, [pc, #72]	; (9f4 <init+0x400>)
     9ac:	47a0      	blx	r4


    TC4Init();
     9ae:	4b12      	ldr	r3, [pc, #72]	; (9f8 <init+0x404>)
     9b0:	4798      	blx	r3
    TC5Init();
     9b2:	4b12      	ldr	r3, [pc, #72]	; (9fc <init+0x408>)
     9b4:	4798      	blx	r3
}
     9b6:	b005      	add	sp, #20
     9b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     9ba:	46c0      	nop			; (mov r8, r8)
     9bc:	41004000 	.word	0x41004000
     9c0:	40000400 	.word	0x40000400
     9c4:	000001d5 	.word	0x000001d5
     9c8:	00000d25 	.word	0x00000d25
     9cc:	00000da9 	.word	0x00000da9
     9d0:	00000ea1 	.word	0x00000ea1
     9d4:	00000b91 	.word	0x00000b91
     9d8:	e000e100 	.word	0xe000e100
     9dc:	ff00ffff 	.word	0xff00ffff
     9e0:	41004400 	.word	0x41004400
     9e4:	41004488 	.word	0x41004488
     9e8:	20000650 	.word	0x20000650
     9ec:	0000250d 	.word	0x0000250d
     9f0:	0000256d 	.word	0x0000256d
     9f4:	000025d1 	.word	0x000025d1
     9f8:	00000f6d 	.word	0x00000f6d
     9fc:	00000fd5 	.word	0x00000fd5

00000a00 <main>:




int main(void) {
     a00:	b510      	push	{r4, lr}

    init();
     a02:	4b0e      	ldr	r3, [pc, #56]	; (a3c <main+0x3c>)
     a04:	4798      	blx	r3

    initMS5803Barometer();
     a06:	4b0e      	ldr	r3, [pc, #56]	; (a40 <main+0x40>)
     a08:	4798      	blx	r3
    IMUinit();
     a0a:	4b0e      	ldr	r3, [pc, #56]	; (a44 <main+0x44>)
     a0c:	4798      	blx	r3

    computeKalmanGains();
     a0e:	4b0e      	ldr	r3, [pc, #56]	; (a48 <main+0x48>)
     a10:	4798      	blx	r3


    sampleTick();
     a12:	4c0e      	ldr	r4, [pc, #56]	; (a4c <main+0x4c>)
     a14:	47a0      	blx	r4

    beep(400);
     a16:	20c8      	movs	r0, #200	; 0xc8
     a18:	4b0d      	ldr	r3, [pc, #52]	; (a50 <main+0x50>)
     a1a:	0040      	lsls	r0, r0, #1
     a1c:	4798      	blx	r3


    startupTick = millis();
     a1e:	4b0d      	ldr	r3, [pc, #52]	; (a54 <main+0x54>)
     a20:	4798      	blx	r3
     a22:	4b0d      	ldr	r3, [pc, #52]	; (a58 <main+0x58>)
     a24:	6018      	str	r0, [r3, #0]

    while (1) {



        if (takeSample()) {
     a26:	4b0d      	ldr	r3, [pc, #52]	; (a5c <main+0x5c>)
     a28:	4798      	blx	r3
     a2a:	2800      	cmp	r0, #0
     a2c:	d0fb      	beq.n	a26 <main+0x26>
            sampleTick();
     a2e:	47a0      	blx	r4
            flight();
     a30:	4b0b      	ldr	r3, [pc, #44]	; (a60 <main+0x60>)
     a32:	4798      	blx	r3
            computeKalmanStates();
     a34:	4b0b      	ldr	r3, [pc, #44]	; (a64 <main+0x64>)
     a36:	4798      	blx	r3
     a38:	e7f5      	b.n	a26 <main+0x26>
     a3a:	46c0      	nop			; (mov r8, r8)
     a3c:	000005f5 	.word	0x000005f5
     a40:	000005c5 	.word	0x000005c5
     a44:	00000a69 	.word	0x00000a69
     a48:	00001319 	.word	0x00001319
     a4c:	000021fd 	.word	0x000021fd
     a50:	00000c71 	.word	0x00000c71
     a54:	00000f35 	.word	0x00000f35
     a58:	200004fc 	.word	0x200004fc
     a5c:	000021e5 	.word	0x000021e5
     a60:	0000103d 	.word	0x0000103d
     a64:	00001bbd 	.word	0x00001bbd

00000a68 <IMUinit>:
#include <util.h>
#include <boardDefines.h>


void IMUinit() {
     a68:	b570      	push	{r4, r5, r6, lr}
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     a6a:	4c08      	ldr	r4, [pc, #32]	; (a8c <IMUinit+0x24>)
     a6c:	2580      	movs	r5, #128	; 0x80
     a6e:	0023      	movs	r3, r4
     a70:	00ed      	lsls	r5, r5, #3
     a72:	3394      	adds	r3, #148	; 0x94
     a74:	601d      	str	r5, [r3, #0]

    uint8_t dummy_Tx = 0xFF;
    uint8_t dummy_rx;

    pinLow(cs_accel);
    dummy_rx = spiDataTransfer(SPI0, BMI_ACCEL_PMU_RANGE);
     a76:	4e06      	ldr	r6, [pc, #24]	; (a90 <IMUinit+0x28>)
     a78:	210f      	movs	r1, #15
     a7a:	2000      	movs	r0, #0
     a7c:	47b0      	blx	r6
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     a7e:	3498      	adds	r4, #152	; 0x98
    dummy_rx = spiDataTransfer(SPI0, BMI_ACCEL_16G_RANGE);
     a80:	210c      	movs	r1, #12
     a82:	2000      	movs	r0, #0
     a84:	47b0      	blx	r6
     a86:	6025      	str	r5, [r4, #0]
    pinHigh(cs_accel);

}
     a88:	bd70      	pop	{r4, r5, r6, pc}
     a8a:	46c0      	nop			; (mov r8, r8)
     a8c:	41004400 	.word	0x41004400
     a90:	00002619 	.word	0x00002619

00000a94 <USARTconnectionAvaliable>:

bool USARTconnectionAvaliable() {
     a94:	b510      	push	{r4, lr}

    if (sercom(USART3)->SPI.INTFLAG.bit.RXC == 1) {
     a96:	4b09      	ldr	r3, [pc, #36]	; (abc <USARTconnectionAvaliable+0x28>)
     a98:	7e1c      	ldrb	r4, [r3, #24]
     a9a:	0764      	lsls	r4, r4, #29
     a9c:	0fe4      	lsrs	r4, r4, #31
     a9e:	2c01      	cmp	r4, #1
     aa0:	d001      	beq.n	aa6 <USARTconnectionAvaliable+0x12>
            return true;
        } else {
            return false;
        }
    }
    return false;
     aa2:	2000      	movs	r0, #0
}
     aa4:	bd10      	pop	{r4, pc}
        u8_t connectAttempt = usartDataIn(USART3);
     aa6:	2003      	movs	r0, #3
     aa8:	4b05      	ldr	r3, [pc, #20]	; (ac0 <USARTconnectionAvaliable+0x2c>)
     aaa:	4798      	blx	r3
     aac:	0001      	movs	r1, r0
        if (connectAttempt == 0x48) {
     aae:	2848      	cmp	r0, #72	; 0x48
     ab0:	d1f7      	bne.n	aa2 <USARTconnectionAvaliable+0xe>
            usartDataOut(USART3, 'H');
     ab2:	2003      	movs	r0, #3
     ab4:	4b03      	ldr	r3, [pc, #12]	; (ac4 <USARTconnectionAvaliable+0x30>)
     ab6:	4798      	blx	r3
            return true;
     ab8:	0020      	movs	r0, r4
     aba:	e7f3      	b.n	aa4 <USARTconnectionAvaliable+0x10>
     abc:	42001400 	.word	0x42001400
     ac0:	00002649 	.word	0x00002649
     ac4:	00002631 	.word	0x00002631

00000ac8 <sendTheasePagesToComputer>:

void sendTheasePagesToComputer(u32_t firstPage, u32_t lastPage) {
     ac8:	b5f0      	push	{r4, r5, r6, r7, lr}
    for (u16_t page = 0; page <= pagesToSend; ++page) {

        u8_t data[256];
        AT25SEreadPage(pageToReadAddress , data);

        for (u16_t dataByte = 0; dataByte < 256; ++dataByte) {
     aca:	2780      	movs	r7, #128	; 0x80
void sendTheasePagesToComputer(u32_t firstPage, u32_t lastPage) {
     acc:	0005      	movs	r5, r0
    for (u16_t page = 0; page <= pagesToSend; ++page) {
     ace:	2400      	movs	r4, #0
    u16_t pagesToSend = (lastPage - firstPage) >> 8;
     ad0:	1a09      	subs	r1, r1, r0
     ad2:	0a09      	lsrs	r1, r1, #8
void sendTheasePagesToComputer(u32_t firstPage, u32_t lastPage) {
     ad4:	b0c3      	sub	sp, #268	; 0x10c
    u16_t pagesToSend = (lastPage - firstPage) >> 8;
     ad6:	b28b      	uxth	r3, r1
     ad8:	9301      	str	r3, [sp, #4]
        for (u16_t dataByte = 0; dataByte < 256; ++dataByte) {
     ada:	007f      	lsls	r7, r7, #1
        AT25SEreadPage(pageToReadAddress , data);
     adc:	a902      	add	r1, sp, #8
     ade:	0028      	movs	r0, r5
     ae0:	4b09      	ldr	r3, [pc, #36]	; (b08 <sendTheasePagesToComputer+0x40>)
     ae2:	4798      	blx	r3
     ae4:	2600      	movs	r6, #0
            usartDataOut(USART3, data[dataByte]);
     ae6:	ab02      	add	r3, sp, #8
     ae8:	5d99      	ldrb	r1, [r3, r6]
     aea:	2003      	movs	r0, #3
     aec:	4b07      	ldr	r3, [pc, #28]	; (b0c <sendTheasePagesToComputer+0x44>)
     aee:	3601      	adds	r6, #1
     af0:	4798      	blx	r3
        for (u16_t dataByte = 0; dataByte < 256; ++dataByte) {
     af2:	42be      	cmp	r6, r7
     af4:	d1f7      	bne.n	ae6 <sendTheasePagesToComputer+0x1e>
    for (u16_t page = 0; page <= pagesToSend; ++page) {
     af6:	3401      	adds	r4, #1
     af8:	9b01      	ldr	r3, [sp, #4]
        }

        pageToReadAddress = pageToReadAddress + 0x100;
     afa:	3501      	adds	r5, #1
    for (u16_t page = 0; page <= pagesToSend; ++page) {
     afc:	b2a4      	uxth	r4, r4
        pageToReadAddress = pageToReadAddress + 0x100;
     afe:	35ff      	adds	r5, #255	; 0xff
    for (u16_t page = 0; page <= pagesToSend; ++page) {
     b00:	42a3      	cmp	r3, r4
     b02:	d2eb      	bcs.n	adc <sendTheasePagesToComputer+0x14>
    }
}
     b04:	b043      	add	sp, #268	; 0x10c
     b06:	bdf0      	pop	{r4, r5, r6, r7, pc}
     b08:	000003ad 	.word	0x000003ad
     b0c:	00002631 	.word	0x00002631

00000b10 <altitudeAGL>:

int32_t altitudeAGL() {
    return altitude - offsets.groundOffset;
     b10:	4b07      	ldr	r3, [pc, #28]	; (b30 <altitudeAGL+0x20>)
int32_t altitudeAGL() {
     b12:	b510      	push	{r4, lr}
    return altitude - offsets.groundOffset;
     b14:	6998      	ldr	r0, [r3, #24]
     b16:	4b07      	ldr	r3, [pc, #28]	; (b34 <altitudeAGL+0x24>)
     b18:	4798      	blx	r3
     b1a:	000b      	movs	r3, r1
     b1c:	4906      	ldr	r1, [pc, #24]	; (b38 <altitudeAGL+0x28>)
     b1e:	0002      	movs	r2, r0
     b20:	6808      	ldr	r0, [r1, #0]
     b22:	6849      	ldr	r1, [r1, #4]
     b24:	4c05      	ldr	r4, [pc, #20]	; (b3c <altitudeAGL+0x2c>)
     b26:	47a0      	blx	r4
     b28:	4b05      	ldr	r3, [pc, #20]	; (b40 <altitudeAGL+0x30>)
     b2a:	4798      	blx	r3
}
     b2c:	bd10      	pop	{r4, pc}
     b2e:	46c0      	nop			; (mov r8, r8)
     b30:	200004c8 	.word	0x200004c8
     b34:	00005d69 	.word	0x00005d69
     b38:	20000668 	.word	0x20000668
     b3c:	00005611 	.word	0x00005611
     b40:	00005c7d 	.word	0x00005c7d

00000b44 <unplugged>:


bool unplugged() {
    if (sample.voltage.batFloat < 3.5) {
     b44:	4b05      	ldr	r3, [pc, #20]	; (b5c <unplugged+0x18>)
bool unplugged() {
     b46:	b510      	push	{r4, lr}
    if (sample.voltage.batFloat < 3.5) {
     b48:	68d8      	ldr	r0, [r3, #12]
     b4a:	4905      	ldr	r1, [pc, #20]	; (b60 <unplugged+0x1c>)
     b4c:	4b05      	ldr	r3, [pc, #20]	; (b64 <unplugged+0x20>)
     b4e:	2401      	movs	r4, #1
     b50:	4798      	blx	r3
     b52:	2800      	cmp	r0, #0
     b54:	d100      	bne.n	b58 <unplugged+0x14>
     b56:	1c04      	adds	r4, r0, #0
     b58:	b2e0      	uxtb	r0, r4
        return true;
    } else {
        return false;
    }
}
     b5a:	bd10      	pop	{r4, pc}
     b5c:	20000798 	.word	0x20000798
     b60:	40600000 	.word	0x40600000
     b64:	000039d1 	.word	0x000039d1

00000b68 <finishFlight>:

void finishFlight() {
	
    flightState = flightIdle;
     b68:	2201      	movs	r2, #1
void finishFlight() {
     b6a:	b510      	push	{r4, lr}
    flightState = flightIdle;
     b6c:	4b04      	ldr	r3, [pc, #16]	; (b80 <finishFlight+0x18>)
     b6e:	701a      	strb	r2, [r3, #0]
    AT25SFHoldTillReady();
     b70:	4b04      	ldr	r3, [pc, #16]	; (b84 <finishFlight+0x1c>)
     b72:	4798      	blx	r3
    writeFlightEndAddress( );
     b74:	4b04      	ldr	r3, [pc, #16]	; (b88 <finishFlight+0x20>)
     b76:	4798      	blx	r3
    unpluggedJingle();
     b78:	4b04      	ldr	r3, [pc, #16]	; (b8c <finishFlight+0x24>)
     b7a:	4798      	blx	r3
}
     b7c:	bd10      	pop	{r4, pc}
     b7e:	46c0      	nop			; (mov r8, r8)
     b80:	20000654 	.word	0x20000654
     b84:	000001e5 	.word	0x000001e5
     b88:	000020f1 	.word	0x000020f1
     b8c:	00000ce1 	.word	0x00000ce1

00000b90 <adcInit>:
#include <util.h>

void adcInit() {

    // set up clock
    PM->APBCMASK.reg |= PM_APBCMASK_ADC;
     b90:	2380      	movs	r3, #128	; 0x80
     b92:	4a10      	ldr	r2, [pc, #64]	; (bd4 <adcInit+0x44>)
     b94:	025b      	lsls	r3, r3, #9
     b96:	6a11      	ldr	r1, [r2, #32]
    // divide prescaler by 512 (93.75KHz), max adc freq is 2.1MHz
    ADC->CTRLB.reg = ADC_CTRLB_PRESCALER_DIV512 |
                     ADC_CTRLB_RESSEL_12BIT;

    // enable clock adc channel
    GCLK->CLKCTRL.reg = GCLK_CLKCTRL_CLKEN |
     b98:	480f      	ldr	r0, [pc, #60]	; (bd8 <adcInit+0x48>)
    PM->APBCMASK.reg |= PM_APBCMASK_ADC;
     b9a:	430b      	orrs	r3, r1
    ADC->CTRLB.reg = ADC_CTRLB_PRESCALER_DIV512 |
     b9c:	21e0      	movs	r1, #224	; 0xe0
    PM->APBCMASK.reg |= PM_APBCMASK_ADC;
     b9e:	6213      	str	r3, [r2, #32]
    ADC->CTRLB.reg = ADC_CTRLB_PRESCALER_DIV512 |
     ba0:	4b0e      	ldr	r3, [pc, #56]	; (bdc <adcInit+0x4c>)
    GCLK->CLKCTRL.reg = GCLK_CLKCTRL_CLKEN |
     ba2:	4a0f      	ldr	r2, [pc, #60]	; (be0 <adcInit+0x50>)
    ADC->CTRLB.reg = ADC_CTRLB_PRESCALER_DIV512 |
     ba4:	00c9      	lsls	r1, r1, #3
     ba6:	8099      	strh	r1, [r3, #4]
    GCLK->CLKCTRL.reg = GCLK_CLKCTRL_CLKEN |
     ba8:	8050      	strh	r0, [r2, #2]
                        GCLK_CLKCTRL_GEN(0) |
                        GCLK_CLKCTRL_ID(ADC_GCLK_ID);

    ADC->CALIB.reg =
        ADC_CALIB_BIAS_CAL(
     baa:	4a0e      	ldr	r2, [pc, #56]	; (be4 <adcInit+0x54>)
     bac:	6810      	ldr	r0, [r2, #0]
     bae:	0142      	lsls	r2, r0, #5
            (*(uint32_t *)ADC_FUSES_BIASCAL_ADDR >> ADC_FUSES_BIASCAL_Pos)
        ) |
        ADC_CALIB_LINEARITY_CAL(
     bb0:	0010      	movs	r0, r2
        ADC_CALIB_BIAS_CAL(
     bb2:	4011      	ands	r1, r2
        ADC_CALIB_LINEARITY_CAL(
     bb4:	4a0c      	ldr	r2, [pc, #48]	; (be8 <adcInit+0x58>)
     bb6:	6812      	ldr	r2, [r2, #0]
     bb8:	0ed2      	lsrs	r2, r2, #27
     bba:	4302      	orrs	r2, r0
     bbc:	b2d2      	uxtb	r2, r2
        ) |
     bbe:	430a      	orrs	r2, r1
    ADC->CALIB.reg =
     bc0:	851a      	strh	r2, [r3, #40]	; 0x28
            (*(uint64_t *)ADC_FUSES_LINEARITY_0_ADDR >> ADC_FUSES_LINEARITY_0_Pos)
        );

    ADC->REFCTRL.reg = ADC_REFCTRL_REFSEL_INTVCC1;
     bc2:	2202      	movs	r2, #2
     bc4:	705a      	strb	r2, [r3, #1]

    ADC->CTRLA.reg = ADC_CTRLA_ENABLE; // enable
     bc6:	701a      	strb	r2, [r3, #0]
    while(ADC->STATUS.reg & ADC_STATUS_SYNCBUSY);
     bc8:	7e5a      	ldrb	r2, [r3, #25]
     bca:	b252      	sxtb	r2, r2
     bcc:	2a00      	cmp	r2, #0
     bce:	dbfb      	blt.n	bc8 <adcInit+0x38>
}
     bd0:	4770      	bx	lr
     bd2:	46c0      	nop			; (mov r8, r8)
     bd4:	40000400 	.word	0x40000400
     bd8:	0000401e 	.word	0x0000401e
     bdc:	42004000 	.word	0x42004000
     be0:	40000c00 	.word	0x40000c00
     be4:	00806024 	.word	0x00806024
     be8:	00806020 	.word	0x00806020

00000bec <adcSample>:



u16_t adcSample() {
    ADC->SWTRIG.reg = ADC_SWTRIG_START;
     bec:	2202      	movs	r2, #2
     bee:	4b04      	ldr	r3, [pc, #16]	; (c00 <adcSample+0x14>)
     bf0:	731a      	strb	r2, [r3, #12]
    while(!(ADC->INTFLAG.reg & ADC_INTFLAG_RESRDY)); // wait until result is ready
     bf2:	3a01      	subs	r2, #1
     bf4:	7e19      	ldrb	r1, [r3, #24]
     bf6:	4211      	tst	r1, r2
     bf8:	d0fc      	beq.n	bf4 <adcSample+0x8>
    return ADC->RESULT.reg;
     bfa:	8b58      	ldrh	r0, [r3, #26]
     bfc:	b280      	uxth	r0, r0
}
     bfe:	4770      	bx	lr
     c00:	42004000 	.word	0x42004000

00000c04 <adc_read>:


u16_t adc_read(Pin p) {
     c04:	b537      	push	{r0, r1, r2, r4, r5, lr}
     c06:	9101      	str	r1, [sp, #4]
    if (p.pin & 1) {
     c08:	2101      	movs	r1, #1
     c0a:	0c02      	lsrs	r2, r0, #16
     c0c:	9000      	str	r0, [sp, #0]
     c0e:	b2d2      	uxtb	r2, r2
     c10:	0e00      	lsrs	r0, r0, #24
     c12:	0843      	lsrs	r3, r0, #1
     c14:	01d2      	lsls	r2, r2, #7
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = 0x1;
     c16:	189b      	adds	r3, r3, r2
    if (p.pin & 1) {
     c18:	4208      	tst	r0, r1
     c1a:	d01a      	beq.n	c52 <adc_read+0x4e>
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = 0x1;
     c1c:	240f      	movs	r4, #15
     c1e:	4910      	ldr	r1, [pc, #64]	; (c60 <adc_read+0x5c>)
     c20:	185b      	adds	r3, r3, r1
     c22:	7819      	ldrb	r1, [r3, #0]
     c24:	400c      	ands	r4, r1
     c26:	2110      	movs	r1, #16
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = 0x1;
     c28:	4321      	orrs	r1, r4
     c2a:	7019      	strb	r1, [r3, #0]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     c2c:	4b0d      	ldr	r3, [pc, #52]	; (c64 <adc_read+0x60>)
     c2e:	1880      	adds	r0, r0, r2
     c30:	18c0      	adds	r0, r0, r3
     c32:	2301      	movs	r3, #1
     c34:	7802      	ldrb	r2, [r0, #0]
     c36:	4313      	orrs	r3, r2
     c38:	7003      	strb	r3, [r0, #0]
    // switch pin mux to analog in
    pinAnalog(p);

    ADC->INPUTCTRL.reg = (ADC_INPUTCTRL_MUXPOS(p.chan) // select from proper pin
     c3a:	466b      	mov	r3, sp
     c3c:	221f      	movs	r2, #31
     c3e:	791b      	ldrb	r3, [r3, #4]
     c40:	401a      	ands	r2, r3
                          | ADC_INPUTCTRL_MUXNEG_GND // 0 = gnd
                          | ADC_INPUTCTRL_GAIN_1X);
     c42:	23c0      	movs	r3, #192	; 0xc0
     c44:	015b      	lsls	r3, r3, #5
     c46:	4313      	orrs	r3, r2
    ADC->INPUTCTRL.reg = (ADC_INPUTCTRL_MUXPOS(p.chan) // select from proper pin
     c48:	4a07      	ldr	r2, [pc, #28]	; (c68 <adc_read+0x64>)
     c4a:	6113      	str	r3, [r2, #16]

    return adcSample();
     c4c:	4b07      	ldr	r3, [pc, #28]	; (c6c <adc_read+0x68>)
     c4e:	4798      	blx	r3
     c50:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = 0x1;
     c52:	250f      	movs	r5, #15
     c54:	4c02      	ldr	r4, [pc, #8]	; (c60 <adc_read+0x5c>)
     c56:	191b      	adds	r3, r3, r4
     c58:	781c      	ldrb	r4, [r3, #0]
     c5a:	43ac      	bics	r4, r5
     c5c:	e7e4      	b.n	c28 <adc_read+0x24>
     c5e:	46c0      	nop			; (mov r8, r8)
     c60:	41004430 	.word	0x41004430
     c64:	41004440 	.word	0x41004440
     c68:	42004000 	.word	0x42004000
     c6c:	00000bed 	.word	0x00000bed

00000c70 <beep>:
#include <util.h>
#include <boardDefines.h>


void beep(u16_t toggles) {
     c70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
}


inline static void pinToggle(Pin p) {
    PORT->Group[p.group].OUTTGL.reg = (1<<p.pin);
     c72:	2380      	movs	r3, #128	; 0x80
     c74:	2680      	movs	r6, #128	; 0x80
     c76:	0007      	movs	r7, r0

    pinToggle(LedPin);
    for (u16_t buzz = 0; buzz < toggles; ++buzz) {
     c78:	2500      	movs	r5, #0
     c7a:	4c09      	ldr	r4, [pc, #36]	; (ca0 <beep+0x30>)
     c7c:	035b      	lsls	r3, r3, #13
     c7e:	61e3      	str	r3, [r4, #28]
     c80:	03b6      	lsls	r6, r6, #14
     c82:	42bd      	cmp	r5, r7
     c84:	d104      	bne.n	c90 <beep+0x20>
     c86:	2380      	movs	r3, #128	; 0x80
     c88:	035b      	lsls	r3, r3, #13
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     c8a:	6166      	str	r6, [r4, #20]
    PORT->Group[p.group].OUTTGL.reg = (1<<p.pin);
     c8c:	61e3      	str	r3, [r4, #28]
        pinToggle(buzzerPin);
        delay_us(122);
    }
    pinLow(buzzerPin);
    pinToggle(LedPin);
}
     c8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     c90:	61e6      	str	r6, [r4, #28]
        delay_us(122);
     c92:	207a      	movs	r0, #122	; 0x7a
     c94:	4b03      	ldr	r3, [pc, #12]	; (ca4 <beep+0x34>)
    for (u16_t buzz = 0; buzz < toggles; ++buzz) {
     c96:	3501      	adds	r5, #1
        delay_us(122);
     c98:	4798      	blx	r3
    for (u16_t buzz = 0; buzz < toggles; ++buzz) {
     c9a:	b2ad      	uxth	r5, r5
     c9c:	e7f1      	b.n	c82 <beep+0x12>
     c9e:	46c0      	nop			; (mov r8, r8)
     ca0:	41004400 	.word	0x41004400
     ca4:	00000ec1 	.word	0x00000ec1

00000ca8 <startupJingle>:

void startupJingle(){
     ca8:	b570      	push	{r4, r5, r6, lr}
    beep(300);
     caa:	2696      	movs	r6, #150	; 0x96
     cac:	0076      	lsls	r6, r6, #1
     cae:	4d0a      	ldr	r5, [pc, #40]	; (cd8 <startupJingle+0x30>)
     cb0:	0030      	movs	r0, r6
     cb2:	47a8      	blx	r5
    delay_ms(80);
     cb4:	4c09      	ldr	r4, [pc, #36]	; (cdc <startupJingle+0x34>)
     cb6:	2050      	movs	r0, #80	; 0x50
     cb8:	47a0      	blx	r4
    beep(300);
     cba:	0030      	movs	r0, r6
     cbc:	47a8      	blx	r5
    delay_ms(250);
     cbe:	20fa      	movs	r0, #250	; 0xfa
     cc0:	47a0      	blx	r4
    beep(300);
     cc2:	0030      	movs	r0, r6
     cc4:	47a8      	blx	r5
    delay_ms(80);
     cc6:	2050      	movs	r0, #80	; 0x50
     cc8:	47a0      	blx	r4
    beep(300);
     cca:	0030      	movs	r0, r6
     ccc:	47a8      	blx	r5
    delay_ms(500);
     cce:	20fa      	movs	r0, #250	; 0xfa
     cd0:	0040      	lsls	r0, r0, #1
     cd2:	47a0      	blx	r4
}
     cd4:	bd70      	pop	{r4, r5, r6, pc}
     cd6:	46c0      	nop			; (mov r8, r8)
     cd8:	00000c71 	.word	0x00000c71
     cdc:	00000eed 	.word	0x00000eed

00000ce0 <unpluggedJingle>:

void unpluggedJingle(){
     ce0:	b570      	push	{r4, r5, r6, lr}
            delay_ms(80);
            beep(300);
     ce2:	2696      	movs	r6, #150	; 0x96
            delay_ms(80);
     ce4:	4c0c      	ldr	r4, [pc, #48]	; (d18 <unpluggedJingle+0x38>)
            beep(300);
     ce6:	0076      	lsls	r6, r6, #1
            delay_ms(80);
     ce8:	2050      	movs	r0, #80	; 0x50
     cea:	47a0      	blx	r4
            beep(300);
     cec:	4d0b      	ldr	r5, [pc, #44]	; (d1c <unpluggedJingle+0x3c>)
     cee:	0030      	movs	r0, r6
     cf0:	47a8      	blx	r5
            delay_ms(80);
     cf2:	2050      	movs	r0, #80	; 0x50
     cf4:	47a0      	blx	r4
            beep(300);
     cf6:	0030      	movs	r0, r6
     cf8:	47a8      	blx	r5
            delay_ms(80);
     cfa:	2050      	movs	r0, #80	; 0x50
     cfc:	47a0      	blx	r4
            beep(300);
     cfe:	0030      	movs	r0, r6
     d00:	47a8      	blx	r5
            delay_ms(80);
     d02:	2050      	movs	r0, #80	; 0x50
     d04:	47a0      	blx	r4
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     d06:	2280      	movs	r2, #128	; 0x80
     d08:	4b05      	ldr	r3, [pc, #20]	; (d20 <unpluggedJingle+0x40>)
     d0a:	0392      	lsls	r2, r2, #14
     d0c:	615a      	str	r2, [r3, #20]
     d0e:	2280      	movs	r2, #128	; 0x80
     d10:	0352      	lsls	r2, r2, #13
     d12:	615a      	str	r2, [r3, #20]
            pinLow(buzzerPin);
            pinLow(LedPin);

}
     d14:	bd70      	pop	{r4, r5, r6, pc}
     d16:	46c0      	nop			; (mov r8, r8)
     d18:	00000eed 	.word	0x00000eed
     d1c:	00000c71 	.word	0x00000c71
     d20:	41004400 	.word	0x41004400

00000d24 <GclkInit>:
static uint32_t cycles_per_us = 48000000UL / 1000000;

void GclkInit() {


    SYSCTRL->INTFLAG.reg = SYSCTRL_INTFLAG_BOD33RDY | SYSCTRL_INTFLAG_BOD33DET |
     d24:	23c2      	movs	r3, #194	; 0xc2
     d26:	4a16      	ldr	r2, [pc, #88]	; (d80 <GclkInit+0x5c>)
     d28:	00db      	lsls	r3, r3, #3
void GclkInit() {
     d2a:	b510      	push	{r4, lr}
    SYSCTRL->INTFLAG.reg = SYSCTRL_INTFLAG_BOD33RDY | SYSCTRL_INTFLAG_BOD33DET |
     d2c:	6093      	str	r3, [r2, #8]
                           SYSCTRL_INTFLAG_DFLLRDY;
    NVMCTRL->CTRLB.reg |= NVMCTRL_CTRLB_RWS_HALF;
     d2e:	2302      	movs	r3, #2
     d30:	4914      	ldr	r1, [pc, #80]	; (d84 <GclkInit+0x60>)
     d32:	6848      	ldr	r0, [r1, #4]
     d34:	4303      	orrs	r3, r0
     d36:	604b      	str	r3, [r1, #4]

#define NVM_DFLL_COARSE_POS    58
#define NVM_DFLL_COARSE_SIZE   6
#define NVM_DFLL_FINE_POS      64
#define NVM_DFLL_FINE_SIZE     10
    uint32_t coarse =( *((uint32_t *)(NVMCTRL_OTP4)
     d38:	4b13      	ldr	r3, [pc, #76]	; (d88 <GclkInit+0x64>)
     d3a:	681b      	ldr	r3, [r3, #0]
     d3c:	0e9b      	lsrs	r3, r3, #26
                         + (NVM_DFLL_COARSE_POS / 32))
                       >> (NVM_DFLL_COARSE_POS % 32))
                     & ((1 << NVM_DFLL_COARSE_SIZE) - 1);
    if (coarse == 0x3f) {
     d3e:	2b3f      	cmp	r3, #63	; 0x3f
     d40:	d100      	bne.n	d44 <GclkInit+0x20>
        coarse = 0x1f;
     d42:	3b20      	subs	r3, #32
    }
    uint32_t fine =( *((uint32_t *)(NVMCTRL_OTP4)
                       + (NVM_DFLL_FINE_POS / 32))
                     >> (NVM_DFLL_FINE_POS % 32))
     d44:	4911      	ldr	r1, [pc, #68]	; (d8c <GclkInit+0x68>)
                   & ((1 << NVM_DFLL_FINE_SIZE) - 1);
    if (fine == 0x3ff) {
     d46:	4812      	ldr	r0, [pc, #72]	; (d90 <GclkInit+0x6c>)
    uint32_t fine =( *((uint32_t *)(NVMCTRL_OTP4)
     d48:	6809      	ldr	r1, [r1, #0]
     d4a:	0589      	lsls	r1, r1, #22
     d4c:	0d89      	lsrs	r1, r1, #22
    if (fine == 0x3ff) {
     d4e:	4281      	cmp	r1, r0
     d50:	d100      	bne.n	d54 <GclkInit+0x30>
        fine = 0x1ff;
     d52:	4910      	ldr	r1, [pc, #64]	; (d94 <GclkInit+0x70>)
    }


    // Disable ONDEMAND mode while writing configurations (errata 9905)
    SYSCTRL->DFLLCTRL.reg = dfll_ctrl_usb & ~SYSCTRL_DFLLCTRL_ONDEMAND;
     d54:	4810      	ldr	r0, [pc, #64]	; (d98 <GclkInit+0x74>)
     d56:	8490      	strh	r0, [r2, #36]	; 0x24
    while((SYSCTRL->PCLKSR.reg & (SYSCTRL_PCLKSR_DFLLRDY)) == 0);
     d58:	2010      	movs	r0, #16
     d5a:	68d4      	ldr	r4, [r2, #12]
     d5c:	4204      	tst	r4, r0
     d5e:	d0fc      	beq.n	d5a <GclkInit+0x36>
    SYSCTRL->DFLLVAL.reg = SYSCTRL_DFLLVAL_COARSE(coarse) | SYSCTRL_DFLLVAL_FINE(fine);
     d60:	029b      	lsls	r3, r3, #10
     d62:	430b      	orrs	r3, r1
     d64:	6293      	str	r3, [r2, #40]	; 0x28


    //Wait and see if the DFLL output is good . . .
    while((SYSCTRL->PCLKSR.reg & (SYSCTRL_PCLKSR_DFLLRDY)) == 0);
     d66:	2310      	movs	r3, #16
     d68:	68d1      	ldr	r1, [r2, #12]
     d6a:	4219      	tst	r1, r3
     d6c:	d0fc      	beq.n	d68 <GclkInit+0x44>


    SYSCTRL->DFLLCTRL.reg = dfll_ctrl_usb;
     d6e:	4b0b      	ldr	r3, [pc, #44]	; (d9c <GclkInit+0x78>)
     d70:	8493      	strh	r3, [r2, #36]	; 0x24


    //For generic clock generator 0, select the DFLL48 Clock as input
    GCLK->GENDIV.reg  = (GCLK_GENDIV_DIV(1)  | GCLK_GENDIV_ID(0));
     d72:	2280      	movs	r2, #128	; 0x80
     d74:	4b0a      	ldr	r3, [pc, #40]	; (da0 <GclkInit+0x7c>)
     d76:	0052      	lsls	r2, r2, #1
     d78:	609a      	str	r2, [r3, #8]
    GCLK->GENCTRL.reg = (GCLK_GENCTRL_ID(0)  | (GCLK_GENCTRL_SRC_DFLL48M) | (GCLK_GENCTRL_GENEN));
     d7a:	4a0a      	ldr	r2, [pc, #40]	; (da4 <GclkInit+0x80>)
     d7c:	605a      	str	r2, [r3, #4]
}
     d7e:	bd10      	pop	{r4, pc}
     d80:	40000800 	.word	0x40000800
     d84:	41004000 	.word	0x41004000
     d88:	00806024 	.word	0x00806024
     d8c:	00806028 	.word	0x00806028
     d90:	000003ff 	.word	0x000003ff
     d94:	000001ff 	.word	0x000001ff
     d98:	00000522 	.word	0x00000522
     d9c:	000005a2 	.word	0x000005a2
     da0:	40000c00 	.word	0x40000c00
     da4:	00010700 	.word	0x00010700

00000da8 <RtcInit>:
        //wait for crystal to warm up
        while((SYSCTRL->PCLKSR.reg & (SYSCTRL_PCLKSR_OSC32KRDY)) == 0);

    */

    SYSCTRL->OSC32K.reg = SYSCTRL_OSC32K_ENABLE |
     da8:	4b25      	ldr	r3, [pc, #148]	; (e40 <RtcInit+0x98>)
     daa:	4a26      	ldr	r2, [pc, #152]	; (e44 <RtcInit+0x9c>)
void RtcInit() {
     dac:	b510      	push	{r4, lr}
    SYSCTRL->OSC32K.reg = SYSCTRL_OSC32K_ENABLE |
     dae:	619a      	str	r2, [r3, #24]
                          SYSCTRL_OSC32K_EN32K |
                          ( 6 << SYSCTRL_OSC32K_STARTUP_Pos);


    SYSCTRL->OSC32K.bit.CALIB =
        ((*(uint32_t *)FUSES_OSC32K_CAL_ADDR >>
     db0:	4a25      	ldr	r2, [pc, #148]	; (e48 <RtcInit+0xa0>)
    SYSCTRL->OSC32K.bit.CALIB =
     db2:	6998      	ldr	r0, [r3, #24]
        ((*(uint32_t *)FUSES_OSC32K_CAL_ADDR >>
     db4:	6812      	ldr	r2, [r2, #0]
    SYSCTRL->OSC32K.bit.CALIB =
     db6:	4c25      	ldr	r4, [pc, #148]	; (e4c <RtcInit+0xa4>)
     db8:	04d2      	lsls	r2, r2, #19
     dba:	0e52      	lsrs	r2, r2, #25
     dbc:	0412      	lsls	r2, r2, #16
          FUSES_OSC32K_CAL_Pos) & 0x7Ful);

    SYSCTRL->OSC32K.reg = SYSCTRL_OSC32K_STARTUP( 0x6u ) | // cf table 15.10 of product datasheet in chapter 15.8.6
     dbe:	4924      	ldr	r1, [pc, #144]	; (e50 <RtcInit+0xa8>)
    SYSCTRL->OSC32K.bit.CALIB =
     dc0:	4020      	ands	r0, r4
     dc2:	4310      	orrs	r0, r2
     dc4:	6198      	str	r0, [r3, #24]
    SYSCTRL->OSC32K.reg = SYSCTRL_OSC32K_STARTUP( 0x6u ) | // cf table 15.10 of product datasheet in chapter 15.8.6
     dc6:	6199      	str	r1, [r3, #24]
                          SYSCTRL_OSC32K_EN32K;
    SYSCTRL->OSC32K.bit.CALIB =
     dc8:	6999      	ldr	r1, [r3, #24]
     dca:	4021      	ands	r1, r4
     dcc:	430a      	orrs	r2, r1
     dce:	619a      	str	r2, [r3, #24]
        ((*(uint32_t *)FUSES_OSC32K_CAL_ADDR >>
          FUSES_OSC32K_CAL_Pos) & 0x7Ful);



    SYSCTRL->OSC32K.bit.ENABLE = 1; // separate call, as described in chapter 15.6.3
     dd0:	2202      	movs	r2, #2
     dd2:	6999      	ldr	r1, [r3, #24]
     dd4:	430a      	orrs	r2, r1
     dd6:	619a      	str	r2, [r3, #24]

    while (  (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_OSC32KRDY) == 0 ) {
     dd8:	2204      	movs	r2, #4
     dda:	68d9      	ldr	r1, [r3, #12]
     ddc:	4211      	tst	r1, r2
     dde:	d0fc      	beq.n	dda <RtcInit+0x32>





    GCLK->GENDIV.reg = GCLK_GENDIV_ID(2) | GCLK_GENDIV_DIV(1);
     de0:	2281      	movs	r2, #129	; 0x81
     de2:	4b1c      	ldr	r3, [pc, #112]	; (e54 <RtcInit+0xac>)
     de4:	0052      	lsls	r2, r2, #1
     de6:	609a      	str	r2, [r3, #8]

    GCLK->GENCTRL.reg = GCLK_GENCTRL_ID(2) |
     de8:	4a1b      	ldr	r2, [pc, #108]	; (e58 <RtcInit+0xb0>)
     dea:	605a      	str	r2, [r3, #4]
                        GCLK_GENCTRL_SRC(GCLK_GENCTRL_SRC_OSC32K) |
                        GCLK_GENCTRL_IDC |
                        GCLK_GENCTRL_RUNSTDBY |
                        GCLK_GENCTRL_GENEN;
    while (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY);
     dec:	785a      	ldrb	r2, [r3, #1]
     dee:	b252      	sxtb	r2, r2
     df0:	2a00      	cmp	r2, #0
     df2:	dbfb      	blt.n	dec <RtcInit+0x44>

// Configure RTC
    GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID(RTC_GCLK_ID) |
     df4:	4a19      	ldr	r2, [pc, #100]	; (e5c <RtcInit+0xb4>)
     df6:	805a      	strh	r2, [r3, #2]
                        GCLK_CLKCTRL_CLKEN |
                        GCLK_CLKCTRL_GEN(2);

    RTC->MODE1.CTRL.reg = RTC_MODE1_CTRL_MODE_COUNT16;
     df8:	2204      	movs	r2, #4
     dfa:	4b19      	ldr	r3, [pc, #100]	; (e60 <RtcInit+0xb8>)
     dfc:	801a      	strh	r2, [r3, #0]
    while (RTC->MODE1.STATUS.bit.SYNCBUSY);
     dfe:	7a9a      	ldrb	r2, [r3, #10]
     e00:	09d2      	lsrs	r2, r2, #7
     e02:	d1fc      	bne.n	dfe <RtcInit+0x56>

// Prescaler needs to be enabled separately from the mode for some reason
    RTC->MODE1.CTRL.reg |= RTC_MODE1_CTRL_PRESCALER_DIV32;
     e04:	22a0      	movs	r2, #160	; 0xa0
     e06:	8819      	ldrh	r1, [r3, #0]
     e08:	00d2      	lsls	r2, r2, #3
     e0a:	430a      	orrs	r2, r1
     e0c:	801a      	strh	r2, [r3, #0]
    while (RTC->MODE1.STATUS.bit.SYNCBUSY);
     e0e:	7a9a      	ldrb	r2, [r3, #10]
     e10:	09d2      	lsrs	r2, r2, #7
     e12:	d1fc      	bne.n	e0e <RtcInit+0x66>

    RTC->MODE1.PER.reg = 998;
     e14:	4a13      	ldr	r2, [pc, #76]	; (e64 <RtcInit+0xbc>)
     e16:	829a      	strh	r2, [r3, #20]
    while (RTC->MODE1.STATUS.bit.SYNCBUSY);
     e18:	7a9a      	ldrb	r2, [r3, #10]
     e1a:	09d2      	lsrs	r2, r2, #7
     e1c:	d1fc      	bne.n	e18 <RtcInit+0x70>

    RTC->MODE1.READREQ.reg |= RTC_READREQ_RCONT | RTC_READREQ_ADDR(0x10);
     e1e:	8859      	ldrh	r1, [r3, #2]
     e20:	4a11      	ldr	r2, [pc, #68]	; (e68 <RtcInit+0xc0>)
     e22:	430a      	orrs	r2, r1
     e24:	805a      	strh	r2, [r3, #2]

    RTC->MODE1.INTENSET.reg = RTC_MODE1_INTENSET_OVF;
     e26:	2280      	movs	r2, #128	; 0x80
     e28:	71da      	strb	r2, [r3, #7]

    RTC->MODE1.CTRL.bit.ENABLE = 1;
     e2a:	8819      	ldrh	r1, [r3, #0]
     e2c:	3a7e      	subs	r2, #126	; 0x7e
     e2e:	430a      	orrs	r2, r1
     e30:	801a      	strh	r2, [r3, #0]
    while (RTC->MODE1.STATUS.bit.SYNCBUSY);
     e32:	7a9a      	ldrb	r2, [r3, #10]
     e34:	09d2      	lsrs	r2, r2, #7
     e36:	d1fc      	bne.n	e32 <RtcInit+0x8a>
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
     e38:	4b0c      	ldr	r3, [pc, #48]	; (e6c <RtcInit+0xc4>)
     e3a:	3208      	adds	r2, #8
     e3c:	601a      	str	r2, [r3, #0]

    NVIC_EnableIRQ(RTC_IRQn);
}
     e3e:	bd10      	pop	{r4, pc}
     e40:	40000800 	.word	0x40000800
     e44:	00000606 	.word	0x00000606
     e48:	00806024 	.word	0x00806024
     e4c:	ff80ffff 	.word	0xff80ffff
     e50:	00000604 	.word	0x00000604
     e54:	40000c00 	.word	0x40000c00
     e58:	00230002 	.word	0x00230002
     e5c:	00004204 	.word	0x00004204
     e60:	40001400 	.word	0x40001400
     e64:	000003e6 	.word	0x000003e6
     e68:	00004010 	.word	0x00004010
     e6c:	e000e100 	.word	0xe000e100

00000e70 <gclkEnable>:


void gclkEnable(u32_t id, u32_t src, u32_t div) {
    GCLK->GENDIV.reg = GCLK_GENDIV_ID(id) | GCLK_GENDIV_DIV(div);
     e70:	230f      	movs	r3, #15
     e72:	4003      	ands	r3, r0
     e74:	4808      	ldr	r0, [pc, #32]	; (e98 <gclkEnable+0x28>)
     e76:	0212      	lsls	r2, r2, #8
     e78:	4002      	ands	r2, r0
    GCLK->GENCTRL.reg = GCLK_GENCTRL_ID(id) | GCLK_GENCTRL_GENEN | GCLK_GENCTRL_SRC(src);
     e7a:	20f8      	movs	r0, #248	; 0xf8
     e7c:	0209      	lsls	r1, r1, #8
     e7e:	0140      	lsls	r0, r0, #5
     e80:	4001      	ands	r1, r0
     e82:	2080      	movs	r0, #128	; 0x80
void gclkEnable(u32_t id, u32_t src, u32_t div) {
     e84:	b510      	push	{r4, lr}
    GCLK->GENCTRL.reg = GCLK_GENCTRL_ID(id) | GCLK_GENCTRL_GENEN | GCLK_GENCTRL_SRC(src);
     e86:	0240      	lsls	r0, r0, #9
    GCLK->GENDIV.reg = GCLK_GENDIV_ID(id) | GCLK_GENDIV_DIV(div);
     e88:	4c04      	ldr	r4, [pc, #16]	; (e9c <gclkEnable+0x2c>)
    GCLK->GENCTRL.reg = GCLK_GENCTRL_ID(id) | GCLK_GENCTRL_GENEN | GCLK_GENCTRL_SRC(src);
     e8a:	4308      	orrs	r0, r1
    GCLK->GENDIV.reg = GCLK_GENDIV_ID(id) | GCLK_GENDIV_DIV(div);
     e8c:	431a      	orrs	r2, r3
    GCLK->GENCTRL.reg = GCLK_GENCTRL_ID(id) | GCLK_GENCTRL_GENEN | GCLK_GENCTRL_SRC(src);
     e8e:	4318      	orrs	r0, r3
    GCLK->GENDIV.reg = GCLK_GENDIV_ID(id) | GCLK_GENDIV_DIV(div);
     e90:	60a2      	str	r2, [r4, #8]
    GCLK->GENCTRL.reg = GCLK_GENCTRL_ID(id) | GCLK_GENCTRL_GENEN | GCLK_GENCTRL_SRC(src);
     e92:	6060      	str	r0, [r4, #4]
}
     e94:	bd10      	pop	{r4, pc}
     e96:	46c0      	nop			; (mov r8, r8)
     e98:	00ffff00 	.word	0x00ffff00
     e9c:	40000c00 	.word	0x40000c00

00000ea0 <delayInit>:


void delayInit(void) {
    cycles_per_ms = 48000000UL;
    cycles_per_ms /= 1000;
     ea0:	4b04      	ldr	r3, [pc, #16]	; (eb4 <delayInit+0x14>)
     ea2:	4a05      	ldr	r2, [pc, #20]	; (eb8 <delayInit+0x18>)
     ea4:	601a      	str	r2, [r3, #0]
    cycles_per_us = cycles_per_ms / 1000;
     ea6:	2230      	movs	r2, #48	; 0x30
     ea8:	605a      	str	r2, [r3, #4]

    SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk;
     eaa:	4b04      	ldr	r3, [pc, #16]	; (ebc <delayInit+0x1c>)
     eac:	3a2b      	subs	r2, #43	; 0x2b
     eae:	601a      	str	r2, [r3, #0]
}
     eb0:	4770      	bx	lr
     eb2:	46c0      	nop			; (mov r8, r8)
     eb4:	20000004 	.word	0x20000004
     eb8:	0000bb80 	.word	0x0000bb80
     ebc:	e000e010 	.word	0xe000e010

00000ec0 <delay_us>:
/**
 * \brief Delay loop to delay at least n number of microseconds
 *
 * \param n  Number of microseconds to wait
 */
void delay_us(uint32_t n) {
     ec0:	b530      	push	{r4, r5, lr}
    const uint32_t n) {
    if (n > 0) {
        SysTick->LOAD = n;
        SysTick->VAL = 0;

        while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {
     ec2:	2480      	movs	r4, #128	; 0x80
        SysTick->VAL = 0;
     ec4:	2100      	movs	r1, #0
    while (n--) {
        /* Devide up to blocks of 10u */
        delay_cycles(cycles_per_us);
     ec6:	4b07      	ldr	r3, [pc, #28]	; (ee4 <delay_us+0x24>)
        while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {
     ec8:	0264      	lsls	r4, r4, #9
     eca:	685a      	ldr	r2, [r3, #4]
        SysTick->LOAD = n;
     ecc:	4b06      	ldr	r3, [pc, #24]	; (ee8 <delay_us+0x28>)
    while (n--) {
     ece:	3801      	subs	r0, #1
     ed0:	d200      	bcs.n	ed4 <delay_us+0x14>
    }
}
     ed2:	bd30      	pop	{r4, r5, pc}
    if (n > 0) {
     ed4:	2a00      	cmp	r2, #0
     ed6:	d0fa      	beq.n	ece <delay_us+0xe>
        SysTick->LOAD = n;
     ed8:	605a      	str	r2, [r3, #4]
        SysTick->VAL = 0;
     eda:	6099      	str	r1, [r3, #8]
        while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {
     edc:	681d      	ldr	r5, [r3, #0]
     ede:	4225      	tst	r5, r4
     ee0:	d0fc      	beq.n	edc <delay_us+0x1c>
     ee2:	e7f4      	b.n	ece <delay_us+0xe>
     ee4:	20000004 	.word	0x20000004
     ee8:	e000e010 	.word	0xe000e010

00000eec <delay_ms>:
/**
 * \brief Delay loop to delay at least n number of milliseconds
 *
 * \param n  Number of milliseconds to wait
 */
void delay_ms(uint32_t n) {
     eec:	b530      	push	{r4, r5, lr}
     eee:	2480      	movs	r4, #128	; 0x80
        SysTick->VAL = 0;
     ef0:	2100      	movs	r1, #0
    while (n--) {
        /* Devide up to blocks of 1ms */
        delay_cycles(cycles_per_ms);
     ef2:	4b07      	ldr	r3, [pc, #28]	; (f10 <delay_ms+0x24>)
        while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {
     ef4:	0264      	lsls	r4, r4, #9
     ef6:	681a      	ldr	r2, [r3, #0]
        SysTick->LOAD = n;
     ef8:	4b06      	ldr	r3, [pc, #24]	; (f14 <delay_ms+0x28>)
    while (n--) {
     efa:	3801      	subs	r0, #1
     efc:	d200      	bcs.n	f00 <delay_ms+0x14>
    }
}
     efe:	bd30      	pop	{r4, r5, pc}
    if (n > 0) {
     f00:	2a00      	cmp	r2, #0
     f02:	d0fa      	beq.n	efa <delay_ms+0xe>
        SysTick->LOAD = n;
     f04:	605a      	str	r2, [r3, #4]
        SysTick->VAL = 0;
     f06:	6099      	str	r1, [r3, #8]
        while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {
     f08:	681d      	ldr	r5, [r3, #0]
     f0a:	4225      	tst	r5, r4
     f0c:	d0fc      	beq.n	f08 <delay_ms+0x1c>
     f0e:	e7f4      	b.n	efa <delay_ms+0xe>
     f10:	20000004 	.word	0x20000004
     f14:	e000e010 	.word	0xe000e010

00000f18 <RTC_Handler>:


volatile uint32_t time_ms = 0;

void RTC_Handler(void) {
    time_ms += 1000;
     f18:	21fa      	movs	r1, #250	; 0xfa
     f1a:	4a04      	ldr	r2, [pc, #16]	; (f2c <RTC_Handler+0x14>)
     f1c:	0089      	lsls	r1, r1, #2
     f1e:	6813      	ldr	r3, [r2, #0]
     f20:	185b      	adds	r3, r3, r1
     f22:	6013      	str	r3, [r2, #0]
    RTC->MODE1.INTFLAG.reg = 0xFF;
     f24:	22ff      	movs	r2, #255	; 0xff
     f26:	4b02      	ldr	r3, [pc, #8]	; (f30 <RTC_Handler+0x18>)
     f28:	721a      	strb	r2, [r3, #8]
}
     f2a:	4770      	bx	lr
     f2c:	200004bc 	.word	0x200004bc
     f30:	40001400 	.word	0x40001400

00000f34 <millis>:

uint32_t millis(void) {
     f34:	b530      	push	{r4, r5, lr}
    uint32_t ms;
    ATOMIC_SECTION_ENTER
     f36:	f3ef 8110 	mrs	r1, PRIMASK
     f3a:	b672      	cpsid	i
    ms = time_ms + RTC->MODE1.COUNT.reg;
     f3c:	4b09      	ldr	r3, [pc, #36]	; (f64 <millis+0x30>)
     f3e:	4c0a      	ldr	r4, [pc, #40]	; (f68 <millis+0x34>)
     f40:	8a18      	ldrh	r0, [r3, #16]
     f42:	6825      	ldr	r5, [r4, #0]
    if (RTC->MODE1.INTFLAG.bit.OVF)
     f44:	7a1a      	ldrb	r2, [r3, #8]
    ms = time_ms + RTC->MODE1.COUNT.reg;
     f46:	b280      	uxth	r0, r0
    if (RTC->MODE1.INTFLAG.bit.OVF)
     f48:	09d2      	lsrs	r2, r2, #7
    ms = time_ms + RTC->MODE1.COUNT.reg;
     f4a:	1940      	adds	r0, r0, r5
    if (RTC->MODE1.INTFLAG.bit.OVF)
     f4c:	2a00      	cmp	r2, #0
     f4e:	d005      	beq.n	f5c <millis+0x28>
        ms = time_ms + RTC->MODE1.COUNT.reg + 1000;
     f50:	22fa      	movs	r2, #250	; 0xfa
     f52:	8a1b      	ldrh	r3, [r3, #16]
     f54:	6820      	ldr	r0, [r4, #0]
     f56:	0092      	lsls	r2, r2, #2
     f58:	1880      	adds	r0, r0, r2
     f5a:	18c0      	adds	r0, r0, r3
    ATOMIC_SECTION_LEAVE
     f5c:	f381 8810 	msr	PRIMASK, r1
    return ms;
}
     f60:	bd30      	pop	{r4, r5, pc}
     f62:	46c0      	nop			; (mov r8, r8)
     f64:	40001400 	.word	0x40001400
     f68:	200004bc 	.word	0x200004bc

00000f6c <TC4Init>:

void TC4Init() {

    GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID(TC4_GCLK_ID) |
     f6c:	4a0d      	ldr	r2, [pc, #52]	; (fa4 <TC4Init+0x38>)
     f6e:	4b0e      	ldr	r3, [pc, #56]	; (fa8 <TC4Init+0x3c>)
     f70:	805a      	strh	r2, [r3, #2]
                        GCLK_CLKCTRL_CLKEN |
                        GCLK_CLKCTRL_GEN(2);

    PM->APBCMASK.reg |= PM_APBCMASK_TC4;
     f72:	2380      	movs	r3, #128	; 0x80
     f74:	4a0d      	ldr	r2, [pc, #52]	; (fac <TC4Init+0x40>)
     f76:	015b      	lsls	r3, r3, #5
     f78:	6a11      	ldr	r1, [r2, #32]
     f7a:	430b      	orrs	r3, r1
     f7c:	6213      	str	r3, [r2, #32]

    TC4->COUNT8.CTRLA.reg = TC_CTRLA_MODE_COUNT8 |
     f7e:	4b0c      	ldr	r3, [pc, #48]	; (fb0 <TC4Init+0x44>)
     f80:	4a0c      	ldr	r2, [pc, #48]	; (fb4 <TC4Init+0x48>)
     f82:	801a      	strh	r2, [r3, #0]
                            TC_CTRLA_RUNSTDBY |
                            TC_CTRLA_PRESCALER_DIV2;
    TC4->COUNT8.PER.reg = 0x50;
     f84:	2250      	movs	r2, #80	; 0x50
     f86:	751a      	strb	r2, [r3, #20]

    TC4->COUNT8.INTENSET.reg = TC_INTENSET_OVF;
     f88:	3a4f      	subs	r2, #79	; 0x4f
     f8a:	735a      	strb	r2, [r3, #13]

    TC4->COUNT8.EVCTRL.reg = TC_EVCTRL_OVFEO;
     f8c:	32ff      	adds	r2, #255	; 0xff
     f8e:	815a      	strh	r2, [r3, #10]

    TC4->COUNT8.CTRLA.reg |= TC_CTRLA_ENABLE;
     f90:	8819      	ldrh	r1, [r3, #0]
     f92:	3afe      	subs	r2, #254	; 0xfe
     f94:	430a      	orrs	r2, r1
     f96:	801a      	strh	r2, [r3, #0]
     f98:	2280      	movs	r2, #128	; 0x80
     f9a:	4b07      	ldr	r3, [pc, #28]	; (fb8 <TC4Init+0x4c>)
     f9c:	0312      	lsls	r2, r2, #12
     f9e:	601a      	str	r2, [r3, #0]

    NVIC_EnableIRQ(TC4_IRQn);
}
     fa0:	4770      	bx	lr
     fa2:	46c0      	nop			; (mov r8, r8)
     fa4:	0000421c 	.word	0x0000421c
     fa8:	40000c00 	.word	0x40000c00
     fac:	40000400 	.word	0x40000400
     fb0:	42003000 	.word	0x42003000
     fb4:	00000904 	.word	0x00000904
     fb8:	e000e100 	.word	0xe000e100

00000fbc <TC4_Handler>:

void TC4_Handler( void ) {
    TC4->COUNT8.INTFLAG.reg = 0xFF;
     fbc:	22ff      	movs	r2, #255	; 0xff
void TC4_Handler( void ) {
     fbe:	b510      	push	{r4, lr}
    TC4->COUNT8.INTFLAG.reg = 0xFF;
     fc0:	4b02      	ldr	r3, [pc, #8]	; (fcc <TC4_Handler+0x10>)
     fc2:	739a      	strb	r2, [r3, #14]
    //pinToggle(TxPo);
    pullSample();
     fc4:	4b02      	ldr	r3, [pc, #8]	; (fd0 <TC4_Handler+0x14>)
     fc6:	4798      	blx	r3
}
     fc8:	bd10      	pop	{r4, pc}
     fca:	46c0      	nop			; (mov r8, r8)
     fcc:	42003000 	.word	0x42003000
     fd0:	000021f1 	.word	0x000021f1

00000fd4 <TC5Init>:

void TC5Init() {

    GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID(TC5_GCLK_ID) |
     fd4:	4a0d      	ldr	r2, [pc, #52]	; (100c <TC5Init+0x38>)
     fd6:	4b0e      	ldr	r3, [pc, #56]	; (1010 <TC5Init+0x3c>)
     fd8:	805a      	strh	r2, [r3, #2]
                        GCLK_CLKCTRL_CLKEN |
                        GCLK_CLKCTRL_GEN(2);

    PM->APBCMASK.reg |= PM_APBCMASK_TC5;
     fda:	2380      	movs	r3, #128	; 0x80
     fdc:	4a0d      	ldr	r2, [pc, #52]	; (1014 <TC5Init+0x40>)
     fde:	019b      	lsls	r3, r3, #6
     fe0:	6a11      	ldr	r1, [r2, #32]
     fe2:	430b      	orrs	r3, r1
     fe4:	6213      	str	r3, [r2, #32]

    TC5->COUNT8.CTRLA.reg = TC_CTRLA_MODE_COUNT8 |
     fe6:	4b0c      	ldr	r3, [pc, #48]	; (1018 <TC5Init+0x44>)
     fe8:	4a0c      	ldr	r2, [pc, #48]	; (101c <TC5Init+0x48>)
     fea:	801a      	strh	r2, [r3, #0]
                            TC_CTRLA_PRESCALER_DIV16;

    u16_t logSpeed = 20; //Hz
    u8_t PER_Reg = (long)((32768/16) / logSpeed);

    TC5->COUNT8.PER.reg = PER_Reg;
     fec:	2266      	movs	r2, #102	; 0x66
     fee:	751a      	strb	r2, [r3, #20]

    TC5->COUNT8.INTENSET.reg = TC_INTENSET_OVF;
     ff0:	3a65      	subs	r2, #101	; 0x65
     ff2:	735a      	strb	r2, [r3, #13]

    TC5->COUNT8.EVCTRL.reg = TC_EVCTRL_OVFEO;
     ff4:	32ff      	adds	r2, #255	; 0xff
     ff6:	815a      	strh	r2, [r3, #10]

    TC5->COUNT8.CTRLA.reg |= TC_CTRLA_ENABLE;
     ff8:	8819      	ldrh	r1, [r3, #0]
     ffa:	3afe      	subs	r2, #254	; 0xfe
     ffc:	430a      	orrs	r2, r1
     ffe:	801a      	strh	r2, [r3, #0]
    1000:	2280      	movs	r2, #128	; 0x80
    1002:	4b07      	ldr	r3, [pc, #28]	; (1020 <TC5Init+0x4c>)
    1004:	0352      	lsls	r2, r2, #13
    1006:	601a      	str	r2, [r3, #0]

    NVIC_EnableIRQ(TC5_IRQn);
}
    1008:	4770      	bx	lr
    100a:	46c0      	nop			; (mov r8, r8)
    100c:	0000421c 	.word	0x0000421c
    1010:	40000c00 	.word	0x40000c00
    1014:	40000400 	.word	0x40000400
    1018:	42003400 	.word	0x42003400
    101c:	00000c04 	.word	0x00000c04
    1020:	e000e100 	.word	0xe000e100

00001024 <TC5_Handler>:

void TC5_Handler( void ) {
    TC5->COUNT8.INTFLAG.reg = 0xFF;
    1024:	22ff      	movs	r2, #255	; 0xff
    1026:	4b03      	ldr	r3, [pc, #12]	; (1034 <TC5_Handler+0x10>)
    1028:	739a      	strb	r2, [r3, #14]
    

    writeLog = true;
    102a:	4b03      	ldr	r3, [pc, #12]	; (1038 <TC5_Handler+0x14>)
    102c:	3afe      	subs	r2, #254	; 0xfe
    102e:	701a      	strb	r2, [r3, #0]
}
    1030:	4770      	bx	lr
    1032:	46c0      	nop			; (mov r8, r8)
    1034:	42003400 	.word	0x42003400
    1038:	200004f8 	.word	0x200004f8

0000103c <flight>:
#include <boardDefines.h>

flightState_t flightState;


void flight() {
    103c:	b570      	push	{r4, r5, r6, lr}


    switch(flightState) {
    103e:	4c5e      	ldr	r4, [pc, #376]	; (11b8 <flight+0x17c>)
    1040:	7820      	ldrb	r0, [r4, #0]
    1042:	280a      	cmp	r0, #10
    1044:	d819      	bhi.n	107a <flight+0x3e>
    1046:	f002 fc69 	bl	391c <__gnu_thumb1_case_uqi>
    104a:	3106      	.short	0x3106
    104c:	18186142 	.word	0x18186142
    1050:	1818188e 	.word	0x1818188e
    1054:	a3          	.byte	0xa3
    1055:	00          	.byte	0x00
    case flightStatrup:


        updateGround( );
    1056:	4b59      	ldr	r3, [pc, #356]	; (11bc <flight+0x180>)
    1058:	4798      	blx	r3

        //logSensors( );


        if ((millis() - startupTick) > 10000) {
    105a:	4b59      	ldr	r3, [pc, #356]	; (11c0 <flight+0x184>)
    105c:	4798      	blx	r3
    105e:	4b59      	ldr	r3, [pc, #356]	; (11c4 <flight+0x188>)
    1060:	681b      	ldr	r3, [r3, #0]
    1062:	1ac0      	subs	r0, r0, r3
    1064:	4b58      	ldr	r3, [pc, #352]	; (11c8 <flight+0x18c>)
    1066:	4298      	cmp	r0, r3
    1068:	d915      	bls.n	1096 <flight+0x5a>
            findNewFlightStart( );
    106a:	4b58      	ldr	r3, [pc, #352]	; (11cc <flight+0x190>)
    106c:	4798      	blx	r3
            logFlight( );
    106e:	4b58      	ldr	r3, [pc, #352]	; (11d0 <flight+0x194>)
    1070:	4798      	blx	r3
            startupJingle();
    1072:	4b58      	ldr	r3, [pc, #352]	; (11d4 <flight+0x198>)
    1074:	4798      	blx	r3
            flightState = flightTest;
    1076:	230a      	movs	r3, #10
    1078:	7023      	strb	r3, [r4, #0]


        break;
    }

    if (flightState != flightStatrup & flightState != flightIdle & unplugged()) {
    107a:	7823      	ldrb	r3, [r4, #0]
    107c:	2401      	movs	r4, #1
    107e:	429c      	cmp	r4, r3
    1080:	41a4      	sbcs	r4, r4
    1082:	4b55      	ldr	r3, [pc, #340]	; (11d8 <flight+0x19c>)
    1084:	4264      	negs	r4, r4
    1086:	4798      	blx	r3
    1088:	2c00      	cmp	r4, #0
    108a:	d003      	beq.n	1094 <flight+0x58>
    108c:	2800      	cmp	r0, #0
    108e:	d001      	beq.n	1094 <flight+0x58>
        finishFlight();
    1090:	4b52      	ldr	r3, [pc, #328]	; (11dc <flight+0x1a0>)
    1092:	4798      	blx	r3
    }


}
    1094:	bd70      	pop	{r4, r5, r6, pc}
        attemptConnection();
    1096:	4b52      	ldr	r3, [pc, #328]	; (11e0 <flight+0x1a4>)
    1098:	4798      	blx	r3
        if (unplugged()) {
    109a:	4b4f      	ldr	r3, [pc, #316]	; (11d8 <flight+0x19c>)
    109c:	4798      	blx	r3
    109e:	2800      	cmp	r0, #0
    10a0:	d0eb      	beq.n	107a <flight+0x3e>
            flightState = flightIdle;
    10a2:	2301      	movs	r3, #1
    10a4:	7023      	strb	r3, [r4, #0]
            unpluggedJingle();
    10a6:	4b4f      	ldr	r3, [pc, #316]	; (11e4 <flight+0x1a8>)
    10a8:	4798      	blx	r3
    10aa:	e7e6      	b.n	107a <flight+0x3e>
        if (sercom(USART3)->SPI.INTFLAG.bit.RXC == 1) {
    10ac:	4b4e      	ldr	r3, [pc, #312]	; (11e8 <flight+0x1ac>)
    10ae:	7e1b      	ldrb	r3, [r3, #24]
    10b0:	075b      	lsls	r3, r3, #29
    10b2:	d57d      	bpl.n	11b0 <flight+0x174>
            u8_t possibleReset = usartDataIn(USART3);
    10b4:	2003      	movs	r0, #3
    10b6:	4b4d      	ldr	r3, [pc, #308]	; (11ec <flight+0x1b0>)
    10b8:	4798      	blx	r3
            if (possibleReset == 0x52) {
    10ba:	2852      	cmp	r0, #82	; 0x52
    10bc:	d1dd      	bne.n	107a <flight+0x3e>
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
    10be:	f3bf 8f4f 	dsb	sy
 */
__STATIC_INLINE void NVIC_SystemReset(void)
{
  __DSB();                                                     /* Ensure all outstanding memory accesses included
                                                                  buffered write are completed before reset */
  SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
    10c2:	4a4b      	ldr	r2, [pc, #300]	; (11f0 <flight+0x1b4>)
    10c4:	4b4b      	ldr	r3, [pc, #300]	; (11f4 <flight+0x1b8>)
    10c6:	60da      	str	r2, [r3, #12]
    10c8:	f3bf 8f4f 	dsb	sy
    10cc:	e7fe      	b.n	10cc <flight+0x90>
        updateGround();
    10ce:	4b3b      	ldr	r3, [pc, #236]	; (11bc <flight+0x180>)
    10d0:	4798      	blx	r3
        if (writeLog) {
    10d2:	4b49      	ldr	r3, [pc, #292]	; (11f8 <flight+0x1bc>)
    10d4:	781a      	ldrb	r2, [r3, #0]
    10d6:	2a00      	cmp	r2, #0
    10d8:	d005      	beq.n	10e6 <flight+0xaa>
            writeLog = false;
    10da:	2200      	movs	r2, #0
    10dc:	701a      	strb	r2, [r3, #0]
    PORT->Group[p.group].OUTTGL.reg = (1<<p.pin);
    10de:	2280      	movs	r2, #128	; 0x80
    10e0:	4b46      	ldr	r3, [pc, #280]	; (11fc <flight+0x1c0>)
    10e2:	0352      	lsls	r2, r2, #13
    10e4:	61da      	str	r2, [r3, #28]
        if (( velocity > 0.05) && (altitudeAGL() > 5)) {
    10e6:	4946      	ldr	r1, [pc, #280]	; (1200 <flight+0x1c4>)
    10e8:	4a46      	ldr	r2, [pc, #280]	; (1204 <flight+0x1c8>)
    10ea:	4b47      	ldr	r3, [pc, #284]	; (1208 <flight+0x1cc>)
    10ec:	6808      	ldr	r0, [r1, #0]
    10ee:	6849      	ldr	r1, [r1, #4]
    10f0:	4d46      	ldr	r5, [pc, #280]	; (120c <flight+0x1d0>)
    10f2:	47a8      	blx	r5
    10f4:	2800      	cmp	r0, #0
    10f6:	d0c0      	beq.n	107a <flight+0x3e>
    10f8:	4b45      	ldr	r3, [pc, #276]	; (1210 <flight+0x1d4>)
    10fa:	4798      	blx	r3
    10fc:	2805      	cmp	r0, #5
    10fe:	ddbc      	ble.n	107a <flight+0x3e>
            flightState = flightBoost;
    1100:	2303      	movs	r3, #3
            logEvent('L');
    1102:	204c      	movs	r0, #76	; 0x4c
            flightState = flightBoost;
    1104:	7023      	strb	r3, [r4, #0]
            logEvent('L');
    1106:	4b43      	ldr	r3, [pc, #268]	; (1214 <flight+0x1d8>)
    1108:	4798      	blx	r3
    110a:	e7b6      	b.n	107a <flight+0x3e>
        if (writeLog) {
    110c:	4b3a      	ldr	r3, [pc, #232]	; (11f8 <flight+0x1bc>)
    110e:	781a      	ldrb	r2, [r3, #0]
    1110:	2a00      	cmp	r2, #0
    1112:	d015      	beq.n	1140 <flight+0x104>
            writeLog = false;
    1114:	2500      	movs	r5, #0
    1116:	701d      	strb	r5, [r3, #0]
            logSensors( );
    1118:	4b3f      	ldr	r3, [pc, #252]	; (1218 <flight+0x1dc>)
    111a:	4798      	blx	r3
            if (pageReady) {
    111c:	4b3f      	ldr	r3, [pc, #252]	; (121c <flight+0x1e0>)
    111e:	781a      	ldrb	r2, [r3, #0]
    1120:	42aa      	cmp	r2, r5
    1122:	d00d      	beq.n	1140 <flight+0x104>
    1124:	2280      	movs	r2, #128	; 0x80
                pageReady = false;
    1126:	701d      	strb	r5, [r3, #0]
    1128:	4b34      	ldr	r3, [pc, #208]	; (11fc <flight+0x1c0>)
                u8_t bytesWritten = AT25SEWritePage(currentAddress,pageToWrite);
    112a:	4d3d      	ldr	r5, [pc, #244]	; (1220 <flight+0x1e4>)
    112c:	0352      	lsls	r2, r2, #13
    112e:	61da      	str	r2, [r3, #28]
    1130:	493c      	ldr	r1, [pc, #240]	; (1224 <flight+0x1e8>)
    1132:	4b3d      	ldr	r3, [pc, #244]	; (1228 <flight+0x1ec>)
    1134:	6828      	ldr	r0, [r5, #0]
    1136:	4798      	blx	r3
                currentAddress = (currentAddress + 0x100);
    1138:	682b      	ldr	r3, [r5, #0]
    113a:	3301      	adds	r3, #1
    113c:	33ff      	adds	r3, #255	; 0xff
    113e:	602b      	str	r3, [r5, #0]
        if (velocity < 0) {
    1140:	492f      	ldr	r1, [pc, #188]	; (1200 <flight+0x1c4>)
    1142:	2200      	movs	r2, #0
    1144:	6808      	ldr	r0, [r1, #0]
    1146:	6849      	ldr	r1, [r1, #4]
    1148:	2300      	movs	r3, #0
    114a:	4d38      	ldr	r5, [pc, #224]	; (122c <flight+0x1f0>)
    114c:	47a8      	blx	r5
    114e:	2800      	cmp	r0, #0
    1150:	d100      	bne.n	1154 <flight+0x118>
    1152:	e792      	b.n	107a <flight+0x3e>
            flightState = flightDrogue;
    1154:	2306      	movs	r3, #6
            logEvent('A');
    1156:	2041      	movs	r0, #65	; 0x41
            flightState = flightDrogue;
    1158:	7023      	strb	r3, [r4, #0]
            logEvent('A');
    115a:	4b2e      	ldr	r3, [pc, #184]	; (1214 <flight+0x1d8>)
    115c:	4798      	blx	r3
            beep(100);
    115e:	2064      	movs	r0, #100	; 0x64
    1160:	4b33      	ldr	r3, [pc, #204]	; (1230 <flight+0x1f4>)
    1162:	4798      	blx	r3
    1164:	e789      	b.n	107a <flight+0x3e>
        if (pageReady) {
    1166:	4b2d      	ldr	r3, [pc, #180]	; (121c <flight+0x1e0>)
    1168:	781a      	ldrb	r2, [r3, #0]
    116a:	2a00      	cmp	r2, #0
    116c:	d100      	bne.n	1170 <flight+0x134>
    116e:	e784      	b.n	107a <flight+0x3e>
            pageReady = false;
    1170:	2200      	movs	r2, #0
    1172:	701a      	strb	r2, [r3, #0]
    1174:	2280      	movs	r2, #128	; 0x80
    1176:	4b21      	ldr	r3, [pc, #132]	; (11fc <flight+0x1c0>)
                u8_t bytesWritten = AT25SEWritePage(currentAddress,pageToWrite);
    1178:	4d29      	ldr	r5, [pc, #164]	; (1220 <flight+0x1e4>)
    117a:	0352      	lsls	r2, r2, #13
    117c:	61da      	str	r2, [r3, #28]
    117e:	4929      	ldr	r1, [pc, #164]	; (1224 <flight+0x1e8>)
    1180:	4b29      	ldr	r3, [pc, #164]	; (1228 <flight+0x1ec>)
    1182:	6828      	ldr	r0, [r5, #0]
    1184:	4798      	blx	r3
                currentAddress = (currentAddress + 0x100);
    1186:	682b      	ldr	r3, [r5, #0]
    1188:	3301      	adds	r3, #1
    118a:	33ff      	adds	r3, #255	; 0xff
    118c:	602b      	str	r3, [r5, #0]
    118e:	e774      	b.n	107a <flight+0x3e>
        if (writeLog) {
    1190:	4b19      	ldr	r3, [pc, #100]	; (11f8 <flight+0x1bc>)
    1192:	781a      	ldrb	r2, [r3, #0]
    1194:	2a00      	cmp	r2, #0
    1196:	d100      	bne.n	119a <flight+0x15e>
    1198:	e76f      	b.n	107a <flight+0x3e>
            writeLog = false;
    119a:	2500      	movs	r5, #0
    119c:	701d      	strb	r5, [r3, #0]
            logSensors( );
    119e:	4b1e      	ldr	r3, [pc, #120]	; (1218 <flight+0x1dc>)
    11a0:	4798      	blx	r3
            if (pageReady) {
    11a2:	4b1e      	ldr	r3, [pc, #120]	; (121c <flight+0x1e0>)
    11a4:	781a      	ldrb	r2, [r3, #0]
    11a6:	42aa      	cmp	r2, r5
    11a8:	d100      	bne.n	11ac <flight+0x170>
    11aa:	e766      	b.n	107a <flight+0x3e>
                pageReady = false;
    11ac:	701d      	strb	r5, [r3, #0]
    11ae:	e7e1      	b.n	1174 <flight+0x138>
    if (flightState != flightStatrup & flightState != flightIdle & unplugged()) {
    11b0:	4b09      	ldr	r3, [pc, #36]	; (11d8 <flight+0x19c>)
    11b2:	4798      	blx	r3
    11b4:	e76e      	b.n	1094 <flight+0x58>
    11b6:	46c0      	nop			; (mov r8, r8)
    11b8:	20000654 	.word	0x20000654
    11bc:	00001235 	.word	0x00001235
    11c0:	00000f35 	.word	0x00000f35
    11c4:	200004fc 	.word	0x200004fc
    11c8:	00002710 	.word	0x00002710
    11cc:	0000212d 	.word	0x0000212d
    11d0:	00001e85 	.word	0x00001e85
    11d4:	00000ca9 	.word	0x00000ca9
    11d8:	00000b45 	.word	0x00000b45
    11dc:	00000b69 	.word	0x00000b69
    11e0:	00002659 	.word	0x00002659
    11e4:	00000ce1 	.word	0x00000ce1
    11e8:	42001400 	.word	0x42001400
    11ec:	00002649 	.word	0x00002649
    11f0:	05fa0004 	.word	0x05fa0004
    11f4:	e000ed00 	.word	0xe000ed00
    11f8:	200004f8 	.word	0x200004f8
    11fc:	41004400 	.word	0x41004400
    1200:	20000660 	.word	0x20000660
    1204:	9999999a 	.word	0x9999999a
    1208:	3fa99999 	.word	0x3fa99999
    120c:	00003985 	.word	0x00003985
    1210:	00000b11 	.word	0x00000b11
    1214:	00001ee1 	.word	0x00001ee1
    1218:	00001f35 	.word	0x00001f35
    121c:	20000788 	.word	0x20000788
    1220:	2000078c 	.word	0x2000078c
    1224:	20000688 	.word	0x20000688
    1228:	000002c9 	.word	0x000002c9
    122c:	0000395d 	.word	0x0000395d
    1230:	00000c71 	.word	0x00000c71

00001234 <updateGround>:
#include <util.h>
#include <altimeter.h>

void updateGround(Altimeter *my_altimeter) {
    1234:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

    offsets.gravityOffsetBuffer = offsets.gravityOffsetBuffer * 0.8 + sample.accelZ * 0.2;
    1236:	4c2b      	ldr	r4, [pc, #172]	; (12e4 <updateGround+0xb0>)
    1238:	4d2b      	ldr	r5, [pc, #172]	; (12e8 <updateGround+0xb4>)
    123a:	4a2c      	ldr	r2, [pc, #176]	; (12ec <updateGround+0xb8>)
    123c:	6920      	ldr	r0, [r4, #16]
    123e:	6961      	ldr	r1, [r4, #20]
    1240:	4b2b      	ldr	r3, [pc, #172]	; (12f0 <updateGround+0xbc>)
    1242:	47a8      	blx	r5
    1244:	4b2b      	ldr	r3, [pc, #172]	; (12f4 <updateGround+0xc0>)
    1246:	0006      	movs	r6, r0
    1248:	6a98      	ldr	r0, [r3, #40]	; 0x28
    124a:	4b2b      	ldr	r3, [pc, #172]	; (12f8 <updateGround+0xc4>)
    124c:	000f      	movs	r7, r1
    124e:	4798      	blx	r3
    1250:	4a26      	ldr	r2, [pc, #152]	; (12ec <updateGround+0xb8>)
    1252:	4b2a      	ldr	r3, [pc, #168]	; (12fc <updateGround+0xc8>)
    1254:	47a8      	blx	r5
    1256:	0002      	movs	r2, r0
    1258:	000b      	movs	r3, r1
    125a:	0030      	movs	r0, r6
    125c:	0039      	movs	r1, r7
    125e:	4e28      	ldr	r6, [pc, #160]	; (1300 <updateGround+0xcc>)
    1260:	47b0      	blx	r6
    offsets.groundOffsetBuffer = offsets.groundOffsetBuffer * 0.5 + altitude * 0.5;
    1262:	4e28      	ldr	r6, [pc, #160]	; (1304 <updateGround+0xd0>)
    offsets.gravityOffsetBuffer = offsets.gravityOffsetBuffer * 0.8 + sample.accelZ * 0.2;
    1264:	6120      	str	r0, [r4, #16]
    1266:	6161      	str	r1, [r4, #20]
    offsets.groundOffsetBuffer = offsets.groundOffsetBuffer * 0.5 + altitude * 0.5;
    1268:	69e0      	ldr	r0, [r4, #28]
    126a:	47b0      	blx	r6
    126c:	2200      	movs	r2, #0
    126e:	4b26      	ldr	r3, [pc, #152]	; (1308 <updateGround+0xd4>)
    1270:	47a8      	blx	r5
    1272:	9000      	str	r0, [sp, #0]
    1274:	9101      	str	r1, [sp, #4]
    1276:	4925      	ldr	r1, [pc, #148]	; (130c <updateGround+0xd8>)
    1278:	2200      	movs	r2, #0
    127a:	6808      	ldr	r0, [r1, #0]
    127c:	6849      	ldr	r1, [r1, #4]
    127e:	4b22      	ldr	r3, [pc, #136]	; (1308 <updateGround+0xd4>)
    1280:	47a8      	blx	r5
    1282:	4f1f      	ldr	r7, [pc, #124]	; (1300 <updateGround+0xcc>)
    1284:	0002      	movs	r2, r0
    1286:	000b      	movs	r3, r1
    1288:	9800      	ldr	r0, [sp, #0]
    128a:	9901      	ldr	r1, [sp, #4]
    128c:	47b8      	blx	r7
    128e:	4f20      	ldr	r7, [pc, #128]	; (1310 <updateGround+0xdc>)
    1290:	47b8      	blx	r7
    1292:	61e0      	str	r0, [r4, #28]
    offsets.groundTemperatureBuffer = offsets.groundTemperatureBuffer * 0.8 + sample.temperatureCelcus * 0.2;
    1294:	6a60      	ldr	r0, [r4, #36]	; 0x24
    1296:	47b0      	blx	r6
    1298:	4a14      	ldr	r2, [pc, #80]	; (12ec <updateGround+0xb8>)
    129a:	4b15      	ldr	r3, [pc, #84]	; (12f0 <updateGround+0xbc>)
    129c:	47a8      	blx	r5
    129e:	4b15      	ldr	r3, [pc, #84]	; (12f4 <updateGround+0xc0>)
    12a0:	9000      	str	r0, [sp, #0]
    12a2:	9101      	str	r1, [sp, #4]
    12a4:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
    12a6:	47b0      	blx	r6
    12a8:	4a10      	ldr	r2, [pc, #64]	; (12ec <updateGround+0xb8>)
    12aa:	4b14      	ldr	r3, [pc, #80]	; (12fc <updateGround+0xc8>)
    12ac:	47a8      	blx	r5
    12ae:	4d14      	ldr	r5, [pc, #80]	; (1300 <updateGround+0xcc>)
    12b0:	000b      	movs	r3, r1
    12b2:	0002      	movs	r2, r0
    12b4:	9800      	ldr	r0, [sp, #0]
    12b6:	9901      	ldr	r1, [sp, #4]
    12b8:	47a8      	blx	r5
    12ba:	47b8      	blx	r7

    if ((millis() - offsets.offsetBufferTime) > 2000) {
    12bc:	4d15      	ldr	r5, [pc, #84]	; (1314 <updateGround+0xe0>)
    offsets.groundTemperatureBuffer = offsets.groundTemperatureBuffer * 0.8 + sample.temperatureCelcus * 0.2;
    12be:	6260      	str	r0, [r4, #36]	; 0x24
    if ((millis() - offsets.offsetBufferTime) > 2000) {
    12c0:	47a8      	blx	r5
    12c2:	6823      	ldr	r3, [r4, #0]
    12c4:	1ac0      	subs	r0, r0, r3
    12c6:	23fa      	movs	r3, #250	; 0xfa
    12c8:	00db      	lsls	r3, r3, #3
    12ca:	4298      	cmp	r0, r3
    12cc:	d909      	bls.n	12e2 <updateGround+0xae>
        //recursive filter
        offsets.groundOffset = offsets.groundOffsetBuffer;
    12ce:	69e3      	ldr	r3, [r4, #28]
    12d0:	61a3      	str	r3, [r4, #24]
        offsets.groundTemperature = offsets.groundTemperatureBuffer;
    12d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
    12d4:	6223      	str	r3, [r4, #32]
        offsets.gravityOffset = offsets.gravityOffsetBuffer;
    12d6:	6922      	ldr	r2, [r4, #16]
    12d8:	6963      	ldr	r3, [r4, #20]
    12da:	60a2      	str	r2, [r4, #8]
    12dc:	60e3      	str	r3, [r4, #12]
        offsets.offsetBufferTime = millis();
    12de:	47a8      	blx	r5
    12e0:	6020      	str	r0, [r4, #0]
    }
}
    12e2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    12e4:	200004c8 	.word	0x200004c8
    12e8:	00005111 	.word	0x00005111
    12ec:	9999999a 	.word	0x9999999a
    12f0:	3fe99999 	.word	0x3fe99999
    12f4:	20000798 	.word	0x20000798
    12f8:	00005dd9 	.word	0x00005dd9
    12fc:	3fc99999 	.word	0x3fc99999
    1300:	00004289 	.word	0x00004289
    1304:	00005d69 	.word	0x00005d69
    1308:	3fe00000 	.word	0x3fe00000
    130c:	20000668 	.word	0x20000668
    1310:	00003aa5 	.word	0x00003aa5
    1314:	00000f35 	.word	0x00000f35

00001318 <computeKalmanGains>:
    /*
     Fill in state transition matrix and its transpose
    */
    phi[0][1]    = dt;
    phi[1][2]    = dt;
    phi[0][2]    = dt*dt/2.0;
    1318:	2208      	movs	r2, #8
    phi[0][1]    = dt;
    131a:	4bdd      	ldr	r3, [pc, #884]	; (1690 <computeKalmanGains+0x378>)
    131c:	48dd      	ldr	r0, [pc, #884]	; (1694 <computeKalmanGains+0x37c>)
    131e:	49de      	ldr	r1, [pc, #888]	; (1698 <computeKalmanGains+0x380>)
void computeKalmanGains() {
    1320:	b5f0      	push	{r4, r5, r6, r7, lr}
    phi[0][1]    = dt;
    1322:	6098      	str	r0, [r3, #8]
    1324:	60d9      	str	r1, [r3, #12]
    phi[1][2]    = dt;
    1326:	6298      	str	r0, [r3, #40]	; 0x28
    1328:	62d9      	str	r1, [r3, #44]	; 0x2c
    phi[0][2]    = dt*dt/2.0;
    132a:	48dc      	ldr	r0, [pc, #880]	; (169c <computeKalmanGains+0x384>)
    132c:	49dc      	ldr	r1, [pc, #880]	; (16a0 <computeKalmanGains+0x388>)
void computeKalmanGains() {
    132e:	b0cd      	sub	sp, #308	; 0x134
    phi[0][2]    = dt*dt/2.0;
    1330:	6118      	str	r0, [r3, #16]
    1332:	6159      	str	r1, [r3, #20]
    1334:	a940      	add	r1, sp, #256	; 0x100
    1336:	1857      	adds	r7, r2, r1



    for( i = 0; i <= 2; i++)
        for( j = 0; j <=1; j++) {
            lastkgain[i][j] = .001;
    1338:	003e      	movs	r6, r7
    133a:	48da      	ldr	r0, [pc, #872]	; (16a4 <computeKalmanGains+0x38c>)
    133c:	49da      	ldr	r1, [pc, #872]	; (16a8 <computeKalmanGains+0x390>)
    133e:	3e08      	subs	r6, #8
    1340:	6030      	str	r0, [r6, #0]
    1342:	6071      	str	r1, [r6, #4]
            kgain[i][j] = 1.0;
    1344:	2108      	movs	r1, #8
    1346:	4249      	negs	r1, r1
    1348:	468c      	mov	ip, r1
    134a:	4ed8      	ldr	r6, [pc, #864]	; (16ac <computeKalmanGains+0x394>)
    134c:	2400      	movs	r4, #0
    134e:	1996      	adds	r6, r2, r6
    1350:	44b4      	add	ip, r6
    1352:	4661      	mov	r1, ip
    1354:	4dd6      	ldr	r5, [pc, #856]	; (16b0 <computeKalmanGains+0x398>)
            lastkgain[i][j] = .001;
    1356:	48d3      	ldr	r0, [pc, #844]	; (16a4 <computeKalmanGains+0x38c>)
            kgain[i][j] = 1.0;
    1358:	600c      	str	r4, [r1, #0]
    135a:	604d      	str	r5, [r1, #4]
            lastkgain[i][j] = .001;
    135c:	49d2      	ldr	r1, [pc, #840]	; (16a8 <computeKalmanGains+0x390>)
    135e:	3210      	adds	r2, #16
    1360:	6038      	str	r0, [r7, #0]
    1362:	6079      	str	r1, [r7, #4]
            kgain[i][j] = 1.0;
    1364:	0020      	movs	r0, r4
    1366:	0029      	movs	r1, r5
    1368:	6030      	str	r0, [r6, #0]
    136a:	6071      	str	r1, [r6, #4]
    for( i = 0; i <= 2; i++)
    136c:	2a38      	cmp	r2, #56	; 0x38
    136e:	d1e1      	bne.n	1334 <computeKalmanGains+0x1c>

    /* Compute the Kalman gain matrix. */
    while(1) {
        /* Propagate state covariance */

        term[0][0] = phi[0][0] * pest[0][0] + phi[0][1] * pest[1][0] + phi[0][2] * pest[2][0];
    1370:	6819      	ldr	r1, [r3, #0]
    1372:	685a      	ldr	r2, [r3, #4]
    1374:	911a      	str	r1, [sp, #104]	; 0x68
    1376:	921b      	str	r2, [sp, #108]	; 0x6c
        term[0][1] = phi[0][0] * pest[0][1] + phi[0][1] * pest[1][1] + phi[0][2] * pest[2][1];
        term[0][2] = phi[0][0] * pest[0][2] + phi[0][1] * pest[1][2] + phi[0][2] * pest[2][2];
        term[1][0] = phi[1][0] * pest[0][0] + phi[1][1] * pest[1][0] + phi[1][2] * pest[2][0];
    1378:	6999      	ldr	r1, [r3, #24]
    137a:	69da      	ldr	r2, [r3, #28]
    137c:	911c      	str	r1, [sp, #112]	; 0x70
    137e:	921d      	str	r2, [sp, #116]	; 0x74
    1380:	6a19      	ldr	r1, [r3, #32]
    1382:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1384:	911e      	str	r1, [sp, #120]	; 0x78
    1386:	921f      	str	r2, [sp, #124]	; 0x7c
        term[1][1] = phi[1][0] * pest[0][1] + phi[1][1] * pest[1][1] + phi[1][2] * pest[2][1];
        term[1][2] = phi[1][0] * pest[0][2] + phi[1][1] * pest[1][2] + phi[1][2] * pest[2][2];
        term[2][0] = phi[2][0] * pest[0][0] + phi[2][1] * pest[1][0] + phi[2][2] * pest[2][0];
    1388:	6b19      	ldr	r1, [r3, #48]	; 0x30
    138a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    138c:	9120      	str	r1, [sp, #128]	; 0x80
    138e:	9221      	str	r2, [sp, #132]	; 0x84
    1390:	6b99      	ldr	r1, [r3, #56]	; 0x38
    1392:	6bda      	ldr	r2, [r3, #60]	; 0x3c
    1394:	9122      	str	r1, [sp, #136]	; 0x88
    1396:	9223      	str	r2, [sp, #140]	; 0x8c
    1398:	6c19      	ldr	r1, [r3, #64]	; 0x40
    139a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    139c:	9124      	str	r1, [sp, #144]	; 0x90
    139e:	9225      	str	r2, [sp, #148]	; 0x94
        pestp[1][2] = term[1][0] * phit[0][2] + term[1][1] * phit[1][2] + term[1][2] * phit[2][2];
        pestp[2][0] = term[2][0] * phit[0][0] + term[2][1] * phit[1][0] + term[2][2] * phit[2][0];
        pestp[2][1] = term[2][0] * phit[0][1] + term[2][1] * phit[1][1] + term[2][2] * phit[2][1];
        pestp[2][2] = term[2][0] * phit[0][2] + term[2][1] * phit[1][2] + term[2][2] * phit[2][2];

        pestp[2][2] = pestp[2][2] + model_variance;
    13a0:	6c99      	ldr	r1, [r3, #72]	; 0x48
    13a2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
    13a4:	913a      	str	r1, [sp, #232]	; 0xe8
    13a6:	923b      	str	r2, [sp, #236]	; 0xec
        /*
          Calculate Kalman Gain
        */
        det = (pestp[0][0]+altitude_variance)*(pestp[2][2] + acceleration_variance) - pestp[2][0] * pestp[0][2];
    13a8:	6d19      	ldr	r1, [r3, #80]	; 0x50
    13aa:	6d5a      	ldr	r2, [r3, #84]	; 0x54
    13ac:	6ddc      	ldr	r4, [r3, #92]	; 0x5c
    13ae:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    13b0:	933e      	str	r3, [sp, #248]	; 0xf8
    13b2:	943f      	str	r4, [sp, #252]	; 0xfc
    13b4:	2300      	movs	r3, #0
    13b6:	4cbf      	ldr	r4, [pc, #764]	; (16b4 <computeKalmanGains+0x39c>)
    13b8:	913c      	str	r1, [sp, #240]	; 0xf0
    13ba:	923d      	str	r2, [sp, #244]	; 0xf4
    13bc:	9302      	str	r3, [sp, #8]
    13be:	9403      	str	r4, [sp, #12]
    13c0:	2300      	movs	r3, #0
    13c2:	2400      	movs	r4, #0
    13c4:	9310      	str	r3, [sp, #64]	; 0x40
    13c6:	9411      	str	r4, [sp, #68]	; 0x44
    13c8:	9300      	str	r3, [sp, #0]
    13ca:	9401      	str	r4, [sp, #4]
    13cc:	9304      	str	r3, [sp, #16]
    13ce:	9405      	str	r4, [sp, #20]
    13d0:	2300      	movs	r3, #0
    13d2:	4cb8      	ldr	r4, [pc, #736]	; (16b4 <computeKalmanGains+0x39c>)
    13d4:	930e      	str	r3, [sp, #56]	; 0x38
    13d6:	940f      	str	r4, [sp, #60]	; 0x3c
    13d8:	2300      	movs	r3, #0
    13da:	2400      	movs	r4, #0
    13dc:	9308      	str	r3, [sp, #32]
    13de:	9409      	str	r4, [sp, #36]	; 0x24
    13e0:	930c      	str	r3, [sp, #48]	; 0x30
    13e2:	940d      	str	r4, [sp, #52]	; 0x34
    13e4:	930a      	str	r3, [sp, #40]	; 0x28
    13e6:	940b      	str	r4, [sp, #44]	; 0x2c
    13e8:	2480      	movs	r4, #128	; 0x80
    13ea:	2300      	movs	r3, #0
    13ec:	05e4      	lsls	r4, r4, #23
    13ee:	9306      	str	r3, [sp, #24]
    13f0:	9407      	str	r4, [sp, #28]
    13f2:	2300      	movs	r3, #0
    13f4:	9338      	str	r3, [sp, #224]	; 0xe0
        term[0][0] = phi[0][0] * pest[0][0] + phi[0][1] * pest[1][0] + phi[0][2] * pest[2][0];
    13f6:	4db0      	ldr	r5, [pc, #704]	; (16b8 <computeKalmanGains+0x3a0>)
    13f8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    13fa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    13fc:	9806      	ldr	r0, [sp, #24]
    13fe:	9907      	ldr	r1, [sp, #28]
    1400:	47a8      	blx	r5
    1402:	4aa4      	ldr	r2, [pc, #656]	; (1694 <computeKalmanGains+0x37c>)
    1404:	0006      	movs	r6, r0
    1406:	000f      	movs	r7, r1
    1408:	9808      	ldr	r0, [sp, #32]
    140a:	9909      	ldr	r1, [sp, #36]	; 0x24
    140c:	4ba2      	ldr	r3, [pc, #648]	; (1698 <computeKalmanGains+0x380>)
    140e:	47a8      	blx	r5
    1410:	4caa      	ldr	r4, [pc, #680]	; (16bc <computeKalmanGains+0x3a4>)
    1412:	0002      	movs	r2, r0
    1414:	000b      	movs	r3, r1
    1416:	0030      	movs	r0, r6
    1418:	0039      	movs	r1, r7
    141a:	47a0      	blx	r4
    141c:	4a9f      	ldr	r2, [pc, #636]	; (169c <computeKalmanGains+0x384>)
    141e:	0006      	movs	r6, r0
    1420:	000f      	movs	r7, r1
    1422:	9800      	ldr	r0, [sp, #0]
    1424:	9901      	ldr	r1, [sp, #4]
    1426:	4b9e      	ldr	r3, [pc, #632]	; (16a0 <computeKalmanGains+0x388>)
    1428:	47a8      	blx	r5
    142a:	0002      	movs	r2, r0
    142c:	000b      	movs	r3, r1
    142e:	0030      	movs	r0, r6
    1430:	0039      	movs	r1, r7
    1432:	47a0      	blx	r4
        term[0][1] = phi[0][0] * pest[0][1] + phi[0][1] * pest[1][1] + phi[0][2] * pest[2][1];
    1434:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    1436:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
        term[0][0] = phi[0][0] * pest[0][0] + phi[0][1] * pest[1][0] + phi[0][2] * pest[2][0];
    1438:	9016      	str	r0, [sp, #88]	; 0x58
    143a:	9117      	str	r1, [sp, #92]	; 0x5c
        term[0][1] = phi[0][0] * pest[0][1] + phi[0][1] * pest[1][1] + phi[0][2] * pest[2][1];
    143c:	980a      	ldr	r0, [sp, #40]	; 0x28
    143e:	990b      	ldr	r1, [sp, #44]	; 0x2c
    1440:	47a8      	blx	r5
    1442:	4a94      	ldr	r2, [pc, #592]	; (1694 <computeKalmanGains+0x37c>)
    1444:	0006      	movs	r6, r0
    1446:	000f      	movs	r7, r1
    1448:	980e      	ldr	r0, [sp, #56]	; 0x38
    144a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    144c:	4b92      	ldr	r3, [pc, #584]	; (1698 <computeKalmanGains+0x380>)
    144e:	47a8      	blx	r5
    1450:	0002      	movs	r2, r0
    1452:	000b      	movs	r3, r1
    1454:	0030      	movs	r0, r6
    1456:	0039      	movs	r1, r7
    1458:	47a0      	blx	r4
    145a:	4a90      	ldr	r2, [pc, #576]	; (169c <computeKalmanGains+0x384>)
    145c:	0006      	movs	r6, r0
    145e:	000f      	movs	r7, r1
    1460:	9810      	ldr	r0, [sp, #64]	; 0x40
    1462:	9911      	ldr	r1, [sp, #68]	; 0x44
    1464:	4b8e      	ldr	r3, [pc, #568]	; (16a0 <computeKalmanGains+0x388>)
    1466:	47a8      	blx	r5
    1468:	0002      	movs	r2, r0
    146a:	000b      	movs	r3, r1
    146c:	0030      	movs	r0, r6
    146e:	0039      	movs	r1, r7
    1470:	47a0      	blx	r4
        term[0][2] = phi[0][0] * pest[0][2] + phi[0][1] * pest[1][2] + phi[0][2] * pest[2][2];
    1472:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    1474:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
        term[0][1] = phi[0][0] * pest[0][1] + phi[0][1] * pest[1][1] + phi[0][2] * pest[2][1];
    1476:	9012      	str	r0, [sp, #72]	; 0x48
    1478:	9113      	str	r1, [sp, #76]	; 0x4c
        term[0][2] = phi[0][0] * pest[0][2] + phi[0][1] * pest[1][2] + phi[0][2] * pest[2][2];
    147a:	980c      	ldr	r0, [sp, #48]	; 0x30
    147c:	990d      	ldr	r1, [sp, #52]	; 0x34
    147e:	47a8      	blx	r5
    1480:	4a84      	ldr	r2, [pc, #528]	; (1694 <computeKalmanGains+0x37c>)
    1482:	0006      	movs	r6, r0
    1484:	000f      	movs	r7, r1
    1486:	9804      	ldr	r0, [sp, #16]
    1488:	9905      	ldr	r1, [sp, #20]
    148a:	4b83      	ldr	r3, [pc, #524]	; (1698 <computeKalmanGains+0x380>)
    148c:	47a8      	blx	r5
    148e:	0002      	movs	r2, r0
    1490:	000b      	movs	r3, r1
    1492:	0030      	movs	r0, r6
    1494:	0039      	movs	r1, r7
    1496:	47a0      	blx	r4
    1498:	4a80      	ldr	r2, [pc, #512]	; (169c <computeKalmanGains+0x384>)
    149a:	0006      	movs	r6, r0
    149c:	000f      	movs	r7, r1
    149e:	9802      	ldr	r0, [sp, #8]
    14a0:	9903      	ldr	r1, [sp, #12]
    14a2:	4b7f      	ldr	r3, [pc, #508]	; (16a0 <computeKalmanGains+0x388>)
    14a4:	47a8      	blx	r5
    14a6:	0002      	movs	r2, r0
    14a8:	000b      	movs	r3, r1
    14aa:	0030      	movs	r0, r6
    14ac:	0039      	movs	r1, r7
    14ae:	47a0      	blx	r4
        term[1][0] = phi[1][0] * pest[0][0] + phi[1][1] * pest[1][0] + phi[1][2] * pest[2][0];
    14b0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    14b2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
        term[0][2] = phi[0][0] * pest[0][2] + phi[0][1] * pest[1][2] + phi[0][2] * pest[2][2];
    14b4:	9014      	str	r0, [sp, #80]	; 0x50
    14b6:	9115      	str	r1, [sp, #84]	; 0x54
        term[1][0] = phi[1][0] * pest[0][0] + phi[1][1] * pest[1][0] + phi[1][2] * pest[2][0];
    14b8:	9806      	ldr	r0, [sp, #24]
    14ba:	9907      	ldr	r1, [sp, #28]
    14bc:	47a8      	blx	r5
    14be:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    14c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    14c2:	0006      	movs	r6, r0
    14c4:	000f      	movs	r7, r1
    14c6:	9808      	ldr	r0, [sp, #32]
    14c8:	9909      	ldr	r1, [sp, #36]	; 0x24
    14ca:	47a8      	blx	r5
    14cc:	0002      	movs	r2, r0
    14ce:	000b      	movs	r3, r1
    14d0:	0030      	movs	r0, r6
    14d2:	0039      	movs	r1, r7
    14d4:	47a0      	blx	r4
    14d6:	4a6f      	ldr	r2, [pc, #444]	; (1694 <computeKalmanGains+0x37c>)
    14d8:	0006      	movs	r6, r0
    14da:	000f      	movs	r7, r1
    14dc:	9800      	ldr	r0, [sp, #0]
    14de:	9901      	ldr	r1, [sp, #4]
    14e0:	4b6d      	ldr	r3, [pc, #436]	; (1698 <computeKalmanGains+0x380>)
    14e2:	47a8      	blx	r5
    14e4:	0002      	movs	r2, r0
    14e6:	000b      	movs	r3, r1
    14e8:	0030      	movs	r0, r6
    14ea:	0039      	movs	r1, r7
    14ec:	47a0      	blx	r4
        term[1][1] = phi[1][0] * pest[0][1] + phi[1][1] * pest[1][1] + phi[1][2] * pest[2][1];
    14ee:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    14f0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
        term[1][0] = phi[1][0] * pest[0][0] + phi[1][1] * pest[1][0] + phi[1][2] * pest[2][0];
    14f2:	9018      	str	r0, [sp, #96]	; 0x60
    14f4:	9119      	str	r1, [sp, #100]	; 0x64
        term[1][1] = phi[1][0] * pest[0][1] + phi[1][1] * pest[1][1] + phi[1][2] * pest[2][1];
    14f6:	980a      	ldr	r0, [sp, #40]	; 0x28
    14f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
    14fa:	47a8      	blx	r5
    14fc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    14fe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    1500:	0006      	movs	r6, r0
    1502:	000f      	movs	r7, r1
    1504:	980e      	ldr	r0, [sp, #56]	; 0x38
    1506:	990f      	ldr	r1, [sp, #60]	; 0x3c
    1508:	47a8      	blx	r5
    150a:	0002      	movs	r2, r0
    150c:	000b      	movs	r3, r1
    150e:	0030      	movs	r0, r6
    1510:	0039      	movs	r1, r7
    1512:	47a0      	blx	r4
    1514:	4a5f      	ldr	r2, [pc, #380]	; (1694 <computeKalmanGains+0x37c>)
    1516:	0006      	movs	r6, r0
    1518:	000f      	movs	r7, r1
    151a:	9810      	ldr	r0, [sp, #64]	; 0x40
    151c:	9911      	ldr	r1, [sp, #68]	; 0x44
    151e:	4b5e      	ldr	r3, [pc, #376]	; (1698 <computeKalmanGains+0x380>)
    1520:	47a8      	blx	r5
    1522:	0002      	movs	r2, r0
    1524:	000b      	movs	r3, r1
    1526:	0030      	movs	r0, r6
    1528:	0039      	movs	r1, r7
    152a:	47a0      	blx	r4
        term[1][2] = phi[1][0] * pest[0][2] + phi[1][1] * pest[1][2] + phi[1][2] * pest[2][2];
    152c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    152e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
        term[1][1] = phi[1][0] * pest[0][1] + phi[1][1] * pest[1][1] + phi[1][2] * pest[2][1];
    1530:	9026      	str	r0, [sp, #152]	; 0x98
    1532:	9127      	str	r1, [sp, #156]	; 0x9c
        term[1][2] = phi[1][0] * pest[0][2] + phi[1][1] * pest[1][2] + phi[1][2] * pest[2][2];
    1534:	980c      	ldr	r0, [sp, #48]	; 0x30
    1536:	990d      	ldr	r1, [sp, #52]	; 0x34
    1538:	47a8      	blx	r5
    153a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    153c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    153e:	0006      	movs	r6, r0
    1540:	000f      	movs	r7, r1
    1542:	9804      	ldr	r0, [sp, #16]
    1544:	9905      	ldr	r1, [sp, #20]
    1546:	47a8      	blx	r5
    1548:	0002      	movs	r2, r0
    154a:	000b      	movs	r3, r1
    154c:	0030      	movs	r0, r6
    154e:	0039      	movs	r1, r7
    1550:	47a0      	blx	r4
    1552:	4a50      	ldr	r2, [pc, #320]	; (1694 <computeKalmanGains+0x37c>)
    1554:	0006      	movs	r6, r0
    1556:	000f      	movs	r7, r1
    1558:	9802      	ldr	r0, [sp, #8]
    155a:	9903      	ldr	r1, [sp, #12]
    155c:	4b4e      	ldr	r3, [pc, #312]	; (1698 <computeKalmanGains+0x380>)
    155e:	47a8      	blx	r5
    1560:	0002      	movs	r2, r0
    1562:	000b      	movs	r3, r1
    1564:	0030      	movs	r0, r6
    1566:	0039      	movs	r1, r7
    1568:	47a0      	blx	r4
        term[2][0] = phi[2][0] * pest[0][0] + phi[2][1] * pest[1][0] + phi[2][2] * pest[2][0];
    156a:	9a20      	ldr	r2, [sp, #128]	; 0x80
    156c:	9b21      	ldr	r3, [sp, #132]	; 0x84
        term[1][2] = phi[1][0] * pest[0][2] + phi[1][1] * pest[1][2] + phi[1][2] * pest[2][2];
    156e:	9028      	str	r0, [sp, #160]	; 0xa0
    1570:	9129      	str	r1, [sp, #164]	; 0xa4
        term[2][0] = phi[2][0] * pest[0][0] + phi[2][1] * pest[1][0] + phi[2][2] * pest[2][0];
    1572:	9806      	ldr	r0, [sp, #24]
    1574:	9907      	ldr	r1, [sp, #28]
    1576:	47a8      	blx	r5
    1578:	9a22      	ldr	r2, [sp, #136]	; 0x88
    157a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    157c:	0006      	movs	r6, r0
    157e:	000f      	movs	r7, r1
    1580:	9808      	ldr	r0, [sp, #32]
    1582:	9909      	ldr	r1, [sp, #36]	; 0x24
    1584:	47a8      	blx	r5
    1586:	0002      	movs	r2, r0
    1588:	000b      	movs	r3, r1
    158a:	0030      	movs	r0, r6
    158c:	0039      	movs	r1, r7
    158e:	47a0      	blx	r4
    1590:	9a24      	ldr	r2, [sp, #144]	; 0x90
    1592:	9b25      	ldr	r3, [sp, #148]	; 0x94
    1594:	0006      	movs	r6, r0
    1596:	000f      	movs	r7, r1
    1598:	9800      	ldr	r0, [sp, #0]
    159a:	9901      	ldr	r1, [sp, #4]
    159c:	47a8      	blx	r5
    159e:	0002      	movs	r2, r0
    15a0:	000b      	movs	r3, r1
    15a2:	0030      	movs	r0, r6
    15a4:	0039      	movs	r1, r7
    15a6:	47a0      	blx	r4
        term[2][1] = phi[2][0] * pest[0][1] + phi[2][1] * pest[1][1] + phi[2][2] * pest[2][1];
    15a8:	9a20      	ldr	r2, [sp, #128]	; 0x80
    15aa:	9b21      	ldr	r3, [sp, #132]	; 0x84
        term[2][0] = phi[2][0] * pest[0][0] + phi[2][1] * pest[1][0] + phi[2][2] * pest[2][0];
    15ac:	902e      	str	r0, [sp, #184]	; 0xb8
    15ae:	912f      	str	r1, [sp, #188]	; 0xbc
        term[2][1] = phi[2][0] * pest[0][1] + phi[2][1] * pest[1][1] + phi[2][2] * pest[2][1];
    15b0:	980a      	ldr	r0, [sp, #40]	; 0x28
    15b2:	990b      	ldr	r1, [sp, #44]	; 0x2c
    15b4:	47a8      	blx	r5
    15b6:	9a22      	ldr	r2, [sp, #136]	; 0x88
    15b8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    15ba:	0006      	movs	r6, r0
    15bc:	000f      	movs	r7, r1
    15be:	980e      	ldr	r0, [sp, #56]	; 0x38
    15c0:	990f      	ldr	r1, [sp, #60]	; 0x3c
    15c2:	47a8      	blx	r5
    15c4:	0002      	movs	r2, r0
    15c6:	000b      	movs	r3, r1
    15c8:	0030      	movs	r0, r6
    15ca:	0039      	movs	r1, r7
    15cc:	47a0      	blx	r4
    15ce:	9a24      	ldr	r2, [sp, #144]	; 0x90
    15d0:	9b25      	ldr	r3, [sp, #148]	; 0x94
    15d2:	0006      	movs	r6, r0
    15d4:	000f      	movs	r7, r1
    15d6:	9810      	ldr	r0, [sp, #64]	; 0x40
    15d8:	9911      	ldr	r1, [sp, #68]	; 0x44
    15da:	47a8      	blx	r5
    15dc:	0002      	movs	r2, r0
    15de:	000b      	movs	r3, r1
    15e0:	0030      	movs	r0, r6
    15e2:	0039      	movs	r1, r7
    15e4:	47a0      	blx	r4
        term[2][2] = phi[2][0] * pest[0][2] + phi[2][1] * pest[1][2] + phi[2][2] * pest[2][2];
    15e6:	9a20      	ldr	r2, [sp, #128]	; 0x80
    15e8:	9b21      	ldr	r3, [sp, #132]	; 0x84
        term[2][1] = phi[2][0] * pest[0][1] + phi[2][1] * pest[1][1] + phi[2][2] * pest[2][1];
    15ea:	9006      	str	r0, [sp, #24]
    15ec:	9107      	str	r1, [sp, #28]
        term[2][2] = phi[2][0] * pest[0][2] + phi[2][1] * pest[1][2] + phi[2][2] * pest[2][2];
    15ee:	980c      	ldr	r0, [sp, #48]	; 0x30
    15f0:	990d      	ldr	r1, [sp, #52]	; 0x34
    15f2:	47a8      	blx	r5
    15f4:	9a22      	ldr	r2, [sp, #136]	; 0x88
    15f6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    15f8:	0006      	movs	r6, r0
    15fa:	000f      	movs	r7, r1
    15fc:	9804      	ldr	r0, [sp, #16]
    15fe:	9905      	ldr	r1, [sp, #20]
    1600:	47a8      	blx	r5
    1602:	0002      	movs	r2, r0
    1604:	000b      	movs	r3, r1
    1606:	0030      	movs	r0, r6
    1608:	0039      	movs	r1, r7
    160a:	47a0      	blx	r4
    160c:	9a24      	ldr	r2, [sp, #144]	; 0x90
    160e:	9b25      	ldr	r3, [sp, #148]	; 0x94
    1610:	0006      	movs	r6, r0
    1612:	000f      	movs	r7, r1
    1614:	9802      	ldr	r0, [sp, #8]
    1616:	9903      	ldr	r1, [sp, #12]
    1618:	47a8      	blx	r5
    161a:	0002      	movs	r2, r0
    161c:	000b      	movs	r3, r1
    161e:	0030      	movs	r0, r6
    1620:	0039      	movs	r1, r7
    1622:	47a0      	blx	r4
        pestp[0][0] = term[0][0] * phit[0][0] + term[0][1] * phit[1][0] + term[0][2] * phit[2][0];
    1624:	4a1b      	ldr	r2, [pc, #108]	; (1694 <computeKalmanGains+0x37c>)
        term[2][2] = phi[2][0] * pest[0][2] + phi[2][1] * pest[1][2] + phi[2][2] * pest[2][2];
    1626:	9002      	str	r0, [sp, #8]
    1628:	9103      	str	r1, [sp, #12]
        pestp[0][0] = term[0][0] * phit[0][0] + term[0][1] * phit[1][0] + term[0][2] * phit[2][0];
    162a:	9812      	ldr	r0, [sp, #72]	; 0x48
    162c:	9913      	ldr	r1, [sp, #76]	; 0x4c
    162e:	4b1a      	ldr	r3, [pc, #104]	; (1698 <computeKalmanGains+0x380>)
    1630:	47a8      	blx	r5
    1632:	9a16      	ldr	r2, [sp, #88]	; 0x58
    1634:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    1636:	47a0      	blx	r4
    1638:	4a18      	ldr	r2, [pc, #96]	; (169c <computeKalmanGains+0x384>)
    163a:	0006      	movs	r6, r0
    163c:	000f      	movs	r7, r1
    163e:	9814      	ldr	r0, [sp, #80]	; 0x50
    1640:	9915      	ldr	r1, [sp, #84]	; 0x54
    1642:	4b17      	ldr	r3, [pc, #92]	; (16a0 <computeKalmanGains+0x388>)
    1644:	47a8      	blx	r5
    1646:	0002      	movs	r2, r0
    1648:	000b      	movs	r3, r1
    164a:	0030      	movs	r0, r6
    164c:	0039      	movs	r1, r7
    164e:	47a0      	blx	r4
        pestp[0][1] = term[0][0] * phit[0][1] + term[0][1] * phit[1][1] + term[0][2] * phit[2][1];
    1650:	2200      	movs	r2, #0
        pestp[0][0] = term[0][0] * phit[0][0] + term[0][1] * phit[1][0] + term[0][2] * phit[2][0];
    1652:	9008      	str	r0, [sp, #32]
    1654:	9109      	str	r1, [sp, #36]	; 0x24
        pestp[0][1] = term[0][0] * phit[0][1] + term[0][1] * phit[1][1] + term[0][2] * phit[2][1];
    1656:	9816      	ldr	r0, [sp, #88]	; 0x58
    1658:	9917      	ldr	r1, [sp, #92]	; 0x5c
    165a:	2300      	movs	r3, #0
    165c:	47a8      	blx	r5
    165e:	0006      	movs	r6, r0
    1660:	000f      	movs	r7, r1
    1662:	0002      	movs	r2, r0
    1664:	000b      	movs	r3, r1
    1666:	9812      	ldr	r0, [sp, #72]	; 0x48
    1668:	9913      	ldr	r1, [sp, #76]	; 0x4c
    166a:	47a0      	blx	r4
    166c:	4a09      	ldr	r2, [pc, #36]	; (1694 <computeKalmanGains+0x37c>)
    166e:	9000      	str	r0, [sp, #0]
    1670:	9101      	str	r1, [sp, #4]
    1672:	9814      	ldr	r0, [sp, #80]	; 0x50
    1674:	9915      	ldr	r1, [sp, #84]	; 0x54
    1676:	4b08      	ldr	r3, [pc, #32]	; (1698 <computeKalmanGains+0x380>)
    1678:	47a8      	blx	r5
    167a:	0002      	movs	r2, r0
    167c:	000b      	movs	r3, r1
    167e:	9800      	ldr	r0, [sp, #0]
    1680:	9901      	ldr	r1, [sp, #4]
    1682:	47a0      	blx	r4
        pestp[0][2] = term[0][0] * phit[0][2] + term[0][1] * phit[1][2] + term[0][2] * phit[2][2];
    1684:	2200      	movs	r2, #0
        pestp[0][1] = term[0][0] * phit[0][1] + term[0][1] * phit[1][1] + term[0][2] * phit[2][1];
    1686:	9030      	str	r0, [sp, #192]	; 0xc0
    1688:	9131      	str	r1, [sp, #196]	; 0xc4
        pestp[0][2] = term[0][0] * phit[0][2] + term[0][1] * phit[1][2] + term[0][2] * phit[2][2];
    168a:	9812      	ldr	r0, [sp, #72]	; 0x48
    168c:	9913      	ldr	r1, [sp, #76]	; 0x4c
    168e:	e017      	b.n	16c0 <computeKalmanGains+0x3a8>
    1690:	20000010 	.word	0x20000010
    1694:	47ae147b 	.word	0x47ae147b
    1698:	3f747ae1 	.word	0x3f747ae1
    169c:	eb1c432d 	.word	0xeb1c432d
    16a0:	3eea36e2 	.word	0x3eea36e2
    16a4:	d2f1a9fc 	.word	0xd2f1a9fc
    16a8:	3f50624d 	.word	0x3f50624d
    16ac:	20000620 	.word	0x20000620
    16b0:	3ff00000 	.word	0x3ff00000
    16b4:	40220000 	.word	0x40220000
    16b8:	00005111 	.word	0x00005111
    16bc:	00004289 	.word	0x00004289
    16c0:	2300      	movs	r3, #0
    16c2:	47a8      	blx	r5
    16c4:	0032      	movs	r2, r6
    16c6:	003b      	movs	r3, r7
    16c8:	47a0      	blx	r4
    16ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
    16cc:	9b15      	ldr	r3, [sp, #84]	; 0x54
    16ce:	47a0      	blx	r4
        pestp[1][0] = term[1][0] * phit[0][0] + term[1][1] * phit[1][0] + term[1][2] * phit[2][0];
    16d0:	4ad9      	ldr	r2, [pc, #868]	; (1a38 <computeKalmanGains+0x720>)
        pestp[0][2] = term[0][0] * phit[0][2] + term[0][1] * phit[1][2] + term[0][2] * phit[2][2];
    16d2:	9112      	str	r1, [sp, #72]	; 0x48
    16d4:	9004      	str	r0, [sp, #16]
    16d6:	9116      	str	r1, [sp, #88]	; 0x58
        pestp[1][0] = term[1][0] * phit[0][0] + term[1][1] * phit[1][0] + term[1][2] * phit[2][0];
    16d8:	4bd8      	ldr	r3, [pc, #864]	; (1a3c <computeKalmanGains+0x724>)
    16da:	9826      	ldr	r0, [sp, #152]	; 0x98
    16dc:	9927      	ldr	r1, [sp, #156]	; 0x9c
    16de:	47a8      	blx	r5
    16e0:	9a18      	ldr	r2, [sp, #96]	; 0x60
    16e2:	9b19      	ldr	r3, [sp, #100]	; 0x64
    16e4:	47a0      	blx	r4
    16e6:	4ad6      	ldr	r2, [pc, #856]	; (1a40 <computeKalmanGains+0x728>)
    16e8:	0006      	movs	r6, r0
    16ea:	000f      	movs	r7, r1
    16ec:	9828      	ldr	r0, [sp, #160]	; 0xa0
    16ee:	9929      	ldr	r1, [sp, #164]	; 0xa4
    16f0:	4bd4      	ldr	r3, [pc, #848]	; (1a44 <computeKalmanGains+0x72c>)
    16f2:	47a8      	blx	r5
    16f4:	0002      	movs	r2, r0
    16f6:	000b      	movs	r3, r1
    16f8:	0030      	movs	r0, r6
    16fa:	0039      	movs	r1, r7
    16fc:	47a0      	blx	r4
        pestp[1][1] = term[1][0] * phit[0][1] + term[1][1] * phit[1][1] + term[1][2] * phit[2][1];
    16fe:	2200      	movs	r2, #0
        pestp[1][0] = term[1][0] * phit[0][0] + term[1][1] * phit[1][0] + term[1][2] * phit[2][0];
    1700:	902a      	str	r0, [sp, #168]	; 0xa8
    1702:	912b      	str	r1, [sp, #172]	; 0xac
        pestp[1][1] = term[1][0] * phit[0][1] + term[1][1] * phit[1][1] + term[1][2] * phit[2][1];
    1704:	9818      	ldr	r0, [sp, #96]	; 0x60
    1706:	9919      	ldr	r1, [sp, #100]	; 0x64
    1708:	2300      	movs	r3, #0
    170a:	47a8      	blx	r5
        pestp[1][2] = term[1][0] * phit[0][2] + term[1][1] * phit[1][2] + term[1][2] * phit[2][2];
    170c:	2200      	movs	r2, #0
        pestp[1][1] = term[1][0] * phit[0][1] + term[1][1] * phit[1][1] + term[1][2] * phit[2][1];
    170e:	9032      	str	r0, [sp, #200]	; 0xc8
    1710:	9133      	str	r1, [sp, #204]	; 0xcc
        pestp[1][2] = term[1][0] * phit[0][2] + term[1][1] * phit[1][2] + term[1][2] * phit[2][2];
    1712:	9826      	ldr	r0, [sp, #152]	; 0x98
    1714:	9927      	ldr	r1, [sp, #156]	; 0x9c
    1716:	2300      	movs	r3, #0
    1718:	47a8      	blx	r5
    171a:	9a32      	ldr	r2, [sp, #200]	; 0xc8
    171c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
    171e:	47a0      	blx	r4
    1720:	9a28      	ldr	r2, [sp, #160]	; 0xa0
    1722:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    1724:	47a0      	blx	r4
        pestp[2][0] = term[2][0] * phit[0][0] + term[2][1] * phit[1][0] + term[2][2] * phit[2][0];
    1726:	4ac4      	ldr	r2, [pc, #784]	; (1a38 <computeKalmanGains+0x720>)
        pestp[1][2] = term[1][0] * phit[0][2] + term[1][1] * phit[1][2] + term[1][2] * phit[2][2];
    1728:	902c      	str	r0, [sp, #176]	; 0xb0
    172a:	912d      	str	r1, [sp, #180]	; 0xb4
        pestp[2][0] = term[2][0] * phit[0][0] + term[2][1] * phit[1][0] + term[2][2] * phit[2][0];
    172c:	9806      	ldr	r0, [sp, #24]
    172e:	9907      	ldr	r1, [sp, #28]
    1730:	4bc2      	ldr	r3, [pc, #776]	; (1a3c <computeKalmanGains+0x724>)
    1732:	47a8      	blx	r5
    1734:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
    1736:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
    1738:	47a0      	blx	r4
    173a:	4ac1      	ldr	r2, [pc, #772]	; (1a40 <computeKalmanGains+0x728>)
    173c:	0006      	movs	r6, r0
    173e:	000f      	movs	r7, r1
    1740:	9802      	ldr	r0, [sp, #8]
    1742:	9903      	ldr	r1, [sp, #12]
    1744:	4bbf      	ldr	r3, [pc, #764]	; (1a44 <computeKalmanGains+0x72c>)
    1746:	47a8      	blx	r5
    1748:	0002      	movs	r2, r0
    174a:	000b      	movs	r3, r1
    174c:	0030      	movs	r0, r6
    174e:	0039      	movs	r1, r7
    1750:	47a0      	blx	r4
        pestp[2][1] = term[2][0] * phit[0][1] + term[2][1] * phit[1][1] + term[2][2] * phit[2][1];
    1752:	2200      	movs	r2, #0
        pestp[2][0] = term[2][0] * phit[0][0] + term[2][1] * phit[1][0] + term[2][2] * phit[2][0];
    1754:	9000      	str	r0, [sp, #0]
    1756:	9101      	str	r1, [sp, #4]
        pestp[2][1] = term[2][0] * phit[0][1] + term[2][1] * phit[1][1] + term[2][2] * phit[2][1];
    1758:	982e      	ldr	r0, [sp, #184]	; 0xb8
    175a:	992f      	ldr	r1, [sp, #188]	; 0xbc
    175c:	2300      	movs	r3, #0
    175e:	47a8      	blx	r5
    1760:	0006      	movs	r6, r0
    1762:	000f      	movs	r7, r1
    1764:	0002      	movs	r2, r0
    1766:	000b      	movs	r3, r1
    1768:	9806      	ldr	r0, [sp, #24]
    176a:	9907      	ldr	r1, [sp, #28]
    176c:	47a0      	blx	r4
    176e:	4ab2      	ldr	r2, [pc, #712]	; (1a38 <computeKalmanGains+0x720>)
    1770:	900a      	str	r0, [sp, #40]	; 0x28
    1772:	910b      	str	r1, [sp, #44]	; 0x2c
    1774:	9802      	ldr	r0, [sp, #8]
    1776:	9903      	ldr	r1, [sp, #12]
    1778:	4bb0      	ldr	r3, [pc, #704]	; (1a3c <computeKalmanGains+0x724>)
    177a:	47a8      	blx	r5
    177c:	0002      	movs	r2, r0
    177e:	000b      	movs	r3, r1
    1780:	980a      	ldr	r0, [sp, #40]	; 0x28
    1782:	990b      	ldr	r1, [sp, #44]	; 0x2c
    1784:	47a0      	blx	r4
        pestp[2][2] = term[2][0] * phit[0][2] + term[2][1] * phit[1][2] + term[2][2] * phit[2][2];
    1786:	2200      	movs	r2, #0
        pestp[2][1] = term[2][0] * phit[0][1] + term[2][1] * phit[1][1] + term[2][2] * phit[2][1];
    1788:	9010      	str	r0, [sp, #64]	; 0x40
    178a:	9111      	str	r1, [sp, #68]	; 0x44
        pestp[2][2] = term[2][0] * phit[0][2] + term[2][1] * phit[1][2] + term[2][2] * phit[2][2];
    178c:	9806      	ldr	r0, [sp, #24]
    178e:	9907      	ldr	r1, [sp, #28]
    1790:	2300      	movs	r3, #0
    1792:	47a8      	blx	r5
    1794:	0032      	movs	r2, r6
    1796:	003b      	movs	r3, r7
    1798:	47a0      	blx	r4
    179a:	9a02      	ldr	r2, [sp, #8]
    179c:	9b03      	ldr	r3, [sp, #12]
    179e:	47a0      	blx	r4
        pestp[2][2] = pestp[2][2] + model_variance;
    17a0:	9a3a      	ldr	r2, [sp, #232]	; 0xe8
    17a2:	9b3b      	ldr	r3, [sp, #236]	; 0xec
    17a4:	47a0      	blx	r4
        det = (pestp[0][0]+altitude_variance)*(pestp[2][2] + acceleration_variance) - pestp[2][0] * pestp[0][2];
    17a6:	9a3c      	ldr	r2, [sp, #240]	; 0xf0
    17a8:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
        pestp[2][2] = pestp[2][2] + model_variance;
    17aa:	9002      	str	r0, [sp, #8]
    17ac:	9103      	str	r1, [sp, #12]
        det = (pestp[0][0]+altitude_variance)*(pestp[2][2] + acceleration_variance) - pestp[2][0] * pestp[0][2];
    17ae:	9808      	ldr	r0, [sp, #32]
    17b0:	9909      	ldr	r1, [sp, #36]	; 0x24
    17b2:	47a0      	blx	r4
    17b4:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
    17b6:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
    17b8:	900a      	str	r0, [sp, #40]	; 0x28
    17ba:	910b      	str	r1, [sp, #44]	; 0x2c
    17bc:	9802      	ldr	r0, [sp, #8]
    17be:	9903      	ldr	r1, [sp, #12]
    17c0:	47a0      	blx	r4
    17c2:	9a00      	ldr	r2, [sp, #0]
    17c4:	9b01      	ldr	r3, [sp, #4]
    17c6:	900c      	str	r0, [sp, #48]	; 0x30
    17c8:	910d      	str	r1, [sp, #52]	; 0x34
    17ca:	9804      	ldr	r0, [sp, #16]
    17cc:	9916      	ldr	r1, [sp, #88]	; 0x58
    17ce:	47a8      	blx	r5
    17d0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    17d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    17d4:	900e      	str	r0, [sp, #56]	; 0x38
    17d6:	910f      	str	r1, [sp, #60]	; 0x3c
    17d8:	980a      	ldr	r0, [sp, #40]	; 0x28
    17da:	990b      	ldr	r1, [sp, #44]	; 0x2c
    17dc:	47a8      	blx	r5
    17de:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    17e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    17e2:	4e99      	ldr	r6, [pc, #612]	; (1a48 <computeKalmanGains+0x730>)
    17e4:	47b0      	blx	r6


        kgain[0][0] = (pestp[0][0] * (pestp[2][2] + acceleration_variance) - pestp[0][2] * pestp[2][0])/det;
    17e6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    17e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
        det = (pestp[0][0]+altitude_variance)*(pestp[2][2] + acceleration_variance) - pestp[2][0] * pestp[0][2];
    17ea:	9006      	str	r0, [sp, #24]
    17ec:	9107      	str	r1, [sp, #28]
        kgain[0][0] = (pestp[0][0] * (pestp[2][2] + acceleration_variance) - pestp[0][2] * pestp[2][0])/det;
    17ee:	9808      	ldr	r0, [sp, #32]
    17f0:	9909      	ldr	r1, [sp, #36]	; 0x24
    17f2:	47a8      	blx	r5
    17f4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    17f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    17f8:	47b0      	blx	r6
    17fa:	9a06      	ldr	r2, [sp, #24]
    17fc:	9b07      	ldr	r3, [sp, #28]
    17fe:	4e93      	ldr	r6, [pc, #588]	; (1a4c <computeKalmanGains+0x734>)
    1800:	47b0      	blx	r6
    1802:	9034      	str	r0, [sp, #208]	; 0xd0
    1804:	9135      	str	r1, [sp, #212]	; 0xd4
    1806:	9a34      	ldr	r2, [sp, #208]	; 0xd0
    1808:	9b35      	ldr	r3, [sp, #212]	; 0xd4
    180a:	4991      	ldr	r1, [pc, #580]	; (1a50 <computeKalmanGains+0x738>)
    180c:	600a      	str	r2, [r1, #0]
    180e:	604b      	str	r3, [r1, #4]

        kgain[0][1] = (pestp[0][0] * (-pestp[0][2]) + pestp[0][2] * (pestp[0][0] + altitude_variance))/det;
    1810:	9808      	ldr	r0, [sp, #32]
    1812:	9909      	ldr	r1, [sp, #36]	; 0x24
    1814:	2280      	movs	r2, #128	; 0x80
    1816:	0612      	lsls	r2, r2, #24
    1818:	4694      	mov	ip, r2
    181a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    181c:	9a04      	ldr	r2, [sp, #16]
    181e:	4463      	add	r3, ip
    1820:	932e      	str	r3, [sp, #184]	; 0xb8
    1822:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
    1824:	47a8      	blx	r5
    1826:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    1828:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    182a:	0006      	movs	r6, r0
    182c:	000f      	movs	r7, r1
    182e:	9804      	ldr	r0, [sp, #16]
    1830:	9916      	ldr	r1, [sp, #88]	; 0x58
    1832:	47a8      	blx	r5
    1834:	0002      	movs	r2, r0
    1836:	000b      	movs	r3, r1
    1838:	0030      	movs	r0, r6
    183a:	0039      	movs	r1, r7
    183c:	47a0      	blx	r4
    183e:	9a06      	ldr	r2, [sp, #24]
    1840:	9b07      	ldr	r3, [sp, #28]
    1842:	4e82      	ldr	r6, [pc, #520]	; (1a4c <computeKalmanGains+0x734>)
    1844:	47b0      	blx	r6
    1846:	900e      	str	r0, [sp, #56]	; 0x38
    1848:	910f      	str	r1, [sp, #60]	; 0x3c
    184a:	4981      	ldr	r1, [pc, #516]	; (1a50 <computeKalmanGains+0x738>)
    184c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    184e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    1850:	608a      	str	r2, [r1, #8]
    1852:	60cb      	str	r3, [r1, #12]

        kgain[1][0] = (pestp[1][0] * (pestp[2][2] + acceleration_variance) - pestp[1][2] * pestp[2][0])/det;
    1854:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    1856:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    1858:	982a      	ldr	r0, [sp, #168]	; 0xa8
    185a:	992b      	ldr	r1, [sp, #172]	; 0xac
    185c:	47a8      	blx	r5
    185e:	9a00      	ldr	r2, [sp, #0]
    1860:	9b01      	ldr	r3, [sp, #4]
    1862:	0006      	movs	r6, r0
    1864:	000f      	movs	r7, r1
    1866:	982c      	ldr	r0, [sp, #176]	; 0xb0
    1868:	992d      	ldr	r1, [sp, #180]	; 0xb4
    186a:	47a8      	blx	r5
    186c:	0002      	movs	r2, r0
    186e:	000b      	movs	r3, r1
    1870:	0030      	movs	r0, r6
    1872:	0039      	movs	r1, r7
    1874:	4e74      	ldr	r6, [pc, #464]	; (1a48 <computeKalmanGains+0x730>)
    1876:	47b0      	blx	r6
    1878:	9a06      	ldr	r2, [sp, #24]
    187a:	9b07      	ldr	r3, [sp, #28]
    187c:	4e73      	ldr	r6, [pc, #460]	; (1a4c <computeKalmanGains+0x734>)
    187e:	47b0      	blx	r6
    1880:	0002      	movs	r2, r0
    1882:	000b      	movs	r3, r1
    1884:	9139      	str	r1, [sp, #228]	; 0xe4
    1886:	4972      	ldr	r1, [pc, #456]	; (1a50 <computeKalmanGains+0x738>)
    1888:	9018      	str	r0, [sp, #96]	; 0x60
    188a:	610a      	str	r2, [r1, #16]
    188c:	614b      	str	r3, [r1, #20]

        kgain[1][1] = (pestp[1][0] * (-pestp[0][2]) + pestp[1][2] * (pestp[0][0] + altitude_variance))/det;
    188e:	982a      	ldr	r0, [sp, #168]	; 0xa8
    1890:	992b      	ldr	r1, [sp, #172]	; 0xac
    1892:	9a04      	ldr	r2, [sp, #16]
    1894:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
    1896:	47a8      	blx	r5
    1898:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    189a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    189c:	0006      	movs	r6, r0
    189e:	000f      	movs	r7, r1
    18a0:	982c      	ldr	r0, [sp, #176]	; 0xb0
    18a2:	992d      	ldr	r1, [sp, #180]	; 0xb4
    18a4:	47a8      	blx	r5
    18a6:	0002      	movs	r2, r0
    18a8:	000b      	movs	r3, r1
    18aa:	0030      	movs	r0, r6
    18ac:	0039      	movs	r1, r7
    18ae:	47a0      	blx	r4
    18b0:	9a06      	ldr	r2, [sp, #24]
    18b2:	9b07      	ldr	r3, [sp, #28]
    18b4:	4e65      	ldr	r6, [pc, #404]	; (1a4c <computeKalmanGains+0x734>)
    18b6:	47b0      	blx	r6
    18b8:	9012      	str	r0, [sp, #72]	; 0x48
    18ba:	9113      	str	r1, [sp, #76]	; 0x4c
    18bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
    18be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    18c0:	4963      	ldr	r1, [pc, #396]	; (1a50 <computeKalmanGains+0x738>)
    18c2:	618a      	str	r2, [r1, #24]
    18c4:	61cb      	str	r3, [r1, #28]

        kgain[2][0] = (pestp[2][0] * (pestp[2][2] + acceleration_variance) - pestp[2][2] * pestp[2][0])/det;
    18c6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    18c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    18ca:	9800      	ldr	r0, [sp, #0]
    18cc:	9901      	ldr	r1, [sp, #4]
    18ce:	47a8      	blx	r5
    18d0:	9a02      	ldr	r2, [sp, #8]
    18d2:	9b03      	ldr	r3, [sp, #12]
    18d4:	0006      	movs	r6, r0
    18d6:	000f      	movs	r7, r1
    18d8:	9800      	ldr	r0, [sp, #0]
    18da:	9901      	ldr	r1, [sp, #4]
    18dc:	47a8      	blx	r5
    18de:	0002      	movs	r2, r0
    18e0:	000b      	movs	r3, r1
    18e2:	0030      	movs	r0, r6
    18e4:	0039      	movs	r1, r7
    18e6:	4e58      	ldr	r6, [pc, #352]	; (1a48 <computeKalmanGains+0x730>)
    18e8:	47b0      	blx	r6
    18ea:	9a06      	ldr	r2, [sp, #24]
    18ec:	9b07      	ldr	r3, [sp, #28]
    18ee:	4e57      	ldr	r6, [pc, #348]	; (1a4c <computeKalmanGains+0x734>)
    18f0:	47b0      	blx	r6
    18f2:	9014      	str	r0, [sp, #80]	; 0x50
    18f4:	9115      	str	r1, [sp, #84]	; 0x54
    18f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
    18f8:	9b15      	ldr	r3, [sp, #84]	; 0x54
    18fa:	4955      	ldr	r1, [pc, #340]	; (1a50 <computeKalmanGains+0x738>)
    18fc:	620a      	str	r2, [r1, #32]
    18fe:	624b      	str	r3, [r1, #36]	; 0x24

        kgain[2][1] = (pestp[2][0] * (-pestp[0][2]) + pestp[2][2] * (pestp[0][0] + altitude_variance))/det;
    1900:	9800      	ldr	r0, [sp, #0]
    1902:	9901      	ldr	r1, [sp, #4]
    1904:	9a04      	ldr	r2, [sp, #16]
    1906:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
    1908:	47a8      	blx	r5
    190a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    190c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    190e:	0006      	movs	r6, r0
    1910:	000f      	movs	r7, r1
    1912:	9802      	ldr	r0, [sp, #8]
    1914:	9903      	ldr	r1, [sp, #12]
    1916:	47a8      	blx	r5
    1918:	0002      	movs	r2, r0
    191a:	000b      	movs	r3, r1
    191c:	0030      	movs	r0, r6
    191e:	0039      	movs	r1, r7
    1920:	47a0      	blx	r4
    1922:	9a06      	ldr	r2, [sp, #24]
    1924:	9b07      	ldr	r3, [sp, #28]
    1926:	4e49      	ldr	r6, [pc, #292]	; (1a4c <computeKalmanGains+0x734>)
    1928:	47b0      	blx	r6
    192a:	9036      	str	r0, [sp, #216]	; 0xd8
    192c:	9137      	str	r1, [sp, #220]	; 0xdc
    192e:	9a36      	ldr	r2, [sp, #216]	; 0xd8
    1930:	9b37      	ldr	r3, [sp, #220]	; 0xdc
    1932:	4947      	ldr	r1, [pc, #284]	; (1a50 <computeKalmanGains+0x738>)

        pest[0][0] = pestp[0][0] * (1.0 - kgain[0][0]) - kgain[0][1]*pestp[2][0];
    1934:	4e44      	ldr	r6, [pc, #272]	; (1a48 <computeKalmanGains+0x730>)
        kgain[2][1] = (pestp[2][0] * (-pestp[0][2]) + pestp[2][2] * (pestp[0][0] + altitude_variance))/det;
    1936:	628a      	str	r2, [r1, #40]	; 0x28
    1938:	62cb      	str	r3, [r1, #44]	; 0x2c
        pest[0][0] = pestp[0][0] * (1.0 - kgain[0][0]) - kgain[0][1]*pestp[2][0];
    193a:	9a34      	ldr	r2, [sp, #208]	; 0xd0
    193c:	9b35      	ldr	r3, [sp, #212]	; 0xd4
    193e:	2000      	movs	r0, #0
    1940:	4944      	ldr	r1, [pc, #272]	; (1a54 <computeKalmanGains+0x73c>)
    1942:	47b0      	blx	r6
    1944:	0002      	movs	r2, r0
    1946:	000b      	movs	r3, r1
    1948:	900c      	str	r0, [sp, #48]	; 0x30
    194a:	910d      	str	r1, [sp, #52]	; 0x34
    194c:	9808      	ldr	r0, [sp, #32]
    194e:	9909      	ldr	r1, [sp, #36]	; 0x24
    1950:	47a8      	blx	r5
    1952:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    1954:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    1956:	0006      	movs	r6, r0
    1958:	000f      	movs	r7, r1
    195a:	9800      	ldr	r0, [sp, #0]
    195c:	9901      	ldr	r1, [sp, #4]
    195e:	47a8      	blx	r5
    1960:	0002      	movs	r2, r0
    1962:	000b      	movs	r3, r1
    1964:	0030      	movs	r0, r6
    1966:	0039      	movs	r1, r7
    1968:	4e37      	ldr	r6, [pc, #220]	; (1a48 <computeKalmanGains+0x730>)
    196a:	47b0      	blx	r6
        pest[0][1] = pestp[0][1] * (1.0 - kgain[0][0]) - kgain[0][1]*pestp[2][1];
    196c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    196e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
        pest[0][0] = pestp[0][0] * (1.0 - kgain[0][0]) - kgain[0][1]*pestp[2][0];
    1970:	9006      	str	r0, [sp, #24]
    1972:	9107      	str	r1, [sp, #28]
        pest[0][1] = pestp[0][1] * (1.0 - kgain[0][0]) - kgain[0][1]*pestp[2][1];
    1974:	9830      	ldr	r0, [sp, #192]	; 0xc0
    1976:	9931      	ldr	r1, [sp, #196]	; 0xc4
    1978:	47a8      	blx	r5
    197a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    197c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    197e:	0006      	movs	r6, r0
    1980:	000f      	movs	r7, r1
    1982:	9810      	ldr	r0, [sp, #64]	; 0x40
    1984:	9911      	ldr	r1, [sp, #68]	; 0x44
    1986:	47a8      	blx	r5
    1988:	0002      	movs	r2, r0
    198a:	000b      	movs	r3, r1
    198c:	0030      	movs	r0, r6
    198e:	0039      	movs	r1, r7
    1990:	4e2d      	ldr	r6, [pc, #180]	; (1a48 <computeKalmanGains+0x730>)
    1992:	47b0      	blx	r6
        pest[0][2] = pestp[0][2] * (1.0 - kgain[0][0]) - kgain[0][1]*pestp[2][2];
    1994:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    1996:	9b0d      	ldr	r3, [sp, #52]	; 0x34
        pest[0][1] = pestp[0][1] * (1.0 - kgain[0][0]) - kgain[0][1]*pestp[2][1];
    1998:	900a      	str	r0, [sp, #40]	; 0x28
    199a:	910b      	str	r1, [sp, #44]	; 0x2c
        pest[0][2] = pestp[0][2] * (1.0 - kgain[0][0]) - kgain[0][1]*pestp[2][2];
    199c:	9804      	ldr	r0, [sp, #16]
    199e:	9916      	ldr	r1, [sp, #88]	; 0x58
    19a0:	47a8      	blx	r5
    19a2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    19a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    19a6:	0006      	movs	r6, r0
    19a8:	000f      	movs	r7, r1
    19aa:	9802      	ldr	r0, [sp, #8]
    19ac:	9903      	ldr	r1, [sp, #12]
    19ae:	47a8      	blx	r5
    19b0:	0002      	movs	r2, r0
    19b2:	000b      	movs	r3, r1
    19b4:	0030      	movs	r0, r6
    19b6:	0039      	movs	r1, r7
    19b8:	4e23      	ldr	r6, [pc, #140]	; (1a48 <computeKalmanGains+0x730>)
    19ba:	47b0      	blx	r6
        pest[1][0] = pestp[0][0] * (-kgain[1][0]) + pestp[1][0] - kgain[1][1]*pestp[2][0];
    19bc:	2280      	movs	r2, #128	; 0x80
    19be:	0612      	lsls	r2, r2, #24
    19c0:	4694      	mov	ip, r2
    19c2:	9b39      	ldr	r3, [sp, #228]	; 0xe4
    19c4:	9a18      	ldr	r2, [sp, #96]	; 0x60
    19c6:	4463      	add	r3, ip
    19c8:	932e      	str	r3, [sp, #184]	; 0xb8
    19ca:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
        pest[0][2] = pestp[0][2] * (1.0 - kgain[0][0]) - kgain[0][1]*pestp[2][2];
    19cc:	900c      	str	r0, [sp, #48]	; 0x30
    19ce:	910d      	str	r1, [sp, #52]	; 0x34
        pest[1][0] = pestp[0][0] * (-kgain[1][0]) + pestp[1][0] - kgain[1][1]*pestp[2][0];
    19d0:	9808      	ldr	r0, [sp, #32]
    19d2:	9909      	ldr	r1, [sp, #36]	; 0x24
    19d4:	47a8      	blx	r5
    19d6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
    19d8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
    19da:	47a0      	blx	r4
    19dc:	9a12      	ldr	r2, [sp, #72]	; 0x48
    19de:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    19e0:	0006      	movs	r6, r0
    19e2:	000f      	movs	r7, r1
    19e4:	9800      	ldr	r0, [sp, #0]
    19e6:	9901      	ldr	r1, [sp, #4]
    19e8:	47a8      	blx	r5
    19ea:	0002      	movs	r2, r0
    19ec:	000b      	movs	r3, r1
    19ee:	0030      	movs	r0, r6
    19f0:	0039      	movs	r1, r7
    19f2:	4e15      	ldr	r6, [pc, #84]	; (1a48 <computeKalmanGains+0x730>)
    19f4:	47b0      	blx	r6
        pestp[1][1] = term[1][0] * phit[0][1] + term[1][1] * phit[1][1] + term[1][2] * phit[2][1];
    19f6:	9a32      	ldr	r2, [sp, #200]	; 0xc8
    19f8:	9b33      	ldr	r3, [sp, #204]	; 0xcc
        pest[1][0] = pestp[0][0] * (-kgain[1][0]) + pestp[1][0] - kgain[1][1]*pestp[2][0];
    19fa:	9008      	str	r0, [sp, #32]
    19fc:	9109      	str	r1, [sp, #36]	; 0x24
        pestp[1][1] = term[1][0] * phit[0][1] + term[1][1] * phit[1][1] + term[1][2] * phit[2][1];
    19fe:	9826      	ldr	r0, [sp, #152]	; 0x98
    1a00:	9927      	ldr	r1, [sp, #156]	; 0x9c
    1a02:	47a0      	blx	r4
    1a04:	4a0c      	ldr	r2, [pc, #48]	; (1a38 <computeKalmanGains+0x720>)
    1a06:	0006      	movs	r6, r0
    1a08:	000f      	movs	r7, r1
    1a0a:	9828      	ldr	r0, [sp, #160]	; 0xa0
    1a0c:	9929      	ldr	r1, [sp, #164]	; 0xa4
    1a0e:	4b0b      	ldr	r3, [pc, #44]	; (1a3c <computeKalmanGains+0x724>)
    1a10:	47a8      	blx	r5
    1a12:	0002      	movs	r2, r0
    1a14:	000b      	movs	r3, r1
    1a16:	0030      	movs	r0, r6
    1a18:	0039      	movs	r1, r7
    1a1a:	47a0      	blx	r4
        pest[1][1] = pestp[0][1] * (-kgain[1][0]) + pestp[1][1] - kgain[1][1]*pestp[2][1];
    1a1c:	9a18      	ldr	r2, [sp, #96]	; 0x60
        pestp[1][1] = term[1][0] * phit[0][1] + term[1][1] * phit[1][1] + term[1][2] * phit[2][1];
    1a1e:	0006      	movs	r6, r0
    1a20:	000f      	movs	r7, r1
        pest[1][1] = pestp[0][1] * (-kgain[1][0]) + pestp[1][1] - kgain[1][1]*pestp[2][1];
    1a22:	9830      	ldr	r0, [sp, #192]	; 0xc0
    1a24:	9931      	ldr	r1, [sp, #196]	; 0xc4
    1a26:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
    1a28:	47a8      	blx	r5
    1a2a:	0002      	movs	r2, r0
    1a2c:	000b      	movs	r3, r1
    1a2e:	0030      	movs	r0, r6
    1a30:	0039      	movs	r1, r7
    1a32:	47a0      	blx	r4
    1a34:	e010      	b.n	1a58 <computeKalmanGains+0x740>
    1a36:	46c0      	nop			; (mov r8, r8)
    1a38:	47ae147b 	.word	0x47ae147b
    1a3c:	3f747ae1 	.word	0x3f747ae1
    1a40:	eb1c432d 	.word	0xeb1c432d
    1a44:	3eea36e2 	.word	0x3eea36e2
    1a48:	00005611 	.word	0x00005611
    1a4c:	000048a9 	.word	0x000048a9
    1a50:	20000620 	.word	0x20000620
    1a54:	3ff00000 	.word	0x3ff00000
    1a58:	9a12      	ldr	r2, [sp, #72]	; 0x48
    1a5a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    1a5c:	0006      	movs	r6, r0
    1a5e:	000f      	movs	r7, r1
    1a60:	9810      	ldr	r0, [sp, #64]	; 0x40
    1a62:	9911      	ldr	r1, [sp, #68]	; 0x44
    1a64:	47a8      	blx	r5
    1a66:	0002      	movs	r2, r0
    1a68:	000b      	movs	r3, r1
    1a6a:	0030      	movs	r0, r6
    1a6c:	0039      	movs	r1, r7
    1a6e:	4e4c      	ldr	r6, [pc, #304]	; (1ba0 <computeKalmanGains+0x888>)
    1a70:	47b0      	blx	r6
        pest[1][2] = pestp[0][2] * (-kgain[1][0]) + pestp[1][2] - kgain[1][1]*pestp[2][2];
    1a72:	9a18      	ldr	r2, [sp, #96]	; 0x60
        pest[1][1] = pestp[0][1] * (-kgain[1][0]) + pestp[1][1] - kgain[1][1]*pestp[2][1];
    1a74:	900e      	str	r0, [sp, #56]	; 0x38
    1a76:	910f      	str	r1, [sp, #60]	; 0x3c
        pest[1][2] = pestp[0][2] * (-kgain[1][0]) + pestp[1][2] - kgain[1][1]*pestp[2][2];
    1a78:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
    1a7a:	9804      	ldr	r0, [sp, #16]
    1a7c:	9916      	ldr	r1, [sp, #88]	; 0x58
    1a7e:	47a8      	blx	r5
    1a80:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
    1a82:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
    1a84:	47a0      	blx	r4
    1a86:	9a12      	ldr	r2, [sp, #72]	; 0x48
    1a88:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    1a8a:	0006      	movs	r6, r0
    1a8c:	000f      	movs	r7, r1
    1a8e:	9802      	ldr	r0, [sp, #8]
    1a90:	9903      	ldr	r1, [sp, #12]
    1a92:	47a8      	blx	r5
    1a94:	4c42      	ldr	r4, [pc, #264]	; (1ba0 <computeKalmanGains+0x888>)
    1a96:	0002      	movs	r2, r0
    1a98:	000b      	movs	r3, r1
    1a9a:	0030      	movs	r0, r6
    1a9c:	0039      	movs	r1, r7
    1a9e:	47a0      	blx	r4
        pest[2][0] = (1.0 - kgain[2][1]) * pestp[2][0] - kgain[2][0] * pestp[2][0];
    1aa0:	9a36      	ldr	r2, [sp, #216]	; 0xd8
    1aa2:	9b37      	ldr	r3, [sp, #220]	; 0xdc
        pest[1][2] = pestp[0][2] * (-kgain[1][0]) + pestp[1][2] - kgain[1][1]*pestp[2][2];
    1aa4:	9004      	str	r0, [sp, #16]
    1aa6:	9105      	str	r1, [sp, #20]
        pest[2][0] = (1.0 - kgain[2][1]) * pestp[2][0] - kgain[2][0] * pestp[2][0];
    1aa8:	2000      	movs	r0, #0
    1aaa:	493e      	ldr	r1, [pc, #248]	; (1ba4 <computeKalmanGains+0x88c>)
    1aac:	47a0      	blx	r4
    1aae:	0002      	movs	r2, r0
    1ab0:	000b      	movs	r3, r1
    1ab2:	9012      	str	r0, [sp, #72]	; 0x48
    1ab4:	9113      	str	r1, [sp, #76]	; 0x4c
    1ab6:	9800      	ldr	r0, [sp, #0]
    1ab8:	9901      	ldr	r1, [sp, #4]
    1aba:	47a8      	blx	r5
    1abc:	9a14      	ldr	r2, [sp, #80]	; 0x50
    1abe:	9b15      	ldr	r3, [sp, #84]	; 0x54
    1ac0:	0006      	movs	r6, r0
    1ac2:	000f      	movs	r7, r1
    1ac4:	9800      	ldr	r0, [sp, #0]
    1ac6:	9901      	ldr	r1, [sp, #4]
    1ac8:	47a8      	blx	r5
    1aca:	0002      	movs	r2, r0
    1acc:	000b      	movs	r3, r1
    1ace:	0030      	movs	r0, r6
    1ad0:	0039      	movs	r1, r7
    1ad2:	47a0      	blx	r4
    1ad4:	9000      	str	r0, [sp, #0]
    1ad6:	9101      	str	r1, [sp, #4]
        pest[2][1] = (1.0 - kgain[2][1]) * pestp[2][1] - kgain[2][0] * pestp[2][1];
    1ad8:	9a12      	ldr	r2, [sp, #72]	; 0x48
    1ada:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    1adc:	9810      	ldr	r0, [sp, #64]	; 0x40
    1ade:	9911      	ldr	r1, [sp, #68]	; 0x44
    1ae0:	47a8      	blx	r5
    1ae2:	9a14      	ldr	r2, [sp, #80]	; 0x50
    1ae4:	9b15      	ldr	r3, [sp, #84]	; 0x54
    1ae6:	0006      	movs	r6, r0
    1ae8:	000f      	movs	r7, r1
    1aea:	9810      	ldr	r0, [sp, #64]	; 0x40
    1aec:	9911      	ldr	r1, [sp, #68]	; 0x44
    1aee:	47a8      	blx	r5
    1af0:	0002      	movs	r2, r0
    1af2:	000b      	movs	r3, r1
    1af4:	0030      	movs	r0, r6
    1af6:	0039      	movs	r1, r7
    1af8:	47a0      	blx	r4
        pest[2][2] = (1.0 - kgain[2][1]) * pestp[2][2] - kgain[2][0] * pestp[2][2];
    1afa:	9a12      	ldr	r2, [sp, #72]	; 0x48
    1afc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
        pest[2][1] = (1.0 - kgain[2][1]) * pestp[2][1] - kgain[2][0] * pestp[2][1];
    1afe:	9010      	str	r0, [sp, #64]	; 0x40
    1b00:	9111      	str	r1, [sp, #68]	; 0x44
        pest[2][2] = (1.0 - kgain[2][1]) * pestp[2][2] - kgain[2][0] * pestp[2][2];
    1b02:	9802      	ldr	r0, [sp, #8]
    1b04:	9903      	ldr	r1, [sp, #12]
    1b06:	47a8      	blx	r5
    1b08:	9a14      	ldr	r2, [sp, #80]	; 0x50
    1b0a:	9b15      	ldr	r3, [sp, #84]	; 0x54
    1b0c:	000f      	movs	r7, r1
    1b0e:	0006      	movs	r6, r0
    1b10:	9802      	ldr	r0, [sp, #8]
    1b12:	9903      	ldr	r1, [sp, #12]
    1b14:	47a8      	blx	r5
    1b16:	000b      	movs	r3, r1
    1b18:	0002      	movs	r2, r0
    1b1a:	0039      	movs	r1, r7
    1b1c:	0030      	movs	r0, r6
    1b1e:	47a0      	blx	r4
         * time through the mill. Because I have noticed very early convergance
         * in a few cases (< 20 iterations) I am delaying this for at least
         * 100 iterations.
         */
        notdone = 0;
        k++;
    1b20:	9b38      	ldr	r3, [sp, #224]	; 0xe0
    1b22:	2510      	movs	r5, #16
    1b24:	3301      	adds	r3, #1
    1b26:	9338      	str	r3, [sp, #224]	; 0xe0
        notdone = 0;
    1b28:	2300      	movs	r3, #0
        pest[2][2] = (1.0 - kgain[2][1]) * pestp[2][2] - kgain[2][0] * pestp[2][2];
    1b2a:	9002      	str	r0, [sp, #8]
    1b2c:	9103      	str	r1, [sp, #12]
        notdone = 0;
    1b2e:	001f      	movs	r7, r3
        for( i = 0; i <= 2; i++)
            for( j = 0; j <= 1; j++) {
                if( (kgain[i][j] - lastkgain[i][j])/lastkgain[i][j] > 0.00001)
    1b30:	4b1d      	ldr	r3, [pc, #116]	; (1ba8 <computeKalmanGains+0x890>)
    1b32:	9426      	str	r4, [sp, #152]	; 0x98
    1b34:	9318      	str	r3, [sp, #96]	; 0x60
    1b36:	002c      	movs	r4, r5
    1b38:	3c10      	subs	r4, #16
    1b3a:	9b18      	ldr	r3, [sp, #96]	; 0x60
    1b3c:	9e26      	ldr	r6, [sp, #152]	; 0x98
    1b3e:	18e3      	adds	r3, r4, r3
    1b40:	681a      	ldr	r2, [r3, #0]
    1b42:	685b      	ldr	r3, [r3, #4]
    1b44:	9212      	str	r2, [sp, #72]	; 0x48
    1b46:	9313      	str	r3, [sp, #76]	; 0x4c
    1b48:	9812      	ldr	r0, [sp, #72]	; 0x48
    1b4a:	9913      	ldr	r1, [sp, #76]	; 0x4c
    1b4c:	aa40      	add	r2, sp, #256	; 0x100
    1b4e:	18a3      	adds	r3, r4, r2
    1b50:	9316      	str	r3, [sp, #88]	; 0x58
    1b52:	681a      	ldr	r2, [r3, #0]
    1b54:	685b      	ldr	r3, [r3, #4]
    1b56:	9214      	str	r2, [sp, #80]	; 0x50
    1b58:	9315      	str	r3, [sp, #84]	; 0x54
    1b5a:	47b0      	blx	r6
    1b5c:	9a14      	ldr	r2, [sp, #80]	; 0x50
    1b5e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    1b60:	4e12      	ldr	r6, [pc, #72]	; (1bac <computeKalmanGains+0x894>)
    1b62:	47b0      	blx	r6
    1b64:	4b12      	ldr	r3, [pc, #72]	; (1bb0 <computeKalmanGains+0x898>)
    1b66:	4a13      	ldr	r2, [pc, #76]	; (1bb4 <computeKalmanGains+0x89c>)
    1b68:	4e13      	ldr	r6, [pc, #76]	; (1bb8 <computeKalmanGains+0x8a0>)
    1b6a:	47b0      	blx	r6
                    notdone++;
    1b6c:	1e43      	subs	r3, r0, #1
    1b6e:	4198      	sbcs	r0, r3
                lastkgain[i][j] = kgain[i][j];
    1b70:	9916      	ldr	r1, [sp, #88]	; 0x58
                    notdone++;
    1b72:	183b      	adds	r3, r7, r0
    1b74:	3408      	adds	r4, #8
    1b76:	001f      	movs	r7, r3
                lastkgain[i][j] = kgain[i][j];
    1b78:	9a12      	ldr	r2, [sp, #72]	; 0x48
    1b7a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    1b7c:	600a      	str	r2, [r1, #0]
    1b7e:	604b      	str	r3, [r1, #4]
            for( j = 0; j <= 1; j++) {
    1b80:	42a5      	cmp	r5, r4
    1b82:	d1da      	bne.n	1b3a <computeKalmanGains+0x822>
    1b84:	3510      	adds	r5, #16
        for( i = 0; i <= 2; i++)
    1b86:	2d40      	cmp	r5, #64	; 0x40
    1b88:	d1d5      	bne.n	1b36 <computeKalmanGains+0x81e>
            }
        if( notdone || k < 100)
    1b8a:	2f00      	cmp	r7, #0
    1b8c:	d001      	beq.n	1b92 <computeKalmanGains+0x87a>
    1b8e:	f7ff fc32 	bl	13f6 <computeKalmanGains+0xde>
    1b92:	9b38      	ldr	r3, [sp, #224]	; 0xe0
    1b94:	2b63      	cmp	r3, #99	; 0x63
    1b96:	dc01      	bgt.n	1b9c <computeKalmanGains+0x884>
    1b98:	f7ff fc2d 	bl	13f6 <computeKalmanGains+0xde>
            continue;
        else
            break;
    }
}
    1b9c:	b04d      	add	sp, #308	; 0x134
    1b9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1ba0:	00005611 	.word	0x00005611
    1ba4:	3ff00000 	.word	0x3ff00000
    1ba8:	20000620 	.word	0x20000620
    1bac:	000048a9 	.word	0x000048a9
    1bb0:	3ee4f8b5 	.word	0x3ee4f8b5
    1bb4:	88e368f1 	.word	0x88e368f1
    1bb8:	00003985 	.word	0x00003985

00001bbc <computeKalmanStates>:

void computeKalmanStates() {
    1bbc:	b5f0      	push	{r4, r5, r6, r7, lr}

    double alt_inovation, accel_inovation;


    double acceleration = (sample.accelZ - offsets.gravityOffset) * 32.17417;
    1bbe:	4d7e      	ldr	r5, [pc, #504]	; (1db8 <computeKalmanStates+0x1fc>)
void computeKalmanStates() {
    1bc0:	b08f      	sub	sp, #60	; 0x3c
    double acceleration = (sample.accelZ - offsets.gravityOffset) * 32.17417;
    1bc2:	6aa8      	ldr	r0, [r5, #40]	; 0x28
    1bc4:	4b7d      	ldr	r3, [pc, #500]	; (1dbc <computeKalmanStates+0x200>)
    1bc6:	4798      	blx	r3
    1bc8:	4b7d      	ldr	r3, [pc, #500]	; (1dc0 <computeKalmanStates+0x204>)
    1bca:	4c7e      	ldr	r4, [pc, #504]	; (1dc4 <computeKalmanStates+0x208>)
    1bcc:	689a      	ldr	r2, [r3, #8]
    1bce:	68db      	ldr	r3, [r3, #12]
    1bd0:	47a0      	blx	r4
    1bd2:	4a7d      	ldr	r2, [pc, #500]	; (1dc8 <computeKalmanStates+0x20c>)
    1bd4:	4b7d      	ldr	r3, [pc, #500]	; (1dcc <computeKalmanStates+0x210>)
    1bd6:	4e7e      	ldr	r6, [pc, #504]	; (1dd0 <computeKalmanStates+0x214>)
    1bd8:	47b0      	blx	r6
    double pressure = sample.altitudefeet;
    1bda:	6c2e      	ldr	r6, [r5, #64]	; 0x40
    1bdc:	6c6f      	ldr	r7, [r5, #68]	; 0x44
    double acceleration = (sample.accelZ - offsets.gravityOffset) * 32.17417;
    1bde:	9000      	str	r0, [sp, #0]
    1be0:	9101      	str	r1, [sp, #4]

    if (altitude == 0) {
    1be2:	497c      	ldr	r1, [pc, #496]	; (1dd4 <computeKalmanStates+0x218>)
    1be4:	2200      	movs	r2, #0
    1be6:	6808      	ldr	r0, [r1, #0]
    1be8:	6849      	ldr	r1, [r1, #4]
    1bea:	2300      	movs	r3, #0
    1bec:	4d7a      	ldr	r5, [pc, #488]	; (1dd8 <computeKalmanStates+0x21c>)
    1bee:	47a8      	blx	r5
    1bf0:	2800      	cmp	r0, #0
    1bf2:	d002      	beq.n	1bfa <computeKalmanStates+0x3e>
        altitude = pressure;
    1bf4:	4b77      	ldr	r3, [pc, #476]	; (1dd4 <computeKalmanStates+0x218>)
    1bf6:	601e      	str	r6, [r3, #0]
    1bf8:	605f      	str	r7, [r3, #4]
    }

    /* Compute the innovations */
    alt_inovation = pressure - estp[0];
    1bfa:	4b78      	ldr	r3, [pc, #480]	; (1ddc <computeKalmanStates+0x220>)
    1bfc:	0030      	movs	r0, r6
    1bfe:	681a      	ldr	r2, [r3, #0]
    1c00:	685b      	ldr	r3, [r3, #4]
    1c02:	0039      	movs	r1, r7
    1c04:	47a0      	blx	r4
    accel_inovation = acceleration - estp[2];
    1c06:	4b75      	ldr	r3, [pc, #468]	; (1ddc <computeKalmanStates+0x220>)
    alt_inovation = pressure - estp[0];
    1c08:	9006      	str	r0, [sp, #24]
    1c0a:	9107      	str	r1, [sp, #28]
    accel_inovation = acceleration - estp[2];
    1c0c:	691a      	ldr	r2, [r3, #16]
    1c0e:	695b      	ldr	r3, [r3, #20]
    1c10:	9800      	ldr	r0, [sp, #0]
    1c12:	9901      	ldr	r1, [sp, #4]
    1c14:	47a0      	blx	r4


    /* Propagate state */
    estp[0] = phi[0][0] * altitude + phi[0][1] *velocity + phi[0][2] * accel;
    1c16:	4b6f      	ldr	r3, [pc, #444]	; (1dd4 <computeKalmanStates+0x218>)
    1c18:	4d6d      	ldr	r5, [pc, #436]	; (1dd0 <computeKalmanStates+0x214>)
    1c1a:	685c      	ldr	r4, [r3, #4]
    1c1c:	681b      	ldr	r3, [r3, #0]
    1c1e:	9300      	str	r3, [sp, #0]
    1c20:	9401      	str	r4, [sp, #4]
    1c22:	4b6f      	ldr	r3, [pc, #444]	; (1de0 <computeKalmanStates+0x224>)
    accel_inovation = acceleration - estp[2];
    1c24:	9008      	str	r0, [sp, #32]
    1c26:	9109      	str	r1, [sp, #36]	; 0x24
    estp[0] = phi[0][0] * altitude + phi[0][1] *velocity + phi[0][2] * accel;
    1c28:	685c      	ldr	r4, [r3, #4]
    1c2a:	681b      	ldr	r3, [r3, #0]
    1c2c:	9800      	ldr	r0, [sp, #0]
    1c2e:	9901      	ldr	r1, [sp, #4]
    1c30:	9302      	str	r3, [sp, #8]
    1c32:	9403      	str	r4, [sp, #12]
    1c34:	4b6b      	ldr	r3, [pc, #428]	; (1de4 <computeKalmanStates+0x228>)
    1c36:	685c      	ldr	r4, [r3, #4]
    1c38:	681b      	ldr	r3, [r3, #0]
    1c3a:	9304      	str	r3, [sp, #16]
    1c3c:	9405      	str	r4, [sp, #20]
    1c3e:	4c6a      	ldr	r4, [pc, #424]	; (1de8 <computeKalmanStates+0x22c>)
    1c40:	6822      	ldr	r2, [r4, #0]
    1c42:	6863      	ldr	r3, [r4, #4]
    1c44:	47a8      	blx	r5
    1c46:	68a2      	ldr	r2, [r4, #8]
    1c48:	68e3      	ldr	r3, [r4, #12]
    1c4a:	0006      	movs	r6, r0
    1c4c:	000f      	movs	r7, r1
    1c4e:	9802      	ldr	r0, [sp, #8]
    1c50:	9903      	ldr	r1, [sp, #12]
    1c52:	47a8      	blx	r5
    1c54:	0002      	movs	r2, r0
    1c56:	000b      	movs	r3, r1
    1c58:	0030      	movs	r0, r6
    1c5a:	0039      	movs	r1, r7
    1c5c:	4e63      	ldr	r6, [pc, #396]	; (1dec <computeKalmanStates+0x230>)
    1c5e:	47b0      	blx	r6
    1c60:	6922      	ldr	r2, [r4, #16]
    1c62:	6963      	ldr	r3, [r4, #20]
    1c64:	0006      	movs	r6, r0
    1c66:	000f      	movs	r7, r1
    1c68:	9804      	ldr	r0, [sp, #16]
    1c6a:	9905      	ldr	r1, [sp, #20]
    1c6c:	47a8      	blx	r5
    1c6e:	0002      	movs	r2, r0
    1c70:	000b      	movs	r3, r1
    1c72:	0030      	movs	r0, r6
    1c74:	0039      	movs	r1, r7
    1c76:	4e5d      	ldr	r6, [pc, #372]	; (1dec <computeKalmanStates+0x230>)
    1c78:	47b0      	blx	r6
    1c7a:	900a      	str	r0, [sp, #40]	; 0x28
    1c7c:	910b      	str	r1, [sp, #44]	; 0x2c
    1c7e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    1c80:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    1c82:	4956      	ldr	r1, [pc, #344]	; (1ddc <computeKalmanStates+0x220>)
    1c84:	600a      	str	r2, [r1, #0]
    1c86:	604b      	str	r3, [r1, #4]
    estp[1] = phi[1][0] * altitude + phi[1][1] * velocity + phi[1][2] * accel;
    1c88:	69a2      	ldr	r2, [r4, #24]
    1c8a:	69e3      	ldr	r3, [r4, #28]
    1c8c:	9800      	ldr	r0, [sp, #0]
    1c8e:	9901      	ldr	r1, [sp, #4]
    1c90:	47a8      	blx	r5
    1c92:	6a22      	ldr	r2, [r4, #32]
    1c94:	6a63      	ldr	r3, [r4, #36]	; 0x24
    1c96:	0006      	movs	r6, r0
    1c98:	000f      	movs	r7, r1
    1c9a:	9802      	ldr	r0, [sp, #8]
    1c9c:	9903      	ldr	r1, [sp, #12]
    1c9e:	47a8      	blx	r5
    1ca0:	0002      	movs	r2, r0
    1ca2:	000b      	movs	r3, r1
    1ca4:	0030      	movs	r0, r6
    1ca6:	0039      	movs	r1, r7
    1ca8:	4e50      	ldr	r6, [pc, #320]	; (1dec <computeKalmanStates+0x230>)
    1caa:	47b0      	blx	r6
    1cac:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    1cae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    1cb0:	0006      	movs	r6, r0
    1cb2:	000f      	movs	r7, r1
    1cb4:	9804      	ldr	r0, [sp, #16]
    1cb6:	9905      	ldr	r1, [sp, #20]
    1cb8:	47a8      	blx	r5
    1cba:	0002      	movs	r2, r0
    1cbc:	000b      	movs	r3, r1
    1cbe:	0030      	movs	r0, r6
    1cc0:	0039      	movs	r1, r7
    1cc2:	4e4a      	ldr	r6, [pc, #296]	; (1dec <computeKalmanStates+0x230>)
    1cc4:	47b0      	blx	r6
    1cc6:	900c      	str	r0, [sp, #48]	; 0x30
    1cc8:	910d      	str	r1, [sp, #52]	; 0x34
    1cca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    1ccc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    1cce:	4943      	ldr	r1, [pc, #268]	; (1ddc <computeKalmanStates+0x220>)
    1cd0:	608a      	str	r2, [r1, #8]
    1cd2:	60cb      	str	r3, [r1, #12]
    estp[2] = phi[2][0] * altitude + phi[2][1] * velocity + phi[2][2] * accel;
    1cd4:	6b22      	ldr	r2, [r4, #48]	; 0x30
    1cd6:	6b63      	ldr	r3, [r4, #52]	; 0x34
    1cd8:	9800      	ldr	r0, [sp, #0]
    1cda:	9901      	ldr	r1, [sp, #4]
    1cdc:	47a8      	blx	r5
    1cde:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    1ce0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    1ce2:	0006      	movs	r6, r0
    1ce4:	000f      	movs	r7, r1
    1ce6:	9802      	ldr	r0, [sp, #8]
    1ce8:	9903      	ldr	r1, [sp, #12]
    1cea:	47a8      	blx	r5
    1cec:	0002      	movs	r2, r0
    1cee:	000b      	movs	r3, r1
    1cf0:	0030      	movs	r0, r6
    1cf2:	0039      	movs	r1, r7
    1cf4:	4e3d      	ldr	r6, [pc, #244]	; (1dec <computeKalmanStates+0x230>)
    1cf6:	47b0      	blx	r6
    1cf8:	6c22      	ldr	r2, [r4, #64]	; 0x40
    1cfa:	6c63      	ldr	r3, [r4, #68]	; 0x44
    1cfc:	0006      	movs	r6, r0
    1cfe:	000f      	movs	r7, r1
    1d00:	9804      	ldr	r0, [sp, #16]
    1d02:	9905      	ldr	r1, [sp, #20]
    1d04:	47a8      	blx	r5
    1d06:	4c39      	ldr	r4, [pc, #228]	; (1dec <computeKalmanStates+0x230>)
    1d08:	0002      	movs	r2, r0
    1d0a:	000b      	movs	r3, r1
    1d0c:	0030      	movs	r0, r6
    1d0e:	0039      	movs	r1, r7
    1d10:	47a0      	blx	r4
    1d12:	0003      	movs	r3, r0
    1d14:	000c      	movs	r4, r1
    1d16:	4a31      	ldr	r2, [pc, #196]	; (1ddc <computeKalmanStates+0x220>)
    1d18:	9000      	str	r0, [sp, #0]
    1d1a:	9101      	str	r1, [sp, #4]
    1d1c:	6113      	str	r3, [r2, #16]
    1d1e:	6154      	str	r4, [r2, #20]

    /*
    Update state
    */
    altitude = estp[0] + kgain[0][0] * alt_inovation + kgain[0][1] * accel_inovation;
    1d20:	4c33      	ldr	r4, [pc, #204]	; (1df0 <computeKalmanStates+0x234>)
    1d22:	6822      	ldr	r2, [r4, #0]
    1d24:	6863      	ldr	r3, [r4, #4]
    1d26:	9806      	ldr	r0, [sp, #24]
    1d28:	9907      	ldr	r1, [sp, #28]
    1d2a:	47a8      	blx	r5
    1d2c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    1d2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    1d30:	4e2e      	ldr	r6, [pc, #184]	; (1dec <computeKalmanStates+0x230>)
    1d32:	47b0      	blx	r6
    1d34:	68a2      	ldr	r2, [r4, #8]
    1d36:	68e3      	ldr	r3, [r4, #12]
    1d38:	0006      	movs	r6, r0
    1d3a:	000f      	movs	r7, r1
    1d3c:	9808      	ldr	r0, [sp, #32]
    1d3e:	9909      	ldr	r1, [sp, #36]	; 0x24
    1d40:	47a8      	blx	r5
    1d42:	0002      	movs	r2, r0
    1d44:	000b      	movs	r3, r1
    1d46:	0030      	movs	r0, r6
    1d48:	0039      	movs	r1, r7
    1d4a:	4e28      	ldr	r6, [pc, #160]	; (1dec <computeKalmanStates+0x230>)
    1d4c:	47b0      	blx	r6
    1d4e:	4b21      	ldr	r3, [pc, #132]	; (1dd4 <computeKalmanStates+0x218>)
    1d50:	6018      	str	r0, [r3, #0]
    1d52:	6059      	str	r1, [r3, #4]
    velocity = estp[1] + kgain[1][0] * alt_inovation + kgain[1][1] * accel_inovation;
    1d54:	6922      	ldr	r2, [r4, #16]
    1d56:	6963      	ldr	r3, [r4, #20]
    1d58:	9806      	ldr	r0, [sp, #24]
    1d5a:	9907      	ldr	r1, [sp, #28]
    1d5c:	47a8      	blx	r5
    1d5e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    1d60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    1d62:	47b0      	blx	r6
    1d64:	69a2      	ldr	r2, [r4, #24]
    1d66:	69e3      	ldr	r3, [r4, #28]
    1d68:	0006      	movs	r6, r0
    1d6a:	000f      	movs	r7, r1
    1d6c:	9808      	ldr	r0, [sp, #32]
    1d6e:	9909      	ldr	r1, [sp, #36]	; 0x24
    1d70:	47a8      	blx	r5
    1d72:	0002      	movs	r2, r0
    1d74:	000b      	movs	r3, r1
    1d76:	0030      	movs	r0, r6
    1d78:	0039      	movs	r1, r7
    1d7a:	4e1c      	ldr	r6, [pc, #112]	; (1dec <computeKalmanStates+0x230>)
    1d7c:	47b0      	blx	r6
    1d7e:	4b18      	ldr	r3, [pc, #96]	; (1de0 <computeKalmanStates+0x224>)
    1d80:	6018      	str	r0, [r3, #0]
    1d82:	6059      	str	r1, [r3, #4]
    accel =    estp[2] + kgain[2][0] * alt_inovation + kgain[2][1] * accel_inovation;
    1d84:	6a22      	ldr	r2, [r4, #32]
    1d86:	6a63      	ldr	r3, [r4, #36]	; 0x24
    1d88:	9806      	ldr	r0, [sp, #24]
    1d8a:	9907      	ldr	r1, [sp, #28]
    1d8c:	47a8      	blx	r5
    1d8e:	9a00      	ldr	r2, [sp, #0]
    1d90:	9b01      	ldr	r3, [sp, #4]
    1d92:	47b0      	blx	r6
    1d94:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    1d96:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    1d98:	0006      	movs	r6, r0
    1d9a:	000f      	movs	r7, r1
    1d9c:	9808      	ldr	r0, [sp, #32]
    1d9e:	9909      	ldr	r1, [sp, #36]	; 0x24
    1da0:	47a8      	blx	r5
    1da2:	4c12      	ldr	r4, [pc, #72]	; (1dec <computeKalmanStates+0x230>)
    1da4:	0002      	movs	r2, r0
    1da6:	000b      	movs	r3, r1
    1da8:	0030      	movs	r0, r6
    1daa:	0039      	movs	r1, r7
    1dac:	47a0      	blx	r4
    1dae:	4b0d      	ldr	r3, [pc, #52]	; (1de4 <computeKalmanStates+0x228>)
    1db0:	6018      	str	r0, [r3, #0]
    1db2:	6059      	str	r1, [r3, #4]

}
    1db4:	b00f      	add	sp, #60	; 0x3c
    1db6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1db8:	20000798 	.word	0x20000798
    1dbc:	00005dd9 	.word	0x00005dd9
    1dc0:	200004c8 	.word	0x200004c8
    1dc4:	00005611 	.word	0x00005611
    1dc8:	33daf8df 	.word	0x33daf8df
    1dcc:	4040164b 	.word	0x4040164b
    1dd0:	00005111 	.word	0x00005111
    1dd4:	20000668 	.word	0x20000668
    1dd8:	00003951 	.word	0x00003951
    1ddc:	20000670 	.word	0x20000670
    1de0:	20000660 	.word	0x20000660
    1de4:	20000658 	.word	0x20000658
    1de8:	20000010 	.word	0x20000010
    1dec:	00004289 	.word	0x00004289
    1df0:	20000620 	.word	0x20000620

00001df4 <makePage>:
u8_t pageLocation;

bool pageReady;


void makePage(u8_t bytesToWrite, u8_t* data) {
    1df4:	b5f0      	push	{r4, r5, r6, r7, lr}


    u8_t location = pageLocation;
    1df6:	4a1f      	ldr	r2, [pc, #124]	; (1e74 <makePage+0x80>)
    1df8:	7814      	ldrb	r4, [r2, #0]
    u8_t bytesWritten = 0;

    if ((location + bytesToWrite) > 0xFF) {
    1dfa:	1903      	adds	r3, r0, r4
    1dfc:	2bff      	cmp	r3, #255	; 0xff
    1dfe:	dc0c      	bgt.n	1e1a <makePage+0x26>
    1e00:	2300      	movs	r3, #0
        }
        pageReady = true;

    } else {
        for (u16_t dataByte = 0; dataByte <= bytesToWrite; ++dataByte) {
            pageBuffer[(dataByte + location)] = data[dataByte];
    1e02:	4d1d      	ldr	r5, [pc, #116]	; (1e78 <makePage+0x84>)
        for (u16_t dataByte = 0; dataByte <= bytesToWrite; ++dataByte) {
    1e04:	b280      	uxth	r0, r0
            pageBuffer[(dataByte + location)] = data[dataByte];
    1e06:	1965      	adds	r5, r4, r5
        for (u16_t dataByte = 0; dataByte <= bytesToWrite; ++dataByte) {
    1e08:	b29e      	uxth	r6, r3
    1e0a:	42b0      	cmp	r0, r6
    1e0c:	d322      	bcc.n	1e54 <makePage+0x60>
            pageBuffer[(dataByte + location)] = data[dataByte];
    1e0e:	5cce      	ldrb	r6, [r1, r3]
    1e10:	54ee      	strb	r6, [r5, r3]
            bytesWritten++;
            pageLocation = location + dataByte;
    1e12:	18e6      	adds	r6, r4, r3
    1e14:	7016      	strb	r6, [r2, #0]
    1e16:	3301      	adds	r3, #1
    1e18:	e7f6      	b.n	1e08 <makePage+0x14>
    1e1a:	2300      	movs	r3, #0
    1e1c:	4d16      	ldr	r5, [pc, #88]	; (1e78 <makePage+0x84>)
    1e1e:	b2de      	uxtb	r6, r3
    1e20:	46b4      	mov	ip, r6
        for (u16_t dataByte = 0; (dataByte + location) <= 0xFF; ++dataByte) {
    1e22:	191e      	adds	r6, r3, r4
    1e24:	2eff      	cmp	r6, #255	; 0xff
    1e26:	dd16      	ble.n	1e56 <makePage+0x62>
        pageLocation = 0x00;
    1e28:	2300      	movs	r3, #0
            pageToWrite[i] = pageBuffer[i];
    1e2a:	4f14      	ldr	r7, [pc, #80]	; (1e7c <makePage+0x88>)
        pageLocation = 0x00;
    1e2c:	7013      	strb	r3, [r2, #0]
            pageToWrite[i] = pageBuffer[i];
    1e2e:	18ec      	adds	r4, r5, r3
    1e30:	7826      	ldrb	r6, [r4, #0]
    1e32:	54fe      	strb	r6, [r7, r3]
            pageBuffer[i] = 0;
    1e34:	2600      	movs	r6, #0
    1e36:	7026      	strb	r6, [r4, #0]
        for(u16_t i = 0; i <= 0xFF; ++i) {
    1e38:	2480      	movs	r4, #128	; 0x80
    1e3a:	3301      	adds	r3, #1
    1e3c:	0064      	lsls	r4, r4, #1
    1e3e:	42a3      	cmp	r3, r4
    1e40:	d1f5      	bne.n	1e2e <makePage+0x3a>
    1e42:	4663      	mov	r3, ip
    1e44:	2500      	movs	r5, #0
            pageBuffer[dataByte] = data[bytesWritten];
    1e46:	4f0c      	ldr	r7, [pc, #48]	; (1e78 <makePage+0x84>)
    1e48:	1c6c      	adds	r4, r5, #1
        for (u16_t dataByte = 0; bytesWritten < bytesToWrite; ++dataByte) {
    1e4a:	4283      	cmp	r3, r0
    1e4c:	d308      	bcc.n	1e60 <makePage+0x6c>
        pageReady = true;
    1e4e:	2201      	movs	r2, #1
    1e50:	4b0b      	ldr	r3, [pc, #44]	; (1e80 <makePage+0x8c>)
    1e52:	701a      	strb	r2, [r3, #0]
        }
    }
}
    1e54:	bdf0      	pop	{r4, r5, r6, r7, pc}
            pageBuffer[(dataByte + location)] = data[dataByte];
    1e56:	5ccf      	ldrb	r7, [r1, r3]
        for (u16_t dataByte = 0; (dataByte + location) <= 0xFF; ++dataByte) {
    1e58:	3301      	adds	r3, #1
            pageBuffer[(dataByte + location)] = data[dataByte];
    1e5a:	55af      	strb	r7, [r5, r6]
        for (u16_t dataByte = 0; (dataByte + location) <= 0xFF; ++dataByte) {
    1e5c:	b29b      	uxth	r3, r3
    1e5e:	e7de      	b.n	1e1e <makePage+0x2a>
            pageBuffer[dataByte] = data[bytesWritten];
    1e60:	4666      	mov	r6, ip
    1e62:	1936      	adds	r6, r6, r4
    1e64:	3e01      	subs	r6, #1
    1e66:	5d8e      	ldrb	r6, [r1, r6]
            bytesWritten++;
    1e68:	3301      	adds	r3, #1
            pageBuffer[dataByte] = data[bytesWritten];
    1e6a:	557e      	strb	r6, [r7, r5]
            bytesWritten++;
    1e6c:	b2db      	uxtb	r3, r3
            pageLocation = dataByte + 1;
    1e6e:	7014      	strb	r4, [r2, #0]
    1e70:	0025      	movs	r5, r4
    1e72:	e7e9      	b.n	1e48 <makePage+0x54>
    1e74:	20000794 	.word	0x20000794
    1e78:	2000050d 	.word	0x2000050d
    1e7c:	20000688 	.word	0x20000688
    1e80:	20000788 	.word	0x20000788

00001e84 <logFlight>:


void logFlight() {
    1e84:	b51f      	push	{r0, r1, r2, r3, r4, lr}

    u8_t bytesToSend = 16;
    u8_t dataToSend[16];

    dataToSend[0] = FLIGHT_LOG;
    1e86:	2346      	movs	r3, #70	; 0x46
    1e88:	466a      	mov	r2, sp
    1e8a:	7013      	strb	r3, [r2, #0]
    dataToSend[1] = 0;
    1e8c:	2300      	movs	r3, #0

    dataToSend[2] = offsets.offsetBufferTime >> 0;
    1e8e:	4669      	mov	r1, sp
    dataToSend[3] = offsets.offsetBufferTime >> 8;
    1e90:	4668      	mov	r0, sp
    dataToSend[1] = 0;
    1e92:	7053      	strb	r3, [r2, #1]
    dataToSend[2] = offsets.offsetBufferTime >> 0;
    1e94:	4a10      	ldr	r2, [pc, #64]	; (1ed8 <logFlight+0x54>)
    1e96:	6813      	ldr	r3, [r2, #0]
    1e98:	708b      	strb	r3, [r1, #2]
    dataToSend[3] = offsets.offsetBufferTime >> 8;
    1e9a:	0a19      	lsrs	r1, r3, #8
    1e9c:	70c1      	strb	r1, [r0, #3]
    dataToSend[4] = offsets.offsetBufferTime >> 16;
    1e9e:	0c19      	lsrs	r1, r3, #16
    dataToSend[5] = offsets.offsetBufferTime >> 24;
    1ea0:	0e1b      	lsrs	r3, r3, #24
    1ea2:	7143      	strb	r3, [r0, #5]

    dataToSend[6] = offsets.groundOffset >> 0;
    1ea4:	6993      	ldr	r3, [r2, #24]
    dataToSend[4] = offsets.offsetBufferTime >> 16;
    1ea6:	7101      	strb	r1, [r0, #4]
    dataToSend[7] = offsets.groundOffset >> 8;
    1ea8:	0a19      	lsrs	r1, r3, #8
    dataToSend[6] = offsets.groundOffset >> 0;
    1eaa:	7183      	strb	r3, [r0, #6]
    dataToSend[7] = offsets.groundOffset >> 8;
    1eac:	71c1      	strb	r1, [r0, #7]
    dataToSend[8] = offsets.groundOffset >> 16;
    1eae:	0c19      	lsrs	r1, r3, #16
    dataToSend[9] = offsets.groundOffset >> 24;
    1eb0:	0e1b      	lsrs	r3, r3, #24
    1eb2:	7243      	strb	r3, [r0, #9]

    dataToSend[10] = offsets.groundTemperature >> 0;
    1eb4:	6a13      	ldr	r3, [r2, #32]
    dataToSend[8] = offsets.groundOffset >> 16;
    1eb6:	7201      	strb	r1, [r0, #8]
    dataToSend[11] = offsets.groundTemperature >> 8;
    1eb8:	0a1a      	lsrs	r2, r3, #8
    dataToSend[10] = offsets.groundTemperature >> 0;
    1eba:	7283      	strb	r3, [r0, #10]
    dataToSend[11] = offsets.groundTemperature >> 8;
    1ebc:	72c2      	strb	r2, [r0, #11]
    dataToSend[12] = offsets.groundTemperature >> 16;
    1ebe:	0c1a      	lsrs	r2, r3, #16
    dataToSend[13] = offsets.groundTemperature >> 24;
    1ec0:	0e1b      	lsrs	r3, r3, #24
    1ec2:	7343      	strb	r3, [r0, #13]

    //dataToSend[14] = accel >> 0;
    dataToSend[15] = 0xfe;
    1ec4:	23fe      	movs	r3, #254	; 0xfe
    dataToSend[12] = offsets.groundTemperature >> 16;
    1ec6:	7302      	strb	r2, [r0, #12]
    dataToSend[15] = 0xfe;
    1ec8:	73c3      	strb	r3, [r0, #15]
    dataToSend[9] = offsets.groundOffset >> 24;
    1eca:	4669      	mov	r1, sp

    makePage(bytesToSend, dataToSend);
    1ecc:	2010      	movs	r0, #16
    1ece:	4b03      	ldr	r3, [pc, #12]	; (1edc <logFlight+0x58>)
    1ed0:	4798      	blx	r3
}
    1ed2:	b005      	add	sp, #20
    1ed4:	bd00      	pop	{pc}
    1ed6:	46c0      	nop			; (mov r8, r8)
    1ed8:	200004c8 	.word	0x200004c8
    1edc:	00001df5 	.word	0x00001df5

00001ee0 <logEvent>:

void logEvent(u8_t eventType) {
    1ee0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}

    u8_t bytesToSend = 12;
    u8_t dataToSend[12];

    dataToSend[0] = EVENT_LOG;
    1ee2:	2345      	movs	r3, #69	; 0x45
    dataToSend[1] = eventType;
    dataToSend[2] = sample.sampleTick >> 0;
    1ee4:	4d10      	ldr	r5, [pc, #64]	; (1f28 <logEvent+0x48>)
    dataToSend[0] = EVENT_LOG;
    1ee6:	ac01      	add	r4, sp, #4
    1ee8:	7023      	strb	r3, [r4, #0]
    dataToSend[2] = sample.sampleTick >> 0;
    1eea:	686b      	ldr	r3, [r5, #4]
    dataToSend[3] = sample.sampleTick >> 8;
    dataToSend[4] = sample.sampleTick >> 16;
    dataToSend[5] = sample.sampleTick >> 24;

    dataToSend[6] = altitudeAGL() >> 0;
    1eec:	4e0f      	ldr	r6, [pc, #60]	; (1f2c <logEvent+0x4c>)
    dataToSend[3] = sample.sampleTick >> 8;
    1eee:	0a1a      	lsrs	r2, r3, #8
    dataToSend[2] = sample.sampleTick >> 0;
    1ef0:	70a3      	strb	r3, [r4, #2]
    dataToSend[3] = sample.sampleTick >> 8;
    1ef2:	70e2      	strb	r2, [r4, #3]
    dataToSend[4] = sample.sampleTick >> 16;
    1ef4:	0c1a      	lsrs	r2, r3, #16
    dataToSend[5] = sample.sampleTick >> 24;
    1ef6:	0e1b      	lsrs	r3, r3, #24
    dataToSend[4] = sample.sampleTick >> 16;
    1ef8:	7122      	strb	r2, [r4, #4]
    dataToSend[5] = sample.sampleTick >> 24;
    1efa:	7163      	strb	r3, [r4, #5]
    dataToSend[1] = eventType;
    1efc:	7060      	strb	r0, [r4, #1]
    dataToSend[6] = altitudeAGL() >> 0;
    1efe:	47b0      	blx	r6
    1f00:	71a0      	strb	r0, [r4, #6]
    dataToSend[7] = altitudeAGL() >> 8;
    1f02:	47b0      	blx	r6
    1f04:	1200      	asrs	r0, r0, #8
    1f06:	71e0      	strb	r0, [r4, #7]
    dataToSend[8] = altitudeAGL() >> 16;
    1f08:	47b0      	blx	r6
    1f0a:	1400      	asrs	r0, r0, #16
    1f0c:	7220      	strb	r0, [r4, #8]
    dataToSend[9] = altitudeAGL() >> 24;
    1f0e:	47b0      	blx	r6
    1f10:	1600      	asrs	r0, r0, #24
    1f12:	7260      	strb	r0, [r4, #9]

    dataToSend[10] = sample.voltage.batV >> 0;
    1f14:	892b      	ldrh	r3, [r5, #8]
    dataToSend[11] = sample.voltage.batV >> 8;

    makePage(bytesToSend, dataToSend);
    1f16:	0021      	movs	r1, r4
    dataToSend[10] = sample.voltage.batV >> 0;
    1f18:	72a3      	strb	r3, [r4, #10]
    dataToSend[11] = sample.voltage.batV >> 8;
    1f1a:	0a1b      	lsrs	r3, r3, #8
    1f1c:	72e3      	strb	r3, [r4, #11]
    makePage(bytesToSend, dataToSend);
    1f1e:	200c      	movs	r0, #12
    1f20:	4b03      	ldr	r3, [pc, #12]	; (1f30 <logEvent+0x50>)
    1f22:	4798      	blx	r3

}
    1f24:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
    1f26:	46c0      	nop			; (mov r8, r8)
    1f28:	20000798 	.word	0x20000798
    1f2c:	00000b11 	.word	0x00000b11
    1f30:	00001df5 	.word	0x00001df5

00001f34 <logSensors>:
void logSensors() {

    u8_t bytesToSend = 24;
    u8_t dataToSend[24];

    dataToSend[0] = SENSOR_LOG;
    1f34:	2353      	movs	r3, #83	; 0x53
void logSensors() {
    1f36:	b5f0      	push	{r4, r5, r6, r7, lr}
    1f38:	b08b      	sub	sp, #44	; 0x2c
    dataToSend[0] = SENSOR_LOG;
    1f3a:	ac04      	add	r4, sp, #16
    1f3c:	7023      	strb	r3, [r4, #0]

    dataToSend[1] = sample.sampleTick >> 0;
    1f3e:	4b3f      	ldr	r3, [pc, #252]	; (203c <STACK_SIZE+0x3c>)
    dataToSend[2] = sample.sampleTick >> 8;
    dataToSend[3] = sample.sampleTick >> 16;
    dataToSend[4] = sample.sampleTick >> 24;

    dataToSend[5] = altitudeAGL() >> 0;
    1f40:	4e3f      	ldr	r6, [pc, #252]	; (2040 <STACK_SIZE+0x40>)
    dataToSend[1] = sample.sampleTick >> 0;
    1f42:	685b      	ldr	r3, [r3, #4]
    dataToSend[2] = sample.sampleTick >> 8;
    1f44:	0a1a      	lsrs	r2, r3, #8
    dataToSend[1] = sample.sampleTick >> 0;
    1f46:	7063      	strb	r3, [r4, #1]
    dataToSend[2] = sample.sampleTick >> 8;
    1f48:	70a2      	strb	r2, [r4, #2]
    dataToSend[3] = sample.sampleTick >> 16;
    1f4a:	0c1a      	lsrs	r2, r3, #16
    dataToSend[4] = sample.sampleTick >> 24;
    1f4c:	0e1b      	lsrs	r3, r3, #24
    dataToSend[3] = sample.sampleTick >> 16;
    1f4e:	70e2      	strb	r2, [r4, #3]
    dataToSend[4] = sample.sampleTick >> 24;
    1f50:	7123      	strb	r3, [r4, #4]
    dataToSend[5] = altitudeAGL() >> 0;
    1f52:	47b0      	blx	r6
    1f54:	7160      	strb	r0, [r4, #5]
    dataToSend[6] = altitudeAGL() >> 8;
    1f56:	47b0      	blx	r6
    1f58:	1200      	asrs	r0, r0, #8
    1f5a:	71a0      	strb	r0, [r4, #6]
    dataToSend[7] = altitudeAGL() >> 16;
    1f5c:	47b0      	blx	r6
    1f5e:	1400      	asrs	r0, r0, #16
    1f60:	71e0      	strb	r0, [r4, #7]
    dataToSend[8] = altitudeAGL() >> 24;
    1f62:	47b0      	blx	r6

    volatile float fractionalAccel = accel - (int16_t)(accel);
    1f64:	4b37      	ldr	r3, [pc, #220]	; (2044 <STACK_SIZE+0x44>)
    dataToSend[8] = altitudeAGL() >> 24;
    1f66:	1600      	asrs	r0, r0, #24
    volatile float fractionalAccel = accel - (int16_t)(accel);
    1f68:	681e      	ldr	r6, [r3, #0]
    1f6a:	685f      	ldr	r7, [r3, #4]
    dataToSend[8] = altitudeAGL() >> 24;
    1f6c:	7220      	strb	r0, [r4, #8]
    volatile float fractionalAccel = accel - (int16_t)(accel);
    1f6e:	0039      	movs	r1, r7
    1f70:	4b35      	ldr	r3, [pc, #212]	; (2048 <STACK_SIZE+0x48>)
    1f72:	0030      	movs	r0, r6
    1f74:	4798      	blx	r3
    1f76:	b203      	sxth	r3, r0
    1f78:	001d      	movs	r5, r3
    1f7a:	0018      	movs	r0, r3
    1f7c:	4b33      	ldr	r3, [pc, #204]	; (204c <STACK_SIZE+0x4c>)
    1f7e:	4798      	blx	r3
    1f80:	0002      	movs	r2, r0
    1f82:	000b      	movs	r3, r1
    1f84:	0030      	movs	r0, r6
    1f86:	0039      	movs	r1, r7
    1f88:	4e31      	ldr	r6, [pc, #196]	; (2050 <STACK_SIZE+0x50>)
    1f8a:	47b0      	blx	r6
    1f8c:	4b31      	ldr	r3, [pc, #196]	; (2054 <STACK_SIZE+0x54>)
    1f8e:	4798      	blx	r3
    1f90:	9003      	str	r0, [sp, #12]
    volatile int16_t fractAccelPart = fractionalAccel * 1000;
    1f92:	9803      	ldr	r0, [sp, #12]
    1f94:	4b30      	ldr	r3, [pc, #192]	; (2058 <STACK_SIZE+0x58>)
    1f96:	4931      	ldr	r1, [pc, #196]	; (205c <STACK_SIZE+0x5c>)
    1f98:	4798      	blx	r3
    1f9a:	4e31      	ldr	r6, [pc, #196]	; (2060 <STACK_SIZE+0x60>)
    1f9c:	47b0      	blx	r6
    1f9e:	ab02      	add	r3, sp, #8
    1fa0:	b200      	sxth	r0, r0
    1fa2:	8058      	strh	r0, [r3, #2]

    dataToSend[9] = (int16_t)(accel) >> 0;
    dataToSend[10] = (int16_t)(accel) >> 8;
    dataToSend[11] = fractAccelPart >> 0;
    1fa4:	885a      	ldrh	r2, [r3, #2]
    volatile int16_t fractAccelPart = fractionalAccel * 1000;
    1fa6:	3302      	adds	r3, #2
    dataToSend[12] = fractAccelPart >> 8;
    1fa8:	881b      	ldrh	r3, [r3, #0]
    dataToSend[10] = (int16_t)(accel) >> 8;
    1faa:	1228      	asrs	r0, r5, #8
    dataToSend[12] = fractAccelPart >> 8;
    1fac:	0a1b      	lsrs	r3, r3, #8
    1fae:	7323      	strb	r3, [r4, #12]


     float fractionalVelocity = velocity - (int16_t)(velocity);
    1fb0:	4b2c      	ldr	r3, [pc, #176]	; (2064 <STACK_SIZE+0x64>)
    dataToSend[9] = (int16_t)(accel) >> 0;
    1fb2:	7265      	strb	r5, [r4, #9]
    dataToSend[10] = (int16_t)(accel) >> 8;
    1fb4:	72a0      	strb	r0, [r4, #10]
    dataToSend[11] = fractAccelPart >> 0;
    1fb6:	72e2      	strb	r2, [r4, #11]
     float fractionalVelocity = velocity - (int16_t)(velocity);
    1fb8:	681a      	ldr	r2, [r3, #0]
    1fba:	685b      	ldr	r3, [r3, #4]
    1fbc:	9200      	str	r2, [sp, #0]
    1fbe:	9301      	str	r3, [sp, #4]
    1fc0:	0010      	movs	r0, r2
    1fc2:	0019      	movs	r1, r3
    1fc4:	4b20      	ldr	r3, [pc, #128]	; (2048 <STACK_SIZE+0x48>)
    1fc6:	4798      	blx	r3
    1fc8:	b207      	sxth	r7, r0
    1fca:	4b20      	ldr	r3, [pc, #128]	; (204c <STACK_SIZE+0x4c>)
    1fcc:	0038      	movs	r0, r7
    1fce:	4798      	blx	r3
    1fd0:	4d1f      	ldr	r5, [pc, #124]	; (2050 <STACK_SIZE+0x50>)
    1fd2:	0002      	movs	r2, r0
    1fd4:	000b      	movs	r3, r1
    1fd6:	9800      	ldr	r0, [sp, #0]
    1fd8:	9901      	ldr	r1, [sp, #4]
    1fda:	47a8      	blx	r5
    1fdc:	4b1d      	ldr	r3, [pc, #116]	; (2054 <STACK_SIZE+0x54>)
    1fde:	4798      	blx	r3
     int16_t fractVelocityPart = fractionalVelocity * 1000;
    1fe0:	4b1d      	ldr	r3, [pc, #116]	; (2058 <STACK_SIZE+0x58>)
    1fe2:	491e      	ldr	r1, [pc, #120]	; (205c <STACK_SIZE+0x5c>)
    1fe4:	4798      	blx	r3
    1fe6:	47b0      	blx	r6

    dataToSend[13] = (int16_t)(velocity) >> 0;
    1fe8:	7367      	strb	r7, [r4, #13]
     int16_t fractVelocityPart = fractionalVelocity * 1000;
    1fea:	b203      	sxth	r3, r0
    dataToSend[14] = (int16_t)(velocity) >> 8;
    1fec:	123f      	asrs	r7, r7, #8
    1fee:	73a7      	strb	r7, [r4, #14]
    dataToSend[15] = fractVelocityPart >> 0;
    1ff0:	73e3      	strb	r3, [r4, #15]
    dataToSend[16] = fractVelocityPart >> 8;
    1ff2:	121b      	asrs	r3, r3, #8
    1ff4:	7423      	strb	r3, [r4, #16]

//     if ( ((fractVelocityPart < 0) & ((int16_t)(velocity) > 0)) | ((fractVelocityPart > 0) & ((int16_t)(velocity) < 0)) ) {
//         beep(200);
//     }

    dataToSend[17] = (u32_t)sample.altitudefeet >> 0;
    1ff6:	4b11      	ldr	r3, [pc, #68]	; (203c <STACK_SIZE+0x3c>)
    1ff8:	6c18      	ldr	r0, [r3, #64]	; 0x40
    1ffa:	6c59      	ldr	r1, [r3, #68]	; 0x44
    1ffc:	4b1a      	ldr	r3, [pc, #104]	; (2068 <STACK_SIZE+0x68>)
    1ffe:	4798      	blx	r3
    dataToSend[18] = (u32_t)sample.altitudefeet >> 8;
    2000:	0a03      	lsrs	r3, r0, #8
    2002:	74a3      	strb	r3, [r4, #18]
    dataToSend[19] = (u32_t)sample.altitudefeet >> 16;
    2004:	0c03      	lsrs	r3, r0, #16
    2006:	74e3      	strb	r3, [r4, #19]
    dataToSend[20] = (u32_t)sample.altitudefeet >> 24;

    float fractionalAccelraw = sample.accelZ - (int16_t)(sample.accelZ);
    2008:	4b0c      	ldr	r3, [pc, #48]	; (203c <STACK_SIZE+0x3c>)
    dataToSend[17] = (u32_t)sample.altitudefeet >> 0;
    200a:	7460      	strb	r0, [r4, #17]
    float fractionalAccelraw = sample.accelZ - (int16_t)(sample.accelZ);
    200c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
    dataToSend[20] = (u32_t)sample.altitudefeet >> 24;
    200e:	0e00      	lsrs	r0, r0, #24
    2010:	7520      	strb	r0, [r4, #20]
    float fractionalAccelraw = sample.accelZ - (int16_t)(sample.accelZ);
    2012:	1c28      	adds	r0, r5, #0
    2014:	47b0      	blx	r6
    2016:	b200      	sxth	r0, r0
    u8_t fractAccelRawPart = fractionalAccelraw;

    dataToSend[21] = (int16_t)(sample.accelZ) >> 0;
    dataToSend[22] = (int16_t)(sample.accelZ) >> 8;
    2018:	1203      	asrs	r3, r0, #8
    201a:	75a3      	strb	r3, [r4, #22]
    dataToSend[21] = (int16_t)(sample.accelZ) >> 0;
    201c:	7560      	strb	r0, [r4, #21]
    float fractionalAccelraw = sample.accelZ - (int16_t)(sample.accelZ);
    201e:	4b13      	ldr	r3, [pc, #76]	; (206c <STACK_SIZE+0x6c>)
    2020:	4798      	blx	r3
    2022:	4b13      	ldr	r3, [pc, #76]	; (2070 <STACK_SIZE+0x70>)
    2024:	1c01      	adds	r1, r0, #0
    2026:	1c28      	adds	r0, r5, #0
    2028:	4798      	blx	r3
    u8_t fractAccelRawPart = fractionalAccelraw;
    202a:	4b12      	ldr	r3, [pc, #72]	; (2074 <STACK_SIZE+0x74>)
    202c:	4798      	blx	r3
     dataToSend[22] = 0xfd;
     dataToSend[23] = 0xfe;

     */

    makePage(bytesToSend, dataToSend);
    202e:	0021      	movs	r1, r4
    dataToSend[23] = fractAccelRawPart;
    2030:	75e0      	strb	r0, [r4, #23]
    makePage(bytesToSend, dataToSend);
    2032:	4b11      	ldr	r3, [pc, #68]	; (2078 <STACK_SIZE+0x78>)
    2034:	2018      	movs	r0, #24
    2036:	4798      	blx	r3
}
    2038:	b00b      	add	sp, #44	; 0x2c
    203a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    203c:	20000798 	.word	0x20000798
    2040:	00000b11 	.word	0x00000b11
    2044:	20000658 	.word	0x20000658
    2048:	00005c7d 	.word	0x00005c7d
    204c:	00005ce5 	.word	0x00005ce5
    2050:	00005611 	.word	0x00005611
    2054:	00005e7d 	.word	0x00005e7d
    2058:	00003c31 	.word	0x00003c31
    205c:	447a0000 	.word	0x447a0000
    2060:	000041a9 	.word	0x000041a9
    2064:	20000660 	.word	0x20000660
    2068:	00003aa5 	.word	0x00003aa5
    206c:	000041e9 	.word	0x000041e9
    2070:	00003e71 	.word	0x00003e71
    2074:	00003a75 	.word	0x00003a75
    2078:	00001df5 	.word	0x00001df5

0000207c <getFlightStartAddress>:



u32_t getFlightStartAddress(u8_t flightToFind) {
    207c:	b513      	push	{r0, r1, r4, lr}
    207e:	0003      	movs	r3, r0

    u8_t addressToCheck[3];

    u16_t flightAddressLoc = FLIGHTZEROSTART + (flightToFind * 0x06);
    2080:	2006      	movs	r0, #6
    2082:	4358      	muls	r0, r3

    AT25SEreadSample(flightAddressLoc, 0x03, addressToCheck);
    2084:	ac01      	add	r4, sp, #4
    2086:	3001      	adds	r0, #1
    2088:	30ff      	adds	r0, #255	; 0xff
    208a:	0022      	movs	r2, r4
    208c:	2103      	movs	r1, #3
    208e:	4b05      	ldr	r3, [pc, #20]	; (20a4 <getFlightStartAddress+0x28>)
    2090:	4798      	blx	r3

    u32_t flightStartAddress = addressToCheck[0] << 0 | addressToCheck[1] << 8 | addressToCheck[2] << 16;
    2092:	7860      	ldrb	r0, [r4, #1]
    2094:	78a3      	ldrb	r3, [r4, #2]
    2096:	0200      	lsls	r0, r0, #8
    2098:	041b      	lsls	r3, r3, #16
    209a:	4318      	orrs	r0, r3
    209c:	7823      	ldrb	r3, [r4, #0]
    209e:	4318      	orrs	r0, r3

    return flightStartAddress;
}
    20a0:	bd16      	pop	{r1, r2, r4, pc}
    20a2:	46c0      	nop			; (mov r8, r8)
    20a4:	0000033d 	.word	0x0000033d

000020a8 <FindFlightEndingAddress>:

u32_t FindFlightEndingAddress(u8_t findThisFlightsEnd) {
    20a8:	b513      	push	{r0, r1, r4, lr}
    20aa:	0003      	movs	r3, r0

    u8_t addressToCheck[3];

    u16_t flightAddressLoc = FLIGHTZEROEND + (findThisFlightsEnd * 0x06);
    20ac:	2006      	movs	r0, #6
    20ae:	4358      	muls	r0, r3

    AT25SEreadSample(flightAddressLoc, 0x03, addressToCheck);
    20b0:	ac01      	add	r4, sp, #4
    20b2:	3004      	adds	r0, #4
    20b4:	30ff      	adds	r0, #255	; 0xff
    20b6:	0022      	movs	r2, r4
    20b8:	2103      	movs	r1, #3
    20ba:	4b05      	ldr	r3, [pc, #20]	; (20d0 <FindFlightEndingAddress+0x28>)
    20bc:	4798      	blx	r3

    u32_t flightEndAddress = addressToCheck[0] << 0 | addressToCheck[1] << 8 | addressToCheck[2] << 16;
    20be:	7860      	ldrb	r0, [r4, #1]
    20c0:	78a3      	ldrb	r3, [r4, #2]
    20c2:	0200      	lsls	r0, r0, #8
    20c4:	041b      	lsls	r3, r3, #16
    20c6:	4318      	orrs	r0, r3
    20c8:	7823      	ldrb	r3, [r4, #0]
    20ca:	4318      	orrs	r0, r3

    return flightEndAddress;
}
    20cc:	bd16      	pop	{r1, r2, r4, pc}
    20ce:	46c0      	nop			; (mov r8, r8)
    20d0:	0000033d 	.word	0x0000033d

000020d4 <isFlightLogged>:

bool isFlightLogged(u8_t flightNumbToCheck) {
    20d4:	b510      	push	{r4, lr}

    u32_t possibleStart = getFlightStartAddress(flightNumbToCheck);
    20d6:	4b04      	ldr	r3, [pc, #16]	; (20e8 <isFlightLogged+0x14>)
    20d8:	4798      	blx	r3

    if (possibleStart == 0xFFFFFF) {
    20da:	4b04      	ldr	r3, [pc, #16]	; (20ec <isFlightLogged+0x18>)
    20dc:	18c0      	adds	r0, r0, r3
    20de:	1e43      	subs	r3, r0, #1
    20e0:	4198      	sbcs	r0, r3
    20e2:	b2c0      	uxtb	r0, r0
        return false;
    } else {
        return true;
    }
}
    20e4:	bd10      	pop	{r4, pc}
    20e6:	46c0      	nop			; (mov r8, r8)
    20e8:	0000207d 	.word	0x0000207d
    20ec:	ff000001 	.word	0xff000001

000020f0 <writeFlightEndAddress>:



void writeFlightEndAddress() {
    20f0:	b507      	push	{r0, r1, r2, lr}

    u32_t endingAddress = currentAddress;
    20f2:	4b0a      	ldr	r3, [pc, #40]	; (211c <writeFlightEndAddress+0x2c>)

    u8_t address[3] = {endingAddress >> 0, endingAddress >> 8, endingAddress >> 16};
    20f4:	aa01      	add	r2, sp, #4
    u32_t endingAddress = currentAddress;
    20f6:	681b      	ldr	r3, [r3, #0]
    u8_t address[3] = {endingAddress >> 0, endingAddress >> 8, endingAddress >> 16};
    20f8:	7013      	strb	r3, [r2, #0]
    20fa:	0a19      	lsrs	r1, r3, #8
    20fc:	0c1b      	lsrs	r3, r3, #16
    20fe:	7093      	strb	r3, [r2, #2]

    u16_t flightAddressLoc = FLIGHTZEROEND + (flightNumb * 0x06);
    2100:	4b07      	ldr	r3, [pc, #28]	; (2120 <writeFlightEndAddress+0x30>)
    u8_t address[3] = {endingAddress >> 0, endingAddress >> 8, endingAddress >> 16};
    2102:	7051      	strb	r1, [r2, #1]
    u16_t flightAddressLoc = FLIGHTZEROEND + (flightNumb * 0x06);
    2104:	7818      	ldrb	r0, [r3, #0]
    2106:	2306      	movs	r3, #6
    2108:	4358      	muls	r0, r3
    AT25SFWriteBytes(flightAddressLoc, 3, address);
    210a:	3004      	adds	r0, #4
    210c:	30ff      	adds	r0, #255	; 0xff
    210e:	2103      	movs	r1, #3
    2110:	4b04      	ldr	r3, [pc, #16]	; (2124 <writeFlightEndAddress+0x34>)
    2112:	4798      	blx	r3
    delay_ms(10);
    2114:	200a      	movs	r0, #10
    2116:	4b04      	ldr	r3, [pc, #16]	; (2128 <writeFlightEndAddress+0x38>)
    2118:	4798      	blx	r3

}
    211a:	bd07      	pop	{r0, r1, r2, pc}
    211c:	2000078c 	.word	0x2000078c
    2120:	200004f9 	.word	0x200004f9
    2124:	00000251 	.word	0x00000251
    2128:	00000eed 	.word	0x00000eed

0000212c <findNewFlightStart>:




void findNewFlightStart() {
    212c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

    for (u8_t flightNumbToCheck = 0; flightNumbToCheck < 20; ++flightNumbToCheck) {
    212e:	2400      	movs	r4, #0

        if (!isFlightLogged(flightNumbToCheck)) {
    2130:	0020      	movs	r0, r4
    2132:	4b24      	ldr	r3, [pc, #144]	; (21c4 <findNewFlightStart+0x98>)
    2134:	4798      	blx	r3
    2136:	2800      	cmp	r0, #0
    2138:	d13e      	bne.n	21b8 <findNewFlightStart+0x8c>
    213a:	4f23      	ldr	r7, [pc, #140]	; (21c8 <findNewFlightStart+0x9c>)
    213c:	ad01      	add	r5, sp, #4

            if (flightNumbToCheck > 0) {
    213e:	2c00      	cmp	r4, #0
    2140:	d020      	beq.n	2184 <findNewFlightStart+0x58>


                u32_t startAddress = FindFlightEndingAddress(flightNumbToCheck - 1);
    2142:	1e60      	subs	r0, r4, #1
    2144:	4b21      	ldr	r3, [pc, #132]	; (21cc <findNewFlightStart+0xa0>)
    2146:	b2c0      	uxtb	r0, r0
    2148:	4798      	blx	r3
                delay_ms(5);
    214a:	4b21      	ldr	r3, [pc, #132]	; (21d0 <findNewFlightStart+0xa4>)
                u32_t startAddress = FindFlightEndingAddress(flightNumbToCheck - 1);
    214c:	0006      	movs	r6, r0
                delay_ms(5);
    214e:	2005      	movs	r0, #5
    2150:	4798      	blx	r3

                currentAddress = startAddress;

                u8_t address[3] = {startAddress >> 0, startAddress >> 8, startAddress >> 16};

                u16_t flightAddressLoc = FLIGHTZEROSTART + (flightNumbToCheck * 0x06);
    2152:	2006      	movs	r0, #6
    2154:	4360      	muls	r0, r4
                u8_t address[3] = {startAddress >> 0, startAddress >> 8, startAddress >> 16};
    2156:	0a33      	lsrs	r3, r6, #8
                AT25SFWriteBytes(flightAddressLoc, 3, address);
    2158:	3001      	adds	r0, #1
                currentAddress = startAddress;
    215a:	603e      	str	r6, [r7, #0]
                u8_t address[3] = {startAddress >> 0, startAddress >> 8, startAddress >> 16};
    215c:	702e      	strb	r6, [r5, #0]
    215e:	706b      	strb	r3, [r5, #1]
    2160:	0c36      	lsrs	r6, r6, #16
                AT25SFWriteBytes(flightAddressLoc, 3, address);
    2162:	30ff      	adds	r0, #255	; 0xff
    2164:	002a      	movs	r2, r5
    2166:	2103      	movs	r1, #3
    2168:	4b1a      	ldr	r3, [pc, #104]	; (21d4 <findNewFlightStart+0xa8>)
                u8_t address[3] = {startAddress >> 0, startAddress >> 8, startAddress >> 16};
    216a:	70ae      	strb	r6, [r5, #2]
                AT25SFWriteBytes(flightAddressLoc, 3, address);
    216c:	4798      	blx	r3
                beep(1500);
            }
            flightNumb = flightNumbToCheck;

            while (flightNumbToCheck > 0) {
                beep(500);
    216e:	25fa      	movs	r5, #250	; 0xfa
            flightNumb = flightNumbToCheck;
    2170:	4b19      	ldr	r3, [pc, #100]	; (21d8 <findNewFlightStart+0xac>)
                beep(500);
    2172:	006d      	lsls	r5, r5, #1
            flightNumb = flightNumbToCheck;
    2174:	701c      	strb	r4, [r3, #0]
            while (flightNumbToCheck > 0) {
    2176:	2c00      	cmp	r4, #0
    2178:	d115      	bne.n	21a6 <findNewFlightStart+0x7a>
                delay_ms(500);
                --flightNumbToCheck;
            }
            delay_ms(500);
    217a:	20fa      	movs	r0, #250	; 0xfa
    217c:	4b14      	ldr	r3, [pc, #80]	; (21d0 <findNewFlightStart+0xa4>)
    217e:	0040      	lsls	r0, r0, #1
    2180:	4798      	blx	r3
            break;
        }
    }
}
    2182:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
                u8_t address[3] = {0x00,0x10,0x00};
    2184:	2310      	movs	r3, #16
                AT25SFWriteBytes(FLIGHTZEROSTART, 3, address);
    2186:	2080      	movs	r0, #128	; 0x80
                u8_t address[3] = {0x00,0x10,0x00};
    2188:	706b      	strb	r3, [r5, #1]
                AT25SFWriteBytes(FLIGHTZEROSTART, 3, address);
    218a:	002a      	movs	r2, r5
    218c:	2103      	movs	r1, #3
    218e:	0040      	lsls	r0, r0, #1
    2190:	4b10      	ldr	r3, [pc, #64]	; (21d4 <findNewFlightStart+0xa8>)
                u8_t address[3] = {0x00,0x10,0x00};
    2192:	702c      	strb	r4, [r5, #0]
    2194:	70ac      	strb	r4, [r5, #2]
                AT25SFWriteBytes(FLIGHTZEROSTART, 3, address);
    2196:	4798      	blx	r3
                currentAddress = 0x001000;
    2198:	2380      	movs	r3, #128	; 0x80
    219a:	015b      	lsls	r3, r3, #5
    219c:	603b      	str	r3, [r7, #0]
                beep(1500);
    219e:	480f      	ldr	r0, [pc, #60]	; (21dc <findNewFlightStart+0xb0>)
    21a0:	4b0f      	ldr	r3, [pc, #60]	; (21e0 <findNewFlightStart+0xb4>)
    21a2:	4798      	blx	r3
    21a4:	e7e3      	b.n	216e <findNewFlightStart+0x42>
                beep(500);
    21a6:	0028      	movs	r0, r5
    21a8:	4b0d      	ldr	r3, [pc, #52]	; (21e0 <findNewFlightStart+0xb4>)
    21aa:	4798      	blx	r3
                --flightNumbToCheck;
    21ac:	3c01      	subs	r4, #1
                delay_ms(500);
    21ae:	0028      	movs	r0, r5
    21b0:	4b07      	ldr	r3, [pc, #28]	; (21d0 <findNewFlightStart+0xa4>)
    21b2:	4798      	blx	r3
                --flightNumbToCheck;
    21b4:	b2e4      	uxtb	r4, r4
    21b6:	e7de      	b.n	2176 <findNewFlightStart+0x4a>
    for (u8_t flightNumbToCheck = 0; flightNumbToCheck < 20; ++flightNumbToCheck) {
    21b8:	3401      	adds	r4, #1
    21ba:	b2e4      	uxtb	r4, r4
    21bc:	2c14      	cmp	r4, #20
    21be:	d1b7      	bne.n	2130 <findNewFlightStart+0x4>
    21c0:	e7df      	b.n	2182 <findNewFlightStart+0x56>
    21c2:	46c0      	nop			; (mov r8, r8)
    21c4:	000020d5 	.word	0x000020d5
    21c8:	2000078c 	.word	0x2000078c
    21cc:	000020a9 	.word	0x000020a9
    21d0:	00000eed 	.word	0x00000eed
    21d4:	00000251 	.word	0x00000251
    21d8:	200004f9 	.word	0x200004f9
    21dc:	000005dc 	.word	0x000005dc
    21e0:	00000c71 	.word	0x00000c71

000021e4 <takeSample>:
#include <util.h>
#include <boardDefines.h>
#include <MS5803.h>

bool takeSample() {
    return SampleBool;
    21e4:	4b01      	ldr	r3, [pc, #4]	; (21ec <takeSample+0x8>)
    21e6:	7818      	ldrb	r0, [r3, #0]
}
    21e8:	4770      	bx	lr
    21ea:	46c0      	nop			; (mov r8, r8)
    21ec:	2000050c 	.word	0x2000050c

000021f0 <pullSample>:

void pullSample() {
    SampleBool = true;
    21f0:	2201      	movs	r2, #1
    21f2:	4b01      	ldr	r3, [pc, #4]	; (21f8 <pullSample+0x8>)
    21f4:	701a      	strb	r2, [r3, #0]
}
    21f6:	4770      	bx	lr
    21f8:	2000050c 	.word	0x2000050c

000021fc <sampleTick>:
}

sample_t sample;

void sampleTick() {
    SampleBool = false;
    21fc:	2200      	movs	r2, #0
void sampleTick() {
    21fe:	b5f0      	push	{r4, r5, r6, r7, lr}
    SampleBool = false;
    2200:	4ba8      	ldr	r3, [pc, #672]	; (24a4 <sampleTick+0x2a8>)
void sampleTick() {
    2202:	b085      	sub	sp, #20

    // take last samples time to discover Dt before setting new time
    sample.tickDelta = millis() - sample.sampleTick;
    2204:	4da8      	ldr	r5, [pc, #672]	; (24a8 <sampleTick+0x2ac>)
    SampleBool = false;
    2206:	701a      	strb	r2, [r3, #0]
    sample.tickDelta = millis() - sample.sampleTick;
    2208:	47a8      	blx	r5
    220a:	4ca8      	ldr	r4, [pc, #672]	; (24ac <sampleTick+0x2b0>)
    220c:	6863      	ldr	r3, [r4, #4]
    220e:	1ac0      	subs	r0, r0, r3
    2210:	8020      	strh	r0, [r4, #0]
    sample.sampleTick = millis();
    2212:	47a8      	blx	r5
    altimeter.flightTime = sample.sampleTick - offsets.StartupTick;
    2214:	4ba6      	ldr	r3, [pc, #664]	; (24b0 <sampleTick+0x2b4>)

    sample.voltage.batV = adc_read(senseBatPin);
    2216:	4ea7      	ldr	r6, [pc, #668]	; (24b4 <sampleTick+0x2b8>)
    altimeter.flightTime = sample.sampleTick - offsets.StartupTick;
    2218:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    sample.sampleTick = millis();
    221a:	6060      	str	r0, [r4, #4]
    altimeter.flightTime = sample.sampleTick - offsets.StartupTick;
    221c:	1ac0      	subs	r0, r0, r3
    221e:	4ba6      	ldr	r3, [pc, #664]	; (24b8 <sampleTick+0x2bc>)
    sample.voltage.batV = adc_read(senseBatPin);
    2220:	4da6      	ldr	r5, [pc, #664]	; (24bc <sampleTick+0x2c0>)
    altimeter.flightTime = sample.sampleTick - offsets.StartupTick;
    2222:	6098      	str	r0, [r3, #8]
    sample.voltage.batV = adc_read(senseBatPin);
    2224:	7873      	ldrb	r3, [r6, #1]
    2226:	7830      	ldrb	r0, [r6, #0]
    2228:	021b      	lsls	r3, r3, #8
    222a:	4303      	orrs	r3, r0
    222c:	78b0      	ldrb	r0, [r6, #2]
    222e:	7931      	ldrb	r1, [r6, #4]
    2230:	0400      	lsls	r0, r0, #16
    2232:	4303      	orrs	r3, r0
    2234:	78f0      	ldrb	r0, [r6, #3]
    2236:	0600      	lsls	r0, r0, #24
    2238:	4318      	orrs	r0, r3
    223a:	47a8      	blx	r5
    sample.voltage.batFloat = sample.voltage.batV * 0.0019;
    223c:	4ba0      	ldr	r3, [pc, #640]	; (24c0 <sampleTick+0x2c4>)
    sample.voltage.batV = adc_read(senseBatPin);
    223e:	8120      	strh	r0, [r4, #8]
    sample.voltage.batFloat = sample.voltage.batV * 0.0019;
    2240:	4798      	blx	r3
    2242:	4aa0      	ldr	r2, [pc, #640]	; (24c4 <sampleTick+0x2c8>)
    2244:	4fa0      	ldr	r7, [pc, #640]	; (24c8 <sampleTick+0x2cc>)
    2246:	4ba1      	ldr	r3, [pc, #644]	; (24cc <sampleTick+0x2d0>)
    2248:	47b8      	blx	r7
    224a:	4ba1      	ldr	r3, [pc, #644]	; (24d0 <sampleTick+0x2d4>)
    224c:	4798      	blx	r3

    sample.voltage.senseA = adc_read(senseAPin);
    224e:	79b3      	ldrb	r3, [r6, #6]
    sample.voltage.batFloat = sample.voltage.batV * 0.0019;
    2250:	60e0      	str	r0, [r4, #12]
    sample.voltage.senseA = adc_read(senseAPin);
    2252:	7970      	ldrb	r0, [r6, #5]
    2254:	021b      	lsls	r3, r3, #8
    2256:	4303      	orrs	r3, r0
    2258:	79f0      	ldrb	r0, [r6, #7]
    225a:	7a71      	ldrb	r1, [r6, #9]
    225c:	0400      	lsls	r0, r0, #16
    225e:	4303      	orrs	r3, r0
    2260:	7a30      	ldrb	r0, [r6, #8]
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
    2262:	2780      	movs	r7, #128	; 0x80
    2264:	0600      	lsls	r0, r0, #24
    2266:	4318      	orrs	r0, r3
    2268:	47a8      	blx	r5
    sample.voltage.senseB = adc_read(senseBPin);
    226a:	7af3      	ldrb	r3, [r6, #11]
    sample.voltage.senseA = adc_read(senseAPin);
    226c:	8220      	strh	r0, [r4, #16]
    sample.voltage.senseB = adc_read(senseBPin);
    226e:	7ab0      	ldrb	r0, [r6, #10]
    2270:	021b      	lsls	r3, r3, #8
    2272:	4303      	orrs	r3, r0
    2274:	7b30      	ldrb	r0, [r6, #12]
    2276:	7bb1      	ldrb	r1, [r6, #14]
    2278:	0400      	lsls	r0, r0, #16
    227a:	4303      	orrs	r3, r0
    227c:	7b70      	ldrb	r0, [r6, #13]
    227e:	01ff      	lsls	r7, r7, #7
    2280:	0600      	lsls	r0, r0, #24
    2282:	4318      	orrs	r0, r3
    2284:	47a8      	blx	r5
    sample.voltage.senseC = adc_read(senseCPin);
    2286:	7c33      	ldrb	r3, [r6, #16]
    sample.voltage.senseB = adc_read(senseBPin);
    2288:	8260      	strh	r0, [r4, #18]
    sample.voltage.senseC = adc_read(senseCPin);
    228a:	7bf0      	ldrb	r0, [r6, #15]
    228c:	021b      	lsls	r3, r3, #8
    228e:	4303      	orrs	r3, r0
    2290:	7c70      	ldrb	r0, [r6, #17]
    2292:	7cf1      	ldrb	r1, [r6, #19]
    2294:	0400      	lsls	r0, r0, #16
    2296:	4303      	orrs	r3, r0
    2298:	7cb0      	ldrb	r0, [r6, #18]
    229a:	0600      	lsls	r0, r0, #24
    229c:	4318      	orrs	r0, r3
    229e:	47a8      	blx	r5
    sample.voltage.senseD = adc_read(senseDPin);
    22a0:	7d73      	ldrb	r3, [r6, #21]
    sample.voltage.senseC = adc_read(senseCPin);
    22a2:	82a0      	strh	r0, [r4, #20]
    sample.voltage.senseD = adc_read(senseDPin);
    22a4:	7d30      	ldrb	r0, [r6, #20]
    22a6:	021b      	lsls	r3, r3, #8
    22a8:	4303      	orrs	r3, r0
    22aa:	7db0      	ldrb	r0, [r6, #22]
    22ac:	7e31      	ldrb	r1, [r6, #24]
    22ae:	0400      	lsls	r0, r0, #16
    22b0:	4303      	orrs	r3, r0
    22b2:	7df0      	ldrb	r0, [r6, #23]
    22b4:	0600      	lsls	r0, r0, #24
    22b6:	4318      	orrs	r0, r3
    22b8:	47a8      	blx	r5

    sample.analogRaw = adc_read(analogAccelPin);
    22ba:	0032      	movs	r2, r6
    22bc:	7eb3      	ldrb	r3, [r6, #26]
    sample.voltage.senseD = adc_read(senseDPin);
    22be:	82e0      	strh	r0, [r4, #22]
    sample.analogRaw = adc_read(analogAccelPin);
    22c0:	7e70      	ldrb	r0, [r6, #25]
    22c2:	021b      	lsls	r3, r3, #8
    22c4:	4303      	orrs	r3, r0
    22c6:	7ef0      	ldrb	r0, [r6, #27]
    22c8:	7f51      	ldrb	r1, [r2, #29]
    22ca:	0400      	lsls	r0, r0, #16
    22cc:	4303      	orrs	r3, r0
    22ce:	7f30      	ldrb	r0, [r6, #28]
    22d0:	26ff      	movs	r6, #255	; 0xff
    22d2:	0600      	lsls	r0, r0, #24
    22d4:	4318      	orrs	r0, r3
    22d6:	47a8      	blx	r5
    sample.analogAccel = (sample.analogRaw - 3900) * -0.0154;
    22d8:	4b7e      	ldr	r3, [pc, #504]	; (24d4 <sampleTick+0x2d8>)
    sample.analogRaw = adc_read(analogAccelPin);
    22da:	8320      	strh	r0, [r4, #24]
    sample.analogAccel = (sample.analogRaw - 3900) * -0.0154;
    22dc:	18c0      	adds	r0, r0, r3
    22de:	4b78      	ldr	r3, [pc, #480]	; (24c0 <sampleTick+0x2c4>)
    22e0:	4798      	blx	r3
    22e2:	4a7d      	ldr	r2, [pc, #500]	; (24d8 <sampleTick+0x2dc>)
    22e4:	4d78      	ldr	r5, [pc, #480]	; (24c8 <sampleTick+0x2cc>)
    22e6:	4b7d      	ldr	r3, [pc, #500]	; (24dc <sampleTick+0x2e0>)
    22e8:	47a8      	blx	r5
    22ea:	4b79      	ldr	r3, [pc, #484]	; (24d0 <sampleTick+0x2d4>)
    22ec:	4798      	blx	r3
    22ee:	4b7c      	ldr	r3, [pc, #496]	; (24e0 <sampleTick+0x2e4>)

    uint8_t dummy_Tx = 0xFF;
    uint8_t dummy_rx;

    pinLow(cs_baro);
    dummy_rx = spiDataTransfer(SPI2, 0x50);
    22f0:	4d7c      	ldr	r5, [pc, #496]	; (24e4 <sampleTick+0x2e8>)
    22f2:	2150      	movs	r1, #80	; 0x50
    sample.analogAccel = (sample.analogRaw - 3900) * -0.0154;
    22f4:	61e0      	str	r0, [r4, #28]
    22f6:	615f      	str	r7, [r3, #20]
    dummy_rx = spiDataTransfer(SPI2, 0x50);
    22f8:	2002      	movs	r0, #2
    22fa:	47a8      	blx	r5
    pinHigh(cs_baro);
    delay_us(600);
    22fc:	2096      	movs	r0, #150	; 0x96
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
    22fe:	4b78      	ldr	r3, [pc, #480]	; (24e0 <sampleTick+0x2e4>)
    2300:	0080      	lsls	r0, r0, #2
    2302:	619f      	str	r7, [r3, #24]
    2304:	4b78      	ldr	r3, [pc, #480]	; (24e8 <sampleTick+0x2ec>)
    2306:	4798      	blx	r3
    uint32_t tempRaw = readMS5803AdcResults();
    2308:	4b78      	ldr	r3, [pc, #480]	; (24ec <sampleTick+0x2f0>)
    230a:	4798      	blx	r3
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
    230c:	4b74      	ldr	r3, [pc, #464]	; (24e0 <sampleTick+0x2e4>)
    230e:	9001      	str	r0, [sp, #4]

    pinLow(cs_baro);
    dummy_rx = spiDataTransfer(SPI2, 0x40);
    2310:	2140      	movs	r1, #64	; 0x40
    2312:	615f      	str	r7, [r3, #20]
    2314:	2002      	movs	r0, #2
    2316:	47a8      	blx	r5
    2318:	2280      	movs	r2, #128	; 0x80
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
    231a:	4b71      	ldr	r3, [pc, #452]	; (24e0 <sampleTick+0x2e4>)
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
    231c:	00d2      	lsls	r2, r2, #3
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
    231e:	619f      	str	r7, [r3, #24]
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
    2320:	4b73      	ldr	r3, [pc, #460]	; (24f0 <sampleTick+0x2f4>)



// Accel data
    pinLow(cs_accel);
    dummy_rx = spiDataTransfer(SPI0, BMI055_X_ACC_LSB | BMI055_READ_REG);
    2322:	2182      	movs	r1, #130	; 0x82
    2324:	601a      	str	r2, [r3, #0]
    2326:	2000      	movs	r0, #0
    2328:	47a8      	blx	r5

    u16_t accelXRaw = spiDataTransfer(SPI0,dummy_Tx);
    232a:	0031      	movs	r1, r6
    232c:	2000      	movs	r0, #0
    232e:	47a8      	blx	r5
    accelXRaw = accelXRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    2330:	0031      	movs	r1, r6
    u16_t accelXRaw = spiDataTransfer(SPI0,dummy_Tx);
    2332:	0007      	movs	r7, r0
    accelXRaw = accelXRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    2334:	2000      	movs	r0, #0
    2336:	47a8      	blx	r5
    2338:	0200      	lsls	r0, r0, #8
    233a:	4307      	orrs	r7, r0
    233c:	b23b      	sxth	r3, r7
    u16_t accelYRaw = spiDataTransfer(SPI0,dummy_Tx);
    233e:	0031      	movs	r1, r6
    2340:	2000      	movs	r0, #0
    accelXRaw = accelXRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    2342:	9302      	str	r3, [sp, #8]
    u16_t accelYRaw = spiDataTransfer(SPI0,dummy_Tx);
    2344:	47a8      	blx	r5
    accelYRaw = accelYRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    2346:	0031      	movs	r1, r6
    u16_t accelYRaw = spiDataTransfer(SPI0,dummy_Tx);
    2348:	0007      	movs	r7, r0
    accelYRaw = accelYRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    234a:	2000      	movs	r0, #0
    234c:	47a8      	blx	r5
    234e:	0200      	lsls	r0, r0, #8
    2350:	4307      	orrs	r7, r0
    2352:	b23b      	sxth	r3, r7
    u16_t accelZRaw = spiDataTransfer(SPI0,dummy_Tx);
    2354:	0031      	movs	r1, r6
    2356:	2000      	movs	r0, #0
    accelYRaw = accelYRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    2358:	9303      	str	r3, [sp, #12]
    u16_t accelZRaw = spiDataTransfer(SPI0,dummy_Tx);
    235a:	47a8      	blx	r5
    accelZRaw = accelZRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    235c:	0031      	movs	r1, r6
    u16_t accelZRaw = spiDataTransfer(SPI0,dummy_Tx);
    235e:	0007      	movs	r7, r0
    accelZRaw = accelZRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    2360:	2000      	movs	r0, #0
    2362:	47a8      	blx	r5
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
    2364:	2180      	movs	r1, #128	; 0x80
    2366:	4a63      	ldr	r2, [pc, #396]	; (24f4 <sampleTick+0x2f8>)
    2368:	00c9      	lsls	r1, r1, #3
    236a:	6011      	str	r1, [r2, #0]

    if (negativeX) {
        accelXint = accelXint | ~((1 << 16) - 1);
        accelXint =  accelXint >> 4;
    } else {
        accelXint =  accelXint >> 4;
    236c:	9a02      	ldr	r2, [sp, #8]
    accelZRaw = accelZRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    236e:	0203      	lsls	r3, r0, #8
    2370:	433b      	orrs	r3, r7
        accelXint =  accelXint >> 4;
    2372:	1110      	asrs	r0, r2, #4
    }
    if (negativeY) {
        accelYint =  accelYint | ~((1 << 16) - 1);
        accelYint =  accelYint >> 4;
    } else {
        accelYint =  accelYint >> 4;
    2374:	9a03      	ldr	r2, [sp, #12]
    accelZRaw = accelZRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    2376:	b21b      	sxth	r3, r3
        accelYint =  accelYint >> 4;
    2378:	1112      	asrs	r2, r2, #4
    }
    if (negativeZ) {
        accelZint =  accelZint | ~((1 << 16) - 1);
        accelZint =  accelZint >> 4;
    } else {
        accelZint =  accelZint >> 4;
    237a:	111b      	asrs	r3, r3, #4
        accelYint =  accelYint >> 4;
    237c:	9202      	str	r2, [sp, #8]
        accelZint =  accelZint >> 4;
    237e:	9303      	str	r3, [sp, #12]
    }

    sample.accelX =  accelXint * BMI055_ACCEL_16G_DIV;
    2380:	4b4f      	ldr	r3, [pc, #316]	; (24c0 <sampleTick+0x2c4>)
    2382:	4798      	blx	r3
    2384:	23fe      	movs	r3, #254	; 0xfe
    2386:	4f50      	ldr	r7, [pc, #320]	; (24c8 <sampleTick+0x2cc>)
    2388:	2200      	movs	r2, #0
    238a:	059b      	lsls	r3, r3, #22
    238c:	47b8      	blx	r7
    238e:	4b50      	ldr	r3, [pc, #320]	; (24d0 <sampleTick+0x2d4>)
    2390:	4798      	blx	r3
    sample.accelY =  accelYint * BMI055_ACCEL_16G_DIV;
    2392:	4b4b      	ldr	r3, [pc, #300]	; (24c0 <sampleTick+0x2c4>)
    sample.accelX =  accelXint * BMI055_ACCEL_16G_DIV;
    2394:	6220      	str	r0, [r4, #32]
    sample.accelY =  accelYint * BMI055_ACCEL_16G_DIV;
    2396:	9802      	ldr	r0, [sp, #8]
    2398:	4798      	blx	r3
    239a:	23fe      	movs	r3, #254	; 0xfe
    239c:	2200      	movs	r2, #0
    239e:	059b      	lsls	r3, r3, #22
    23a0:	47b8      	blx	r7
    23a2:	4b4b      	ldr	r3, [pc, #300]	; (24d0 <sampleTick+0x2d4>)
    23a4:	4798      	blx	r3
    sample.accelZ = -accelZint * BMI055_ACCEL_16G_DIV;
    23a6:	9b03      	ldr	r3, [sp, #12]
    sample.accelY =  accelYint * BMI055_ACCEL_16G_DIV;
    23a8:	6260      	str	r0, [r4, #36]	; 0x24
    sample.accelZ = -accelZint * BMI055_ACCEL_16G_DIV;
    23aa:	4258      	negs	r0, r3
    23ac:	4b44      	ldr	r3, [pc, #272]	; (24c0 <sampleTick+0x2c4>)
    23ae:	4798      	blx	r3
    23b0:	23fe      	movs	r3, #254	; 0xfe
    23b2:	2200      	movs	r2, #0
    23b4:	059b      	lsls	r3, r3, #22
    23b6:	47b8      	blx	r7
    23b8:	4b45      	ldr	r3, [pc, #276]	; (24d0 <sampleTick+0x2d4>)
    23ba:	4798      	blx	r3
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
    23bc:	2280      	movs	r2, #128	; 0x80
    23be:	4b48      	ldr	r3, [pc, #288]	; (24e0 <sampleTick+0x2e4>)
    23c0:	00d2      	lsls	r2, r2, #3
    23c2:	62a0      	str	r0, [r4, #40]	; 0x28


    // Gyro data
    pinLow(cs_gyro);
    dummy_rx = spiDataTransfer(SPI0, BMI055_X_GYRO_LSB | BMI055_READ_REG);
    23c4:	2182      	movs	r1, #130	; 0x82
    23c6:	615a      	str	r2, [r3, #20]
    23c8:	2000      	movs	r0, #0
    23ca:	47a8      	blx	r5
    u16_t gyroXRaw = spiDataTransfer(SPI0,dummy_Tx);
    23cc:	0031      	movs	r1, r6
    23ce:	2000      	movs	r0, #0
    23d0:	47a8      	blx	r5
    gyroXRaw =  gyroXRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    23d2:	0031      	movs	r1, r6
    u16_t gyroXRaw = spiDataTransfer(SPI0,dummy_Tx);
    23d4:	0007      	movs	r7, r0
    gyroXRaw =  gyroXRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    23d6:	2000      	movs	r0, #0
    23d8:	47a8      	blx	r5
    23da:	0200      	lsls	r0, r0, #8
    23dc:	4307      	orrs	r7, r0
    23de:	b23b      	sxth	r3, r7
    u16_t gyroYRaw = spiDataTransfer(SPI0,dummy_Tx);
    23e0:	0031      	movs	r1, r6
    23e2:	2000      	movs	r0, #0
    gyroXRaw =  gyroXRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    23e4:	9302      	str	r3, [sp, #8]
    u16_t gyroYRaw = spiDataTransfer(SPI0,dummy_Tx);
    23e6:	47a8      	blx	r5
    gyroYRaw =  gyroYRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    23e8:	0031      	movs	r1, r6
    u16_t gyroYRaw = spiDataTransfer(SPI0,dummy_Tx);
    23ea:	0007      	movs	r7, r0
    gyroYRaw =  gyroYRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    23ec:	2000      	movs	r0, #0
    23ee:	47a8      	blx	r5
    23f0:	0200      	lsls	r0, r0, #8
    23f2:	4307      	orrs	r7, r0
    23f4:	b23b      	sxth	r3, r7
    u16_t gyroZRaw = spiDataTransfer(SPI0,dummy_Tx);
    23f6:	0031      	movs	r1, r6
    23f8:	2000      	movs	r0, #0
    gyroYRaw =  gyroYRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    23fa:	9303      	str	r3, [sp, #12]
    u16_t gyroZRaw = spiDataTransfer(SPI0,dummy_Tx);
    23fc:	47a8      	blx	r5
    gyroZRaw =  gyroZRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    23fe:	0031      	movs	r1, r6
    u16_t gyroZRaw = spiDataTransfer(SPI0,dummy_Tx);
    2400:	0007      	movs	r7, r0
    gyroZRaw =  gyroZRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    2402:	2000      	movs	r0, #0
    2404:	47a8      	blx	r5
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
    2406:	2280      	movs	r2, #128	; 0x80
    2408:	4b35      	ldr	r3, [pc, #212]	; (24e0 <sampleTick+0x2e4>)
    240a:	00d2      	lsls	r2, r2, #3
    240c:	619a      	str	r2, [r3, #24]

    if (negativeXgyro) {
        gyroXint =  gyroXint | ~((1 << 16) - 1);
        gyroXint =  gyroXint >> 4;
    } else {
        gyroXint =  gyroXint >> 4;
    240e:	9b02      	ldr	r3, [sp, #8]
    gyroZRaw =  gyroZRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    2410:	0205      	lsls	r5, r0, #8
        gyroXint =  gyroXint >> 4;
    2412:	1118      	asrs	r0, r3, #4

    if (negativeYgyro) {
        gyroYint =  gyroYint | ~((1 << 16) - 1);
        gyroYint =  gyroYint >> 4;
    } else {
        gyroYint =  gyroYint >> 4;
    2414:	9b03      	ldr	r3, [sp, #12]
    gyroZRaw =  gyroZRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    2416:	433d      	orrs	r5, r7
        gyroYint =  gyroYint >> 4;
    2418:	111e      	asrs	r6, r3, #4
        gyroZint =  gyroZint >> 4;
    } else {
        gyroZint =  gyroZint >> 4;
    }

    sample.gyroX =  gyroXint * BMI055_GYRO_2000DS_DIV;
    241a:	4b29      	ldr	r3, [pc, #164]	; (24c0 <sampleTick+0x2c4>)
    241c:	4798      	blx	r3
    241e:	23fe      	movs	r3, #254	; 0xfe
    2420:	2200      	movs	r2, #0
    2422:	4f29      	ldr	r7, [pc, #164]	; (24c8 <sampleTick+0x2cc>)
    2424:	059b      	lsls	r3, r3, #22
    2426:	47b8      	blx	r7
    2428:	4b29      	ldr	r3, [pc, #164]	; (24d0 <sampleTick+0x2d4>)
    242a:	4798      	blx	r3
    sample.gyroY =  gyroYint * BMI055_GYRO_2000DS_DIV;
    242c:	4b24      	ldr	r3, [pc, #144]	; (24c0 <sampleTick+0x2c4>)
    sample.gyroX =  gyroXint * BMI055_GYRO_2000DS_DIV;
    242e:	62e0      	str	r0, [r4, #44]	; 0x2c
    sample.gyroY =  gyroYint * BMI055_GYRO_2000DS_DIV;
    2430:	0030      	movs	r0, r6
    2432:	4798      	blx	r3
    2434:	23fe      	movs	r3, #254	; 0xfe
    2436:	2200      	movs	r2, #0
    2438:	059b      	lsls	r3, r3, #22
    243a:	47b8      	blx	r7
    243c:	4b24      	ldr	r3, [pc, #144]	; (24d0 <sampleTick+0x2d4>)
    243e:	4798      	blx	r3
    gyroZRaw =  gyroZRaw |  (spiDataTransfer(SPI0,dummy_Tx) << 8);
    2440:	b22d      	sxth	r5, r5
        gyroZint =  gyroZint >> 4;
    2442:	112d      	asrs	r5, r5, #4
    sample.gyroZ =  gyroZint * BMI055_GYRO_2000DS_DIV;
    2444:	4b1e      	ldr	r3, [pc, #120]	; (24c0 <sampleTick+0x2c4>)
    sample.gyroY =  gyroYint * BMI055_GYRO_2000DS_DIV;
    2446:	6320      	str	r0, [r4, #48]	; 0x30
    sample.gyroZ =  gyroZint * BMI055_GYRO_2000DS_DIV;
    2448:	0028      	movs	r0, r5
    244a:	4798      	blx	r3
    244c:	23fe      	movs	r3, #254	; 0xfe
    244e:	2200      	movs	r2, #0
    2450:	059b      	lsls	r3, r3, #22
    2452:	47b8      	blx	r7
    2454:	4b1e      	ldr	r3, [pc, #120]	; (24d0 <sampleTick+0x2d4>)
    2456:	4798      	blx	r3
    2458:	6360      	str	r0, [r4, #52]	; 0x34


    delay_us(400);
    245a:	20c8      	movs	r0, #200	; 0xc8
    245c:	4b22      	ldr	r3, [pc, #136]	; (24e8 <sampleTick+0x2ec>)
    245e:	0040      	lsls	r0, r0, #1
    2460:	4798      	blx	r3
    u32_t PressureRaw = readMS5803AdcResults();
    2462:	4b22      	ldr	r3, [pc, #136]	; (24ec <sampleTick+0x2f0>)
    2464:	4798      	blx	r3
    ConvertPressureTemperature(PressureRaw, tempRaw, &sample.temperatureCelcus, &sample.pressureMbar);
    2466:	4a24      	ldr	r2, [pc, #144]	; (24f8 <sampleTick+0x2fc>)
    2468:	4b24      	ldr	r3, [pc, #144]	; (24fc <sampleTick+0x300>)
    246a:	9901      	ldr	r1, [sp, #4]
    246c:	4e24      	ldr	r6, [pc, #144]	; (2500 <sampleTick+0x304>)
    u32_t PressureRaw = readMS5803AdcResults();
    246e:	0005      	movs	r5, r0
    ConvertPressureTemperature(PressureRaw, tempRaw, &sample.temperatureCelcus, &sample.pressureMbar);
    2470:	47b0      	blx	r6
    sample.altitudefeet = paToFeetNOAA(sample.pressureMbar);
    2472:	4b24      	ldr	r3, [pc, #144]	; (2504 <sampleTick+0x308>)
    2474:	6ba0      	ldr	r0, [r4, #56]	; 0x38
    2476:	4798      	blx	r3

    if ( (PressureRaw < 10) | (tempRaw < 10)) {
    2478:	2300      	movs	r3, #0
    247a:	2209      	movs	r2, #9
    sample.altitudefeet = paToFeetNOAA(sample.pressureMbar);
    247c:	6420      	str	r0, [r4, #64]	; 0x40
    247e:	6461      	str	r1, [r4, #68]	; 0x44
    if ( (PressureRaw < 10) | (tempRaw < 10)) {
    2480:	0019      	movs	r1, r3
    2482:	42aa      	cmp	r2, r5
    2484:	415b      	adcs	r3, r3
    2486:	b2db      	uxtb	r3, r3
    2488:	428b      	cmp	r3, r1
    248a:	d105      	bne.n	2498 <sampleTick+0x29c>
    248c:	9901      	ldr	r1, [sp, #4]
    248e:	428a      	cmp	r2, r1
    2490:	415b      	adcs	r3, r3
    2492:	b2db      	uxtb	r3, r3
    2494:	2b00      	cmp	r3, #0
    2496:	d003      	beq.n	24a0 <sampleTick+0x2a4>
        beep(400);
    2498:	20c8      	movs	r0, #200	; 0xc8
    249a:	4b1b      	ldr	r3, [pc, #108]	; (2508 <sampleTick+0x30c>)
    249c:	0040      	lsls	r0, r0, #1
    249e:	4798      	blx	r3
    }


}
    24a0:	b005      	add	sp, #20
    24a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    24a4:	2000050c 	.word	0x2000050c
    24a8:	00000f35 	.word	0x00000f35
    24ac:	20000798 	.word	0x20000798
    24b0:	200004c8 	.word	0x200004c8
    24b4:	00006268 	.word	0x00006268
    24b8:	20000500 	.word	0x20000500
    24bc:	00000c05 	.word	0x00000c05
    24c0:	00005ce5 	.word	0x00005ce5
    24c4:	77318fc5 	.word	0x77318fc5
    24c8:	00005111 	.word	0x00005111
    24cc:	3f5f212d 	.word	0x3f5f212d
    24d0:	00005e7d 	.word	0x00005e7d
    24d4:	fffff0c4 	.word	0xfffff0c4
    24d8:	02de00d2 	.word	0x02de00d2
    24dc:	bf8f8a09 	.word	0xbf8f8a09
    24e0:	41004400 	.word	0x41004400
    24e4:	00002619 	.word	0x00002619
    24e8:	00000ec1 	.word	0x00000ec1
    24ec:	00000419 	.word	0x00000419
    24f0:	41004494 	.word	0x41004494
    24f4:	41004498 	.word	0x41004498
    24f8:	200007d4 	.word	0x200007d4
    24fc:	200007d0 	.word	0x200007d0
    2500:	00000459 	.word	0x00000459
    2504:	00000501 	.word	0x00000501
    2508:	00000c71 	.word	0x00000c71

0000250c <sercomClockEnable>:
#include <util.h>

void sercomClockEnable(SercomId id, uint32_t clock_channel, u8_t divider) {
    250c:	b570      	push	{r4, r5, r6, lr}
    250e:	0005      	movs	r5, r0
    // prevent this clock write from changing any other clocks
    PM->APBCMASK.reg |= 1 << (PM_APBCMASK_SERCOM0_Pos + id);
    2510:	2301      	movs	r3, #1
    2512:	1cae      	adds	r6, r5, #2
    2514:	40b3      	lsls	r3, r6
void sercomClockEnable(SercomId id, uint32_t clock_channel, u8_t divider) {
    2516:	000c      	movs	r4, r1
    PM->APBCMASK.reg |= 1 << (PM_APBCMASK_SERCOM0_Pos + id);
    2518:	490b      	ldr	r1, [pc, #44]	; (2548 <sercomClockEnable+0x3c>)
    251a:	6a08      	ldr	r0, [r1, #32]
    251c:	4303      	orrs	r3, r0
    251e:	620b      	str	r3, [r1, #32]


    if (clock_channel != 0) {
    2520:	2c00      	cmp	r4, #0
    2522:	d003      	beq.n	252c <sercomClockEnable+0x20>
        // clock generators 3-8 have 8 division factor bits - DIV[7:0]
        gclkEnable(clock_channel, GCLK_SOURCE_DFLL48M, divider);
    2524:	2107      	movs	r1, #7
    2526:	0020      	movs	r0, r4
    2528:	4b08      	ldr	r3, [pc, #32]	; (254c <sercomClockEnable+0x40>)
    252a:	4798      	blx	r3
    }


    // attach clock
    GCLK->CLKCTRL.reg = GCLK_CLKCTRL_CLKEN |
                        GCLK_CLKCTRL_GEN(clock_channel) |
    252c:	23f0      	movs	r3, #240	; 0xf0
    252e:	0224      	lsls	r4, r4, #8
    2530:	011b      	lsls	r3, r3, #4
    2532:	401c      	ands	r4, r3
    2534:	2380      	movs	r3, #128	; 0x80
    2536:	01db      	lsls	r3, r3, #7
    2538:	431c      	orrs	r4, r3
                        GCLK_CLKCTRL_ID(SERCOM0_GCLK_ID_CORE + id);
    253a:	233f      	movs	r3, #63	; 0x3f
    253c:	3514      	adds	r5, #20
    253e:	401d      	ands	r5, r3
    GCLK->CLKCTRL.reg = GCLK_CLKCTRL_CLKEN |
    2540:	4b03      	ldr	r3, [pc, #12]	; (2550 <sercomClockEnable+0x44>)
                        GCLK_CLKCTRL_GEN(clock_channel) |
    2542:	4325      	orrs	r5, r4
    GCLK->CLKCTRL.reg = GCLK_CLKCTRL_CLKEN |
    2544:	805d      	strh	r5, [r3, #2]
}
    2546:	bd70      	pop	{r4, r5, r6, pc}
    2548:	40000400 	.word	0x40000400
    254c:	00000e71 	.word	0x00000e71
    2550:	40000c00 	.word	0x40000c00

00002554 <sercomReset>:
    return (Sercom*) (0x42000800U + id * 1024);
    2554:	4b04      	ldr	r3, [pc, #16]	; (2568 <sercomReset+0x14>)
    2556:	0280      	lsls	r0, r0, #10
    2558:	18c0      	adds	r0, r0, r3


void sercomReset(SercomId id) {
    sercom(id)->SPI.CTRLA.reg = SERCOM_SPI_CTRLA_SWRST;
    255a:	2301      	movs	r3, #1
    255c:	6003      	str	r3, [r0, #0]
    while(sercom(id)->SPI.CTRLA.reg & SERCOM_SPI_CTRLA_SWRST);
    255e:	6802      	ldr	r2, [r0, #0]
    2560:	421a      	tst	r2, r3
    2562:	d1fc      	bne.n	255e <sercomReset+0xa>
}
    2564:	4770      	bx	lr
    2566:	46c0      	nop			; (mov r8, r8)
    2568:	42000800 	.word	0x42000800

0000256c <sercomSpiMasterInit>:
          | (cpol ? SERCOM_SPI_CTRLA_CPOL : 0)
          | (cpha ? SERCOM_SPI_CTRLA_CPHA : 0);
}


void sercomSpiMasterInit(SercomId id, u32_t dipo, u32_t dopo, bool cpol, bool cpha, u8_t baud) {
    256c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    256e:	0004      	movs	r4, r0
    2570:	9300      	str	r3, [sp, #0]
    2572:	ab08      	add	r3, sp, #32
    2574:	781b      	ldrb	r3, [r3, #0]
    2576:	0016      	movs	r6, r2
    2578:	9301      	str	r3, [sp, #4]
    257a:	ab09      	add	r3, sp, #36	; 0x24
    257c:	781f      	ldrb	r7, [r3, #0]

    sercomReset(id);
    257e:	4b12      	ldr	r3, [pc, #72]	; (25c8 <sercomSpiMasterInit+0x5c>)
void sercomSpiMasterInit(SercomId id, u32_t dipo, u32_t dopo, bool cpol, bool cpha, u8_t baud) {
    2580:	000d      	movs	r5, r1
    sercomReset(id);
    2582:	4798      	blx	r3
    2584:	4b11      	ldr	r3, [pc, #68]	; (25cc <sercomSpiMasterInit+0x60>)
    2586:	02a4      	lsls	r4, r4, #10
    2588:	18e4      	adds	r4, r4, r3

    sercom(id)->SPI.CTRLB.reg
        = SERCOM_SPI_CTRLB_RXEN;
    258a:	2380      	movs	r3, #128	; 0x80
    258c:	029b      	lsls	r3, r3, #10
    258e:	6063      	str	r3, [r4, #4]
    sercom(id)->SPI.BAUD.reg = baud;

    sercom(id)->SPI.CTRLA.reg
        = SERCOM_SPI_CTRLA_ENABLE
          | SERCOM_SPI_CTRLA_MODE_SPI_MASTER
          | SERCOM_SPI_CTRLA_DIPO(dipo)
    2590:	23c0      	movs	r3, #192	; 0xc0
    2592:	052d      	lsls	r5, r5, #20
    2594:	039b      	lsls	r3, r3, #14
    2596:	401d      	ands	r5, r3
          | SERCOM_SPI_CTRLA_DOPO(dopo)
    2598:	23c0      	movs	r3, #192	; 0xc0
    259a:	0436      	lsls	r6, r6, #16
    259c:	029b      	lsls	r3, r3, #10
    259e:	401e      	ands	r6, r3
    25a0:	230e      	movs	r3, #14
    25a2:	431e      	orrs	r6, r3
          | (cpol ? SERCOM_SPI_CTRLA_CPOL : 0)
    25a4:	9b00      	ldr	r3, [sp, #0]
    25a6:	4335      	orrs	r5, r6
    25a8:	1e5a      	subs	r2, r3, #1
    25aa:	4193      	sbcs	r3, r2
          | (cpha ? SERCOM_SPI_CTRLA_CPHA : 0);
    25ac:	9a01      	ldr	r2, [sp, #4]
          | (cpol ? SERCOM_SPI_CTRLA_CPOL : 0)
    25ae:	075b      	lsls	r3, r3, #29
          | (cpha ? SERCOM_SPI_CTRLA_CPHA : 0);
    25b0:	1e51      	subs	r1, r2, #1
    25b2:	418a      	sbcs	r2, r1
    25b4:	431d      	orrs	r5, r3
    25b6:	0712      	lsls	r2, r2, #28
    25b8:	4315      	orrs	r5, r2
    sercom(id)->SPI.BAUD.reg = baud;
    25ba:	7327      	strb	r7, [r4, #12]
        = SERCOM_SPI_CTRLA_ENABLE
    25bc:	6025      	str	r5, [r4, #0]
        };
    }
}

static inline void SPI_sync(SercomId id) {
    while  (sercom(id)->SPI.SYNCBUSY.bit.CTRLB);
    25be:	69e3      	ldr	r3, [r4, #28]
    25c0:	075b      	lsls	r3, r3, #29
    25c2:	d4fc      	bmi.n	25be <sercomSpiMasterInit+0x52>

    SPI_sync(id);
}
    25c4:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    25c6:	46c0      	nop			; (mov r8, r8)
    25c8:	00002555 	.word	0x00002555
    25cc:	42000800 	.word	0x42000800

000025d0 <sercomUartInit>:




void sercomUartInit(SercomId id, u32_t rxpo, u32_t txpo, int32_t fBAUD) {
    25d0:	b570      	push	{r4, r5, r6, lr}
    25d2:	0006      	movs	r6, r0

    //float BAUD = 65536*(1-(16*(115200/(48000000/8))));


    sercomReset(id);
    25d4:	4b0c      	ldr	r3, [pc, #48]	; (2608 <sercomUartInit+0x38>)
void sercomUartInit(SercomId id, u32_t rxpo, u32_t txpo, int32_t fBAUD) {
    25d6:	000d      	movs	r5, r1
    25d8:	0014      	movs	r4, r2
    sercomReset(id);
    25da:	4798      	blx	r3
    return (Sercom*) (0x42000800U + id * 1024);
    25dc:	4b0b      	ldr	r3, [pc, #44]	; (260c <sercomUartInit+0x3c>)
    25de:	02b0      	lsls	r0, r6, #10
    25e0:	18c0      	adds	r0, r0, r3
    sercom(id)->USART.CTRLA.reg = SERCOM_USART_CTRLA_MODE_USART_INT_CLK;
    25e2:	2304      	movs	r3, #4
    sercom(id)->USART.CTRLA.reg
        = SERCOM_USART_CTRLA_ENABLE
          | SERCOM_USART_CTRLA_MODE_USART_INT_CLK
          | SERCOM_SPI_CTRLA_DORD
          | SERCOM_USART_CTRLA_TXPO(txpo)
          | SERCOM_USART_CTRLA_RXPO(rxpo);
    25e4:	22c0      	movs	r2, #192	; 0xc0
    sercom(id)->USART.CTRLA.reg = SERCOM_USART_CTRLA_MODE_USART_INT_CLK;
    25e6:	6003      	str	r3, [r0, #0]
    sercom(id)->USART.BAUD.reg = 45403;
    25e8:	4b09      	ldr	r3, [pc, #36]	; (2610 <sercomUartInit+0x40>)
          | SERCOM_USART_CTRLA_RXPO(rxpo);
    25ea:	0392      	lsls	r2, r2, #14
    sercom(id)->USART.BAUD.reg = 45403;
    25ec:	8183      	strh	r3, [r0, #12]
        = SERCOM_USART_CTRLB_RXEN
    25ee:	23c0      	movs	r3, #192	; 0xc0
          | SERCOM_USART_CTRLA_RXPO(rxpo);
    25f0:	052d      	lsls	r5, r5, #20
    25f2:	4015      	ands	r5, r2
    25f4:	4a07      	ldr	r2, [pc, #28]	; (2614 <sercomUartInit+0x44>)
        = SERCOM_USART_CTRLB_RXEN
    25f6:	029b      	lsls	r3, r3, #10
          | SERCOM_USART_CTRLA_TXPO(txpo)
    25f8:	0424      	lsls	r4, r4, #16
          | SERCOM_USART_CTRLA_RXPO(rxpo);
    25fa:	432a      	orrs	r2, r5
          | SERCOM_USART_CTRLA_TXPO(txpo)
    25fc:	401c      	ands	r4, r3
          | SERCOM_USART_CTRLA_RXPO(rxpo);
    25fe:	4322      	orrs	r2, r4
        = SERCOM_USART_CTRLB_RXEN
    2600:	6043      	str	r3, [r0, #4]
        = SERCOM_USART_CTRLA_ENABLE
    2602:	6002      	str	r2, [r0, #0]
}
    2604:	bd70      	pop	{r4, r5, r6, pc}
    2606:	46c0      	nop			; (mov r8, r8)
    2608:	00002555 	.word	0x00002555
    260c:	42000800 	.word	0x42000800
    2610:	ffffb15b 	.word	0xffffb15b
    2614:	40000006 	.word	0x40000006

00002618 <spiDataTransfer>:
    2618:	4b04      	ldr	r3, [pc, #16]	; (262c <spiDataTransfer+0x14>)
    261a:	0280      	lsls	r0, r0, #10
    261c:	18c0      	adds	r0, r0, r3

u8_t spiDataTransfer(SercomId id, u8_t data) {
    sercom(id)->SPI.DATA.reg = data;
    261e:	6281      	str	r1, [r0, #40]	; 0x28
    while(sercom(id)->SPI.INTFLAG.bit.RXC == 0);
    2620:	7e03      	ldrb	r3, [r0, #24]
    2622:	075b      	lsls	r3, r3, #29
    2624:	d5fc      	bpl.n	2620 <spiDataTransfer+0x8>
    return sercom(id)->SPI.DATA.reg;
    2626:	6a80      	ldr	r0, [r0, #40]	; 0x28
    2628:	b2c0      	uxtb	r0, r0
}
    262a:	4770      	bx	lr
    262c:	42000800 	.word	0x42000800

00002630 <usartDataOut>:
    2630:	4b04      	ldr	r3, [pc, #16]	; (2644 <usartDataOut+0x14>)
    2632:	0280      	lsls	r0, r0, #10
    2634:	18c0      	adds	r0, r0, r3
    while(sercom(id)->SPI.INTFLAG.bit.DRE == 0);
    return sercom(id)->SPI.DATA.reg;
}

void usartDataOut(SercomId id, u8_t data) {
    sercom(id)->USART.DATA.reg = data;
    2636:	b289      	uxth	r1, r1
    2638:	8501      	strh	r1, [r0, #40]	; 0x28
    while(sercom(id)->USART.INTFLAG.bit.DRE == 0);
    263a:	7e03      	ldrb	r3, [r0, #24]
    263c:	07db      	lsls	r3, r3, #31
    263e:	d5fc      	bpl.n	263a <usartDataOut+0xa>
}
    2640:	4770      	bx	lr
    2642:	46c0      	nop			; (mov r8, r8)
    2644:	42000800 	.word	0x42000800

00002648 <usartDataIn>:
    2648:	4b02      	ldr	r3, [pc, #8]	; (2654 <usartDataIn+0xc>)
    264a:	0280      	lsls	r0, r0, #10
    264c:	18c0      	adds	r0, r0, r3

u8_t usartDataIn(SercomId id) {
    return sercom(id)->USART.DATA.reg;
    264e:	8d00      	ldrh	r0, [r0, #40]	; 0x28
    2650:	b2c0      	uxtb	r0, r0
}
    2652:	4770      	bx	lr
    2654:	42000800 	.word	0x42000800

00002658 <attemptConnection>:
#include <util.h>
#include <boardDefines.h>


void attemptConnection() {
    2658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

    if (USARTconnectionAvaliable()) {
    265a:	4b2f      	ldr	r3, [pc, #188]	; (2718 <attemptConnection+0xc0>)
    265c:	4798      	blx	r3
    265e:	2800      	cmp	r0, #0
    2660:	d049      	beq.n	26f6 <attemptConnection+0x9e>

        flightState = flightIdle;
    2662:	2201      	movs	r2, #1
    2664:	4b2d      	ldr	r3, [pc, #180]	; (271c <attemptConnection+0xc4>)
    2666:	701a      	strb	r2, [r3, #0]

        //wait for user to tell us what they want
        while(sercom(USART3)->SPI.INTFLAG.bit.RXC == 0);
    2668:	4b2d      	ldr	r3, [pc, #180]	; (2720 <attemptConnection+0xc8>)
    266a:	001f      	movs	r7, r3
    266c:	7e1a      	ldrb	r2, [r3, #24]
    266e:	0752      	lsls	r2, r2, #29
    2670:	d5fc      	bpl.n	266c <attemptConnection+0x14>
        u8_t option = usartDataIn(USART3);
    2672:	2003      	movs	r0, #3
    2674:	4d2b      	ldr	r5, [pc, #172]	; (2724 <attemptConnection+0xcc>)
    2676:	47a8      	blx	r5
    2678:	0004      	movs	r4, r0

        //user wants to read flight logs
        if (option == 0x4C) {
    267a:	284c      	cmp	r0, #76	; 0x4c
    267c:	d13c      	bne.n	26f8 <attemptConnection+0xa0>
    267e:	2400      	movs	r4, #0

            //send list of available flight logs
            for (u8_t flightLog = 0; flightLog < 11; ++flightLog) {

                if (isFlightLogged(flightLog)) {
    2680:	0020      	movs	r0, r4
    2682:	4b29      	ldr	r3, [pc, #164]	; (2728 <attemptConnection+0xd0>)
    2684:	4798      	blx	r3
    2686:	2800      	cmp	r0, #0
    2688:	d005      	beq.n	2696 <attemptConnection+0x3e>

                    usartDataOut(USART3, flightLog + 0x30);
    268a:	0021      	movs	r1, r4
    268c:	3130      	adds	r1, #48	; 0x30
    268e:	b2c9      	uxtb	r1, r1
    2690:	2003      	movs	r0, #3
    2692:	4b26      	ldr	r3, [pc, #152]	; (272c <attemptConnection+0xd4>)
    2694:	4798      	blx	r3
            for (u8_t flightLog = 0; flightLog < 11; ++flightLog) {
    2696:	3401      	adds	r4, #1
    2698:	b2e4      	uxtb	r4, r4
    269a:	2c0b      	cmp	r4, #11
    269c:	d1f0      	bne.n	2680 <attemptConnection+0x28>
                }
            }
            //done sending flight numbers
            usartDataOut(USART3, 0x0F);
    269e:	210f      	movs	r1, #15
    26a0:	2003      	movs	r0, #3
    26a2:	4e22      	ldr	r6, [pc, #136]	; (272c <attemptConnection+0xd4>)
    26a4:	47b0      	blx	r6

            //wait for user to pick which flight to read
            while(sercom(USART3)->SPI.INTFLAG.bit.RXC == 0);
    26a6:	7e3b      	ldrb	r3, [r7, #24]
    26a8:	075b      	lsls	r3, r3, #29
    26aa:	d5fc      	bpl.n	26a6 <attemptConnection+0x4e>
            u8_t flightToRead = usartDataIn(USART3) - 0x30;
    26ac:	2003      	movs	r0, #3
    26ae:	47a8      	blx	r5
    26b0:	3830      	subs	r0, #48	; 0x30
    26b2:	b2c4      	uxtb	r4, r0


            u32_t flightStartAddress = getFlightStartAddress(flightToRead);
    26b4:	0020      	movs	r0, r4
    26b6:	4b1e      	ldr	r3, [pc, #120]	; (2730 <attemptConnection+0xd8>)
    26b8:	4798      	blx	r3
            u32_t flightEndAddress = FindFlightEndingAddress(flightToRead) - 0x100;
    26ba:	4b1e      	ldr	r3, [pc, #120]	; (2734 <attemptConnection+0xdc>)
            u32_t flightStartAddress = getFlightStartAddress(flightToRead);
    26bc:	0007      	movs	r7, r0
            u32_t flightEndAddress = FindFlightEndingAddress(flightToRead) - 0x100;
    26be:	0020      	movs	r0, r4
    26c0:	4798      	blx	r3
    26c2:	1e45      	subs	r5, r0, #1
    26c4:	3dff      	subs	r5, #255	; 0xff

            //inform of page numbers
            u16_t pagesToSend = (flightEndAddress  - flightStartAddress) >> 8;
    26c6:	1bec      	subs	r4, r5, r7
    26c8:	0a24      	lsrs	r4, r4, #8
            usartDataOut(USART3, pagesToSend >> 0);
    26ca:	b2e1      	uxtb	r1, r4
    26cc:	2003      	movs	r0, #3
    26ce:	47b0      	blx	r6
            usartDataOut(USART3, pagesToSend >> 8);
    26d0:	b2a1      	uxth	r1, r4
    26d2:	0a09      	lsrs	r1, r1, #8
    26d4:	2003      	movs	r0, #3
    26d6:	47b0      	blx	r6

            //send flight end address for % full
            usartDataOut(USART3, flightEndAddress >> 0);
    26d8:	b2e9      	uxtb	r1, r5
    26da:	2003      	movs	r0, #3
    26dc:	47b0      	blx	r6
            usartDataOut(USART3, flightEndAddress >> 8);
    26de:	0a29      	lsrs	r1, r5, #8
    26e0:	b2c9      	uxtb	r1, r1
    26e2:	2003      	movs	r0, #3
    26e4:	47b0      	blx	r6
            usartDataOut(USART3, flightEndAddress >> 16);
    26e6:	0c29      	lsrs	r1, r5, #16
    26e8:	b2c9      	uxtb	r1, r1
    26ea:	2003      	movs	r0, #3
    26ec:	47b0      	blx	r6

            //USART out the flights pages
            sendTheasePagesToComputer(flightStartAddress, flightEndAddress);
    26ee:	0029      	movs	r1, r5
    26f0:	0038      	movs	r0, r7
    26f2:	4b11      	ldr	r3, [pc, #68]	; (2738 <attemptConnection+0xe0>)
    26f4:	4798      	blx	r3


        }
    }

}
    26f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if (option == 0x45) { // 'E'
    26f8:	2845      	cmp	r0, #69	; 0x45
    26fa:	d1fc      	bne.n	26f6 <attemptConnection+0x9e>
            AT25SFChipErase();
    26fc:	4b0f      	ldr	r3, [pc, #60]	; (273c <attemptConnection+0xe4>)
    26fe:	4798      	blx	r3
            AT25SFHoldTillReady();
    2700:	4b0f      	ldr	r3, [pc, #60]	; (2740 <attemptConnection+0xe8>)
    2702:	4798      	blx	r3
            usartDataOut(USART3, 'E');
    2704:	0021      	movs	r1, r4
    2706:	2003      	movs	r0, #3
    2708:	4b08      	ldr	r3, [pc, #32]	; (272c <attemptConnection+0xd4>)
    270a:	4798      	blx	r3
            beep(400);
    270c:	20c8      	movs	r0, #200	; 0xc8
    270e:	4b0d      	ldr	r3, [pc, #52]	; (2744 <attemptConnection+0xec>)
    2710:	0040      	lsls	r0, r0, #1
    2712:	4798      	blx	r3
}
    2714:	e7ef      	b.n	26f6 <attemptConnection+0x9e>
    2716:	46c0      	nop			; (mov r8, r8)
    2718:	00000a95 	.word	0x00000a95
    271c:	20000654 	.word	0x20000654
    2720:	42001400 	.word	0x42001400
    2724:	00002649 	.word	0x00002649
    2728:	000020d5 	.word	0x000020d5
    272c:	00002631 	.word	0x00002631
    2730:	0000207d 	.word	0x0000207d
    2734:	000020a9 	.word	0x000020a9
    2738:	00000ac9 	.word	0x00000ac9
    273c:	0000021d 	.word	0x0000021d
    2740:	000001e5 	.word	0x000001e5
    2744:	00000c71 	.word	0x00000c71

00002748 <pow>:
    2748:	b5f0      	push	{r4, r5, r6, r7, lr}
    274a:	4657      	mov	r7, sl
    274c:	464e      	mov	r6, r9
    274e:	46de      	mov	lr, fp
    2750:	4645      	mov	r5, r8
    2752:	b5e0      	push	{r5, r6, r7, lr}
    2754:	b08f      	sub	sp, #60	; 0x3c
    2756:	001d      	movs	r5, r3
    2758:	0006      	movs	r6, r0
    275a:	000f      	movs	r7, r1
    275c:	0014      	movs	r4, r2
    275e:	f000 f99f 	bl	2aa0 <__ieee754_pow>
    2762:	4bc7      	ldr	r3, [pc, #796]	; (2a80 <pow+0x338>)
    2764:	9000      	str	r0, [sp, #0]
    2766:	9101      	str	r1, [sp, #4]
    2768:	469a      	mov	sl, r3
    276a:	781b      	ldrb	r3, [r3, #0]
    276c:	b25b      	sxtb	r3, r3
    276e:	4699      	mov	r9, r3
    2770:	3301      	adds	r3, #1
    2772:	d03e      	beq.n	27f2 <pow+0xaa>
    2774:	0022      	movs	r2, r4
    2776:	002b      	movs	r3, r5
    2778:	0020      	movs	r0, r4
    277a:	0029      	movs	r1, r5
    277c:	f003 fa5e 	bl	5c3c <__aeabi_dcmpun>
    2780:	4683      	mov	fp, r0
    2782:	2800      	cmp	r0, #0
    2784:	d135      	bne.n	27f2 <pow+0xaa>
    2786:	0032      	movs	r2, r6
    2788:	003b      	movs	r3, r7
    278a:	0030      	movs	r0, r6
    278c:	0039      	movs	r1, r7
    278e:	f003 fa55 	bl	5c3c <__aeabi_dcmpun>
    2792:	2200      	movs	r2, #0
    2794:	9003      	str	r0, [sp, #12]
    2796:	2800      	cmp	r0, #0
    2798:	d000      	beq.n	279c <pow+0x54>
    279a:	e0b6      	b.n	290a <pow+0x1c2>
    279c:	2300      	movs	r3, #0
    279e:	0030      	movs	r0, r6
    27a0:	0039      	movs	r1, r7
    27a2:	f001 f8d5 	bl	3950 <__aeabi_dcmpeq>
    27a6:	2800      	cmp	r0, #0
    27a8:	d02c      	beq.n	2804 <pow+0xbc>
    27aa:	2200      	movs	r2, #0
    27ac:	2300      	movs	r3, #0
    27ae:	0020      	movs	r0, r4
    27b0:	0029      	movs	r1, r5
    27b2:	f001 f8cd 	bl	3950 <__aeabi_dcmpeq>
    27b6:	4683      	mov	fp, r0
    27b8:	2800      	cmp	r0, #0
    27ba:	d100      	bne.n	27be <pow+0x76>
    27bc:	e077      	b.n	28ae <pow+0x166>
    27be:	ab04      	add	r3, sp, #16
    27c0:	4698      	mov	r8, r3
    27c2:	2301      	movs	r3, #1
    27c4:	4642      	mov	r2, r8
    27c6:	9304      	str	r3, [sp, #16]
    27c8:	4bae      	ldr	r3, [pc, #696]	; (2a84 <pow+0x33c>)
    27ca:	6053      	str	r3, [r2, #4]
    27cc:	4643      	mov	r3, r8
    27ce:	9a03      	ldr	r2, [sp, #12]
    27d0:	611c      	str	r4, [r3, #16]
    27d2:	615d      	str	r5, [r3, #20]
    27d4:	621a      	str	r2, [r3, #32]
    27d6:	609e      	str	r6, [r3, #8]
    27d8:	60df      	str	r7, [r3, #12]
    27da:	4642      	mov	r2, r8
    27dc:	2300      	movs	r3, #0
    27de:	2400      	movs	r4, #0
    27e0:	6193      	str	r3, [r2, #24]
    27e2:	61d4      	str	r4, [r2, #28]
    27e4:	464b      	mov	r3, r9
    27e6:	2b00      	cmp	r3, #0
    27e8:	d04d      	beq.n	2886 <pow+0x13e>
    27ea:	2300      	movs	r3, #0
    27ec:	4ca6      	ldr	r4, [pc, #664]	; (2a88 <pow+0x340>)
    27ee:	9300      	str	r3, [sp, #0]
    27f0:	9401      	str	r4, [sp, #4]
    27f2:	9800      	ldr	r0, [sp, #0]
    27f4:	9901      	ldr	r1, [sp, #4]
    27f6:	b00f      	add	sp, #60	; 0x3c
    27f8:	bc3c      	pop	{r2, r3, r4, r5}
    27fa:	4690      	mov	r8, r2
    27fc:	4699      	mov	r9, r3
    27fe:	46a2      	mov	sl, r4
    2800:	46ab      	mov	fp, r5
    2802:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2804:	9800      	ldr	r0, [sp, #0]
    2806:	9901      	ldr	r1, [sp, #4]
    2808:	f000 ff64 	bl	36d4 <finite>
    280c:	4681      	mov	r9, r0
    280e:	2800      	cmp	r0, #0
    2810:	d100      	bne.n	2814 <pow+0xcc>
    2812:	e09b      	b.n	294c <pow+0x204>
    2814:	9800      	ldr	r0, [sp, #0]
    2816:	9901      	ldr	r1, [sp, #4]
    2818:	2200      	movs	r2, #0
    281a:	2300      	movs	r3, #0
    281c:	f001 f898 	bl	3950 <__aeabi_dcmpeq>
    2820:	2800      	cmp	r0, #0
    2822:	d0e6      	beq.n	27f2 <pow+0xaa>
    2824:	0030      	movs	r0, r6
    2826:	0039      	movs	r1, r7
    2828:	f000 ff54 	bl	36d4 <finite>
    282c:	2800      	cmp	r0, #0
    282e:	d0e0      	beq.n	27f2 <pow+0xaa>
    2830:	0020      	movs	r0, r4
    2832:	0029      	movs	r1, r5
    2834:	f000 ff4e 	bl	36d4 <finite>
    2838:	2800      	cmp	r0, #0
    283a:	d0da      	beq.n	27f2 <pow+0xaa>
    283c:	ab04      	add	r3, sp, #16
    283e:	4698      	mov	r8, r3
    2840:	2304      	movs	r3, #4
    2842:	4642      	mov	r2, r8
    2844:	9304      	str	r3, [sp, #16]
    2846:	4b8f      	ldr	r3, [pc, #572]	; (2a84 <pow+0x33c>)
    2848:	6114      	str	r4, [r2, #16]
    284a:	6155      	str	r5, [r2, #20]
    284c:	6053      	str	r3, [r2, #4]
    284e:	2300      	movs	r3, #0
    2850:	2400      	movs	r4, #0
    2852:	6213      	str	r3, [r2, #32]
    2854:	2300      	movs	r3, #0
    2856:	6193      	str	r3, [r2, #24]
    2858:	61d4      	str	r4, [r2, #28]
    285a:	4653      	mov	r3, sl
    285c:	781b      	ldrb	r3, [r3, #0]
    285e:	6096      	str	r6, [r2, #8]
    2860:	60d7      	str	r7, [r2, #12]
    2862:	b25b      	sxtb	r3, r3
    2864:	2b02      	cmp	r3, #2
    2866:	d004      	beq.n	2872 <pow+0x12a>
    2868:	4640      	mov	r0, r8
    286a:	f000 ff3d 	bl	36e8 <matherr>
    286e:	2800      	cmp	r0, #0
    2870:	d10e      	bne.n	2890 <pow+0x148>
    2872:	f003 fc37 	bl	60e4 <__errno>
    2876:	2322      	movs	r3, #34	; 0x22
    2878:	6003      	str	r3, [r0, #0]
    287a:	e009      	b.n	2890 <pow+0x148>
    287c:	4642      	mov	r2, r8
    287e:	2300      	movs	r3, #0
    2880:	2400      	movs	r4, #0
    2882:	6193      	str	r3, [r2, #24]
    2884:	61d4      	str	r4, [r2, #28]
    2886:	4640      	mov	r0, r8
    2888:	f000 ff2e 	bl	36e8 <matherr>
    288c:	2800      	cmp	r0, #0
    288e:	d037      	beq.n	2900 <pow+0x1b8>
    2890:	4643      	mov	r3, r8
    2892:	6a1b      	ldr	r3, [r3, #32]
    2894:	2b00      	cmp	r3, #0
    2896:	d004      	beq.n	28a2 <pow+0x15a>
    2898:	f003 fc24 	bl	60e4 <__errno>
    289c:	4643      	mov	r3, r8
    289e:	6a1b      	ldr	r3, [r3, #32]
    28a0:	6003      	str	r3, [r0, #0]
    28a2:	4643      	mov	r3, r8
    28a4:	69dc      	ldr	r4, [r3, #28]
    28a6:	699b      	ldr	r3, [r3, #24]
    28a8:	9300      	str	r3, [sp, #0]
    28aa:	9401      	str	r4, [sp, #4]
    28ac:	e7a1      	b.n	27f2 <pow+0xaa>
    28ae:	0020      	movs	r0, r4
    28b0:	0029      	movs	r1, r5
    28b2:	f000 ff0f 	bl	36d4 <finite>
    28b6:	2800      	cmp	r0, #0
    28b8:	d09b      	beq.n	27f2 <pow+0xaa>
    28ba:	2200      	movs	r2, #0
    28bc:	2300      	movs	r3, #0
    28be:	0020      	movs	r0, r4
    28c0:	0029      	movs	r1, r5
    28c2:	f001 f84b 	bl	395c <__aeabi_dcmplt>
    28c6:	2800      	cmp	r0, #0
    28c8:	d100      	bne.n	28cc <pow+0x184>
    28ca:	e792      	b.n	27f2 <pow+0xaa>
    28cc:	ab04      	add	r3, sp, #16
    28ce:	4698      	mov	r8, r3
    28d0:	2301      	movs	r3, #1
    28d2:	4642      	mov	r2, r8
    28d4:	9304      	str	r3, [sp, #16]
    28d6:	4b6b      	ldr	r3, [pc, #428]	; (2a84 <pow+0x33c>)
    28d8:	6053      	str	r3, [r2, #4]
    28da:	4643      	mov	r3, r8
    28dc:	465a      	mov	r2, fp
    28de:	609e      	str	r6, [r3, #8]
    28e0:	60df      	str	r7, [r3, #12]
    28e2:	621a      	str	r2, [r3, #32]
    28e4:	611c      	str	r4, [r3, #16]
    28e6:	615d      	str	r5, [r3, #20]
    28e8:	4653      	mov	r3, sl
    28ea:	781b      	ldrb	r3, [r3, #0]
    28ec:	b25b      	sxtb	r3, r3
    28ee:	2b00      	cmp	r3, #0
    28f0:	d0c4      	beq.n	287c <pow+0x134>
    28f2:	2000      	movs	r0, #0
    28f4:	4642      	mov	r2, r8
    28f6:	4965      	ldr	r1, [pc, #404]	; (2a8c <pow+0x344>)
    28f8:	6190      	str	r0, [r2, #24]
    28fa:	61d1      	str	r1, [r2, #28]
    28fc:	2b02      	cmp	r3, #2
    28fe:	d1c2      	bne.n	2886 <pow+0x13e>
    2900:	f003 fbf0 	bl	60e4 <__errno>
    2904:	2321      	movs	r3, #33	; 0x21
    2906:	6003      	str	r3, [r0, #0]
    2908:	e7c2      	b.n	2890 <pow+0x148>
    290a:	2300      	movs	r3, #0
    290c:	0020      	movs	r0, r4
    290e:	0029      	movs	r1, r5
    2910:	f001 f81e 	bl	3950 <__aeabi_dcmpeq>
    2914:	2800      	cmp	r0, #0
    2916:	d100      	bne.n	291a <pow+0x1d2>
    2918:	e76b      	b.n	27f2 <pow+0xaa>
    291a:	ab04      	add	r3, sp, #16
    291c:	4698      	mov	r8, r3
    291e:	2301      	movs	r3, #1
    2920:	4642      	mov	r2, r8
    2922:	9304      	str	r3, [sp, #16]
    2924:	4b57      	ldr	r3, [pc, #348]	; (2a84 <pow+0x33c>)
    2926:	4641      	mov	r1, r8
    2928:	6053      	str	r3, [r2, #4]
    292a:	4643      	mov	r3, r8
    292c:	465a      	mov	r2, fp
    292e:	621a      	str	r2, [r3, #32]
    2930:	2200      	movs	r2, #0
    2932:	609e      	str	r6, [r3, #8]
    2934:	60df      	str	r7, [r3, #12]
    2936:	611c      	str	r4, [r3, #16]
    2938:	615d      	str	r5, [r3, #20]
    293a:	4b53      	ldr	r3, [pc, #332]	; (2a88 <pow+0x340>)
    293c:	618a      	str	r2, [r1, #24]
    293e:	61cb      	str	r3, [r1, #28]
    2940:	9200      	str	r2, [sp, #0]
    2942:	9301      	str	r3, [sp, #4]
    2944:	464b      	mov	r3, r9
    2946:	2b02      	cmp	r3, #2
    2948:	d19d      	bne.n	2886 <pow+0x13e>
    294a:	e752      	b.n	27f2 <pow+0xaa>
    294c:	0030      	movs	r0, r6
    294e:	0039      	movs	r1, r7
    2950:	f000 fec0 	bl	36d4 <finite>
    2954:	2800      	cmp	r0, #0
    2956:	d100      	bne.n	295a <pow+0x212>
    2958:	e75c      	b.n	2814 <pow+0xcc>
    295a:	0020      	movs	r0, r4
    295c:	0029      	movs	r1, r5
    295e:	f000 feb9 	bl	36d4 <finite>
    2962:	2800      	cmp	r0, #0
    2964:	d100      	bne.n	2968 <pow+0x220>
    2966:	e755      	b.n	2814 <pow+0xcc>
    2968:	9800      	ldr	r0, [sp, #0]
    296a:	9901      	ldr	r1, [sp, #4]
    296c:	000b      	movs	r3, r1
    296e:	0002      	movs	r2, r0
    2970:	f003 f964 	bl	5c3c <__aeabi_dcmpun>
    2974:	ab04      	add	r3, sp, #16
    2976:	4698      	mov	r8, r3
    2978:	2800      	cmp	r0, #0
    297a:	d161      	bne.n	2a40 <pow+0x2f8>
    297c:	2303      	movs	r3, #3
    297e:	4642      	mov	r2, r8
    2980:	9304      	str	r3, [sp, #16]
    2982:	4b40      	ldr	r3, [pc, #256]	; (2a84 <pow+0x33c>)
    2984:	6210      	str	r0, [r2, #32]
    2986:	6053      	str	r3, [r2, #4]
    2988:	4653      	mov	r3, sl
    298a:	781b      	ldrb	r3, [r3, #0]
    298c:	6096      	str	r6, [r2, #8]
    298e:	60d7      	str	r7, [r2, #12]
    2990:	b25b      	sxtb	r3, r3
    2992:	6114      	str	r4, [r2, #16]
    2994:	6155      	str	r5, [r2, #20]
    2996:	4699      	mov	r9, r3
    2998:	2b00      	cmp	r3, #0
    299a:	d12f      	bne.n	29fc <pow+0x2b4>
    299c:	22e0      	movs	r2, #224	; 0xe0
    299e:	4641      	mov	r1, r8
    29a0:	4b3b      	ldr	r3, [pc, #236]	; (2a90 <pow+0x348>)
    29a2:	0612      	lsls	r2, r2, #24
    29a4:	618a      	str	r2, [r1, #24]
    29a6:	61cb      	str	r3, [r1, #28]
    29a8:	0030      	movs	r0, r6
    29aa:	2200      	movs	r2, #0
    29ac:	2300      	movs	r3, #0
    29ae:	0039      	movs	r1, r7
    29b0:	f000 ffd4 	bl	395c <__aeabi_dcmplt>
    29b4:	2800      	cmp	r0, #0
    29b6:	d100      	bne.n	29ba <pow+0x272>
    29b8:	e756      	b.n	2868 <pow+0x120>
    29ba:	2200      	movs	r2, #0
    29bc:	4b35      	ldr	r3, [pc, #212]	; (2a94 <pow+0x34c>)
    29be:	0020      	movs	r0, r4
    29c0:	0029      	movs	r1, r5
    29c2:	f002 fba5 	bl	5110 <__aeabi_dmul>
    29c6:	0004      	movs	r4, r0
    29c8:	000d      	movs	r5, r1
    29ca:	f000 fe95 	bl	36f8 <rint>
    29ce:	0002      	movs	r2, r0
    29d0:	000b      	movs	r3, r1
    29d2:	0020      	movs	r0, r4
    29d4:	0029      	movs	r1, r5
    29d6:	f000 ffbb 	bl	3950 <__aeabi_dcmpeq>
    29da:	2800      	cmp	r0, #0
    29dc:	d105      	bne.n	29ea <pow+0x2a2>
    29de:	22e0      	movs	r2, #224	; 0xe0
    29e0:	4b2d      	ldr	r3, [pc, #180]	; (2a98 <pow+0x350>)
    29e2:	0612      	lsls	r2, r2, #24
    29e4:	4641      	mov	r1, r8
    29e6:	618a      	str	r2, [r1, #24]
    29e8:	61cb      	str	r3, [r1, #28]
    29ea:	4653      	mov	r3, sl
    29ec:	781b      	ldrb	r3, [r3, #0]
    29ee:	b25b      	sxtb	r3, r3
    29f0:	4699      	mov	r9, r3
    29f2:	464b      	mov	r3, r9
    29f4:	2b02      	cmp	r3, #2
    29f6:	d000      	beq.n	29fa <pow+0x2b2>
    29f8:	e736      	b.n	2868 <pow+0x120>
    29fa:	e73a      	b.n	2872 <pow+0x12a>
    29fc:	2200      	movs	r2, #0
    29fe:	4641      	mov	r1, r8
    2a00:	4b26      	ldr	r3, [pc, #152]	; (2a9c <pow+0x354>)
    2a02:	0030      	movs	r0, r6
    2a04:	618a      	str	r2, [r1, #24]
    2a06:	61cb      	str	r3, [r1, #28]
    2a08:	2200      	movs	r2, #0
    2a0a:	2300      	movs	r3, #0
    2a0c:	0039      	movs	r1, r7
    2a0e:	f000 ffa5 	bl	395c <__aeabi_dcmplt>
    2a12:	2800      	cmp	r0, #0
    2a14:	d0ed      	beq.n	29f2 <pow+0x2aa>
    2a16:	2200      	movs	r2, #0
    2a18:	4b1e      	ldr	r3, [pc, #120]	; (2a94 <pow+0x34c>)
    2a1a:	0020      	movs	r0, r4
    2a1c:	0029      	movs	r1, r5
    2a1e:	f002 fb77 	bl	5110 <__aeabi_dmul>
    2a22:	0004      	movs	r4, r0
    2a24:	000d      	movs	r5, r1
    2a26:	f000 fe67 	bl	36f8 <rint>
    2a2a:	0002      	movs	r2, r0
    2a2c:	000b      	movs	r3, r1
    2a2e:	0020      	movs	r0, r4
    2a30:	0029      	movs	r1, r5
    2a32:	f000 ff8d 	bl	3950 <__aeabi_dcmpeq>
    2a36:	2800      	cmp	r0, #0
    2a38:	d1d7      	bne.n	29ea <pow+0x2a2>
    2a3a:	2200      	movs	r2, #0
    2a3c:	4b13      	ldr	r3, [pc, #76]	; (2a8c <pow+0x344>)
    2a3e:	e7d1      	b.n	29e4 <pow+0x29c>
    2a40:	2301      	movs	r3, #1
    2a42:	4642      	mov	r2, r8
    2a44:	9304      	str	r3, [sp, #16]
    2a46:	4b0f      	ldr	r3, [pc, #60]	; (2a84 <pow+0x33c>)
    2a48:	6053      	str	r3, [r2, #4]
    2a4a:	4643      	mov	r3, r8
    2a4c:	464a      	mov	r2, r9
    2a4e:	611c      	str	r4, [r3, #16]
    2a50:	615d      	str	r5, [r3, #20]
    2a52:	621a      	str	r2, [r3, #32]
    2a54:	609e      	str	r6, [r3, #8]
    2a56:	60df      	str	r7, [r3, #12]
    2a58:	2400      	movs	r4, #0
    2a5a:	4653      	mov	r3, sl
    2a5c:	571c      	ldrsb	r4, [r3, r4]
    2a5e:	2c00      	cmp	r4, #0
    2a60:	d100      	bne.n	2a64 <pow+0x31c>
    2a62:	e70b      	b.n	287c <pow+0x134>
    2a64:	2300      	movs	r3, #0
    2a66:	2200      	movs	r2, #0
    2a68:	0019      	movs	r1, r3
    2a6a:	0010      	movs	r0, r2
    2a6c:	f001 ff1c 	bl	48a8 <__aeabi_ddiv>
    2a70:	4643      	mov	r3, r8
    2a72:	6198      	str	r0, [r3, #24]
    2a74:	61d9      	str	r1, [r3, #28]
    2a76:	2c02      	cmp	r4, #2
    2a78:	d100      	bne.n	2a7c <pow+0x334>
    2a7a:	e741      	b.n	2900 <pow+0x1b8>
    2a7c:	e703      	b.n	2886 <pow+0x13e>
    2a7e:	46c0      	nop			; (mov r8, r8)
    2a80:	20000070 	.word	0x20000070
    2a84:	00006288 	.word	0x00006288
    2a88:	3ff00000 	.word	0x3ff00000
    2a8c:	fff00000 	.word	0xfff00000
    2a90:	47efffff 	.word	0x47efffff
    2a94:	3fe00000 	.word	0x3fe00000
    2a98:	c7efffff 	.word	0xc7efffff
    2a9c:	7ff00000 	.word	0x7ff00000

00002aa0 <__ieee754_pow>:
    2aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2aa2:	4657      	mov	r7, sl
    2aa4:	464e      	mov	r6, r9
    2aa6:	4645      	mov	r5, r8
    2aa8:	46de      	mov	lr, fp
    2aaa:	001c      	movs	r4, r3
    2aac:	0013      	movs	r3, r2
    2aae:	b5e0      	push	{r5, r6, r7, lr}
    2ab0:	0065      	lsls	r5, r4, #1
    2ab2:	b091      	sub	sp, #68	; 0x44
    2ab4:	086d      	lsrs	r5, r5, #1
    2ab6:	9300      	str	r3, [sp, #0]
    2ab8:	9401      	str	r4, [sp, #4]
    2aba:	0007      	movs	r7, r0
    2abc:	000e      	movs	r6, r1
    2abe:	4680      	mov	r8, r0
    2ac0:	4689      	mov	r9, r1
    2ac2:	46a2      	mov	sl, r4
    2ac4:	432b      	orrs	r3, r5
    2ac6:	d031      	beq.n	2b2c <__ieee754_pow+0x8c>
    2ac8:	4b67      	ldr	r3, [pc, #412]	; (2c68 <__ieee754_pow+0x1c8>)
    2aca:	0074      	lsls	r4, r6, #1
    2acc:	0864      	lsrs	r4, r4, #1
    2ace:	429c      	cmp	r4, r3
    2ad0:	dc27      	bgt.n	2b22 <__ieee754_pow+0x82>
    2ad2:	d024      	beq.n	2b1e <__ieee754_pow+0x7e>
    2ad4:	429d      	cmp	r5, r3
    2ad6:	dc24      	bgt.n	2b22 <__ieee754_pow+0x82>
    2ad8:	4b63      	ldr	r3, [pc, #396]	; (2c68 <__ieee754_pow+0x1c8>)
    2ada:	429d      	cmp	r5, r3
    2adc:	d100      	bne.n	2ae0 <__ieee754_pow+0x40>
    2ade:	e081      	b.n	2be4 <__ieee754_pow+0x144>
    2ae0:	2300      	movs	r3, #0
    2ae2:	469b      	mov	fp, r3
    2ae4:	464b      	mov	r3, r9
    2ae6:	2b00      	cmp	r3, #0
    2ae8:	da00      	bge.n	2aec <__ieee754_pow+0x4c>
    2aea:	e07f      	b.n	2bec <__ieee754_pow+0x14c>
    2aec:	2a00      	cmp	r2, #0
    2aee:	d12c      	bne.n	2b4a <__ieee754_pow+0xaa>
    2af0:	4b5d      	ldr	r3, [pc, #372]	; (2c68 <__ieee754_pow+0x1c8>)
    2af2:	429d      	cmp	r5, r3
    2af4:	d100      	bne.n	2af8 <__ieee754_pow+0x58>
    2af6:	e097      	b.n	2c28 <__ieee754_pow+0x188>
    2af8:	4b5c      	ldr	r3, [pc, #368]	; (2c6c <__ieee754_pow+0x1cc>)
    2afa:	429d      	cmp	r5, r3
    2afc:	d066      	beq.n	2bcc <__ieee754_pow+0x12c>
    2afe:	2380      	movs	r3, #128	; 0x80
    2b00:	05db      	lsls	r3, r3, #23
    2b02:	459a      	cmp	sl, r3
    2b04:	d100      	bne.n	2b08 <__ieee754_pow+0x68>
    2b06:	e3b9      	b.n	327c <__ieee754_pow+0x7dc>
    2b08:	4b59      	ldr	r3, [pc, #356]	; (2c70 <__ieee754_pow+0x1d0>)
    2b0a:	459a      	cmp	sl, r3
    2b0c:	d11d      	bne.n	2b4a <__ieee754_pow+0xaa>
    2b0e:	464b      	mov	r3, r9
    2b10:	2b00      	cmp	r3, #0
    2b12:	db1a      	blt.n	2b4a <__ieee754_pow+0xaa>
    2b14:	0038      	movs	r0, r7
    2b16:	0031      	movs	r1, r6
    2b18:	f000 fcf8 	bl	350c <__ieee754_sqrt>
    2b1c:	e008      	b.n	2b30 <__ieee754_pow+0x90>
    2b1e:	2800      	cmp	r0, #0
    2b20:	d00d      	beq.n	2b3e <__ieee754_pow+0x9e>
    2b22:	4b54      	ldr	r3, [pc, #336]	; (2c74 <__ieee754_pow+0x1d4>)
    2b24:	469c      	mov	ip, r3
    2b26:	4464      	add	r4, ip
    2b28:	4327      	orrs	r7, r4
    2b2a:	d10a      	bne.n	2b42 <__ieee754_pow+0xa2>
    2b2c:	2000      	movs	r0, #0
    2b2e:	494f      	ldr	r1, [pc, #316]	; (2c6c <__ieee754_pow+0x1cc>)
    2b30:	b011      	add	sp, #68	; 0x44
    2b32:	bc3c      	pop	{r2, r3, r4, r5}
    2b34:	4690      	mov	r8, r2
    2b36:	4699      	mov	r9, r3
    2b38:	46a2      	mov	sl, r4
    2b3a:	46ab      	mov	fp, r5
    2b3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2b3e:	42a5      	cmp	r5, r4
    2b40:	ddca      	ble.n	2ad8 <__ieee754_pow+0x38>
    2b42:	484d      	ldr	r0, [pc, #308]	; (2c78 <__ieee754_pow+0x1d8>)
    2b44:	f000 fdd2 	bl	36ec <nan>
    2b48:	e7f2      	b.n	2b30 <__ieee754_pow+0x90>
    2b4a:	0038      	movs	r0, r7
    2b4c:	0031      	movs	r1, r6
    2b4e:	f000 fdbd 	bl	36cc <fabs>
    2b52:	4643      	mov	r3, r8
    2b54:	2b00      	cmp	r3, #0
    2b56:	d11d      	bne.n	2b94 <__ieee754_pow+0xf4>
    2b58:	2c00      	cmp	r4, #0
    2b5a:	d004      	beq.n	2b66 <__ieee754_pow+0xc6>
    2b5c:	4a43      	ldr	r2, [pc, #268]	; (2c6c <__ieee754_pow+0x1cc>)
    2b5e:	00b3      	lsls	r3, r6, #2
    2b60:	089b      	lsrs	r3, r3, #2
    2b62:	4293      	cmp	r3, r2
    2b64:	d116      	bne.n	2b94 <__ieee754_pow+0xf4>
    2b66:	4653      	mov	r3, sl
    2b68:	2b00      	cmp	r3, #0
    2b6a:	da00      	bge.n	2b6e <__ieee754_pow+0xce>
    2b6c:	e3c5      	b.n	32fa <__ieee754_pow+0x85a>
    2b6e:	464b      	mov	r3, r9
    2b70:	2b00      	cmp	r3, #0
    2b72:	dadd      	bge.n	2b30 <__ieee754_pow+0x90>
    2b74:	4b3f      	ldr	r3, [pc, #252]	; (2c74 <__ieee754_pow+0x1d4>)
    2b76:	469c      	mov	ip, r3
    2b78:	465b      	mov	r3, fp
    2b7a:	4464      	add	r4, ip
    2b7c:	431c      	orrs	r4, r3
    2b7e:	d101      	bne.n	2b84 <__ieee754_pow+0xe4>
    2b80:	f000 fc53 	bl	342a <__ieee754_pow+0x98a>
    2b84:	465b      	mov	r3, fp
    2b86:	2b01      	cmp	r3, #1
    2b88:	d1d2      	bne.n	2b30 <__ieee754_pow+0x90>
    2b8a:	2480      	movs	r4, #128	; 0x80
    2b8c:	0624      	lsls	r4, r4, #24
    2b8e:	190b      	adds	r3, r1, r4
    2b90:	0019      	movs	r1, r3
    2b92:	e7cd      	b.n	2b30 <__ieee754_pow+0x90>
    2b94:	0ff3      	lsrs	r3, r6, #31
    2b96:	3b01      	subs	r3, #1
    2b98:	4698      	mov	r8, r3
    2b9a:	465b      	mov	r3, fp
    2b9c:	4642      	mov	r2, r8
    2b9e:	4313      	orrs	r3, r2
    2ba0:	d057      	beq.n	2c52 <__ieee754_pow+0x1b2>
    2ba2:	4b36      	ldr	r3, [pc, #216]	; (2c7c <__ieee754_pow+0x1dc>)
    2ba4:	429d      	cmp	r5, r3
    2ba6:	dd77      	ble.n	2c98 <__ieee754_pow+0x1f8>
    2ba8:	4b35      	ldr	r3, [pc, #212]	; (2c80 <__ieee754_pow+0x1e0>)
    2baa:	429d      	cmp	r5, r3
    2bac:	dc00      	bgt.n	2bb0 <__ieee754_pow+0x110>
    2bae:	e3b1      	b.n	3314 <__ieee754_pow+0x874>
    2bb0:	4b34      	ldr	r3, [pc, #208]	; (2c84 <__ieee754_pow+0x1e4>)
    2bb2:	429c      	cmp	r4, r3
    2bb4:	dc00      	bgt.n	2bb8 <__ieee754_pow+0x118>
    2bb6:	e3a8      	b.n	330a <__ieee754_pow+0x86a>
    2bb8:	4653      	mov	r3, sl
    2bba:	2b00      	cmp	r3, #0
    2bbc:	dd43      	ble.n	2c46 <__ieee754_pow+0x1a6>
    2bbe:	4a32      	ldr	r2, [pc, #200]	; (2c88 <__ieee754_pow+0x1e8>)
    2bc0:	4b32      	ldr	r3, [pc, #200]	; (2c8c <__ieee754_pow+0x1ec>)
    2bc2:	0010      	movs	r0, r2
    2bc4:	0019      	movs	r1, r3
    2bc6:	f002 faa3 	bl	5110 <__aeabi_dmul>
    2bca:	e7b1      	b.n	2b30 <__ieee754_pow+0x90>
    2bcc:	4653      	mov	r3, sl
    2bce:	0038      	movs	r0, r7
    2bd0:	0031      	movs	r1, r6
    2bd2:	2b00      	cmp	r3, #0
    2bd4:	daac      	bge.n	2b30 <__ieee754_pow+0x90>
    2bd6:	003a      	movs	r2, r7
    2bd8:	0033      	movs	r3, r6
    2bda:	2000      	movs	r0, #0
    2bdc:	4923      	ldr	r1, [pc, #140]	; (2c6c <__ieee754_pow+0x1cc>)
    2bde:	f001 fe63 	bl	48a8 <__aeabi_ddiv>
    2be2:	e7a5      	b.n	2b30 <__ieee754_pow+0x90>
    2be4:	2a00      	cmp	r2, #0
    2be6:	d100      	bne.n	2bea <__ieee754_pow+0x14a>
    2be8:	e77a      	b.n	2ae0 <__ieee754_pow+0x40>
    2bea:	e79a      	b.n	2b22 <__ieee754_pow+0x82>
    2bec:	4b28      	ldr	r3, [pc, #160]	; (2c90 <__ieee754_pow+0x1f0>)
    2bee:	429d      	cmp	r5, r3
    2bf0:	dc2c      	bgt.n	2c4c <__ieee754_pow+0x1ac>
    2bf2:	4b24      	ldr	r3, [pc, #144]	; (2c84 <__ieee754_pow+0x1e4>)
    2bf4:	429d      	cmp	r5, r3
    2bf6:	dc00      	bgt.n	2bfa <__ieee754_pow+0x15a>
    2bf8:	e778      	b.n	2aec <__ieee754_pow+0x4c>
    2bfa:	4926      	ldr	r1, [pc, #152]	; (2c94 <__ieee754_pow+0x1f4>)
    2bfc:	152b      	asrs	r3, r5, #20
    2bfe:	468c      	mov	ip, r1
    2c00:	4463      	add	r3, ip
    2c02:	2b14      	cmp	r3, #20
    2c04:	dc01      	bgt.n	2c0a <__ieee754_pow+0x16a>
    2c06:	f000 fbf3 	bl	33f0 <__ieee754_pow+0x950>
    2c0a:	2134      	movs	r1, #52	; 0x34
    2c0c:	1acb      	subs	r3, r1, r3
    2c0e:	9900      	ldr	r1, [sp, #0]
    2c10:	40d9      	lsrs	r1, r3
    2c12:	0008      	movs	r0, r1
    2c14:	4098      	lsls	r0, r3
    2c16:	4282      	cmp	r2, r0
    2c18:	d000      	beq.n	2c1c <__ieee754_pow+0x17c>
    2c1a:	e767      	b.n	2aec <__ieee754_pow+0x4c>
    2c1c:	2301      	movs	r3, #1
    2c1e:	4019      	ands	r1, r3
    2c20:	3301      	adds	r3, #1
    2c22:	1a5b      	subs	r3, r3, r1
    2c24:	469b      	mov	fp, r3
    2c26:	e761      	b.n	2aec <__ieee754_pow+0x4c>
    2c28:	4b12      	ldr	r3, [pc, #72]	; (2c74 <__ieee754_pow+0x1d4>)
    2c2a:	18e3      	adds	r3, r4, r3
    2c2c:	431f      	orrs	r7, r3
    2c2e:	d100      	bne.n	2c32 <__ieee754_pow+0x192>
    2c30:	e77c      	b.n	2b2c <__ieee754_pow+0x8c>
    2c32:	4b14      	ldr	r3, [pc, #80]	; (2c84 <__ieee754_pow+0x1e4>)
    2c34:	429c      	cmp	r4, r3
    2c36:	dc00      	bgt.n	2c3a <__ieee754_pow+0x19a>
    2c38:	e327      	b.n	328a <__ieee754_pow+0x7ea>
    2c3a:	9800      	ldr	r0, [sp, #0]
    2c3c:	9901      	ldr	r1, [sp, #4]
    2c3e:	4653      	mov	r3, sl
    2c40:	2b00      	cmp	r3, #0
    2c42:	db00      	blt.n	2c46 <__ieee754_pow+0x1a6>
    2c44:	e774      	b.n	2b30 <__ieee754_pow+0x90>
    2c46:	2000      	movs	r0, #0
    2c48:	2100      	movs	r1, #0
    2c4a:	e771      	b.n	2b30 <__ieee754_pow+0x90>
    2c4c:	2302      	movs	r3, #2
    2c4e:	469b      	mov	fp, r3
    2c50:	e74c      	b.n	2aec <__ieee754_pow+0x4c>
    2c52:	003a      	movs	r2, r7
    2c54:	0033      	movs	r3, r6
    2c56:	0038      	movs	r0, r7
    2c58:	0031      	movs	r1, r6
    2c5a:	f002 fcd9 	bl	5610 <__aeabi_dsub>
    2c5e:	0002      	movs	r2, r0
    2c60:	000b      	movs	r3, r1
    2c62:	f001 fe21 	bl	48a8 <__aeabi_ddiv>
    2c66:	e763      	b.n	2b30 <__ieee754_pow+0x90>
    2c68:	7ff00000 	.word	0x7ff00000
    2c6c:	3ff00000 	.word	0x3ff00000
    2c70:	3fe00000 	.word	0x3fe00000
    2c74:	c0100000 	.word	0xc0100000
    2c78:	0000628c 	.word	0x0000628c
    2c7c:	41e00000 	.word	0x41e00000
    2c80:	43f00000 	.word	0x43f00000
    2c84:	3fefffff 	.word	0x3fefffff
    2c88:	8800759c 	.word	0x8800759c
    2c8c:	7e37e43c 	.word	0x7e37e43c
    2c90:	433fffff 	.word	0x433fffff
    2c94:	fffffc01 	.word	0xfffffc01
    2c98:	4be9      	ldr	r3, [pc, #932]	; (3040 <__ieee754_pow+0x5a0>)
    2c9a:	2200      	movs	r2, #0
    2c9c:	429c      	cmp	r4, r3
    2c9e:	dc06      	bgt.n	2cae <__ieee754_pow+0x20e>
    2ca0:	2200      	movs	r2, #0
    2ca2:	4be8      	ldr	r3, [pc, #928]	; (3044 <__ieee754_pow+0x5a4>)
    2ca4:	f002 fa34 	bl	5110 <__aeabi_dmul>
    2ca8:	2235      	movs	r2, #53	; 0x35
    2caa:	000c      	movs	r4, r1
    2cac:	4252      	negs	r2, r2
    2cae:	4de6      	ldr	r5, [pc, #920]	; (3048 <__ieee754_pow+0x5a8>)
    2cb0:	1523      	asrs	r3, r4, #20
    2cb2:	46ac      	mov	ip, r5
    2cb4:	4463      	add	r3, ip
    2cb6:	4699      	mov	r9, r3
    2cb8:	0324      	lsls	r4, r4, #12
    2cba:	4de4      	ldr	r5, [pc, #912]	; (304c <__ieee754_pow+0x5ac>)
    2cbc:	4be4      	ldr	r3, [pc, #912]	; (3050 <__ieee754_pow+0x5b0>)
    2cbe:	0b24      	lsrs	r4, r4, #12
    2cc0:	4491      	add	r9, r2
    2cc2:	4325      	orrs	r5, r4
    2cc4:	429c      	cmp	r4, r3
    2cc6:	dd09      	ble.n	2cdc <__ieee754_pow+0x23c>
    2cc8:	4be2      	ldr	r3, [pc, #904]	; (3054 <__ieee754_pow+0x5b4>)
    2cca:	429c      	cmp	r4, r3
    2ccc:	dc00      	bgt.n	2cd0 <__ieee754_pow+0x230>
    2cce:	e3b6      	b.n	343e <__ieee754_pow+0x99e>
    2cd0:	2301      	movs	r3, #1
    2cd2:	469c      	mov	ip, r3
    2cd4:	4be0      	ldr	r3, [pc, #896]	; (3058 <__ieee754_pow+0x5b8>)
    2cd6:	44e1      	add	r9, ip
    2cd8:	469c      	mov	ip, r3
    2cda:	4465      	add	r5, ip
    2cdc:	2300      	movs	r3, #0
    2cde:	2400      	movs	r4, #0
    2ce0:	2200      	movs	r2, #0
    2ce2:	9308      	str	r3, [sp, #32]
    2ce4:	9409      	str	r4, [sp, #36]	; 0x24
    2ce6:	930c      	str	r3, [sp, #48]	; 0x30
    2ce8:	940d      	str	r4, [sp, #52]	; 0x34
    2cea:	2400      	movs	r4, #0
    2cec:	4bd7      	ldr	r3, [pc, #860]	; (304c <__ieee754_pow+0x5ac>)
    2cee:	9206      	str	r2, [sp, #24]
    2cf0:	9307      	str	r3, [sp, #28]
    2cf2:	9a06      	ldr	r2, [sp, #24]
    2cf4:	9b07      	ldr	r3, [sp, #28]
    2cf6:	0029      	movs	r1, r5
    2cf8:	900a      	str	r0, [sp, #40]	; 0x28
    2cfa:	910b      	str	r1, [sp, #44]	; 0x2c
    2cfc:	f002 fc88 	bl	5610 <__aeabi_dsub>
    2d00:	9a06      	ldr	r2, [sp, #24]
    2d02:	9b07      	ldr	r3, [sp, #28]
    2d04:	0006      	movs	r6, r0
    2d06:	000f      	movs	r7, r1
    2d08:	980a      	ldr	r0, [sp, #40]	; 0x28
    2d0a:	990b      	ldr	r1, [sp, #44]	; 0x2c
    2d0c:	f001 fabc 	bl	4288 <__aeabi_dadd>
    2d10:	0002      	movs	r2, r0
    2d12:	000b      	movs	r3, r1
    2d14:	2000      	movs	r0, #0
    2d16:	49cd      	ldr	r1, [pc, #820]	; (304c <__ieee754_pow+0x5ac>)
    2d18:	f001 fdc6 	bl	48a8 <__aeabi_ddiv>
    2d1c:	000a      	movs	r2, r1
    2d1e:	0001      	movs	r1, r0
    2d20:	0013      	movs	r3, r2
    2d22:	910e      	str	r1, [sp, #56]	; 0x38
    2d24:	920f      	str	r2, [sp, #60]	; 0x3c
    2d26:	0002      	movs	r2, r0
    2d28:	0039      	movs	r1, r7
    2d2a:	0030      	movs	r0, r6
    2d2c:	f002 f9f0 	bl	5110 <__aeabi_dmul>
    2d30:	000a      	movs	r2, r1
    2d32:	0001      	movs	r1, r0
    2d34:	2080      	movs	r0, #128	; 0x80
    2d36:	9104      	str	r1, [sp, #16]
    2d38:	9205      	str	r2, [sp, #20]
    2d3a:	0013      	movs	r3, r2
    2d3c:	2200      	movs	r2, #0
    2d3e:	1069      	asrs	r1, r5, #1
    2d40:	2580      	movs	r5, #128	; 0x80
    2d42:	0300      	lsls	r0, r0, #12
    2d44:	4684      	mov	ip, r0
    2d46:	9202      	str	r2, [sp, #8]
    2d48:	9303      	str	r3, [sp, #12]
    2d4a:	2200      	movs	r2, #0
    2d4c:	05ad      	lsls	r5, r5, #22
    2d4e:	430d      	orrs	r5, r1
    2d50:	4465      	add	r5, ip
    2d52:	192b      	adds	r3, r5, r4
    2d54:	9802      	ldr	r0, [sp, #8]
    2d56:	9903      	ldr	r1, [sp, #12]
    2d58:	0014      	movs	r4, r2
    2d5a:	001d      	movs	r5, r3
    2d5c:	f002 f9d8 	bl	5110 <__aeabi_dmul>
    2d60:	0002      	movs	r2, r0
    2d62:	000b      	movs	r3, r1
    2d64:	0030      	movs	r0, r6
    2d66:	0039      	movs	r1, r7
    2d68:	f002 fc52 	bl	5610 <__aeabi_dsub>
    2d6c:	9a06      	ldr	r2, [sp, #24]
    2d6e:	9b07      	ldr	r3, [sp, #28]
    2d70:	0006      	movs	r6, r0
    2d72:	000f      	movs	r7, r1
    2d74:	0020      	movs	r0, r4
    2d76:	0029      	movs	r1, r5
    2d78:	f002 fc4a 	bl	5610 <__aeabi_dsub>
    2d7c:	0002      	movs	r2, r0
    2d7e:	000b      	movs	r3, r1
    2d80:	980a      	ldr	r0, [sp, #40]	; 0x28
    2d82:	990b      	ldr	r1, [sp, #44]	; 0x2c
    2d84:	f002 fc44 	bl	5610 <__aeabi_dsub>
    2d88:	9a02      	ldr	r2, [sp, #8]
    2d8a:	9b03      	ldr	r3, [sp, #12]
    2d8c:	f002 f9c0 	bl	5110 <__aeabi_dmul>
    2d90:	0002      	movs	r2, r0
    2d92:	000b      	movs	r3, r1
    2d94:	0030      	movs	r0, r6
    2d96:	0039      	movs	r1, r7
    2d98:	f002 fc3a 	bl	5610 <__aeabi_dsub>
    2d9c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    2d9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2da0:	f002 f9b6 	bl	5110 <__aeabi_dmul>
    2da4:	9d04      	ldr	r5, [sp, #16]
    2da6:	9e05      	ldr	r6, [sp, #20]
    2da8:	9006      	str	r0, [sp, #24]
    2daa:	9107      	str	r1, [sp, #28]
    2dac:	002a      	movs	r2, r5
    2dae:	0033      	movs	r3, r6
    2db0:	0028      	movs	r0, r5
    2db2:	0031      	movs	r1, r6
    2db4:	f002 f9ac 	bl	5110 <__aeabi_dmul>
    2db8:	0006      	movs	r6, r0
    2dba:	000f      	movs	r7, r1
    2dbc:	4aa7      	ldr	r2, [pc, #668]	; (305c <__ieee754_pow+0x5bc>)
    2dbe:	4ba8      	ldr	r3, [pc, #672]	; (3060 <__ieee754_pow+0x5c0>)
    2dc0:	f002 f9a6 	bl	5110 <__aeabi_dmul>
    2dc4:	4aa7      	ldr	r2, [pc, #668]	; (3064 <__ieee754_pow+0x5c4>)
    2dc6:	4ba8      	ldr	r3, [pc, #672]	; (3068 <__ieee754_pow+0x5c8>)
    2dc8:	f001 fa5e 	bl	4288 <__aeabi_dadd>
    2dcc:	0032      	movs	r2, r6
    2dce:	003b      	movs	r3, r7
    2dd0:	f002 f99e 	bl	5110 <__aeabi_dmul>
    2dd4:	4aa5      	ldr	r2, [pc, #660]	; (306c <__ieee754_pow+0x5cc>)
    2dd6:	4ba6      	ldr	r3, [pc, #664]	; (3070 <__ieee754_pow+0x5d0>)
    2dd8:	f001 fa56 	bl	4288 <__aeabi_dadd>
    2ddc:	0032      	movs	r2, r6
    2dde:	003b      	movs	r3, r7
    2de0:	f002 f996 	bl	5110 <__aeabi_dmul>
    2de4:	4aa3      	ldr	r2, [pc, #652]	; (3074 <__ieee754_pow+0x5d4>)
    2de6:	4ba4      	ldr	r3, [pc, #656]	; (3078 <__ieee754_pow+0x5d8>)
    2de8:	f001 fa4e 	bl	4288 <__aeabi_dadd>
    2dec:	0032      	movs	r2, r6
    2dee:	003b      	movs	r3, r7
    2df0:	f002 f98e 	bl	5110 <__aeabi_dmul>
    2df4:	4aa1      	ldr	r2, [pc, #644]	; (307c <__ieee754_pow+0x5dc>)
    2df6:	4ba2      	ldr	r3, [pc, #648]	; (3080 <__ieee754_pow+0x5e0>)
    2df8:	f001 fa46 	bl	4288 <__aeabi_dadd>
    2dfc:	0032      	movs	r2, r6
    2dfe:	003b      	movs	r3, r7
    2e00:	f002 f986 	bl	5110 <__aeabi_dmul>
    2e04:	4a9f      	ldr	r2, [pc, #636]	; (3084 <__ieee754_pow+0x5e4>)
    2e06:	4ba0      	ldr	r3, [pc, #640]	; (3088 <__ieee754_pow+0x5e8>)
    2e08:	f001 fa3e 	bl	4288 <__aeabi_dadd>
    2e0c:	0032      	movs	r2, r6
    2e0e:	0004      	movs	r4, r0
    2e10:	000d      	movs	r5, r1
    2e12:	003b      	movs	r3, r7
    2e14:	0030      	movs	r0, r6
    2e16:	0039      	movs	r1, r7
    2e18:	f002 f97a 	bl	5110 <__aeabi_dmul>
    2e1c:	0002      	movs	r2, r0
    2e1e:	000b      	movs	r3, r1
    2e20:	0020      	movs	r0, r4
    2e22:	0029      	movs	r1, r5
    2e24:	f002 f974 	bl	5110 <__aeabi_dmul>
    2e28:	9e02      	ldr	r6, [sp, #8]
    2e2a:	9f03      	ldr	r7, [sp, #12]
    2e2c:	0004      	movs	r4, r0
    2e2e:	000d      	movs	r5, r1
    2e30:	9804      	ldr	r0, [sp, #16]
    2e32:	9905      	ldr	r1, [sp, #20]
    2e34:	0032      	movs	r2, r6
    2e36:	003b      	movs	r3, r7
    2e38:	f001 fa26 	bl	4288 <__aeabi_dadd>
    2e3c:	9a06      	ldr	r2, [sp, #24]
    2e3e:	9b07      	ldr	r3, [sp, #28]
    2e40:	f002 f966 	bl	5110 <__aeabi_dmul>
    2e44:	0022      	movs	r2, r4
    2e46:	002b      	movs	r3, r5
    2e48:	f001 fa1e 	bl	4288 <__aeabi_dadd>
    2e4c:	0032      	movs	r2, r6
    2e4e:	900a      	str	r0, [sp, #40]	; 0x28
    2e50:	910b      	str	r1, [sp, #44]	; 0x2c
    2e52:	003b      	movs	r3, r7
    2e54:	0030      	movs	r0, r6
    2e56:	0039      	movs	r1, r7
    2e58:	9602      	str	r6, [sp, #8]
    2e5a:	9703      	str	r7, [sp, #12]
    2e5c:	f002 f958 	bl	5110 <__aeabi_dmul>
    2e60:	2200      	movs	r2, #0
    2e62:	4b8a      	ldr	r3, [pc, #552]	; (308c <__ieee754_pow+0x5ec>)
    2e64:	0004      	movs	r4, r0
    2e66:	000d      	movs	r5, r1
    2e68:	f001 fa0e 	bl	4288 <__aeabi_dadd>
    2e6c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    2e6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2e70:	f001 fa0a 	bl	4288 <__aeabi_dadd>
    2e74:	2600      	movs	r6, #0
    2e76:	000f      	movs	r7, r1
    2e78:	0032      	movs	r2, r6
    2e7a:	000b      	movs	r3, r1
    2e7c:	9802      	ldr	r0, [sp, #8]
    2e7e:	9903      	ldr	r1, [sp, #12]
    2e80:	f002 f946 	bl	5110 <__aeabi_dmul>
    2e84:	2200      	movs	r2, #0
    2e86:	9002      	str	r0, [sp, #8]
    2e88:	9103      	str	r1, [sp, #12]
    2e8a:	4b80      	ldr	r3, [pc, #512]	; (308c <__ieee754_pow+0x5ec>)
    2e8c:	0030      	movs	r0, r6
    2e8e:	0039      	movs	r1, r7
    2e90:	f002 fbbe 	bl	5610 <__aeabi_dsub>
    2e94:	0022      	movs	r2, r4
    2e96:	002b      	movs	r3, r5
    2e98:	f002 fbba 	bl	5610 <__aeabi_dsub>
    2e9c:	0002      	movs	r2, r0
    2e9e:	000b      	movs	r3, r1
    2ea0:	980a      	ldr	r0, [sp, #40]	; 0x28
    2ea2:	990b      	ldr	r1, [sp, #44]	; 0x2c
    2ea4:	f002 fbb4 	bl	5610 <__aeabi_dsub>
    2ea8:	9a04      	ldr	r2, [sp, #16]
    2eaa:	9b05      	ldr	r3, [sp, #20]
    2eac:	f002 f930 	bl	5110 <__aeabi_dmul>
    2eb0:	0032      	movs	r2, r6
    2eb2:	0004      	movs	r4, r0
    2eb4:	000d      	movs	r5, r1
    2eb6:	9806      	ldr	r0, [sp, #24]
    2eb8:	9907      	ldr	r1, [sp, #28]
    2eba:	003b      	movs	r3, r7
    2ebc:	f002 f928 	bl	5110 <__aeabi_dmul>
    2ec0:	0002      	movs	r2, r0
    2ec2:	000b      	movs	r3, r1
    2ec4:	0020      	movs	r0, r4
    2ec6:	0029      	movs	r1, r5
    2ec8:	f001 f9de 	bl	4288 <__aeabi_dadd>
    2ecc:	0004      	movs	r4, r0
    2ece:	000d      	movs	r5, r1
    2ed0:	0002      	movs	r2, r0
    2ed2:	000b      	movs	r3, r1
    2ed4:	9802      	ldr	r0, [sp, #8]
    2ed6:	9903      	ldr	r1, [sp, #12]
    2ed8:	f001 f9d6 	bl	4288 <__aeabi_dadd>
    2edc:	2600      	movs	r6, #0
    2ede:	22e0      	movs	r2, #224	; 0xe0
    2ee0:	4b6b      	ldr	r3, [pc, #428]	; (3090 <__ieee754_pow+0x5f0>)
    2ee2:	0612      	lsls	r2, r2, #24
    2ee4:	0030      	movs	r0, r6
    2ee6:	000f      	movs	r7, r1
    2ee8:	f002 f912 	bl	5110 <__aeabi_dmul>
    2eec:	9a02      	ldr	r2, [sp, #8]
    2eee:	9b03      	ldr	r3, [sp, #12]
    2ef0:	9004      	str	r0, [sp, #16]
    2ef2:	9105      	str	r1, [sp, #20]
    2ef4:	0030      	movs	r0, r6
    2ef6:	0039      	movs	r1, r7
    2ef8:	f002 fb8a 	bl	5610 <__aeabi_dsub>
    2efc:	0002      	movs	r2, r0
    2efe:	000b      	movs	r3, r1
    2f00:	0020      	movs	r0, r4
    2f02:	0029      	movs	r1, r5
    2f04:	f002 fb84 	bl	5610 <__aeabi_dsub>
    2f08:	4a62      	ldr	r2, [pc, #392]	; (3094 <__ieee754_pow+0x5f4>)
    2f0a:	4b61      	ldr	r3, [pc, #388]	; (3090 <__ieee754_pow+0x5f0>)
    2f0c:	f002 f900 	bl	5110 <__aeabi_dmul>
    2f10:	4a61      	ldr	r2, [pc, #388]	; (3098 <__ieee754_pow+0x5f8>)
    2f12:	0004      	movs	r4, r0
    2f14:	000d      	movs	r5, r1
    2f16:	4b61      	ldr	r3, [pc, #388]	; (309c <__ieee754_pow+0x5fc>)
    2f18:	0030      	movs	r0, r6
    2f1a:	0039      	movs	r1, r7
    2f1c:	f002 f8f8 	bl	5110 <__aeabi_dmul>
    2f20:	0002      	movs	r2, r0
    2f22:	000b      	movs	r3, r1
    2f24:	0020      	movs	r0, r4
    2f26:	0029      	movs	r1, r5
    2f28:	f001 f9ae 	bl	4288 <__aeabi_dadd>
    2f2c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    2f2e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    2f30:	f001 f9aa 	bl	4288 <__aeabi_dadd>
    2f34:	0006      	movs	r6, r0
    2f36:	4648      	mov	r0, r9
    2f38:	000f      	movs	r7, r1
    2f3a:	f002 fed3 	bl	5ce4 <__aeabi_i2d>
    2f3e:	0004      	movs	r4, r0
    2f40:	000d      	movs	r5, r1
    2f42:	9804      	ldr	r0, [sp, #16]
    2f44:	9905      	ldr	r1, [sp, #20]
    2f46:	0032      	movs	r2, r6
    2f48:	003b      	movs	r3, r7
    2f4a:	f001 f99d 	bl	4288 <__aeabi_dadd>
    2f4e:	9a08      	ldr	r2, [sp, #32]
    2f50:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2f52:	f001 f999 	bl	4288 <__aeabi_dadd>
    2f56:	0022      	movs	r2, r4
    2f58:	002b      	movs	r3, r5
    2f5a:	f001 f995 	bl	4288 <__aeabi_dadd>
    2f5e:	2000      	movs	r0, #0
    2f60:	0022      	movs	r2, r4
    2f62:	002b      	movs	r3, r5
    2f64:	9002      	str	r0, [sp, #8]
    2f66:	9103      	str	r1, [sp, #12]
    2f68:	f002 fb52 	bl	5610 <__aeabi_dsub>
    2f6c:	9a08      	ldr	r2, [sp, #32]
    2f6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2f70:	f002 fb4e 	bl	5610 <__aeabi_dsub>
    2f74:	9a04      	ldr	r2, [sp, #16]
    2f76:	9b05      	ldr	r3, [sp, #20]
    2f78:	f002 fb4a 	bl	5610 <__aeabi_dsub>
    2f7c:	0002      	movs	r2, r0
    2f7e:	000b      	movs	r3, r1
    2f80:	0030      	movs	r0, r6
    2f82:	0039      	movs	r1, r7
    2f84:	f002 fb44 	bl	5610 <__aeabi_dsub>
    2f88:	9004      	str	r0, [sp, #16]
    2f8a:	9105      	str	r1, [sp, #20]
    2f8c:	465b      	mov	r3, fp
    2f8e:	4642      	mov	r2, r8
    2f90:	3b01      	subs	r3, #1
    2f92:	4313      	orrs	r3, r2
    2f94:	d100      	bne.n	2f98 <__ieee754_pow+0x4f8>
    2f96:	e1ab      	b.n	32f0 <__ieee754_pow+0x850>
    2f98:	2300      	movs	r3, #0
    2f9a:	4c2c      	ldr	r4, [pc, #176]	; (304c <__ieee754_pow+0x5ac>)
    2f9c:	9306      	str	r3, [sp, #24]
    2f9e:	9407      	str	r4, [sp, #28]
    2fa0:	9800      	ldr	r0, [sp, #0]
    2fa2:	9901      	ldr	r1, [sp, #4]
    2fa4:	2600      	movs	r6, #0
    2fa6:	000b      	movs	r3, r1
    2fa8:	0032      	movs	r2, r6
    2faa:	000f      	movs	r7, r1
    2fac:	f002 fb30 	bl	5610 <__aeabi_dsub>
    2fb0:	9a02      	ldr	r2, [sp, #8]
    2fb2:	9b03      	ldr	r3, [sp, #12]
    2fb4:	f002 f8ac 	bl	5110 <__aeabi_dmul>
    2fb8:	9a00      	ldr	r2, [sp, #0]
    2fba:	9b01      	ldr	r3, [sp, #4]
    2fbc:	0004      	movs	r4, r0
    2fbe:	000d      	movs	r5, r1
    2fc0:	9804      	ldr	r0, [sp, #16]
    2fc2:	9905      	ldr	r1, [sp, #20]
    2fc4:	f002 f8a4 	bl	5110 <__aeabi_dmul>
    2fc8:	0002      	movs	r2, r0
    2fca:	000b      	movs	r3, r1
    2fcc:	0020      	movs	r0, r4
    2fce:	0029      	movs	r1, r5
    2fd0:	f001 f95a 	bl	4288 <__aeabi_dadd>
    2fd4:	0004      	movs	r4, r0
    2fd6:	000d      	movs	r5, r1
    2fd8:	9802      	ldr	r0, [sp, #8]
    2fda:	9903      	ldr	r1, [sp, #12]
    2fdc:	0032      	movs	r2, r6
    2fde:	003b      	movs	r3, r7
    2fe0:	9400      	str	r4, [sp, #0]
    2fe2:	9501      	str	r5, [sp, #4]
    2fe4:	f002 f894 	bl	5110 <__aeabi_dmul>
    2fe8:	0002      	movs	r2, r0
    2fea:	000b      	movs	r3, r1
    2fec:	0006      	movs	r6, r0
    2fee:	000f      	movs	r7, r1
    2ff0:	0020      	movs	r0, r4
    2ff2:	0029      	movs	r1, r5
    2ff4:	f001 f948 	bl	4288 <__aeabi_dadd>
    2ff8:	4b29      	ldr	r3, [pc, #164]	; (30a0 <__ieee754_pow+0x600>)
    2ffa:	0004      	movs	r4, r0
    2ffc:	000d      	movs	r5, r1
    2ffe:	0002      	movs	r2, r0
    3000:	468b      	mov	fp, r1
    3002:	4299      	cmp	r1, r3
    3004:	dc00      	bgt.n	3008 <__ieee754_pow+0x568>
    3006:	e14f      	b.n	32a8 <__ieee754_pow+0x808>
    3008:	4b26      	ldr	r3, [pc, #152]	; (30a4 <__ieee754_pow+0x604>)
    300a:	18cb      	adds	r3, r1, r3
    300c:	4303      	orrs	r3, r0
    300e:	d000      	beq.n	3012 <__ieee754_pow+0x572>
    3010:	e1e2      	b.n	33d8 <__ieee754_pow+0x938>
    3012:	9800      	ldr	r0, [sp, #0]
    3014:	9901      	ldr	r1, [sp, #4]
    3016:	4a24      	ldr	r2, [pc, #144]	; (30a8 <__ieee754_pow+0x608>)
    3018:	4b24      	ldr	r3, [pc, #144]	; (30ac <__ieee754_pow+0x60c>)
    301a:	f001 f935 	bl	4288 <__aeabi_dadd>
    301e:	0032      	movs	r2, r6
    3020:	9002      	str	r0, [sp, #8]
    3022:	9103      	str	r1, [sp, #12]
    3024:	003b      	movs	r3, r7
    3026:	0020      	movs	r0, r4
    3028:	0029      	movs	r1, r5
    302a:	f002 faf1 	bl	5610 <__aeabi_dsub>
    302e:	0002      	movs	r2, r0
    3030:	000b      	movs	r3, r1
    3032:	9802      	ldr	r0, [sp, #8]
    3034:	9903      	ldr	r1, [sp, #12]
    3036:	f000 fca5 	bl	3984 <__aeabi_dcmpgt>
    303a:	46aa      	mov	sl, r5
    303c:	e038      	b.n	30b0 <__ieee754_pow+0x610>
    303e:	46c0      	nop			; (mov r8, r8)
    3040:	000fffff 	.word	0x000fffff
    3044:	43400000 	.word	0x43400000
    3048:	fffffc01 	.word	0xfffffc01
    304c:	3ff00000 	.word	0x3ff00000
    3050:	0003988e 	.word	0x0003988e
    3054:	000bb679 	.word	0x000bb679
    3058:	fff00000 	.word	0xfff00000
    305c:	4a454eef 	.word	0x4a454eef
    3060:	3fca7e28 	.word	0x3fca7e28
    3064:	93c9db65 	.word	0x93c9db65
    3068:	3fcd864a 	.word	0x3fcd864a
    306c:	a91d4101 	.word	0xa91d4101
    3070:	3fd17460 	.word	0x3fd17460
    3074:	518f264d 	.word	0x518f264d
    3078:	3fd55555 	.word	0x3fd55555
    307c:	db6fabff 	.word	0xdb6fabff
    3080:	3fdb6db6 	.word	0x3fdb6db6
    3084:	33333303 	.word	0x33333303
    3088:	3fe33333 	.word	0x3fe33333
    308c:	40080000 	.word	0x40080000
    3090:	3feec709 	.word	0x3feec709
    3094:	dc3a03fd 	.word	0xdc3a03fd
    3098:	145b01f5 	.word	0x145b01f5
    309c:	be3e2fe0 	.word	0xbe3e2fe0
    30a0:	408fffff 	.word	0x408fffff
    30a4:	bf700000 	.word	0xbf700000
    30a8:	652b82fe 	.word	0x652b82fe
    30ac:	3c971547 	.word	0x3c971547
    30b0:	2800      	cmp	r0, #0
    30b2:	d000      	beq.n	30b6 <__ieee754_pow+0x616>
    30b4:	e190      	b.n	33d8 <__ieee754_pow+0x938>
    30b6:	4aec      	ldr	r2, [pc, #944]	; (3468 <__ieee754_pow+0x9c8>)
    30b8:	4653      	mov	r3, sl
    30ba:	4694      	mov	ip, r2
    30bc:	2280      	movs	r2, #128	; 0x80
    30be:	0352      	lsls	r2, r2, #13
    30c0:	0011      	movs	r1, r2
    30c2:	151b      	asrs	r3, r3, #20
    30c4:	4463      	add	r3, ip
    30c6:	4119      	asrs	r1, r3
    30c8:	000b      	movs	r3, r1
    30ca:	4690      	mov	r8, r2
    30cc:	4ae7      	ldr	r2, [pc, #924]	; (346c <__ieee754_pow+0x9cc>)
    30ce:	445b      	add	r3, fp
    30d0:	4694      	mov	ip, r2
    30d2:	005c      	lsls	r4, r3, #1
    30d4:	0d64      	lsrs	r4, r4, #21
    30d6:	4de6      	ldr	r5, [pc, #920]	; (3470 <__ieee754_pow+0x9d0>)
    30d8:	4464      	add	r4, ip
    30da:	4125      	asrs	r5, r4
    30dc:	001a      	movs	r2, r3
    30de:	43aa      	bics	r2, r5
    30e0:	0011      	movs	r1, r2
    30e2:	4642      	mov	r2, r8
    30e4:	031b      	lsls	r3, r3, #12
    30e6:	0b1b      	lsrs	r3, r3, #12
    30e8:	4313      	orrs	r3, r2
    30ea:	2214      	movs	r2, #20
    30ec:	1b14      	subs	r4, r2, r4
    30ee:	4123      	asrs	r3, r4
    30f0:	4699      	mov	r9, r3
    30f2:	465b      	mov	r3, fp
    30f4:	2000      	movs	r0, #0
    30f6:	2b00      	cmp	r3, #0
    30f8:	da00      	bge.n	30fc <__ieee754_pow+0x65c>
    30fa:	e1b0      	b.n	345e <__ieee754_pow+0x9be>
    30fc:	0002      	movs	r2, r0
    30fe:	000b      	movs	r3, r1
    3100:	0030      	movs	r0, r6
    3102:	0039      	movs	r1, r7
    3104:	f002 fa84 	bl	5610 <__aeabi_dsub>
    3108:	000b      	movs	r3, r1
    310a:	0002      	movs	r2, r0
    310c:	0006      	movs	r6, r0
    310e:	000f      	movs	r7, r1
    3110:	9800      	ldr	r0, [sp, #0]
    3112:	9901      	ldr	r1, [sp, #4]
    3114:	f001 f8b8 	bl	4288 <__aeabi_dadd>
    3118:	464b      	mov	r3, r9
    311a:	051b      	lsls	r3, r3, #20
    311c:	000d      	movs	r5, r1
    311e:	4698      	mov	r8, r3
    3120:	2400      	movs	r4, #0
    3122:	2200      	movs	r2, #0
    3124:	4bd3      	ldr	r3, [pc, #844]	; (3474 <__ieee754_pow+0x9d4>)
    3126:	0020      	movs	r0, r4
    3128:	0029      	movs	r1, r5
    312a:	f001 fff1 	bl	5110 <__aeabi_dmul>
    312e:	0032      	movs	r2, r6
    3130:	9002      	str	r0, [sp, #8]
    3132:	9103      	str	r1, [sp, #12]
    3134:	003b      	movs	r3, r7
    3136:	0020      	movs	r0, r4
    3138:	0029      	movs	r1, r5
    313a:	f002 fa69 	bl	5610 <__aeabi_dsub>
    313e:	0002      	movs	r2, r0
    3140:	000b      	movs	r3, r1
    3142:	9800      	ldr	r0, [sp, #0]
    3144:	9901      	ldr	r1, [sp, #4]
    3146:	f002 fa63 	bl	5610 <__aeabi_dsub>
    314a:	4acb      	ldr	r2, [pc, #812]	; (3478 <__ieee754_pow+0x9d8>)
    314c:	4bcb      	ldr	r3, [pc, #812]	; (347c <__ieee754_pow+0x9dc>)
    314e:	f001 ffdf 	bl	5110 <__aeabi_dmul>
    3152:	4acb      	ldr	r2, [pc, #812]	; (3480 <__ieee754_pow+0x9e0>)
    3154:	0006      	movs	r6, r0
    3156:	000f      	movs	r7, r1
    3158:	4bca      	ldr	r3, [pc, #808]	; (3484 <__ieee754_pow+0x9e4>)
    315a:	0020      	movs	r0, r4
    315c:	0029      	movs	r1, r5
    315e:	f001 ffd7 	bl	5110 <__aeabi_dmul>
    3162:	0002      	movs	r2, r0
    3164:	000b      	movs	r3, r1
    3166:	0030      	movs	r0, r6
    3168:	0039      	movs	r1, r7
    316a:	f001 f88d 	bl	4288 <__aeabi_dadd>
    316e:	0004      	movs	r4, r0
    3170:	000d      	movs	r5, r1
    3172:	0002      	movs	r2, r0
    3174:	000b      	movs	r3, r1
    3176:	9802      	ldr	r0, [sp, #8]
    3178:	9903      	ldr	r1, [sp, #12]
    317a:	f001 f885 	bl	4288 <__aeabi_dadd>
    317e:	9a02      	ldr	r2, [sp, #8]
    3180:	9b03      	ldr	r3, [sp, #12]
    3182:	0006      	movs	r6, r0
    3184:	000f      	movs	r7, r1
    3186:	f002 fa43 	bl	5610 <__aeabi_dsub>
    318a:	0002      	movs	r2, r0
    318c:	000b      	movs	r3, r1
    318e:	0020      	movs	r0, r4
    3190:	0029      	movs	r1, r5
    3192:	f002 fa3d 	bl	5610 <__aeabi_dsub>
    3196:	0032      	movs	r2, r6
    3198:	9000      	str	r0, [sp, #0]
    319a:	9101      	str	r1, [sp, #4]
    319c:	003b      	movs	r3, r7
    319e:	0030      	movs	r0, r6
    31a0:	0039      	movs	r1, r7
    31a2:	f001 ffb5 	bl	5110 <__aeabi_dmul>
    31a6:	0004      	movs	r4, r0
    31a8:	000d      	movs	r5, r1
    31aa:	4ab7      	ldr	r2, [pc, #732]	; (3488 <__ieee754_pow+0x9e8>)
    31ac:	4bb7      	ldr	r3, [pc, #732]	; (348c <__ieee754_pow+0x9ec>)
    31ae:	f001 ffaf 	bl	5110 <__aeabi_dmul>
    31b2:	4ab7      	ldr	r2, [pc, #732]	; (3490 <__ieee754_pow+0x9f0>)
    31b4:	4bb7      	ldr	r3, [pc, #732]	; (3494 <__ieee754_pow+0x9f4>)
    31b6:	f002 fa2b 	bl	5610 <__aeabi_dsub>
    31ba:	0022      	movs	r2, r4
    31bc:	002b      	movs	r3, r5
    31be:	f001 ffa7 	bl	5110 <__aeabi_dmul>
    31c2:	4ab5      	ldr	r2, [pc, #724]	; (3498 <__ieee754_pow+0x9f8>)
    31c4:	4bb5      	ldr	r3, [pc, #724]	; (349c <__ieee754_pow+0x9fc>)
    31c6:	f001 f85f 	bl	4288 <__aeabi_dadd>
    31ca:	0022      	movs	r2, r4
    31cc:	002b      	movs	r3, r5
    31ce:	f001 ff9f 	bl	5110 <__aeabi_dmul>
    31d2:	4ab3      	ldr	r2, [pc, #716]	; (34a0 <__ieee754_pow+0xa00>)
    31d4:	4bb3      	ldr	r3, [pc, #716]	; (34a4 <__ieee754_pow+0xa04>)
    31d6:	f002 fa1b 	bl	5610 <__aeabi_dsub>
    31da:	0022      	movs	r2, r4
    31dc:	002b      	movs	r3, r5
    31de:	f001 ff97 	bl	5110 <__aeabi_dmul>
    31e2:	4ab1      	ldr	r2, [pc, #708]	; (34a8 <__ieee754_pow+0xa08>)
    31e4:	4bb1      	ldr	r3, [pc, #708]	; (34ac <__ieee754_pow+0xa0c>)
    31e6:	f001 f84f 	bl	4288 <__aeabi_dadd>
    31ea:	0022      	movs	r2, r4
    31ec:	002b      	movs	r3, r5
    31ee:	f001 ff8f 	bl	5110 <__aeabi_dmul>
    31f2:	0002      	movs	r2, r0
    31f4:	000b      	movs	r3, r1
    31f6:	0030      	movs	r0, r6
    31f8:	0039      	movs	r1, r7
    31fa:	f002 fa09 	bl	5610 <__aeabi_dsub>
    31fe:	0004      	movs	r4, r0
    3200:	000d      	movs	r5, r1
    3202:	0002      	movs	r2, r0
    3204:	000b      	movs	r3, r1
    3206:	0030      	movs	r0, r6
    3208:	0039      	movs	r1, r7
    320a:	f001 ff81 	bl	5110 <__aeabi_dmul>
    320e:	2380      	movs	r3, #128	; 0x80
    3210:	9002      	str	r0, [sp, #8]
    3212:	9103      	str	r1, [sp, #12]
    3214:	2200      	movs	r2, #0
    3216:	05db      	lsls	r3, r3, #23
    3218:	0020      	movs	r0, r4
    321a:	0029      	movs	r1, r5
    321c:	f002 f9f8 	bl	5610 <__aeabi_dsub>
    3220:	0002      	movs	r2, r0
    3222:	000b      	movs	r3, r1
    3224:	9802      	ldr	r0, [sp, #8]
    3226:	9903      	ldr	r1, [sp, #12]
    3228:	f001 fb3e 	bl	48a8 <__aeabi_ddiv>
    322c:	9a00      	ldr	r2, [sp, #0]
    322e:	9b01      	ldr	r3, [sp, #4]
    3230:	0004      	movs	r4, r0
    3232:	000d      	movs	r5, r1
    3234:	0030      	movs	r0, r6
    3236:	0039      	movs	r1, r7
    3238:	f001 ff6a 	bl	5110 <__aeabi_dmul>
    323c:	9a00      	ldr	r2, [sp, #0]
    323e:	9b01      	ldr	r3, [sp, #4]
    3240:	f001 f822 	bl	4288 <__aeabi_dadd>
    3244:	0002      	movs	r2, r0
    3246:	000b      	movs	r3, r1
    3248:	0020      	movs	r0, r4
    324a:	0029      	movs	r1, r5
    324c:	f002 f9e0 	bl	5610 <__aeabi_dsub>
    3250:	0032      	movs	r2, r6
    3252:	003b      	movs	r3, r7
    3254:	f002 f9dc 	bl	5610 <__aeabi_dsub>
    3258:	0002      	movs	r2, r0
    325a:	000b      	movs	r3, r1
    325c:	2000      	movs	r0, #0
    325e:	4994      	ldr	r1, [pc, #592]	; (34b0 <__ieee754_pow+0xa10>)
    3260:	f002 f9d6 	bl	5610 <__aeabi_dsub>
    3264:	4643      	mov	r3, r8
    3266:	185b      	adds	r3, r3, r1
    3268:	151a      	asrs	r2, r3, #20
    326a:	2a00      	cmp	r2, #0
    326c:	dc00      	bgt.n	3270 <__ieee754_pow+0x7d0>
    326e:	e149      	b.n	3504 <__ieee754_pow+0xa64>
    3270:	0019      	movs	r1, r3
    3272:	9a06      	ldr	r2, [sp, #24]
    3274:	9b07      	ldr	r3, [sp, #28]
    3276:	f001 ff4b 	bl	5110 <__aeabi_dmul>
    327a:	e459      	b.n	2b30 <__ieee754_pow+0x90>
    327c:	003a      	movs	r2, r7
    327e:	0033      	movs	r3, r6
    3280:	0038      	movs	r0, r7
    3282:	0031      	movs	r1, r6
    3284:	f001 ff44 	bl	5110 <__aeabi_dmul>
    3288:	e452      	b.n	2b30 <__ieee754_pow+0x90>
    328a:	4653      	mov	r3, sl
    328c:	2b00      	cmp	r3, #0
    328e:	db00      	blt.n	3292 <__ieee754_pow+0x7f2>
    3290:	e4d9      	b.n	2c46 <__ieee754_pow+0x1a6>
    3292:	9c00      	ldr	r4, [sp, #0]
    3294:	9d01      	ldr	r5, [sp, #4]
    3296:	2280      	movs	r2, #128	; 0x80
    3298:	0612      	lsls	r2, r2, #24
    329a:	002b      	movs	r3, r5
    329c:	4694      	mov	ip, r2
    329e:	4463      	add	r3, ip
    32a0:	0020      	movs	r0, r4
    32a2:	0019      	movs	r1, r3
    32a4:	f7ff fc44 	bl	2b30 <__ieee754_pow+0x90>
    32a8:	004b      	lsls	r3, r1, #1
    32aa:	085b      	lsrs	r3, r3, #1
    32ac:	469a      	mov	sl, r3
    32ae:	4b81      	ldr	r3, [pc, #516]	; (34b4 <__ieee754_pow+0xa14>)
    32b0:	459a      	cmp	sl, r3
    32b2:	dc00      	bgt.n	32b6 <__ieee754_pow+0x816>
    32b4:	e0b1      	b.n	341a <__ieee754_pow+0x97a>
    32b6:	4b80      	ldr	r3, [pc, #512]	; (34b8 <__ieee754_pow+0xa18>)
    32b8:	445b      	add	r3, fp
    32ba:	431a      	orrs	r2, r3
    32bc:	d10c      	bne.n	32d8 <__ieee754_pow+0x838>
    32be:	0032      	movs	r2, r6
    32c0:	003b      	movs	r3, r7
    32c2:	f002 f9a5 	bl	5610 <__aeabi_dsub>
    32c6:	0002      	movs	r2, r0
    32c8:	000b      	movs	r3, r1
    32ca:	9800      	ldr	r0, [sp, #0]
    32cc:	9901      	ldr	r1, [sp, #4]
    32ce:	f000 fb4f 	bl	3970 <__aeabi_dcmple>
    32d2:	2800      	cmp	r0, #0
    32d4:	d100      	bne.n	32d8 <__ieee754_pow+0x838>
    32d6:	e6ee      	b.n	30b6 <__ieee754_pow+0x616>
    32d8:	9806      	ldr	r0, [sp, #24]
    32da:	9907      	ldr	r1, [sp, #28]
    32dc:	4a77      	ldr	r2, [pc, #476]	; (34bc <__ieee754_pow+0xa1c>)
    32de:	4b78      	ldr	r3, [pc, #480]	; (34c0 <__ieee754_pow+0xa20>)
    32e0:	f001 ff16 	bl	5110 <__aeabi_dmul>
    32e4:	4a75      	ldr	r2, [pc, #468]	; (34bc <__ieee754_pow+0xa1c>)
    32e6:	4b76      	ldr	r3, [pc, #472]	; (34c0 <__ieee754_pow+0xa20>)
    32e8:	f001 ff12 	bl	5110 <__aeabi_dmul>
    32ec:	f7ff fc20 	bl	2b30 <__ieee754_pow+0x90>
    32f0:	2300      	movs	r3, #0
    32f2:	4c74      	ldr	r4, [pc, #464]	; (34c4 <__ieee754_pow+0xa24>)
    32f4:	9306      	str	r3, [sp, #24]
    32f6:	9407      	str	r4, [sp, #28]
    32f8:	e652      	b.n	2fa0 <__ieee754_pow+0x500>
    32fa:	0002      	movs	r2, r0
    32fc:	000b      	movs	r3, r1
    32fe:	2000      	movs	r0, #0
    3300:	496b      	ldr	r1, [pc, #428]	; (34b0 <__ieee754_pow+0xa10>)
    3302:	f001 fad1 	bl	48a8 <__aeabi_ddiv>
    3306:	f7ff fc32 	bl	2b6e <__ieee754_pow+0xce>
    330a:	4653      	mov	r3, sl
    330c:	2b00      	cmp	r3, #0
    330e:	db00      	blt.n	3312 <__ieee754_pow+0x872>
    3310:	e499      	b.n	2c46 <__ieee754_pow+0x1a6>
    3312:	e454      	b.n	2bbe <__ieee754_pow+0x11e>
    3314:	4b6c      	ldr	r3, [pc, #432]	; (34c8 <__ieee754_pow+0xa28>)
    3316:	429c      	cmp	r4, r3
    3318:	ddf7      	ble.n	330a <__ieee754_pow+0x86a>
    331a:	4b65      	ldr	r3, [pc, #404]	; (34b0 <__ieee754_pow+0xa10>)
    331c:	429c      	cmp	r4, r3
    331e:	dd00      	ble.n	3322 <__ieee754_pow+0x882>
    3320:	e44a      	b.n	2bb8 <__ieee754_pow+0x118>
    3322:	2200      	movs	r2, #0
    3324:	4b62      	ldr	r3, [pc, #392]	; (34b0 <__ieee754_pow+0xa10>)
    3326:	f002 f973 	bl	5610 <__aeabi_dsub>
    332a:	22c0      	movs	r2, #192	; 0xc0
    332c:	4b67      	ldr	r3, [pc, #412]	; (34cc <__ieee754_pow+0xa2c>)
    332e:	05d2      	lsls	r2, r2, #23
    3330:	0004      	movs	r4, r0
    3332:	000d      	movs	r5, r1
    3334:	f001 feec 	bl	5110 <__aeabi_dmul>
    3338:	4a65      	ldr	r2, [pc, #404]	; (34d0 <__ieee754_pow+0xa30>)
    333a:	0006      	movs	r6, r0
    333c:	000f      	movs	r7, r1
    333e:	4b65      	ldr	r3, [pc, #404]	; (34d4 <__ieee754_pow+0xa34>)
    3340:	0020      	movs	r0, r4
    3342:	0029      	movs	r1, r5
    3344:	f001 fee4 	bl	5110 <__aeabi_dmul>
    3348:	2200      	movs	r2, #0
    334a:	9002      	str	r0, [sp, #8]
    334c:	9103      	str	r1, [sp, #12]
    334e:	4b62      	ldr	r3, [pc, #392]	; (34d8 <__ieee754_pow+0xa38>)
    3350:	0020      	movs	r0, r4
    3352:	0029      	movs	r1, r5
    3354:	f001 fedc 	bl	5110 <__aeabi_dmul>
    3358:	0002      	movs	r2, r0
    335a:	000b      	movs	r3, r1
    335c:	485f      	ldr	r0, [pc, #380]	; (34dc <__ieee754_pow+0xa3c>)
    335e:	4960      	ldr	r1, [pc, #384]	; (34e0 <__ieee754_pow+0xa40>)
    3360:	f002 f956 	bl	5610 <__aeabi_dsub>
    3364:	0022      	movs	r2, r4
    3366:	002b      	movs	r3, r5
    3368:	f001 fed2 	bl	5110 <__aeabi_dmul>
    336c:	0002      	movs	r2, r0
    336e:	000b      	movs	r3, r1
    3370:	2000      	movs	r0, #0
    3372:	495c      	ldr	r1, [pc, #368]	; (34e4 <__ieee754_pow+0xa44>)
    3374:	f002 f94c 	bl	5610 <__aeabi_dsub>
    3378:	0022      	movs	r2, r4
    337a:	9004      	str	r0, [sp, #16]
    337c:	9105      	str	r1, [sp, #20]
    337e:	002b      	movs	r3, r5
    3380:	0020      	movs	r0, r4
    3382:	0029      	movs	r1, r5
    3384:	f001 fec4 	bl	5110 <__aeabi_dmul>
    3388:	0002      	movs	r2, r0
    338a:	000b      	movs	r3, r1
    338c:	9804      	ldr	r0, [sp, #16]
    338e:	9905      	ldr	r1, [sp, #20]
    3390:	f001 febe 	bl	5110 <__aeabi_dmul>
    3394:	4a54      	ldr	r2, [pc, #336]	; (34e8 <__ieee754_pow+0xa48>)
    3396:	4b4d      	ldr	r3, [pc, #308]	; (34cc <__ieee754_pow+0xa2c>)
    3398:	f001 feba 	bl	5110 <__aeabi_dmul>
    339c:	0002      	movs	r2, r0
    339e:	000b      	movs	r3, r1
    33a0:	9802      	ldr	r0, [sp, #8]
    33a2:	9903      	ldr	r1, [sp, #12]
    33a4:	f002 f934 	bl	5610 <__aeabi_dsub>
    33a8:	0002      	movs	r2, r0
    33aa:	000b      	movs	r3, r1
    33ac:	0004      	movs	r4, r0
    33ae:	000d      	movs	r5, r1
    33b0:	0030      	movs	r0, r6
    33b2:	0039      	movs	r1, r7
    33b4:	f000 ff68 	bl	4288 <__aeabi_dadd>
    33b8:	2000      	movs	r0, #0
    33ba:	0032      	movs	r2, r6
    33bc:	003b      	movs	r3, r7
    33be:	9002      	str	r0, [sp, #8]
    33c0:	9103      	str	r1, [sp, #12]
    33c2:	f002 f925 	bl	5610 <__aeabi_dsub>
    33c6:	0002      	movs	r2, r0
    33c8:	000b      	movs	r3, r1
    33ca:	0020      	movs	r0, r4
    33cc:	0029      	movs	r1, r5
    33ce:	f002 f91f 	bl	5610 <__aeabi_dsub>
    33d2:	9004      	str	r0, [sp, #16]
    33d4:	9105      	str	r1, [sp, #20]
    33d6:	e5d9      	b.n	2f8c <__ieee754_pow+0x4ec>
    33d8:	4a44      	ldr	r2, [pc, #272]	; (34ec <__ieee754_pow+0xa4c>)
    33da:	4b45      	ldr	r3, [pc, #276]	; (34f0 <__ieee754_pow+0xa50>)
    33dc:	9806      	ldr	r0, [sp, #24]
    33de:	9907      	ldr	r1, [sp, #28]
    33e0:	f001 fe96 	bl	5110 <__aeabi_dmul>
    33e4:	4a41      	ldr	r2, [pc, #260]	; (34ec <__ieee754_pow+0xa4c>)
    33e6:	4b42      	ldr	r3, [pc, #264]	; (34f0 <__ieee754_pow+0xa50>)
    33e8:	f001 fe92 	bl	5110 <__aeabi_dmul>
    33ec:	f7ff fba0 	bl	2b30 <__ieee754_pow+0x90>
    33f0:	2a00      	cmp	r2, #0
    33f2:	d001      	beq.n	33f8 <__ieee754_pow+0x958>
    33f4:	f7ff fba9 	bl	2b4a <__ieee754_pow+0xaa>
    33f8:	3214      	adds	r2, #20
    33fa:	1ad3      	subs	r3, r2, r3
    33fc:	002a      	movs	r2, r5
    33fe:	411a      	asrs	r2, r3
    3400:	0011      	movs	r1, r2
    3402:	4099      	lsls	r1, r3
    3404:	428d      	cmp	r5, r1
    3406:	d001      	beq.n	340c <__ieee754_pow+0x96c>
    3408:	f7ff fb76 	bl	2af8 <__ieee754_pow+0x58>
    340c:	2301      	movs	r3, #1
    340e:	401a      	ands	r2, r3
    3410:	18db      	adds	r3, r3, r3
    3412:	1a9b      	subs	r3, r3, r2
    3414:	469b      	mov	fp, r3
    3416:	f7ff fb6f 	bl	2af8 <__ieee754_pow+0x58>
    341a:	2200      	movs	r2, #0
    341c:	4b31      	ldr	r3, [pc, #196]	; (34e4 <__ieee754_pow+0xa44>)
    341e:	4690      	mov	r8, r2
    3420:	4691      	mov	r9, r2
    3422:	459a      	cmp	sl, r3
    3424:	dc00      	bgt.n	3428 <__ieee754_pow+0x988>
    3426:	e67b      	b.n	3120 <__ieee754_pow+0x680>
    3428:	e645      	b.n	30b6 <__ieee754_pow+0x616>
    342a:	0002      	movs	r2, r0
    342c:	000b      	movs	r3, r1
    342e:	f002 f8ef 	bl	5610 <__aeabi_dsub>
    3432:	0002      	movs	r2, r0
    3434:	000b      	movs	r3, r1
    3436:	f001 fa37 	bl	48a8 <__aeabi_ddiv>
    343a:	f7ff fb79 	bl	2b30 <__ieee754_pow+0x90>
    343e:	2380      	movs	r3, #128	; 0x80
    3440:	4c2c      	ldr	r4, [pc, #176]	; (34f4 <__ieee754_pow+0xa54>)
    3442:	05db      	lsls	r3, r3, #23
    3444:	9308      	str	r3, [sp, #32]
    3446:	9409      	str	r4, [sp, #36]	; 0x24
    3448:	4b2b      	ldr	r3, [pc, #172]	; (34f8 <__ieee754_pow+0xa58>)
    344a:	4c2c      	ldr	r4, [pc, #176]	; (34fc <__ieee754_pow+0xa5c>)
    344c:	2200      	movs	r2, #0
    344e:	930c      	str	r3, [sp, #48]	; 0x30
    3450:	940d      	str	r4, [sp, #52]	; 0x34
    3452:	2480      	movs	r4, #128	; 0x80
    3454:	4b2a      	ldr	r3, [pc, #168]	; (3500 <__ieee754_pow+0xa60>)
    3456:	02e4      	lsls	r4, r4, #11
    3458:	9206      	str	r2, [sp, #24]
    345a:	9307      	str	r3, [sp, #28]
    345c:	e449      	b.n	2cf2 <__ieee754_pow+0x252>
    345e:	464b      	mov	r3, r9
    3460:	425b      	negs	r3, r3
    3462:	4699      	mov	r9, r3
    3464:	e64a      	b.n	30fc <__ieee754_pow+0x65c>
    3466:	46c0      	nop			; (mov r8, r8)
    3468:	fffffc02 	.word	0xfffffc02
    346c:	fffffc01 	.word	0xfffffc01
    3470:	000fffff 	.word	0x000fffff
    3474:	3fe62e43 	.word	0x3fe62e43
    3478:	fefa39ef 	.word	0xfefa39ef
    347c:	3fe62e42 	.word	0x3fe62e42
    3480:	0ca86c39 	.word	0x0ca86c39
    3484:	be205c61 	.word	0xbe205c61
    3488:	72bea4d0 	.word	0x72bea4d0
    348c:	3e663769 	.word	0x3e663769
    3490:	c5d26bf1 	.word	0xc5d26bf1
    3494:	3ebbbd41 	.word	0x3ebbbd41
    3498:	af25de2c 	.word	0xaf25de2c
    349c:	3f11566a 	.word	0x3f11566a
    34a0:	16bebd93 	.word	0x16bebd93
    34a4:	3f66c16c 	.word	0x3f66c16c
    34a8:	5555553e 	.word	0x5555553e
    34ac:	3fc55555 	.word	0x3fc55555
    34b0:	3ff00000 	.word	0x3ff00000
    34b4:	4090cbff 	.word	0x4090cbff
    34b8:	3f6f3400 	.word	0x3f6f3400
    34bc:	c2f8f359 	.word	0xc2f8f359
    34c0:	01a56e1f 	.word	0x01a56e1f
    34c4:	bff00000 	.word	0xbff00000
    34c8:	3feffffe 	.word	0x3feffffe
    34cc:	3ff71547 	.word	0x3ff71547
    34d0:	f85ddf44 	.word	0xf85ddf44
    34d4:	3e54ae0b 	.word	0x3e54ae0b
    34d8:	3fd00000 	.word	0x3fd00000
    34dc:	55555555 	.word	0x55555555
    34e0:	3fd55555 	.word	0x3fd55555
    34e4:	3fe00000 	.word	0x3fe00000
    34e8:	652b82fe 	.word	0x652b82fe
    34ec:	8800759c 	.word	0x8800759c
    34f0:	7e37e43c 	.word	0x7e37e43c
    34f4:	3fe2b803 	.word	0x3fe2b803
    34f8:	43cfd006 	.word	0x43cfd006
    34fc:	3e4cfdeb 	.word	0x3e4cfdeb
    3500:	3ff80000 	.word	0x3ff80000
    3504:	464a      	mov	r2, r9
    3506:	f000 f999 	bl	383c <scalbn>
    350a:	e6b2      	b.n	3272 <__ieee754_pow+0x7d2>

0000350c <__ieee754_sqrt>:
    350c:	4b6c      	ldr	r3, [pc, #432]	; (36c0 <__ieee754_sqrt+0x1b4>)
    350e:	b5f0      	push	{r4, r5, r6, r7, lr}
    3510:	000a      	movs	r2, r1
    3512:	4646      	mov	r6, r8
    3514:	000d      	movs	r5, r1
    3516:	46d6      	mov	lr, sl
    3518:	464f      	mov	r7, r9
    351a:	0019      	movs	r1, r3
    351c:	b5c0      	push	{r6, r7, lr}
    351e:	0004      	movs	r4, r0
    3520:	0006      	movs	r6, r0
    3522:	4029      	ands	r1, r5
    3524:	4299      	cmp	r1, r3
    3526:	d100      	bne.n	352a <__ieee754_sqrt+0x1e>
    3528:	e0a7      	b.n	367a <__ieee754_sqrt+0x16e>
    352a:	2d00      	cmp	r5, #0
    352c:	dc00      	bgt.n	3530 <__ieee754_sqrt+0x24>
    352e:	e081      	b.n	3634 <__ieee754_sqrt+0x128>
    3530:	152f      	asrs	r7, r5, #20
    3532:	d100      	bne.n	3536 <__ieee754_sqrt+0x2a>
    3534:	e08e      	b.n	3654 <__ieee754_sqrt+0x148>
    3536:	4b63      	ldr	r3, [pc, #396]	; (36c4 <__ieee754_sqrt+0x1b8>)
    3538:	0312      	lsls	r2, r2, #12
    353a:	469c      	mov	ip, r3
    353c:	2380      	movs	r3, #128	; 0x80
    353e:	0b12      	lsrs	r2, r2, #12
    3540:	035b      	lsls	r3, r3, #13
    3542:	4467      	add	r7, ip
    3544:	431a      	orrs	r2, r3
    3546:	07fb      	lsls	r3, r7, #31
    3548:	d468      	bmi.n	361c <__ieee754_sqrt+0x110>
    354a:	107b      	asrs	r3, r7, #1
    354c:	469c      	mov	ip, r3
    354e:	0fe3      	lsrs	r3, r4, #31
    3550:	189b      	adds	r3, r3, r2
    3552:	189b      	adds	r3, r3, r2
    3554:	2280      	movs	r2, #128	; 0x80
    3556:	2116      	movs	r1, #22
    3558:	2600      	movs	r6, #0
    355a:	2500      	movs	r5, #0
    355c:	0064      	lsls	r4, r4, #1
    355e:	0392      	lsls	r2, r2, #14
    3560:	18a8      	adds	r0, r5, r2
    3562:	4298      	cmp	r0, r3
    3564:	dc02      	bgt.n	356c <__ieee754_sqrt+0x60>
    3566:	1885      	adds	r5, r0, r2
    3568:	1a1b      	subs	r3, r3, r0
    356a:	18b6      	adds	r6, r6, r2
    356c:	0fe0      	lsrs	r0, r4, #31
    356e:	005b      	lsls	r3, r3, #1
    3570:	3901      	subs	r1, #1
    3572:	181b      	adds	r3, r3, r0
    3574:	0064      	lsls	r4, r4, #1
    3576:	0852      	lsrs	r2, r2, #1
    3578:	2900      	cmp	r1, #0
    357a:	d1f1      	bne.n	3560 <__ieee754_sqrt+0x54>
    357c:	2200      	movs	r2, #0
    357e:	4692      	mov	sl, r2
    3580:	4690      	mov	r8, r2
    3582:	2280      	movs	r2, #128	; 0x80
    3584:	2020      	movs	r0, #32
    3586:	0612      	lsls	r2, r2, #24
    3588:	e009      	b.n	359e <__ieee754_sqrt+0x92>
    358a:	42ab      	cmp	r3, r5
    358c:	d038      	beq.n	3600 <__ieee754_sqrt+0xf4>
    358e:	0fe1      	lsrs	r1, r4, #31
    3590:	18c9      	adds	r1, r1, r3
    3592:	3801      	subs	r0, #1
    3594:	18cb      	adds	r3, r1, r3
    3596:	0064      	lsls	r4, r4, #1
    3598:	0852      	lsrs	r2, r2, #1
    359a:	2800      	cmp	r0, #0
    359c:	d018      	beq.n	35d0 <__ieee754_sqrt+0xc4>
    359e:	4641      	mov	r1, r8
    35a0:	1851      	adds	r1, r2, r1
    35a2:	42ab      	cmp	r3, r5
    35a4:	ddf1      	ble.n	358a <__ieee754_sqrt+0x7e>
    35a6:	188f      	adds	r7, r1, r2
    35a8:	46b8      	mov	r8, r7
    35aa:	46a9      	mov	r9, r5
    35ac:	2900      	cmp	r1, #0
    35ae:	db30      	blt.n	3612 <__ieee754_sqrt+0x106>
    35b0:	1b5b      	subs	r3, r3, r5
    35b2:	428c      	cmp	r4, r1
    35b4:	41ad      	sbcs	r5, r5
    35b6:	426d      	negs	r5, r5
    35b8:	1b5b      	subs	r3, r3, r5
    35ba:	1a64      	subs	r4, r4, r1
    35bc:	0fe1      	lsrs	r1, r4, #31
    35be:	18c9      	adds	r1, r1, r3
    35c0:	3801      	subs	r0, #1
    35c2:	4492      	add	sl, r2
    35c4:	464d      	mov	r5, r9
    35c6:	18cb      	adds	r3, r1, r3
    35c8:	0064      	lsls	r4, r4, #1
    35ca:	0852      	lsrs	r2, r2, #1
    35cc:	2800      	cmp	r0, #0
    35ce:	d1e6      	bne.n	359e <__ieee754_sqrt+0x92>
    35d0:	4323      	orrs	r3, r4
    35d2:	d128      	bne.n	3626 <__ieee754_sqrt+0x11a>
    35d4:	4653      	mov	r3, sl
    35d6:	085b      	lsrs	r3, r3, #1
    35d8:	493b      	ldr	r1, [pc, #236]	; (36c8 <__ieee754_sqrt+0x1bc>)
    35da:	1072      	asrs	r2, r6, #1
    35dc:	4688      	mov	r8, r1
    35de:	4442      	add	r2, r8
    35e0:	07f1      	lsls	r1, r6, #31
    35e2:	d502      	bpl.n	35ea <__ieee754_sqrt+0xde>
    35e4:	2180      	movs	r1, #128	; 0x80
    35e6:	0609      	lsls	r1, r1, #24
    35e8:	430b      	orrs	r3, r1
    35ea:	4661      	mov	r1, ip
    35ec:	001e      	movs	r6, r3
    35ee:	050f      	lsls	r7, r1, #20
    35f0:	18bd      	adds	r5, r7, r2
    35f2:	0030      	movs	r0, r6
    35f4:	0029      	movs	r1, r5
    35f6:	bc1c      	pop	{r2, r3, r4}
    35f8:	4690      	mov	r8, r2
    35fa:	4699      	mov	r9, r3
    35fc:	46a2      	mov	sl, r4
    35fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3600:	42a1      	cmp	r1, r4
    3602:	d8c4      	bhi.n	358e <__ieee754_sqrt+0x82>
    3604:	188f      	adds	r7, r1, r2
    3606:	46b8      	mov	r8, r7
    3608:	2900      	cmp	r1, #0
    360a:	db42      	blt.n	3692 <__ieee754_sqrt+0x186>
    360c:	4699      	mov	r9, r3
    360e:	2300      	movs	r3, #0
    3610:	e7d3      	b.n	35ba <__ieee754_sqrt+0xae>
    3612:	2f00      	cmp	r7, #0
    3614:	db2f      	blt.n	3676 <__ieee754_sqrt+0x16a>
    3616:	1c6f      	adds	r7, r5, #1
    3618:	46b9      	mov	r9, r7
    361a:	e7c9      	b.n	35b0 <__ieee754_sqrt+0xa4>
    361c:	0fe1      	lsrs	r1, r4, #31
    361e:	0052      	lsls	r2, r2, #1
    3620:	188a      	adds	r2, r1, r2
    3622:	0064      	lsls	r4, r4, #1
    3624:	e791      	b.n	354a <__ieee754_sqrt+0x3e>
    3626:	4653      	mov	r3, sl
    3628:	3301      	adds	r3, #1
    362a:	d035      	beq.n	3698 <__ieee754_sqrt+0x18c>
    362c:	4653      	mov	r3, sl
    362e:	3301      	adds	r3, #1
    3630:	085b      	lsrs	r3, r3, #1
    3632:	e7d1      	b.n	35d8 <__ieee754_sqrt+0xcc>
    3634:	006b      	lsls	r3, r5, #1
    3636:	085b      	lsrs	r3, r3, #1
    3638:	4303      	orrs	r3, r0
    363a:	d0da      	beq.n	35f2 <__ieee754_sqrt+0xe6>
    363c:	2700      	movs	r7, #0
    363e:	2d00      	cmp	r5, #0
    3640:	d132      	bne.n	36a8 <__ieee754_sqrt+0x19c>
    3642:	0ae2      	lsrs	r2, r4, #11
    3644:	3f15      	subs	r7, #21
    3646:	0564      	lsls	r4, r4, #21
    3648:	2a00      	cmp	r2, #0
    364a:	d0fa      	beq.n	3642 <__ieee754_sqrt+0x136>
    364c:	2380      	movs	r3, #128	; 0x80
    364e:	035b      	lsls	r3, r3, #13
    3650:	421a      	tst	r2, r3
    3652:	d124      	bne.n	369e <__ieee754_sqrt+0x192>
    3654:	2080      	movs	r0, #128	; 0x80
    3656:	2300      	movs	r3, #0
    3658:	0340      	lsls	r0, r0, #13
    365a:	e000      	b.n	365e <__ieee754_sqrt+0x152>
    365c:	000b      	movs	r3, r1
    365e:	0052      	lsls	r2, r2, #1
    3660:	1c59      	adds	r1, r3, #1
    3662:	4202      	tst	r2, r0
    3664:	d0fa      	beq.n	365c <__ieee754_sqrt+0x150>
    3666:	2020      	movs	r0, #32
    3668:	1a40      	subs	r0, r0, r1
    366a:	1aff      	subs	r7, r7, r3
    366c:	0023      	movs	r3, r4
    366e:	40c3      	lsrs	r3, r0
    3670:	408c      	lsls	r4, r1
    3672:	431a      	orrs	r2, r3
    3674:	e75f      	b.n	3536 <__ieee754_sqrt+0x2a>
    3676:	46a9      	mov	r9, r5
    3678:	e79a      	b.n	35b0 <__ieee754_sqrt+0xa4>
    367a:	002b      	movs	r3, r5
    367c:	0002      	movs	r2, r0
    367e:	0029      	movs	r1, r5
    3680:	f001 fd46 	bl	5110 <__aeabi_dmul>
    3684:	0032      	movs	r2, r6
    3686:	002b      	movs	r3, r5
    3688:	f000 fdfe 	bl	4288 <__aeabi_dadd>
    368c:	0006      	movs	r6, r0
    368e:	000d      	movs	r5, r1
    3690:	e7af      	b.n	35f2 <__ieee754_sqrt+0xe6>
    3692:	2f00      	cmp	r7, #0
    3694:	dabf      	bge.n	3616 <__ieee754_sqrt+0x10a>
    3696:	e7b9      	b.n	360c <__ieee754_sqrt+0x100>
    3698:	3601      	adds	r6, #1
    369a:	2300      	movs	r3, #0
    369c:	e79c      	b.n	35d8 <__ieee754_sqrt+0xcc>
    369e:	2301      	movs	r3, #1
    36a0:	2100      	movs	r1, #0
    36a2:	2020      	movs	r0, #32
    36a4:	425b      	negs	r3, r3
    36a6:	e7e0      	b.n	366a <__ieee754_sqrt+0x15e>
    36a8:	002b      	movs	r3, r5
    36aa:	0002      	movs	r2, r0
    36ac:	0029      	movs	r1, r5
    36ae:	f001 ffaf 	bl	5610 <__aeabi_dsub>
    36b2:	0002      	movs	r2, r0
    36b4:	000b      	movs	r3, r1
    36b6:	f001 f8f7 	bl	48a8 <__aeabi_ddiv>
    36ba:	0006      	movs	r6, r0
    36bc:	000d      	movs	r5, r1
    36be:	e798      	b.n	35f2 <__ieee754_sqrt+0xe6>
    36c0:	7ff00000 	.word	0x7ff00000
    36c4:	fffffc01 	.word	0xfffffc01
    36c8:	3fe00000 	.word	0x3fe00000

000036cc <fabs>:
    36cc:	0049      	lsls	r1, r1, #1
    36ce:	084b      	lsrs	r3, r1, #1
    36d0:	0019      	movs	r1, r3
    36d2:	4770      	bx	lr

000036d4 <finite>:
    36d4:	4b03      	ldr	r3, [pc, #12]	; (36e4 <finite+0x10>)
    36d6:	0048      	lsls	r0, r1, #1
    36d8:	469c      	mov	ip, r3
    36da:	0840      	lsrs	r0, r0, #1
    36dc:	4460      	add	r0, ip
    36de:	0fc0      	lsrs	r0, r0, #31
    36e0:	4770      	bx	lr
    36e2:	46c0      	nop			; (mov r8, r8)
    36e4:	80100000 	.word	0x80100000

000036e8 <matherr>:
    36e8:	2000      	movs	r0, #0
    36ea:	4770      	bx	lr

000036ec <nan>:
    36ec:	2000      	movs	r0, #0
    36ee:	4901      	ldr	r1, [pc, #4]	; (36f4 <nan+0x8>)
    36f0:	4770      	bx	lr
    36f2:	46c0      	nop			; (mov r8, r8)
    36f4:	7ff80000 	.word	0x7ff80000

000036f8 <rint>:
    36f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    36fa:	46c6      	mov	lr, r8
    36fc:	b500      	push	{lr}
    36fe:	0fcb      	lsrs	r3, r1, #31
    3700:	4698      	mov	r8, r3
    3702:	4c4a      	ldr	r4, [pc, #296]	; (382c <rint+0x134>)
    3704:	004b      	lsls	r3, r1, #1
    3706:	0d5b      	lsrs	r3, r3, #21
    3708:	191e      	adds	r6, r3, r4
    370a:	b082      	sub	sp, #8
    370c:	0007      	movs	r7, r0
    370e:	000a      	movs	r2, r1
    3710:	2e13      	cmp	r6, #19
    3712:	dc35      	bgt.n	3780 <rint+0x88>
    3714:	2e00      	cmp	r6, #0
    3716:	db57      	blt.n	37c8 <rint+0xd0>
    3718:	4b45      	ldr	r3, [pc, #276]	; (3830 <rint+0x138>)
    371a:	0004      	movs	r4, r0
    371c:	4133      	asrs	r3, r6
    371e:	001f      	movs	r7, r3
    3720:	400f      	ands	r7, r1
    3722:	4307      	orrs	r7, r0
    3724:	000d      	movs	r5, r1
    3726:	2f00      	cmp	r7, #0
    3728:	d024      	beq.n	3774 <rint+0x7c>
    372a:	085b      	lsrs	r3, r3, #1
    372c:	001c      	movs	r4, r3
    372e:	400c      	ands	r4, r1
    3730:	4320      	orrs	r0, r4
    3732:	2700      	movs	r7, #0
    3734:	2800      	cmp	r0, #0
    3736:	d007      	beq.n	3748 <rint+0x50>
    3738:	2e13      	cmp	r6, #19
    373a:	d100      	bne.n	373e <rint+0x46>
    373c:	e073      	b.n	3826 <rint+0x12e>
    373e:	2280      	movs	r2, #128	; 0x80
    3740:	02d2      	lsls	r2, r2, #11
    3742:	4132      	asrs	r2, r6
    3744:	4399      	bics	r1, r3
    3746:	430a      	orrs	r2, r1
    3748:	4643      	mov	r3, r8
    374a:	00de      	lsls	r6, r3, #3
    374c:	4b39      	ldr	r3, [pc, #228]	; (3834 <rint+0x13c>)
    374e:	0011      	movs	r1, r2
    3750:	199e      	adds	r6, r3, r6
    3752:	6834      	ldr	r4, [r6, #0]
    3754:	6875      	ldr	r5, [r6, #4]
    3756:	0038      	movs	r0, r7
    3758:	0022      	movs	r2, r4
    375a:	002b      	movs	r3, r5
    375c:	f000 fd94 	bl	4288 <__aeabi_dadd>
    3760:	9000      	str	r0, [sp, #0]
    3762:	9101      	str	r1, [sp, #4]
    3764:	9800      	ldr	r0, [sp, #0]
    3766:	9901      	ldr	r1, [sp, #4]
    3768:	0022      	movs	r2, r4
    376a:	002b      	movs	r3, r5
    376c:	f001 ff50 	bl	5610 <__aeabi_dsub>
    3770:	0004      	movs	r4, r0
    3772:	000d      	movs	r5, r1
    3774:	0020      	movs	r0, r4
    3776:	0029      	movs	r1, r5
    3778:	b002      	add	sp, #8
    377a:	bc04      	pop	{r2}
    377c:	4690      	mov	r8, r2
    377e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3780:	2e33      	cmp	r6, #51	; 0x33
    3782:	dd0c      	ble.n	379e <rint+0xa6>
    3784:	2380      	movs	r3, #128	; 0x80
    3786:	0004      	movs	r4, r0
    3788:	00db      	lsls	r3, r3, #3
    378a:	000d      	movs	r5, r1
    378c:	429e      	cmp	r6, r3
    378e:	d1f1      	bne.n	3774 <rint+0x7c>
    3790:	0002      	movs	r2, r0
    3792:	000b      	movs	r3, r1
    3794:	f000 fd78 	bl	4288 <__aeabi_dadd>
    3798:	0004      	movs	r4, r0
    379a:	000d      	movs	r5, r1
    379c:	e7ea      	b.n	3774 <rint+0x7c>
    379e:	4c26      	ldr	r4, [pc, #152]	; (3838 <rint+0x140>)
    37a0:	000d      	movs	r5, r1
    37a2:	46a4      	mov	ip, r4
    37a4:	2401      	movs	r4, #1
    37a6:	4463      	add	r3, ip
    37a8:	4264      	negs	r4, r4
    37aa:	40dc      	lsrs	r4, r3
    37ac:	46a4      	mov	ip, r4
    37ae:	4661      	mov	r1, ip
    37b0:	0004      	movs	r4, r0
    37b2:	4201      	tst	r1, r0
    37b4:	d0de      	beq.n	3774 <rint+0x7c>
    37b6:	0849      	lsrs	r1, r1, #1
    37b8:	4201      	tst	r1, r0
    37ba:	d0c5      	beq.n	3748 <rint+0x50>
    37bc:	2780      	movs	r7, #128	; 0x80
    37be:	05ff      	lsls	r7, r7, #23
    37c0:	411f      	asrs	r7, r3
    37c2:	4388      	bics	r0, r1
    37c4:	4307      	orrs	r7, r0
    37c6:	e7bf      	b.n	3748 <rint+0x50>
    37c8:	004b      	lsls	r3, r1, #1
    37ca:	085b      	lsrs	r3, r3, #1
    37cc:	4303      	orrs	r3, r0
    37ce:	0004      	movs	r4, r0
    37d0:	000d      	movs	r5, r1
    37d2:	2b00      	cmp	r3, #0
    37d4:	d0ce      	beq.n	3774 <rint+0x7c>
    37d6:	030b      	lsls	r3, r1, #12
    37d8:	0b1b      	lsrs	r3, r3, #12
    37da:	4303      	orrs	r3, r0
    37dc:	001a      	movs	r2, r3
    37de:	425b      	negs	r3, r3
    37e0:	4313      	orrs	r3, r2
    37e2:	2280      	movs	r2, #128	; 0x80
    37e4:	0b1b      	lsrs	r3, r3, #12
    37e6:	0312      	lsls	r2, r2, #12
    37e8:	4013      	ands	r3, r2
    37ea:	0c4a      	lsrs	r2, r1, #17
    37ec:	0452      	lsls	r2, r2, #17
    37ee:	4313      	orrs	r3, r2
    37f0:	0019      	movs	r1, r3
    37f2:	4643      	mov	r3, r8
    37f4:	00da      	lsls	r2, r3, #3
    37f6:	4b0f      	ldr	r3, [pc, #60]	; (3834 <rint+0x13c>)
    37f8:	189b      	adds	r3, r3, r2
    37fa:	681c      	ldr	r4, [r3, #0]
    37fc:	685d      	ldr	r5, [r3, #4]
    37fe:	0022      	movs	r2, r4
    3800:	002b      	movs	r3, r5
    3802:	f000 fd41 	bl	4288 <__aeabi_dadd>
    3806:	9000      	str	r0, [sp, #0]
    3808:	9101      	str	r1, [sp, #4]
    380a:	9800      	ldr	r0, [sp, #0]
    380c:	9901      	ldr	r1, [sp, #4]
    380e:	0022      	movs	r2, r4
    3810:	002b      	movs	r3, r5
    3812:	f001 fefd 	bl	5610 <__aeabi_dsub>
    3816:	4642      	mov	r2, r8
    3818:	004b      	lsls	r3, r1, #1
    381a:	085b      	lsrs	r3, r3, #1
    381c:	07d6      	lsls	r6, r2, #31
    381e:	4333      	orrs	r3, r6
    3820:	0004      	movs	r4, r0
    3822:	001d      	movs	r5, r3
    3824:	e7a6      	b.n	3774 <rint+0x7c>
    3826:	2780      	movs	r7, #128	; 0x80
    3828:	063f      	lsls	r7, r7, #24
    382a:	e788      	b.n	373e <rint+0x46>
    382c:	fffffc01 	.word	0xfffffc01
    3830:	000fffff 	.word	0x000fffff
    3834:	00006290 	.word	0x00006290
    3838:	fffffbed 	.word	0xfffffbed

0000383c <scalbn>:
    383c:	004b      	lsls	r3, r1, #1
    383e:	b570      	push	{r4, r5, r6, lr}
    3840:	0d5b      	lsrs	r3, r3, #21
    3842:	0014      	movs	r4, r2
    3844:	000a      	movs	r2, r1
    3846:	2b00      	cmp	r3, #0
    3848:	d11a      	bne.n	3880 <scalbn+0x44>
    384a:	004b      	lsls	r3, r1, #1
    384c:	085b      	lsrs	r3, r3, #1
    384e:	4303      	orrs	r3, r0
    3850:	d015      	beq.n	387e <scalbn+0x42>
    3852:	2200      	movs	r2, #0
    3854:	4b22      	ldr	r3, [pc, #136]	; (38e0 <scalbn+0xa4>)
    3856:	f001 fc5b 	bl	5110 <__aeabi_dmul>
    385a:	4b22      	ldr	r3, [pc, #136]	; (38e4 <scalbn+0xa8>)
    385c:	000a      	movs	r2, r1
    385e:	429c      	cmp	r4, r3
    3860:	db22      	blt.n	38a8 <scalbn+0x6c>
    3862:	004b      	lsls	r3, r1, #1
    3864:	0d5b      	lsrs	r3, r3, #21
    3866:	3b36      	subs	r3, #54	; 0x36
    3868:	4d1f      	ldr	r5, [pc, #124]	; (38e8 <scalbn+0xac>)
    386a:	18e3      	adds	r3, r4, r3
    386c:	42ab      	cmp	r3, r5
    386e:	dc20      	bgt.n	38b2 <scalbn+0x76>
    3870:	2b00      	cmp	r3, #0
    3872:	dd0d      	ble.n	3890 <scalbn+0x54>
    3874:	4c1d      	ldr	r4, [pc, #116]	; (38ec <scalbn+0xb0>)
    3876:	051b      	lsls	r3, r3, #20
    3878:	4022      	ands	r2, r4
    387a:	431a      	orrs	r2, r3
    387c:	0011      	movs	r1, r2
    387e:	bd70      	pop	{r4, r5, r6, pc}
    3880:	4d1b      	ldr	r5, [pc, #108]	; (38f0 <scalbn+0xb4>)
    3882:	42ab      	cmp	r3, r5
    3884:	d1f0      	bne.n	3868 <scalbn+0x2c>
    3886:	0002      	movs	r2, r0
    3888:	000b      	movs	r3, r1
    388a:	f000 fcfd 	bl	4288 <__aeabi_dadd>
    388e:	e7f6      	b.n	387e <scalbn+0x42>
    3890:	001d      	movs	r5, r3
    3892:	3535      	adds	r5, #53	; 0x35
    3894:	da18      	bge.n	38c8 <scalbn+0x8c>
    3896:	4b17      	ldr	r3, [pc, #92]	; (38f4 <scalbn+0xb8>)
    3898:	0002      	movs	r2, r0
    389a:	429c      	cmp	r4, r3
    389c:	dc0a      	bgt.n	38b4 <scalbn+0x78>
    389e:	000b      	movs	r3, r1
    38a0:	4815      	ldr	r0, [pc, #84]	; (38f8 <scalbn+0xbc>)
    38a2:	4916      	ldr	r1, [pc, #88]	; (38fc <scalbn+0xc0>)
    38a4:	f000 f832 	bl	390c <copysign>
    38a8:	4a13      	ldr	r2, [pc, #76]	; (38f8 <scalbn+0xbc>)
    38aa:	4b14      	ldr	r3, [pc, #80]	; (38fc <scalbn+0xc0>)
    38ac:	f001 fc30 	bl	5110 <__aeabi_dmul>
    38b0:	e7e5      	b.n	387e <scalbn+0x42>
    38b2:	0002      	movs	r2, r0
    38b4:	000b      	movs	r3, r1
    38b6:	4812      	ldr	r0, [pc, #72]	; (3900 <scalbn+0xc4>)
    38b8:	4912      	ldr	r1, [pc, #72]	; (3904 <scalbn+0xc8>)
    38ba:	f000 f827 	bl	390c <copysign>
    38be:	4a10      	ldr	r2, [pc, #64]	; (3900 <scalbn+0xc4>)
    38c0:	4b10      	ldr	r3, [pc, #64]	; (3904 <scalbn+0xc8>)
    38c2:	f001 fc25 	bl	5110 <__aeabi_dmul>
    38c6:	e7da      	b.n	387e <scalbn+0x42>
    38c8:	4c08      	ldr	r4, [pc, #32]	; (38ec <scalbn+0xb0>)
    38ca:	3336      	adds	r3, #54	; 0x36
    38cc:	4022      	ands	r2, r4
    38ce:	051b      	lsls	r3, r3, #20
    38d0:	4313      	orrs	r3, r2
    38d2:	0019      	movs	r1, r3
    38d4:	2200      	movs	r2, #0
    38d6:	4b0c      	ldr	r3, [pc, #48]	; (3908 <scalbn+0xcc>)
    38d8:	f001 fc1a 	bl	5110 <__aeabi_dmul>
    38dc:	e7cf      	b.n	387e <scalbn+0x42>
    38de:	46c0      	nop			; (mov r8, r8)
    38e0:	43500000 	.word	0x43500000
    38e4:	ffff3cb0 	.word	0xffff3cb0
    38e8:	000007fe 	.word	0x000007fe
    38ec:	800fffff 	.word	0x800fffff
    38f0:	000007ff 	.word	0x000007ff
    38f4:	0000c350 	.word	0x0000c350
    38f8:	c2f8f359 	.word	0xc2f8f359
    38fc:	01a56e1f 	.word	0x01a56e1f
    3900:	8800759c 	.word	0x8800759c
    3904:	7e37e43c 	.word	0x7e37e43c
    3908:	3c900000 	.word	0x3c900000

0000390c <copysign>:
    390c:	b530      	push	{r4, r5, lr}
    390e:	004a      	lsls	r2, r1, #1
    3910:	0fdb      	lsrs	r3, r3, #31
    3912:	07db      	lsls	r3, r3, #31
    3914:	0852      	lsrs	r2, r2, #1
    3916:	431a      	orrs	r2, r3
    3918:	0011      	movs	r1, r2
    391a:	bd30      	pop	{r4, r5, pc}

0000391c <__gnu_thumb1_case_uqi>:
    391c:	b402      	push	{r1}
    391e:	4671      	mov	r1, lr
    3920:	0849      	lsrs	r1, r1, #1
    3922:	0049      	lsls	r1, r1, #1
    3924:	5c09      	ldrb	r1, [r1, r0]
    3926:	0049      	lsls	r1, r1, #1
    3928:	448e      	add	lr, r1
    392a:	bc02      	pop	{r1}
    392c:	4770      	bx	lr
    392e:	46c0      	nop			; (mov r8, r8)

00003930 <__aeabi_cdrcmple>:
    3930:	4684      	mov	ip, r0
    3932:	1c10      	adds	r0, r2, #0
    3934:	4662      	mov	r2, ip
    3936:	468c      	mov	ip, r1
    3938:	1c19      	adds	r1, r3, #0
    393a:	4663      	mov	r3, ip
    393c:	e000      	b.n	3940 <__aeabi_cdcmpeq>
    393e:	46c0      	nop			; (mov r8, r8)

00003940 <__aeabi_cdcmpeq>:
    3940:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    3942:	f001 fb83 	bl	504c <__ledf2>
    3946:	2800      	cmp	r0, #0
    3948:	d401      	bmi.n	394e <__aeabi_cdcmpeq+0xe>
    394a:	2100      	movs	r1, #0
    394c:	42c8      	cmn	r0, r1
    394e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00003950 <__aeabi_dcmpeq>:
    3950:	b510      	push	{r4, lr}
    3952:	f001 fadd 	bl	4f10 <__eqdf2>
    3956:	4240      	negs	r0, r0
    3958:	3001      	adds	r0, #1
    395a:	bd10      	pop	{r4, pc}

0000395c <__aeabi_dcmplt>:
    395c:	b510      	push	{r4, lr}
    395e:	f001 fb75 	bl	504c <__ledf2>
    3962:	2800      	cmp	r0, #0
    3964:	db01      	blt.n	396a <__aeabi_dcmplt+0xe>
    3966:	2000      	movs	r0, #0
    3968:	bd10      	pop	{r4, pc}
    396a:	2001      	movs	r0, #1
    396c:	bd10      	pop	{r4, pc}
    396e:	46c0      	nop			; (mov r8, r8)

00003970 <__aeabi_dcmple>:
    3970:	b510      	push	{r4, lr}
    3972:	f001 fb6b 	bl	504c <__ledf2>
    3976:	2800      	cmp	r0, #0
    3978:	dd01      	ble.n	397e <__aeabi_dcmple+0xe>
    397a:	2000      	movs	r0, #0
    397c:	bd10      	pop	{r4, pc}
    397e:	2001      	movs	r0, #1
    3980:	bd10      	pop	{r4, pc}
    3982:	46c0      	nop			; (mov r8, r8)

00003984 <__aeabi_dcmpgt>:
    3984:	b510      	push	{r4, lr}
    3986:	f001 fafd 	bl	4f84 <__gedf2>
    398a:	2800      	cmp	r0, #0
    398c:	dc01      	bgt.n	3992 <__aeabi_dcmpgt+0xe>
    398e:	2000      	movs	r0, #0
    3990:	bd10      	pop	{r4, pc}
    3992:	2001      	movs	r0, #1
    3994:	bd10      	pop	{r4, pc}
    3996:	46c0      	nop			; (mov r8, r8)

00003998 <__aeabi_dcmpge>:
    3998:	b510      	push	{r4, lr}
    399a:	f001 faf3 	bl	4f84 <__gedf2>
    399e:	2800      	cmp	r0, #0
    39a0:	da01      	bge.n	39a6 <__aeabi_dcmpge+0xe>
    39a2:	2000      	movs	r0, #0
    39a4:	bd10      	pop	{r4, pc}
    39a6:	2001      	movs	r0, #1
    39a8:	bd10      	pop	{r4, pc}
    39aa:	46c0      	nop			; (mov r8, r8)

000039ac <__aeabi_cfrcmple>:
    39ac:	4684      	mov	ip, r0
    39ae:	1c08      	adds	r0, r1, #0
    39b0:	4661      	mov	r1, ip
    39b2:	e7ff      	b.n	39b4 <__aeabi_cfcmpeq>

000039b4 <__aeabi_cfcmpeq>:
    39b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    39b6:	f000 f8f9 	bl	3bac <__lesf2>
    39ba:	2800      	cmp	r0, #0
    39bc:	d401      	bmi.n	39c2 <__aeabi_cfcmpeq+0xe>
    39be:	2100      	movs	r1, #0
    39c0:	42c8      	cmn	r0, r1
    39c2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000039c4 <__aeabi_fcmpeq>:
    39c4:	b510      	push	{r4, lr}
    39c6:	f000 f88b 	bl	3ae0 <__eqsf2>
    39ca:	4240      	negs	r0, r0
    39cc:	3001      	adds	r0, #1
    39ce:	bd10      	pop	{r4, pc}

000039d0 <__aeabi_fcmplt>:
    39d0:	b510      	push	{r4, lr}
    39d2:	f000 f8eb 	bl	3bac <__lesf2>
    39d6:	2800      	cmp	r0, #0
    39d8:	db01      	blt.n	39de <__aeabi_fcmplt+0xe>
    39da:	2000      	movs	r0, #0
    39dc:	bd10      	pop	{r4, pc}
    39de:	2001      	movs	r0, #1
    39e0:	bd10      	pop	{r4, pc}
    39e2:	46c0      	nop			; (mov r8, r8)

000039e4 <__aeabi_fcmple>:
    39e4:	b510      	push	{r4, lr}
    39e6:	f000 f8e1 	bl	3bac <__lesf2>
    39ea:	2800      	cmp	r0, #0
    39ec:	dd01      	ble.n	39f2 <__aeabi_fcmple+0xe>
    39ee:	2000      	movs	r0, #0
    39f0:	bd10      	pop	{r4, pc}
    39f2:	2001      	movs	r0, #1
    39f4:	bd10      	pop	{r4, pc}
    39f6:	46c0      	nop			; (mov r8, r8)

000039f8 <__aeabi_fcmpgt>:
    39f8:	b510      	push	{r4, lr}
    39fa:	f000 f897 	bl	3b2c <__gesf2>
    39fe:	2800      	cmp	r0, #0
    3a00:	dc01      	bgt.n	3a06 <__aeabi_fcmpgt+0xe>
    3a02:	2000      	movs	r0, #0
    3a04:	bd10      	pop	{r4, pc}
    3a06:	2001      	movs	r0, #1
    3a08:	bd10      	pop	{r4, pc}
    3a0a:	46c0      	nop			; (mov r8, r8)

00003a0c <__aeabi_fcmpge>:
    3a0c:	b510      	push	{r4, lr}
    3a0e:	f000 f88d 	bl	3b2c <__gesf2>
    3a12:	2800      	cmp	r0, #0
    3a14:	da01      	bge.n	3a1a <__aeabi_fcmpge+0xe>
    3a16:	2000      	movs	r0, #0
    3a18:	bd10      	pop	{r4, pc}
    3a1a:	2001      	movs	r0, #1
    3a1c:	bd10      	pop	{r4, pc}
    3a1e:	46c0      	nop			; (mov r8, r8)

00003a20 <__aeabi_lmul>:
    3a20:	b5f0      	push	{r4, r5, r6, r7, lr}
    3a22:	46ce      	mov	lr, r9
    3a24:	4647      	mov	r7, r8
    3a26:	0415      	lsls	r5, r2, #16
    3a28:	0c2d      	lsrs	r5, r5, #16
    3a2a:	002e      	movs	r6, r5
    3a2c:	b580      	push	{r7, lr}
    3a2e:	0407      	lsls	r7, r0, #16
    3a30:	0c14      	lsrs	r4, r2, #16
    3a32:	0c3f      	lsrs	r7, r7, #16
    3a34:	4699      	mov	r9, r3
    3a36:	0c03      	lsrs	r3, r0, #16
    3a38:	437e      	muls	r6, r7
    3a3a:	435d      	muls	r5, r3
    3a3c:	4367      	muls	r7, r4
    3a3e:	4363      	muls	r3, r4
    3a40:	197f      	adds	r7, r7, r5
    3a42:	0c34      	lsrs	r4, r6, #16
    3a44:	19e4      	adds	r4, r4, r7
    3a46:	469c      	mov	ip, r3
    3a48:	42a5      	cmp	r5, r4
    3a4a:	d903      	bls.n	3a54 <__aeabi_lmul+0x34>
    3a4c:	2380      	movs	r3, #128	; 0x80
    3a4e:	025b      	lsls	r3, r3, #9
    3a50:	4698      	mov	r8, r3
    3a52:	44c4      	add	ip, r8
    3a54:	464b      	mov	r3, r9
    3a56:	4351      	muls	r1, r2
    3a58:	4343      	muls	r3, r0
    3a5a:	0436      	lsls	r6, r6, #16
    3a5c:	0c36      	lsrs	r6, r6, #16
    3a5e:	0c25      	lsrs	r5, r4, #16
    3a60:	0424      	lsls	r4, r4, #16
    3a62:	4465      	add	r5, ip
    3a64:	19a4      	adds	r4, r4, r6
    3a66:	1859      	adds	r1, r3, r1
    3a68:	1949      	adds	r1, r1, r5
    3a6a:	0020      	movs	r0, r4
    3a6c:	bc0c      	pop	{r2, r3}
    3a6e:	4690      	mov	r8, r2
    3a70:	4699      	mov	r9, r3
    3a72:	bdf0      	pop	{r4, r5, r6, r7, pc}

00003a74 <__aeabi_f2uiz>:
    3a74:	219e      	movs	r1, #158	; 0x9e
    3a76:	b510      	push	{r4, lr}
    3a78:	05c9      	lsls	r1, r1, #23
    3a7a:	1c04      	adds	r4, r0, #0
    3a7c:	f7ff ffc6 	bl	3a0c <__aeabi_fcmpge>
    3a80:	2800      	cmp	r0, #0
    3a82:	d103      	bne.n	3a8c <__aeabi_f2uiz+0x18>
    3a84:	1c20      	adds	r0, r4, #0
    3a86:	f000 fb8f 	bl	41a8 <__aeabi_f2iz>
    3a8a:	bd10      	pop	{r4, pc}
    3a8c:	219e      	movs	r1, #158	; 0x9e
    3a8e:	1c20      	adds	r0, r4, #0
    3a90:	05c9      	lsls	r1, r1, #23
    3a92:	f000 f9ed 	bl	3e70 <__aeabi_fsub>
    3a96:	f000 fb87 	bl	41a8 <__aeabi_f2iz>
    3a9a:	2380      	movs	r3, #128	; 0x80
    3a9c:	061b      	lsls	r3, r3, #24
    3a9e:	469c      	mov	ip, r3
    3aa0:	4460      	add	r0, ip
    3aa2:	e7f2      	b.n	3a8a <__aeabi_f2uiz+0x16>

00003aa4 <__aeabi_d2uiz>:
    3aa4:	b570      	push	{r4, r5, r6, lr}
    3aa6:	2200      	movs	r2, #0
    3aa8:	4b0c      	ldr	r3, [pc, #48]	; (3adc <__aeabi_d2uiz+0x38>)
    3aaa:	0004      	movs	r4, r0
    3aac:	000d      	movs	r5, r1
    3aae:	f7ff ff73 	bl	3998 <__aeabi_dcmpge>
    3ab2:	2800      	cmp	r0, #0
    3ab4:	d104      	bne.n	3ac0 <__aeabi_d2uiz+0x1c>
    3ab6:	0020      	movs	r0, r4
    3ab8:	0029      	movs	r1, r5
    3aba:	f002 f8df 	bl	5c7c <__aeabi_d2iz>
    3abe:	bd70      	pop	{r4, r5, r6, pc}
    3ac0:	4b06      	ldr	r3, [pc, #24]	; (3adc <__aeabi_d2uiz+0x38>)
    3ac2:	2200      	movs	r2, #0
    3ac4:	0020      	movs	r0, r4
    3ac6:	0029      	movs	r1, r5
    3ac8:	f001 fda2 	bl	5610 <__aeabi_dsub>
    3acc:	f002 f8d6 	bl	5c7c <__aeabi_d2iz>
    3ad0:	2380      	movs	r3, #128	; 0x80
    3ad2:	061b      	lsls	r3, r3, #24
    3ad4:	469c      	mov	ip, r3
    3ad6:	4460      	add	r0, ip
    3ad8:	e7f1      	b.n	3abe <__aeabi_d2uiz+0x1a>
    3ada:	46c0      	nop			; (mov r8, r8)
    3adc:	41e00000 	.word	0x41e00000

00003ae0 <__eqsf2>:
    3ae0:	b570      	push	{r4, r5, r6, lr}
    3ae2:	0042      	lsls	r2, r0, #1
    3ae4:	0245      	lsls	r5, r0, #9
    3ae6:	024e      	lsls	r6, r1, #9
    3ae8:	004c      	lsls	r4, r1, #1
    3aea:	0fc3      	lsrs	r3, r0, #31
    3aec:	0a6d      	lsrs	r5, r5, #9
    3aee:	0e12      	lsrs	r2, r2, #24
    3af0:	0a76      	lsrs	r6, r6, #9
    3af2:	0e24      	lsrs	r4, r4, #24
    3af4:	0fc9      	lsrs	r1, r1, #31
    3af6:	2001      	movs	r0, #1
    3af8:	2aff      	cmp	r2, #255	; 0xff
    3afa:	d006      	beq.n	3b0a <__eqsf2+0x2a>
    3afc:	2cff      	cmp	r4, #255	; 0xff
    3afe:	d003      	beq.n	3b08 <__eqsf2+0x28>
    3b00:	42a2      	cmp	r2, r4
    3b02:	d101      	bne.n	3b08 <__eqsf2+0x28>
    3b04:	42b5      	cmp	r5, r6
    3b06:	d006      	beq.n	3b16 <__eqsf2+0x36>
    3b08:	bd70      	pop	{r4, r5, r6, pc}
    3b0a:	2d00      	cmp	r5, #0
    3b0c:	d1fc      	bne.n	3b08 <__eqsf2+0x28>
    3b0e:	2cff      	cmp	r4, #255	; 0xff
    3b10:	d1fa      	bne.n	3b08 <__eqsf2+0x28>
    3b12:	2e00      	cmp	r6, #0
    3b14:	d1f8      	bne.n	3b08 <__eqsf2+0x28>
    3b16:	428b      	cmp	r3, r1
    3b18:	d006      	beq.n	3b28 <__eqsf2+0x48>
    3b1a:	2001      	movs	r0, #1
    3b1c:	2a00      	cmp	r2, #0
    3b1e:	d1f3      	bne.n	3b08 <__eqsf2+0x28>
    3b20:	0028      	movs	r0, r5
    3b22:	1e45      	subs	r5, r0, #1
    3b24:	41a8      	sbcs	r0, r5
    3b26:	e7ef      	b.n	3b08 <__eqsf2+0x28>
    3b28:	2000      	movs	r0, #0
    3b2a:	e7ed      	b.n	3b08 <__eqsf2+0x28>

00003b2c <__gesf2>:
    3b2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3b2e:	0042      	lsls	r2, r0, #1
    3b30:	0245      	lsls	r5, r0, #9
    3b32:	024c      	lsls	r4, r1, #9
    3b34:	0fc3      	lsrs	r3, r0, #31
    3b36:	0048      	lsls	r0, r1, #1
    3b38:	0a6d      	lsrs	r5, r5, #9
    3b3a:	0e12      	lsrs	r2, r2, #24
    3b3c:	0a64      	lsrs	r4, r4, #9
    3b3e:	0e00      	lsrs	r0, r0, #24
    3b40:	0fc9      	lsrs	r1, r1, #31
    3b42:	2aff      	cmp	r2, #255	; 0xff
    3b44:	d01e      	beq.n	3b84 <__gesf2+0x58>
    3b46:	28ff      	cmp	r0, #255	; 0xff
    3b48:	d021      	beq.n	3b8e <__gesf2+0x62>
    3b4a:	2a00      	cmp	r2, #0
    3b4c:	d10a      	bne.n	3b64 <__gesf2+0x38>
    3b4e:	426e      	negs	r6, r5
    3b50:	416e      	adcs	r6, r5
    3b52:	b2f6      	uxtb	r6, r6
    3b54:	2800      	cmp	r0, #0
    3b56:	d10f      	bne.n	3b78 <__gesf2+0x4c>
    3b58:	2c00      	cmp	r4, #0
    3b5a:	d10d      	bne.n	3b78 <__gesf2+0x4c>
    3b5c:	2000      	movs	r0, #0
    3b5e:	2d00      	cmp	r5, #0
    3b60:	d009      	beq.n	3b76 <__gesf2+0x4a>
    3b62:	e005      	b.n	3b70 <__gesf2+0x44>
    3b64:	2800      	cmp	r0, #0
    3b66:	d101      	bne.n	3b6c <__gesf2+0x40>
    3b68:	2c00      	cmp	r4, #0
    3b6a:	d001      	beq.n	3b70 <__gesf2+0x44>
    3b6c:	428b      	cmp	r3, r1
    3b6e:	d011      	beq.n	3b94 <__gesf2+0x68>
    3b70:	2101      	movs	r1, #1
    3b72:	4258      	negs	r0, r3
    3b74:	4308      	orrs	r0, r1
    3b76:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3b78:	2e00      	cmp	r6, #0
    3b7a:	d0f7      	beq.n	3b6c <__gesf2+0x40>
    3b7c:	2001      	movs	r0, #1
    3b7e:	3901      	subs	r1, #1
    3b80:	4308      	orrs	r0, r1
    3b82:	e7f8      	b.n	3b76 <__gesf2+0x4a>
    3b84:	2d00      	cmp	r5, #0
    3b86:	d0de      	beq.n	3b46 <__gesf2+0x1a>
    3b88:	2002      	movs	r0, #2
    3b8a:	4240      	negs	r0, r0
    3b8c:	e7f3      	b.n	3b76 <__gesf2+0x4a>
    3b8e:	2c00      	cmp	r4, #0
    3b90:	d0db      	beq.n	3b4a <__gesf2+0x1e>
    3b92:	e7f9      	b.n	3b88 <__gesf2+0x5c>
    3b94:	4282      	cmp	r2, r0
    3b96:	dceb      	bgt.n	3b70 <__gesf2+0x44>
    3b98:	db04      	blt.n	3ba4 <__gesf2+0x78>
    3b9a:	42a5      	cmp	r5, r4
    3b9c:	d8e8      	bhi.n	3b70 <__gesf2+0x44>
    3b9e:	2000      	movs	r0, #0
    3ba0:	42a5      	cmp	r5, r4
    3ba2:	d2e8      	bcs.n	3b76 <__gesf2+0x4a>
    3ba4:	2101      	movs	r1, #1
    3ba6:	1e58      	subs	r0, r3, #1
    3ba8:	4308      	orrs	r0, r1
    3baa:	e7e4      	b.n	3b76 <__gesf2+0x4a>

00003bac <__lesf2>:
    3bac:	b5f0      	push	{r4, r5, r6, r7, lr}
    3bae:	0042      	lsls	r2, r0, #1
    3bb0:	024d      	lsls	r5, r1, #9
    3bb2:	004c      	lsls	r4, r1, #1
    3bb4:	0246      	lsls	r6, r0, #9
    3bb6:	0a76      	lsrs	r6, r6, #9
    3bb8:	0e12      	lsrs	r2, r2, #24
    3bba:	0fc3      	lsrs	r3, r0, #31
    3bbc:	0a6d      	lsrs	r5, r5, #9
    3bbe:	0e24      	lsrs	r4, r4, #24
    3bc0:	0fc9      	lsrs	r1, r1, #31
    3bc2:	2aff      	cmp	r2, #255	; 0xff
    3bc4:	d016      	beq.n	3bf4 <__lesf2+0x48>
    3bc6:	2cff      	cmp	r4, #255	; 0xff
    3bc8:	d018      	beq.n	3bfc <__lesf2+0x50>
    3bca:	2a00      	cmp	r2, #0
    3bcc:	d10a      	bne.n	3be4 <__lesf2+0x38>
    3bce:	4270      	negs	r0, r6
    3bd0:	4170      	adcs	r0, r6
    3bd2:	b2c0      	uxtb	r0, r0
    3bd4:	2c00      	cmp	r4, #0
    3bd6:	d015      	beq.n	3c04 <__lesf2+0x58>
    3bd8:	2800      	cmp	r0, #0
    3bda:	d005      	beq.n	3be8 <__lesf2+0x3c>
    3bdc:	2001      	movs	r0, #1
    3bde:	3901      	subs	r1, #1
    3be0:	4308      	orrs	r0, r1
    3be2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3be4:	2c00      	cmp	r4, #0
    3be6:	d013      	beq.n	3c10 <__lesf2+0x64>
    3be8:	4299      	cmp	r1, r3
    3bea:	d014      	beq.n	3c16 <__lesf2+0x6a>
    3bec:	2001      	movs	r0, #1
    3bee:	425b      	negs	r3, r3
    3bf0:	4318      	orrs	r0, r3
    3bf2:	e7f6      	b.n	3be2 <__lesf2+0x36>
    3bf4:	2002      	movs	r0, #2
    3bf6:	2e00      	cmp	r6, #0
    3bf8:	d1f3      	bne.n	3be2 <__lesf2+0x36>
    3bfa:	e7e4      	b.n	3bc6 <__lesf2+0x1a>
    3bfc:	2002      	movs	r0, #2
    3bfe:	2d00      	cmp	r5, #0
    3c00:	d1ef      	bne.n	3be2 <__lesf2+0x36>
    3c02:	e7e2      	b.n	3bca <__lesf2+0x1e>
    3c04:	2d00      	cmp	r5, #0
    3c06:	d1e7      	bne.n	3bd8 <__lesf2+0x2c>
    3c08:	2000      	movs	r0, #0
    3c0a:	2e00      	cmp	r6, #0
    3c0c:	d0e9      	beq.n	3be2 <__lesf2+0x36>
    3c0e:	e7ed      	b.n	3bec <__lesf2+0x40>
    3c10:	2d00      	cmp	r5, #0
    3c12:	d1e9      	bne.n	3be8 <__lesf2+0x3c>
    3c14:	e7ea      	b.n	3bec <__lesf2+0x40>
    3c16:	42a2      	cmp	r2, r4
    3c18:	dc06      	bgt.n	3c28 <__lesf2+0x7c>
    3c1a:	dbdf      	blt.n	3bdc <__lesf2+0x30>
    3c1c:	42ae      	cmp	r6, r5
    3c1e:	d803      	bhi.n	3c28 <__lesf2+0x7c>
    3c20:	2000      	movs	r0, #0
    3c22:	42ae      	cmp	r6, r5
    3c24:	d3da      	bcc.n	3bdc <__lesf2+0x30>
    3c26:	e7dc      	b.n	3be2 <__lesf2+0x36>
    3c28:	2001      	movs	r0, #1
    3c2a:	4249      	negs	r1, r1
    3c2c:	4308      	orrs	r0, r1
    3c2e:	e7d8      	b.n	3be2 <__lesf2+0x36>

00003c30 <__aeabi_fmul>:
    3c30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3c32:	4657      	mov	r7, sl
    3c34:	464e      	mov	r6, r9
    3c36:	4645      	mov	r5, r8
    3c38:	46de      	mov	lr, fp
    3c3a:	b5e0      	push	{r5, r6, r7, lr}
    3c3c:	0247      	lsls	r7, r0, #9
    3c3e:	0046      	lsls	r6, r0, #1
    3c40:	4688      	mov	r8, r1
    3c42:	0a7f      	lsrs	r7, r7, #9
    3c44:	0e36      	lsrs	r6, r6, #24
    3c46:	0fc4      	lsrs	r4, r0, #31
    3c48:	2e00      	cmp	r6, #0
    3c4a:	d047      	beq.n	3cdc <__aeabi_fmul+0xac>
    3c4c:	2eff      	cmp	r6, #255	; 0xff
    3c4e:	d024      	beq.n	3c9a <__aeabi_fmul+0x6a>
    3c50:	00fb      	lsls	r3, r7, #3
    3c52:	2780      	movs	r7, #128	; 0x80
    3c54:	04ff      	lsls	r7, r7, #19
    3c56:	431f      	orrs	r7, r3
    3c58:	2300      	movs	r3, #0
    3c5a:	4699      	mov	r9, r3
    3c5c:	469a      	mov	sl, r3
    3c5e:	3e7f      	subs	r6, #127	; 0x7f
    3c60:	4643      	mov	r3, r8
    3c62:	025d      	lsls	r5, r3, #9
    3c64:	0058      	lsls	r0, r3, #1
    3c66:	0fdb      	lsrs	r3, r3, #31
    3c68:	0a6d      	lsrs	r5, r5, #9
    3c6a:	0e00      	lsrs	r0, r0, #24
    3c6c:	4698      	mov	r8, r3
    3c6e:	d043      	beq.n	3cf8 <__aeabi_fmul+0xc8>
    3c70:	28ff      	cmp	r0, #255	; 0xff
    3c72:	d03b      	beq.n	3cec <__aeabi_fmul+0xbc>
    3c74:	00eb      	lsls	r3, r5, #3
    3c76:	2580      	movs	r5, #128	; 0x80
    3c78:	2200      	movs	r2, #0
    3c7a:	04ed      	lsls	r5, r5, #19
    3c7c:	431d      	orrs	r5, r3
    3c7e:	387f      	subs	r0, #127	; 0x7f
    3c80:	1836      	adds	r6, r6, r0
    3c82:	1c73      	adds	r3, r6, #1
    3c84:	4641      	mov	r1, r8
    3c86:	469b      	mov	fp, r3
    3c88:	464b      	mov	r3, r9
    3c8a:	4061      	eors	r1, r4
    3c8c:	4313      	orrs	r3, r2
    3c8e:	2b0f      	cmp	r3, #15
    3c90:	d864      	bhi.n	3d5c <__aeabi_fmul+0x12c>
    3c92:	4875      	ldr	r0, [pc, #468]	; (3e68 <__aeabi_fmul+0x238>)
    3c94:	009b      	lsls	r3, r3, #2
    3c96:	58c3      	ldr	r3, [r0, r3]
    3c98:	469f      	mov	pc, r3
    3c9a:	2f00      	cmp	r7, #0
    3c9c:	d142      	bne.n	3d24 <__aeabi_fmul+0xf4>
    3c9e:	2308      	movs	r3, #8
    3ca0:	4699      	mov	r9, r3
    3ca2:	3b06      	subs	r3, #6
    3ca4:	26ff      	movs	r6, #255	; 0xff
    3ca6:	469a      	mov	sl, r3
    3ca8:	e7da      	b.n	3c60 <__aeabi_fmul+0x30>
    3caa:	4641      	mov	r1, r8
    3cac:	2a02      	cmp	r2, #2
    3cae:	d028      	beq.n	3d02 <__aeabi_fmul+0xd2>
    3cb0:	2a03      	cmp	r2, #3
    3cb2:	d100      	bne.n	3cb6 <__aeabi_fmul+0x86>
    3cb4:	e0ce      	b.n	3e54 <__aeabi_fmul+0x224>
    3cb6:	2a01      	cmp	r2, #1
    3cb8:	d000      	beq.n	3cbc <__aeabi_fmul+0x8c>
    3cba:	e0ac      	b.n	3e16 <__aeabi_fmul+0x1e6>
    3cbc:	4011      	ands	r1, r2
    3cbe:	2000      	movs	r0, #0
    3cc0:	2200      	movs	r2, #0
    3cc2:	b2cc      	uxtb	r4, r1
    3cc4:	0240      	lsls	r0, r0, #9
    3cc6:	05d2      	lsls	r2, r2, #23
    3cc8:	0a40      	lsrs	r0, r0, #9
    3cca:	07e4      	lsls	r4, r4, #31
    3ccc:	4310      	orrs	r0, r2
    3cce:	4320      	orrs	r0, r4
    3cd0:	bc3c      	pop	{r2, r3, r4, r5}
    3cd2:	4690      	mov	r8, r2
    3cd4:	4699      	mov	r9, r3
    3cd6:	46a2      	mov	sl, r4
    3cd8:	46ab      	mov	fp, r5
    3cda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3cdc:	2f00      	cmp	r7, #0
    3cde:	d115      	bne.n	3d0c <__aeabi_fmul+0xdc>
    3ce0:	2304      	movs	r3, #4
    3ce2:	4699      	mov	r9, r3
    3ce4:	3b03      	subs	r3, #3
    3ce6:	2600      	movs	r6, #0
    3ce8:	469a      	mov	sl, r3
    3cea:	e7b9      	b.n	3c60 <__aeabi_fmul+0x30>
    3cec:	20ff      	movs	r0, #255	; 0xff
    3cee:	2202      	movs	r2, #2
    3cf0:	2d00      	cmp	r5, #0
    3cf2:	d0c5      	beq.n	3c80 <__aeabi_fmul+0x50>
    3cf4:	2203      	movs	r2, #3
    3cf6:	e7c3      	b.n	3c80 <__aeabi_fmul+0x50>
    3cf8:	2d00      	cmp	r5, #0
    3cfa:	d119      	bne.n	3d30 <__aeabi_fmul+0x100>
    3cfc:	2000      	movs	r0, #0
    3cfe:	2201      	movs	r2, #1
    3d00:	e7be      	b.n	3c80 <__aeabi_fmul+0x50>
    3d02:	2401      	movs	r4, #1
    3d04:	22ff      	movs	r2, #255	; 0xff
    3d06:	400c      	ands	r4, r1
    3d08:	2000      	movs	r0, #0
    3d0a:	e7db      	b.n	3cc4 <__aeabi_fmul+0x94>
    3d0c:	0038      	movs	r0, r7
    3d0e:	f002 f9cb 	bl	60a8 <__clzsi2>
    3d12:	2676      	movs	r6, #118	; 0x76
    3d14:	1f43      	subs	r3, r0, #5
    3d16:	409f      	lsls	r7, r3
    3d18:	2300      	movs	r3, #0
    3d1a:	4276      	negs	r6, r6
    3d1c:	1a36      	subs	r6, r6, r0
    3d1e:	4699      	mov	r9, r3
    3d20:	469a      	mov	sl, r3
    3d22:	e79d      	b.n	3c60 <__aeabi_fmul+0x30>
    3d24:	230c      	movs	r3, #12
    3d26:	4699      	mov	r9, r3
    3d28:	3b09      	subs	r3, #9
    3d2a:	26ff      	movs	r6, #255	; 0xff
    3d2c:	469a      	mov	sl, r3
    3d2e:	e797      	b.n	3c60 <__aeabi_fmul+0x30>
    3d30:	0028      	movs	r0, r5
    3d32:	f002 f9b9 	bl	60a8 <__clzsi2>
    3d36:	1f43      	subs	r3, r0, #5
    3d38:	409d      	lsls	r5, r3
    3d3a:	2376      	movs	r3, #118	; 0x76
    3d3c:	425b      	negs	r3, r3
    3d3e:	1a18      	subs	r0, r3, r0
    3d40:	2200      	movs	r2, #0
    3d42:	e79d      	b.n	3c80 <__aeabi_fmul+0x50>
    3d44:	2080      	movs	r0, #128	; 0x80
    3d46:	2400      	movs	r4, #0
    3d48:	03c0      	lsls	r0, r0, #15
    3d4a:	22ff      	movs	r2, #255	; 0xff
    3d4c:	e7ba      	b.n	3cc4 <__aeabi_fmul+0x94>
    3d4e:	003d      	movs	r5, r7
    3d50:	4652      	mov	r2, sl
    3d52:	e7ab      	b.n	3cac <__aeabi_fmul+0x7c>
    3d54:	003d      	movs	r5, r7
    3d56:	0021      	movs	r1, r4
    3d58:	4652      	mov	r2, sl
    3d5a:	e7a7      	b.n	3cac <__aeabi_fmul+0x7c>
    3d5c:	0c3b      	lsrs	r3, r7, #16
    3d5e:	469c      	mov	ip, r3
    3d60:	042a      	lsls	r2, r5, #16
    3d62:	0c12      	lsrs	r2, r2, #16
    3d64:	0c2b      	lsrs	r3, r5, #16
    3d66:	0014      	movs	r4, r2
    3d68:	4660      	mov	r0, ip
    3d6a:	4665      	mov	r5, ip
    3d6c:	043f      	lsls	r7, r7, #16
    3d6e:	0c3f      	lsrs	r7, r7, #16
    3d70:	437c      	muls	r4, r7
    3d72:	4342      	muls	r2, r0
    3d74:	435d      	muls	r5, r3
    3d76:	437b      	muls	r3, r7
    3d78:	0c27      	lsrs	r7, r4, #16
    3d7a:	189b      	adds	r3, r3, r2
    3d7c:	18ff      	adds	r7, r7, r3
    3d7e:	42ba      	cmp	r2, r7
    3d80:	d903      	bls.n	3d8a <__aeabi_fmul+0x15a>
    3d82:	2380      	movs	r3, #128	; 0x80
    3d84:	025b      	lsls	r3, r3, #9
    3d86:	469c      	mov	ip, r3
    3d88:	4465      	add	r5, ip
    3d8a:	0424      	lsls	r4, r4, #16
    3d8c:	043a      	lsls	r2, r7, #16
    3d8e:	0c24      	lsrs	r4, r4, #16
    3d90:	1912      	adds	r2, r2, r4
    3d92:	0193      	lsls	r3, r2, #6
    3d94:	1e5c      	subs	r4, r3, #1
    3d96:	41a3      	sbcs	r3, r4
    3d98:	0c3f      	lsrs	r7, r7, #16
    3d9a:	0e92      	lsrs	r2, r2, #26
    3d9c:	197d      	adds	r5, r7, r5
    3d9e:	431a      	orrs	r2, r3
    3da0:	01ad      	lsls	r5, r5, #6
    3da2:	4315      	orrs	r5, r2
    3da4:	012b      	lsls	r3, r5, #4
    3da6:	d504      	bpl.n	3db2 <__aeabi_fmul+0x182>
    3da8:	2301      	movs	r3, #1
    3daa:	465e      	mov	r6, fp
    3dac:	086a      	lsrs	r2, r5, #1
    3dae:	401d      	ands	r5, r3
    3db0:	4315      	orrs	r5, r2
    3db2:	0032      	movs	r2, r6
    3db4:	327f      	adds	r2, #127	; 0x7f
    3db6:	2a00      	cmp	r2, #0
    3db8:	dd25      	ble.n	3e06 <__aeabi_fmul+0x1d6>
    3dba:	076b      	lsls	r3, r5, #29
    3dbc:	d004      	beq.n	3dc8 <__aeabi_fmul+0x198>
    3dbe:	230f      	movs	r3, #15
    3dc0:	402b      	ands	r3, r5
    3dc2:	2b04      	cmp	r3, #4
    3dc4:	d000      	beq.n	3dc8 <__aeabi_fmul+0x198>
    3dc6:	3504      	adds	r5, #4
    3dc8:	012b      	lsls	r3, r5, #4
    3dca:	d503      	bpl.n	3dd4 <__aeabi_fmul+0x1a4>
    3dcc:	0032      	movs	r2, r6
    3dce:	4b27      	ldr	r3, [pc, #156]	; (3e6c <__aeabi_fmul+0x23c>)
    3dd0:	3280      	adds	r2, #128	; 0x80
    3dd2:	401d      	ands	r5, r3
    3dd4:	2afe      	cmp	r2, #254	; 0xfe
    3dd6:	dc94      	bgt.n	3d02 <__aeabi_fmul+0xd2>
    3dd8:	2401      	movs	r4, #1
    3dda:	01a8      	lsls	r0, r5, #6
    3ddc:	0a40      	lsrs	r0, r0, #9
    3dde:	b2d2      	uxtb	r2, r2
    3de0:	400c      	ands	r4, r1
    3de2:	e76f      	b.n	3cc4 <__aeabi_fmul+0x94>
    3de4:	2080      	movs	r0, #128	; 0x80
    3de6:	03c0      	lsls	r0, r0, #15
    3de8:	4207      	tst	r7, r0
    3dea:	d007      	beq.n	3dfc <__aeabi_fmul+0x1cc>
    3dec:	4205      	tst	r5, r0
    3dee:	d105      	bne.n	3dfc <__aeabi_fmul+0x1cc>
    3df0:	4328      	orrs	r0, r5
    3df2:	0240      	lsls	r0, r0, #9
    3df4:	0a40      	lsrs	r0, r0, #9
    3df6:	4644      	mov	r4, r8
    3df8:	22ff      	movs	r2, #255	; 0xff
    3dfa:	e763      	b.n	3cc4 <__aeabi_fmul+0x94>
    3dfc:	4338      	orrs	r0, r7
    3dfe:	0240      	lsls	r0, r0, #9
    3e00:	0a40      	lsrs	r0, r0, #9
    3e02:	22ff      	movs	r2, #255	; 0xff
    3e04:	e75e      	b.n	3cc4 <__aeabi_fmul+0x94>
    3e06:	2401      	movs	r4, #1
    3e08:	1aa3      	subs	r3, r4, r2
    3e0a:	2b1b      	cmp	r3, #27
    3e0c:	dd05      	ble.n	3e1a <__aeabi_fmul+0x1ea>
    3e0e:	400c      	ands	r4, r1
    3e10:	2200      	movs	r2, #0
    3e12:	2000      	movs	r0, #0
    3e14:	e756      	b.n	3cc4 <__aeabi_fmul+0x94>
    3e16:	465e      	mov	r6, fp
    3e18:	e7cb      	b.n	3db2 <__aeabi_fmul+0x182>
    3e1a:	002a      	movs	r2, r5
    3e1c:	2020      	movs	r0, #32
    3e1e:	40da      	lsrs	r2, r3
    3e20:	1ac3      	subs	r3, r0, r3
    3e22:	409d      	lsls	r5, r3
    3e24:	002b      	movs	r3, r5
    3e26:	1e5d      	subs	r5, r3, #1
    3e28:	41ab      	sbcs	r3, r5
    3e2a:	4313      	orrs	r3, r2
    3e2c:	075a      	lsls	r2, r3, #29
    3e2e:	d004      	beq.n	3e3a <__aeabi_fmul+0x20a>
    3e30:	220f      	movs	r2, #15
    3e32:	401a      	ands	r2, r3
    3e34:	2a04      	cmp	r2, #4
    3e36:	d000      	beq.n	3e3a <__aeabi_fmul+0x20a>
    3e38:	3304      	adds	r3, #4
    3e3a:	015a      	lsls	r2, r3, #5
    3e3c:	d504      	bpl.n	3e48 <__aeabi_fmul+0x218>
    3e3e:	2401      	movs	r4, #1
    3e40:	2201      	movs	r2, #1
    3e42:	400c      	ands	r4, r1
    3e44:	2000      	movs	r0, #0
    3e46:	e73d      	b.n	3cc4 <__aeabi_fmul+0x94>
    3e48:	2401      	movs	r4, #1
    3e4a:	019b      	lsls	r3, r3, #6
    3e4c:	0a58      	lsrs	r0, r3, #9
    3e4e:	400c      	ands	r4, r1
    3e50:	2200      	movs	r2, #0
    3e52:	e737      	b.n	3cc4 <__aeabi_fmul+0x94>
    3e54:	2080      	movs	r0, #128	; 0x80
    3e56:	2401      	movs	r4, #1
    3e58:	03c0      	lsls	r0, r0, #15
    3e5a:	4328      	orrs	r0, r5
    3e5c:	0240      	lsls	r0, r0, #9
    3e5e:	0a40      	lsrs	r0, r0, #9
    3e60:	400c      	ands	r4, r1
    3e62:	22ff      	movs	r2, #255	; 0xff
    3e64:	e72e      	b.n	3cc4 <__aeabi_fmul+0x94>
    3e66:	46c0      	nop			; (mov r8, r8)
    3e68:	000062a0 	.word	0x000062a0
    3e6c:	f7ffffff 	.word	0xf7ffffff

00003e70 <__aeabi_fsub>:
    3e70:	b5f0      	push	{r4, r5, r6, r7, lr}
    3e72:	464f      	mov	r7, r9
    3e74:	46d6      	mov	lr, sl
    3e76:	4646      	mov	r6, r8
    3e78:	0044      	lsls	r4, r0, #1
    3e7a:	b5c0      	push	{r6, r7, lr}
    3e7c:	0fc2      	lsrs	r2, r0, #31
    3e7e:	0247      	lsls	r7, r0, #9
    3e80:	0248      	lsls	r0, r1, #9
    3e82:	0a40      	lsrs	r0, r0, #9
    3e84:	4684      	mov	ip, r0
    3e86:	4666      	mov	r6, ip
    3e88:	0a7b      	lsrs	r3, r7, #9
    3e8a:	0048      	lsls	r0, r1, #1
    3e8c:	0fc9      	lsrs	r1, r1, #31
    3e8e:	469a      	mov	sl, r3
    3e90:	0e24      	lsrs	r4, r4, #24
    3e92:	0015      	movs	r5, r2
    3e94:	00db      	lsls	r3, r3, #3
    3e96:	0e00      	lsrs	r0, r0, #24
    3e98:	4689      	mov	r9, r1
    3e9a:	00f6      	lsls	r6, r6, #3
    3e9c:	28ff      	cmp	r0, #255	; 0xff
    3e9e:	d100      	bne.n	3ea2 <__aeabi_fsub+0x32>
    3ea0:	e08f      	b.n	3fc2 <__aeabi_fsub+0x152>
    3ea2:	2101      	movs	r1, #1
    3ea4:	464f      	mov	r7, r9
    3ea6:	404f      	eors	r7, r1
    3ea8:	0039      	movs	r1, r7
    3eaa:	4291      	cmp	r1, r2
    3eac:	d066      	beq.n	3f7c <__aeabi_fsub+0x10c>
    3eae:	1a22      	subs	r2, r4, r0
    3eb0:	2a00      	cmp	r2, #0
    3eb2:	dc00      	bgt.n	3eb6 <__aeabi_fsub+0x46>
    3eb4:	e09d      	b.n	3ff2 <__aeabi_fsub+0x182>
    3eb6:	2800      	cmp	r0, #0
    3eb8:	d13d      	bne.n	3f36 <__aeabi_fsub+0xc6>
    3eba:	2e00      	cmp	r6, #0
    3ebc:	d100      	bne.n	3ec0 <__aeabi_fsub+0x50>
    3ebe:	e08b      	b.n	3fd8 <__aeabi_fsub+0x168>
    3ec0:	1e51      	subs	r1, r2, #1
    3ec2:	2900      	cmp	r1, #0
    3ec4:	d000      	beq.n	3ec8 <__aeabi_fsub+0x58>
    3ec6:	e0b5      	b.n	4034 <__aeabi_fsub+0x1c4>
    3ec8:	2401      	movs	r4, #1
    3eca:	1b9b      	subs	r3, r3, r6
    3ecc:	015a      	lsls	r2, r3, #5
    3ece:	d544      	bpl.n	3f5a <__aeabi_fsub+0xea>
    3ed0:	019b      	lsls	r3, r3, #6
    3ed2:	099f      	lsrs	r7, r3, #6
    3ed4:	0038      	movs	r0, r7
    3ed6:	f002 f8e7 	bl	60a8 <__clzsi2>
    3eda:	3805      	subs	r0, #5
    3edc:	4087      	lsls	r7, r0
    3ede:	4284      	cmp	r4, r0
    3ee0:	dd00      	ble.n	3ee4 <__aeabi_fsub+0x74>
    3ee2:	e096      	b.n	4012 <__aeabi_fsub+0x1a2>
    3ee4:	1b04      	subs	r4, r0, r4
    3ee6:	003a      	movs	r2, r7
    3ee8:	2020      	movs	r0, #32
    3eea:	3401      	adds	r4, #1
    3eec:	40e2      	lsrs	r2, r4
    3eee:	1b04      	subs	r4, r0, r4
    3ef0:	40a7      	lsls	r7, r4
    3ef2:	003b      	movs	r3, r7
    3ef4:	1e5f      	subs	r7, r3, #1
    3ef6:	41bb      	sbcs	r3, r7
    3ef8:	2400      	movs	r4, #0
    3efa:	4313      	orrs	r3, r2
    3efc:	075a      	lsls	r2, r3, #29
    3efe:	d004      	beq.n	3f0a <__aeabi_fsub+0x9a>
    3f00:	220f      	movs	r2, #15
    3f02:	401a      	ands	r2, r3
    3f04:	2a04      	cmp	r2, #4
    3f06:	d000      	beq.n	3f0a <__aeabi_fsub+0x9a>
    3f08:	3304      	adds	r3, #4
    3f0a:	015a      	lsls	r2, r3, #5
    3f0c:	d527      	bpl.n	3f5e <__aeabi_fsub+0xee>
    3f0e:	3401      	adds	r4, #1
    3f10:	2cff      	cmp	r4, #255	; 0xff
    3f12:	d100      	bne.n	3f16 <__aeabi_fsub+0xa6>
    3f14:	e079      	b.n	400a <__aeabi_fsub+0x19a>
    3f16:	2201      	movs	r2, #1
    3f18:	019b      	lsls	r3, r3, #6
    3f1a:	0a5b      	lsrs	r3, r3, #9
    3f1c:	b2e4      	uxtb	r4, r4
    3f1e:	402a      	ands	r2, r5
    3f20:	025b      	lsls	r3, r3, #9
    3f22:	05e4      	lsls	r4, r4, #23
    3f24:	0a58      	lsrs	r0, r3, #9
    3f26:	07d2      	lsls	r2, r2, #31
    3f28:	4320      	orrs	r0, r4
    3f2a:	4310      	orrs	r0, r2
    3f2c:	bc1c      	pop	{r2, r3, r4}
    3f2e:	4690      	mov	r8, r2
    3f30:	4699      	mov	r9, r3
    3f32:	46a2      	mov	sl, r4
    3f34:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3f36:	2cff      	cmp	r4, #255	; 0xff
    3f38:	d0e0      	beq.n	3efc <__aeabi_fsub+0x8c>
    3f3a:	2180      	movs	r1, #128	; 0x80
    3f3c:	04c9      	lsls	r1, r1, #19
    3f3e:	430e      	orrs	r6, r1
    3f40:	2a1b      	cmp	r2, #27
    3f42:	dc7b      	bgt.n	403c <__aeabi_fsub+0x1cc>
    3f44:	0031      	movs	r1, r6
    3f46:	2020      	movs	r0, #32
    3f48:	40d1      	lsrs	r1, r2
    3f4a:	1a82      	subs	r2, r0, r2
    3f4c:	4096      	lsls	r6, r2
    3f4e:	1e72      	subs	r2, r6, #1
    3f50:	4196      	sbcs	r6, r2
    3f52:	430e      	orrs	r6, r1
    3f54:	1b9b      	subs	r3, r3, r6
    3f56:	015a      	lsls	r2, r3, #5
    3f58:	d4ba      	bmi.n	3ed0 <__aeabi_fsub+0x60>
    3f5a:	075a      	lsls	r2, r3, #29
    3f5c:	d1d0      	bne.n	3f00 <__aeabi_fsub+0x90>
    3f5e:	2201      	movs	r2, #1
    3f60:	08df      	lsrs	r7, r3, #3
    3f62:	402a      	ands	r2, r5
    3f64:	2cff      	cmp	r4, #255	; 0xff
    3f66:	d133      	bne.n	3fd0 <__aeabi_fsub+0x160>
    3f68:	2f00      	cmp	r7, #0
    3f6a:	d100      	bne.n	3f6e <__aeabi_fsub+0xfe>
    3f6c:	e0a8      	b.n	40c0 <__aeabi_fsub+0x250>
    3f6e:	2380      	movs	r3, #128	; 0x80
    3f70:	03db      	lsls	r3, r3, #15
    3f72:	433b      	orrs	r3, r7
    3f74:	025b      	lsls	r3, r3, #9
    3f76:	0a5b      	lsrs	r3, r3, #9
    3f78:	24ff      	movs	r4, #255	; 0xff
    3f7a:	e7d1      	b.n	3f20 <__aeabi_fsub+0xb0>
    3f7c:	1a21      	subs	r1, r4, r0
    3f7e:	2900      	cmp	r1, #0
    3f80:	dd4c      	ble.n	401c <__aeabi_fsub+0x1ac>
    3f82:	2800      	cmp	r0, #0
    3f84:	d02a      	beq.n	3fdc <__aeabi_fsub+0x16c>
    3f86:	2cff      	cmp	r4, #255	; 0xff
    3f88:	d0b8      	beq.n	3efc <__aeabi_fsub+0x8c>
    3f8a:	2080      	movs	r0, #128	; 0x80
    3f8c:	04c0      	lsls	r0, r0, #19
    3f8e:	4306      	orrs	r6, r0
    3f90:	291b      	cmp	r1, #27
    3f92:	dd00      	ble.n	3f96 <__aeabi_fsub+0x126>
    3f94:	e0af      	b.n	40f6 <__aeabi_fsub+0x286>
    3f96:	0030      	movs	r0, r6
    3f98:	2720      	movs	r7, #32
    3f9a:	40c8      	lsrs	r0, r1
    3f9c:	1a79      	subs	r1, r7, r1
    3f9e:	408e      	lsls	r6, r1
    3fa0:	1e71      	subs	r1, r6, #1
    3fa2:	418e      	sbcs	r6, r1
    3fa4:	4306      	orrs	r6, r0
    3fa6:	199b      	adds	r3, r3, r6
    3fa8:	0159      	lsls	r1, r3, #5
    3faa:	d5d6      	bpl.n	3f5a <__aeabi_fsub+0xea>
    3fac:	3401      	adds	r4, #1
    3fae:	2cff      	cmp	r4, #255	; 0xff
    3fb0:	d100      	bne.n	3fb4 <__aeabi_fsub+0x144>
    3fb2:	e085      	b.n	40c0 <__aeabi_fsub+0x250>
    3fb4:	2201      	movs	r2, #1
    3fb6:	497a      	ldr	r1, [pc, #488]	; (41a0 <__aeabi_fsub+0x330>)
    3fb8:	401a      	ands	r2, r3
    3fba:	085b      	lsrs	r3, r3, #1
    3fbc:	400b      	ands	r3, r1
    3fbe:	4313      	orrs	r3, r2
    3fc0:	e79c      	b.n	3efc <__aeabi_fsub+0x8c>
    3fc2:	2e00      	cmp	r6, #0
    3fc4:	d000      	beq.n	3fc8 <__aeabi_fsub+0x158>
    3fc6:	e770      	b.n	3eaa <__aeabi_fsub+0x3a>
    3fc8:	e76b      	b.n	3ea2 <__aeabi_fsub+0x32>
    3fca:	1e3b      	subs	r3, r7, #0
    3fcc:	d1c5      	bne.n	3f5a <__aeabi_fsub+0xea>
    3fce:	2200      	movs	r2, #0
    3fd0:	027b      	lsls	r3, r7, #9
    3fd2:	0a5b      	lsrs	r3, r3, #9
    3fd4:	b2e4      	uxtb	r4, r4
    3fd6:	e7a3      	b.n	3f20 <__aeabi_fsub+0xb0>
    3fd8:	0014      	movs	r4, r2
    3fda:	e78f      	b.n	3efc <__aeabi_fsub+0x8c>
    3fdc:	2e00      	cmp	r6, #0
    3fde:	d04d      	beq.n	407c <__aeabi_fsub+0x20c>
    3fe0:	1e48      	subs	r0, r1, #1
    3fe2:	2800      	cmp	r0, #0
    3fe4:	d157      	bne.n	4096 <__aeabi_fsub+0x226>
    3fe6:	199b      	adds	r3, r3, r6
    3fe8:	2401      	movs	r4, #1
    3fea:	015a      	lsls	r2, r3, #5
    3fec:	d5b5      	bpl.n	3f5a <__aeabi_fsub+0xea>
    3fee:	2402      	movs	r4, #2
    3ff0:	e7e0      	b.n	3fb4 <__aeabi_fsub+0x144>
    3ff2:	2a00      	cmp	r2, #0
    3ff4:	d125      	bne.n	4042 <__aeabi_fsub+0x1d2>
    3ff6:	1c62      	adds	r2, r4, #1
    3ff8:	b2d2      	uxtb	r2, r2
    3ffa:	2a01      	cmp	r2, #1
    3ffc:	dd72      	ble.n	40e4 <__aeabi_fsub+0x274>
    3ffe:	1b9f      	subs	r7, r3, r6
    4000:	017a      	lsls	r2, r7, #5
    4002:	d535      	bpl.n	4070 <__aeabi_fsub+0x200>
    4004:	1af7      	subs	r7, r6, r3
    4006:	000d      	movs	r5, r1
    4008:	e764      	b.n	3ed4 <__aeabi_fsub+0x64>
    400a:	2201      	movs	r2, #1
    400c:	2300      	movs	r3, #0
    400e:	402a      	ands	r2, r5
    4010:	e786      	b.n	3f20 <__aeabi_fsub+0xb0>
    4012:	003b      	movs	r3, r7
    4014:	4a63      	ldr	r2, [pc, #396]	; (41a4 <__aeabi_fsub+0x334>)
    4016:	1a24      	subs	r4, r4, r0
    4018:	4013      	ands	r3, r2
    401a:	e76f      	b.n	3efc <__aeabi_fsub+0x8c>
    401c:	2900      	cmp	r1, #0
    401e:	d16c      	bne.n	40fa <__aeabi_fsub+0x28a>
    4020:	1c61      	adds	r1, r4, #1
    4022:	b2c8      	uxtb	r0, r1
    4024:	2801      	cmp	r0, #1
    4026:	dd4e      	ble.n	40c6 <__aeabi_fsub+0x256>
    4028:	29ff      	cmp	r1, #255	; 0xff
    402a:	d049      	beq.n	40c0 <__aeabi_fsub+0x250>
    402c:	199b      	adds	r3, r3, r6
    402e:	085b      	lsrs	r3, r3, #1
    4030:	000c      	movs	r4, r1
    4032:	e763      	b.n	3efc <__aeabi_fsub+0x8c>
    4034:	2aff      	cmp	r2, #255	; 0xff
    4036:	d041      	beq.n	40bc <__aeabi_fsub+0x24c>
    4038:	000a      	movs	r2, r1
    403a:	e781      	b.n	3f40 <__aeabi_fsub+0xd0>
    403c:	2601      	movs	r6, #1
    403e:	1b9b      	subs	r3, r3, r6
    4040:	e789      	b.n	3f56 <__aeabi_fsub+0xe6>
    4042:	2c00      	cmp	r4, #0
    4044:	d01c      	beq.n	4080 <__aeabi_fsub+0x210>
    4046:	28ff      	cmp	r0, #255	; 0xff
    4048:	d021      	beq.n	408e <__aeabi_fsub+0x21e>
    404a:	2480      	movs	r4, #128	; 0x80
    404c:	04e4      	lsls	r4, r4, #19
    404e:	4252      	negs	r2, r2
    4050:	4323      	orrs	r3, r4
    4052:	2a1b      	cmp	r2, #27
    4054:	dd00      	ble.n	4058 <__aeabi_fsub+0x1e8>
    4056:	e096      	b.n	4186 <__aeabi_fsub+0x316>
    4058:	001c      	movs	r4, r3
    405a:	2520      	movs	r5, #32
    405c:	40d4      	lsrs	r4, r2
    405e:	1aaa      	subs	r2, r5, r2
    4060:	4093      	lsls	r3, r2
    4062:	1e5a      	subs	r2, r3, #1
    4064:	4193      	sbcs	r3, r2
    4066:	4323      	orrs	r3, r4
    4068:	1af3      	subs	r3, r6, r3
    406a:	0004      	movs	r4, r0
    406c:	000d      	movs	r5, r1
    406e:	e72d      	b.n	3ecc <__aeabi_fsub+0x5c>
    4070:	2f00      	cmp	r7, #0
    4072:	d000      	beq.n	4076 <__aeabi_fsub+0x206>
    4074:	e72e      	b.n	3ed4 <__aeabi_fsub+0x64>
    4076:	2200      	movs	r2, #0
    4078:	2400      	movs	r4, #0
    407a:	e7a9      	b.n	3fd0 <__aeabi_fsub+0x160>
    407c:	000c      	movs	r4, r1
    407e:	e73d      	b.n	3efc <__aeabi_fsub+0x8c>
    4080:	2b00      	cmp	r3, #0
    4082:	d058      	beq.n	4136 <__aeabi_fsub+0x2c6>
    4084:	43d2      	mvns	r2, r2
    4086:	2a00      	cmp	r2, #0
    4088:	d0ee      	beq.n	4068 <__aeabi_fsub+0x1f8>
    408a:	28ff      	cmp	r0, #255	; 0xff
    408c:	d1e1      	bne.n	4052 <__aeabi_fsub+0x1e2>
    408e:	0033      	movs	r3, r6
    4090:	24ff      	movs	r4, #255	; 0xff
    4092:	000d      	movs	r5, r1
    4094:	e732      	b.n	3efc <__aeabi_fsub+0x8c>
    4096:	29ff      	cmp	r1, #255	; 0xff
    4098:	d010      	beq.n	40bc <__aeabi_fsub+0x24c>
    409a:	0001      	movs	r1, r0
    409c:	e778      	b.n	3f90 <__aeabi_fsub+0x120>
    409e:	2b00      	cmp	r3, #0
    40a0:	d06e      	beq.n	4180 <__aeabi_fsub+0x310>
    40a2:	24ff      	movs	r4, #255	; 0xff
    40a4:	2e00      	cmp	r6, #0
    40a6:	d100      	bne.n	40aa <__aeabi_fsub+0x23a>
    40a8:	e728      	b.n	3efc <__aeabi_fsub+0x8c>
    40aa:	2280      	movs	r2, #128	; 0x80
    40ac:	4651      	mov	r1, sl
    40ae:	03d2      	lsls	r2, r2, #15
    40b0:	4211      	tst	r1, r2
    40b2:	d003      	beq.n	40bc <__aeabi_fsub+0x24c>
    40b4:	4661      	mov	r1, ip
    40b6:	4211      	tst	r1, r2
    40b8:	d100      	bne.n	40bc <__aeabi_fsub+0x24c>
    40ba:	0033      	movs	r3, r6
    40bc:	24ff      	movs	r4, #255	; 0xff
    40be:	e71d      	b.n	3efc <__aeabi_fsub+0x8c>
    40c0:	24ff      	movs	r4, #255	; 0xff
    40c2:	2300      	movs	r3, #0
    40c4:	e72c      	b.n	3f20 <__aeabi_fsub+0xb0>
    40c6:	2c00      	cmp	r4, #0
    40c8:	d1e9      	bne.n	409e <__aeabi_fsub+0x22e>
    40ca:	2b00      	cmp	r3, #0
    40cc:	d063      	beq.n	4196 <__aeabi_fsub+0x326>
    40ce:	2e00      	cmp	r6, #0
    40d0:	d100      	bne.n	40d4 <__aeabi_fsub+0x264>
    40d2:	e713      	b.n	3efc <__aeabi_fsub+0x8c>
    40d4:	199b      	adds	r3, r3, r6
    40d6:	015a      	lsls	r2, r3, #5
    40d8:	d400      	bmi.n	40dc <__aeabi_fsub+0x26c>
    40da:	e73e      	b.n	3f5a <__aeabi_fsub+0xea>
    40dc:	4a31      	ldr	r2, [pc, #196]	; (41a4 <__aeabi_fsub+0x334>)
    40de:	000c      	movs	r4, r1
    40e0:	4013      	ands	r3, r2
    40e2:	e70b      	b.n	3efc <__aeabi_fsub+0x8c>
    40e4:	2c00      	cmp	r4, #0
    40e6:	d11e      	bne.n	4126 <__aeabi_fsub+0x2b6>
    40e8:	2b00      	cmp	r3, #0
    40ea:	d12f      	bne.n	414c <__aeabi_fsub+0x2dc>
    40ec:	2e00      	cmp	r6, #0
    40ee:	d04f      	beq.n	4190 <__aeabi_fsub+0x320>
    40f0:	0033      	movs	r3, r6
    40f2:	000d      	movs	r5, r1
    40f4:	e702      	b.n	3efc <__aeabi_fsub+0x8c>
    40f6:	2601      	movs	r6, #1
    40f8:	e755      	b.n	3fa6 <__aeabi_fsub+0x136>
    40fa:	2c00      	cmp	r4, #0
    40fc:	d11f      	bne.n	413e <__aeabi_fsub+0x2ce>
    40fe:	2b00      	cmp	r3, #0
    4100:	d043      	beq.n	418a <__aeabi_fsub+0x31a>
    4102:	43c9      	mvns	r1, r1
    4104:	2900      	cmp	r1, #0
    4106:	d00b      	beq.n	4120 <__aeabi_fsub+0x2b0>
    4108:	28ff      	cmp	r0, #255	; 0xff
    410a:	d039      	beq.n	4180 <__aeabi_fsub+0x310>
    410c:	291b      	cmp	r1, #27
    410e:	dc44      	bgt.n	419a <__aeabi_fsub+0x32a>
    4110:	001c      	movs	r4, r3
    4112:	2720      	movs	r7, #32
    4114:	40cc      	lsrs	r4, r1
    4116:	1a79      	subs	r1, r7, r1
    4118:	408b      	lsls	r3, r1
    411a:	1e59      	subs	r1, r3, #1
    411c:	418b      	sbcs	r3, r1
    411e:	4323      	orrs	r3, r4
    4120:	199b      	adds	r3, r3, r6
    4122:	0004      	movs	r4, r0
    4124:	e740      	b.n	3fa8 <__aeabi_fsub+0x138>
    4126:	2b00      	cmp	r3, #0
    4128:	d11a      	bne.n	4160 <__aeabi_fsub+0x2f0>
    412a:	2e00      	cmp	r6, #0
    412c:	d124      	bne.n	4178 <__aeabi_fsub+0x308>
    412e:	2780      	movs	r7, #128	; 0x80
    4130:	2200      	movs	r2, #0
    4132:	03ff      	lsls	r7, r7, #15
    4134:	e71b      	b.n	3f6e <__aeabi_fsub+0xfe>
    4136:	0033      	movs	r3, r6
    4138:	0004      	movs	r4, r0
    413a:	000d      	movs	r5, r1
    413c:	e6de      	b.n	3efc <__aeabi_fsub+0x8c>
    413e:	28ff      	cmp	r0, #255	; 0xff
    4140:	d01e      	beq.n	4180 <__aeabi_fsub+0x310>
    4142:	2480      	movs	r4, #128	; 0x80
    4144:	04e4      	lsls	r4, r4, #19
    4146:	4249      	negs	r1, r1
    4148:	4323      	orrs	r3, r4
    414a:	e7df      	b.n	410c <__aeabi_fsub+0x29c>
    414c:	2e00      	cmp	r6, #0
    414e:	d100      	bne.n	4152 <__aeabi_fsub+0x2e2>
    4150:	e6d4      	b.n	3efc <__aeabi_fsub+0x8c>
    4152:	1b9f      	subs	r7, r3, r6
    4154:	017a      	lsls	r2, r7, #5
    4156:	d400      	bmi.n	415a <__aeabi_fsub+0x2ea>
    4158:	e737      	b.n	3fca <__aeabi_fsub+0x15a>
    415a:	1af3      	subs	r3, r6, r3
    415c:	000d      	movs	r5, r1
    415e:	e6cd      	b.n	3efc <__aeabi_fsub+0x8c>
    4160:	24ff      	movs	r4, #255	; 0xff
    4162:	2e00      	cmp	r6, #0
    4164:	d100      	bne.n	4168 <__aeabi_fsub+0x2f8>
    4166:	e6c9      	b.n	3efc <__aeabi_fsub+0x8c>
    4168:	2280      	movs	r2, #128	; 0x80
    416a:	4650      	mov	r0, sl
    416c:	03d2      	lsls	r2, r2, #15
    416e:	4210      	tst	r0, r2
    4170:	d0a4      	beq.n	40bc <__aeabi_fsub+0x24c>
    4172:	4660      	mov	r0, ip
    4174:	4210      	tst	r0, r2
    4176:	d1a1      	bne.n	40bc <__aeabi_fsub+0x24c>
    4178:	0033      	movs	r3, r6
    417a:	000d      	movs	r5, r1
    417c:	24ff      	movs	r4, #255	; 0xff
    417e:	e6bd      	b.n	3efc <__aeabi_fsub+0x8c>
    4180:	0033      	movs	r3, r6
    4182:	24ff      	movs	r4, #255	; 0xff
    4184:	e6ba      	b.n	3efc <__aeabi_fsub+0x8c>
    4186:	2301      	movs	r3, #1
    4188:	e76e      	b.n	4068 <__aeabi_fsub+0x1f8>
    418a:	0033      	movs	r3, r6
    418c:	0004      	movs	r4, r0
    418e:	e6b5      	b.n	3efc <__aeabi_fsub+0x8c>
    4190:	2700      	movs	r7, #0
    4192:	2200      	movs	r2, #0
    4194:	e71c      	b.n	3fd0 <__aeabi_fsub+0x160>
    4196:	0033      	movs	r3, r6
    4198:	e6b0      	b.n	3efc <__aeabi_fsub+0x8c>
    419a:	2301      	movs	r3, #1
    419c:	e7c0      	b.n	4120 <__aeabi_fsub+0x2b0>
    419e:	46c0      	nop			; (mov r8, r8)
    41a0:	7dffffff 	.word	0x7dffffff
    41a4:	fbffffff 	.word	0xfbffffff

000041a8 <__aeabi_f2iz>:
    41a8:	0241      	lsls	r1, r0, #9
    41aa:	0043      	lsls	r3, r0, #1
    41ac:	0fc2      	lsrs	r2, r0, #31
    41ae:	0a49      	lsrs	r1, r1, #9
    41b0:	0e1b      	lsrs	r3, r3, #24
    41b2:	2000      	movs	r0, #0
    41b4:	2b7e      	cmp	r3, #126	; 0x7e
    41b6:	dd0d      	ble.n	41d4 <__aeabi_f2iz+0x2c>
    41b8:	2b9d      	cmp	r3, #157	; 0x9d
    41ba:	dc0c      	bgt.n	41d6 <__aeabi_f2iz+0x2e>
    41bc:	2080      	movs	r0, #128	; 0x80
    41be:	0400      	lsls	r0, r0, #16
    41c0:	4301      	orrs	r1, r0
    41c2:	2b95      	cmp	r3, #149	; 0x95
    41c4:	dc0a      	bgt.n	41dc <__aeabi_f2iz+0x34>
    41c6:	2096      	movs	r0, #150	; 0x96
    41c8:	1ac3      	subs	r3, r0, r3
    41ca:	40d9      	lsrs	r1, r3
    41cc:	4248      	negs	r0, r1
    41ce:	2a00      	cmp	r2, #0
    41d0:	d100      	bne.n	41d4 <__aeabi_f2iz+0x2c>
    41d2:	0008      	movs	r0, r1
    41d4:	4770      	bx	lr
    41d6:	4b03      	ldr	r3, [pc, #12]	; (41e4 <__aeabi_f2iz+0x3c>)
    41d8:	18d0      	adds	r0, r2, r3
    41da:	e7fb      	b.n	41d4 <__aeabi_f2iz+0x2c>
    41dc:	3b96      	subs	r3, #150	; 0x96
    41de:	4099      	lsls	r1, r3
    41e0:	e7f4      	b.n	41cc <__aeabi_f2iz+0x24>
    41e2:	46c0      	nop			; (mov r8, r8)
    41e4:	7fffffff 	.word	0x7fffffff

000041e8 <__aeabi_i2f>:
    41e8:	b570      	push	{r4, r5, r6, lr}
    41ea:	2800      	cmp	r0, #0
    41ec:	d030      	beq.n	4250 <__aeabi_i2f+0x68>
    41ee:	17c3      	asrs	r3, r0, #31
    41f0:	18c4      	adds	r4, r0, r3
    41f2:	405c      	eors	r4, r3
    41f4:	0fc5      	lsrs	r5, r0, #31
    41f6:	0020      	movs	r0, r4
    41f8:	f001 ff56 	bl	60a8 <__clzsi2>
    41fc:	239e      	movs	r3, #158	; 0x9e
    41fe:	1a1b      	subs	r3, r3, r0
    4200:	2b96      	cmp	r3, #150	; 0x96
    4202:	dc0d      	bgt.n	4220 <__aeabi_i2f+0x38>
    4204:	2296      	movs	r2, #150	; 0x96
    4206:	1ad2      	subs	r2, r2, r3
    4208:	4094      	lsls	r4, r2
    420a:	002a      	movs	r2, r5
    420c:	0264      	lsls	r4, r4, #9
    420e:	0a64      	lsrs	r4, r4, #9
    4210:	b2db      	uxtb	r3, r3
    4212:	0264      	lsls	r4, r4, #9
    4214:	05db      	lsls	r3, r3, #23
    4216:	0a60      	lsrs	r0, r4, #9
    4218:	07d2      	lsls	r2, r2, #31
    421a:	4318      	orrs	r0, r3
    421c:	4310      	orrs	r0, r2
    421e:	bd70      	pop	{r4, r5, r6, pc}
    4220:	2b99      	cmp	r3, #153	; 0x99
    4222:	dc19      	bgt.n	4258 <__aeabi_i2f+0x70>
    4224:	2299      	movs	r2, #153	; 0x99
    4226:	1ad2      	subs	r2, r2, r3
    4228:	2a00      	cmp	r2, #0
    422a:	dd29      	ble.n	4280 <__aeabi_i2f+0x98>
    422c:	4094      	lsls	r4, r2
    422e:	0022      	movs	r2, r4
    4230:	4c14      	ldr	r4, [pc, #80]	; (4284 <__aeabi_i2f+0x9c>)
    4232:	4014      	ands	r4, r2
    4234:	0751      	lsls	r1, r2, #29
    4236:	d004      	beq.n	4242 <__aeabi_i2f+0x5a>
    4238:	210f      	movs	r1, #15
    423a:	400a      	ands	r2, r1
    423c:	2a04      	cmp	r2, #4
    423e:	d000      	beq.n	4242 <__aeabi_i2f+0x5a>
    4240:	3404      	adds	r4, #4
    4242:	0162      	lsls	r2, r4, #5
    4244:	d413      	bmi.n	426e <__aeabi_i2f+0x86>
    4246:	01a4      	lsls	r4, r4, #6
    4248:	0a64      	lsrs	r4, r4, #9
    424a:	b2db      	uxtb	r3, r3
    424c:	002a      	movs	r2, r5
    424e:	e7e0      	b.n	4212 <__aeabi_i2f+0x2a>
    4250:	2200      	movs	r2, #0
    4252:	2300      	movs	r3, #0
    4254:	2400      	movs	r4, #0
    4256:	e7dc      	b.n	4212 <__aeabi_i2f+0x2a>
    4258:	2205      	movs	r2, #5
    425a:	0021      	movs	r1, r4
    425c:	1a12      	subs	r2, r2, r0
    425e:	40d1      	lsrs	r1, r2
    4260:	22b9      	movs	r2, #185	; 0xb9
    4262:	1ad2      	subs	r2, r2, r3
    4264:	4094      	lsls	r4, r2
    4266:	1e62      	subs	r2, r4, #1
    4268:	4194      	sbcs	r4, r2
    426a:	430c      	orrs	r4, r1
    426c:	e7da      	b.n	4224 <__aeabi_i2f+0x3c>
    426e:	4b05      	ldr	r3, [pc, #20]	; (4284 <__aeabi_i2f+0x9c>)
    4270:	002a      	movs	r2, r5
    4272:	401c      	ands	r4, r3
    4274:	239f      	movs	r3, #159	; 0x9f
    4276:	01a4      	lsls	r4, r4, #6
    4278:	1a1b      	subs	r3, r3, r0
    427a:	0a64      	lsrs	r4, r4, #9
    427c:	b2db      	uxtb	r3, r3
    427e:	e7c8      	b.n	4212 <__aeabi_i2f+0x2a>
    4280:	0022      	movs	r2, r4
    4282:	e7d5      	b.n	4230 <__aeabi_i2f+0x48>
    4284:	fbffffff 	.word	0xfbffffff

00004288 <__aeabi_dadd>:
    4288:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    428a:	4645      	mov	r5, r8
    428c:	46de      	mov	lr, fp
    428e:	4657      	mov	r7, sl
    4290:	464e      	mov	r6, r9
    4292:	030c      	lsls	r4, r1, #12
    4294:	b5e0      	push	{r5, r6, r7, lr}
    4296:	004e      	lsls	r6, r1, #1
    4298:	0fc9      	lsrs	r1, r1, #31
    429a:	4688      	mov	r8, r1
    429c:	000d      	movs	r5, r1
    429e:	0a61      	lsrs	r1, r4, #9
    42a0:	0f44      	lsrs	r4, r0, #29
    42a2:	430c      	orrs	r4, r1
    42a4:	00c7      	lsls	r7, r0, #3
    42a6:	0319      	lsls	r1, r3, #12
    42a8:	0058      	lsls	r0, r3, #1
    42aa:	0fdb      	lsrs	r3, r3, #31
    42ac:	469b      	mov	fp, r3
    42ae:	0a4b      	lsrs	r3, r1, #9
    42b0:	0f51      	lsrs	r1, r2, #29
    42b2:	430b      	orrs	r3, r1
    42b4:	0d76      	lsrs	r6, r6, #21
    42b6:	0d40      	lsrs	r0, r0, #21
    42b8:	0019      	movs	r1, r3
    42ba:	00d2      	lsls	r2, r2, #3
    42bc:	45d8      	cmp	r8, fp
    42be:	d100      	bne.n	42c2 <__aeabi_dadd+0x3a>
    42c0:	e0ae      	b.n	4420 <__aeabi_dadd+0x198>
    42c2:	1a35      	subs	r5, r6, r0
    42c4:	2d00      	cmp	r5, #0
    42c6:	dc00      	bgt.n	42ca <__aeabi_dadd+0x42>
    42c8:	e0f6      	b.n	44b8 <__aeabi_dadd+0x230>
    42ca:	2800      	cmp	r0, #0
    42cc:	d10f      	bne.n	42ee <__aeabi_dadd+0x66>
    42ce:	4313      	orrs	r3, r2
    42d0:	d100      	bne.n	42d4 <__aeabi_dadd+0x4c>
    42d2:	e0db      	b.n	448c <__aeabi_dadd+0x204>
    42d4:	1e6b      	subs	r3, r5, #1
    42d6:	2b00      	cmp	r3, #0
    42d8:	d000      	beq.n	42dc <__aeabi_dadd+0x54>
    42da:	e137      	b.n	454c <__aeabi_dadd+0x2c4>
    42dc:	1aba      	subs	r2, r7, r2
    42de:	4297      	cmp	r7, r2
    42e0:	41bf      	sbcs	r7, r7
    42e2:	1a64      	subs	r4, r4, r1
    42e4:	427f      	negs	r7, r7
    42e6:	1be4      	subs	r4, r4, r7
    42e8:	2601      	movs	r6, #1
    42ea:	0017      	movs	r7, r2
    42ec:	e024      	b.n	4338 <__aeabi_dadd+0xb0>
    42ee:	4bc6      	ldr	r3, [pc, #792]	; (4608 <__aeabi_dadd+0x380>)
    42f0:	429e      	cmp	r6, r3
    42f2:	d04d      	beq.n	4390 <__aeabi_dadd+0x108>
    42f4:	2380      	movs	r3, #128	; 0x80
    42f6:	041b      	lsls	r3, r3, #16
    42f8:	4319      	orrs	r1, r3
    42fa:	2d38      	cmp	r5, #56	; 0x38
    42fc:	dd00      	ble.n	4300 <__aeabi_dadd+0x78>
    42fe:	e107      	b.n	4510 <__aeabi_dadd+0x288>
    4300:	2d1f      	cmp	r5, #31
    4302:	dd00      	ble.n	4306 <__aeabi_dadd+0x7e>
    4304:	e138      	b.n	4578 <__aeabi_dadd+0x2f0>
    4306:	2020      	movs	r0, #32
    4308:	1b43      	subs	r3, r0, r5
    430a:	469a      	mov	sl, r3
    430c:	000b      	movs	r3, r1
    430e:	4650      	mov	r0, sl
    4310:	4083      	lsls	r3, r0
    4312:	4699      	mov	r9, r3
    4314:	0013      	movs	r3, r2
    4316:	4648      	mov	r0, r9
    4318:	40eb      	lsrs	r3, r5
    431a:	4318      	orrs	r0, r3
    431c:	0003      	movs	r3, r0
    431e:	4650      	mov	r0, sl
    4320:	4082      	lsls	r2, r0
    4322:	1e50      	subs	r0, r2, #1
    4324:	4182      	sbcs	r2, r0
    4326:	40e9      	lsrs	r1, r5
    4328:	431a      	orrs	r2, r3
    432a:	1aba      	subs	r2, r7, r2
    432c:	1a61      	subs	r1, r4, r1
    432e:	4297      	cmp	r7, r2
    4330:	41a4      	sbcs	r4, r4
    4332:	0017      	movs	r7, r2
    4334:	4264      	negs	r4, r4
    4336:	1b0c      	subs	r4, r1, r4
    4338:	0223      	lsls	r3, r4, #8
    433a:	d562      	bpl.n	4402 <__aeabi_dadd+0x17a>
    433c:	0264      	lsls	r4, r4, #9
    433e:	0a65      	lsrs	r5, r4, #9
    4340:	2d00      	cmp	r5, #0
    4342:	d100      	bne.n	4346 <__aeabi_dadd+0xbe>
    4344:	e0df      	b.n	4506 <__aeabi_dadd+0x27e>
    4346:	0028      	movs	r0, r5
    4348:	f001 feae 	bl	60a8 <__clzsi2>
    434c:	0003      	movs	r3, r0
    434e:	3b08      	subs	r3, #8
    4350:	2b1f      	cmp	r3, #31
    4352:	dd00      	ble.n	4356 <__aeabi_dadd+0xce>
    4354:	e0d2      	b.n	44fc <__aeabi_dadd+0x274>
    4356:	2220      	movs	r2, #32
    4358:	003c      	movs	r4, r7
    435a:	1ad2      	subs	r2, r2, r3
    435c:	409d      	lsls	r5, r3
    435e:	40d4      	lsrs	r4, r2
    4360:	409f      	lsls	r7, r3
    4362:	4325      	orrs	r5, r4
    4364:	429e      	cmp	r6, r3
    4366:	dd00      	ble.n	436a <__aeabi_dadd+0xe2>
    4368:	e0c4      	b.n	44f4 <__aeabi_dadd+0x26c>
    436a:	1b9e      	subs	r6, r3, r6
    436c:	1c73      	adds	r3, r6, #1
    436e:	2b1f      	cmp	r3, #31
    4370:	dd00      	ble.n	4374 <__aeabi_dadd+0xec>
    4372:	e0f1      	b.n	4558 <__aeabi_dadd+0x2d0>
    4374:	2220      	movs	r2, #32
    4376:	0038      	movs	r0, r7
    4378:	0029      	movs	r1, r5
    437a:	1ad2      	subs	r2, r2, r3
    437c:	40d8      	lsrs	r0, r3
    437e:	4091      	lsls	r1, r2
    4380:	4097      	lsls	r7, r2
    4382:	002c      	movs	r4, r5
    4384:	4301      	orrs	r1, r0
    4386:	1e78      	subs	r0, r7, #1
    4388:	4187      	sbcs	r7, r0
    438a:	40dc      	lsrs	r4, r3
    438c:	2600      	movs	r6, #0
    438e:	430f      	orrs	r7, r1
    4390:	077b      	lsls	r3, r7, #29
    4392:	d009      	beq.n	43a8 <__aeabi_dadd+0x120>
    4394:	230f      	movs	r3, #15
    4396:	403b      	ands	r3, r7
    4398:	2b04      	cmp	r3, #4
    439a:	d005      	beq.n	43a8 <__aeabi_dadd+0x120>
    439c:	1d3b      	adds	r3, r7, #4
    439e:	42bb      	cmp	r3, r7
    43a0:	41bf      	sbcs	r7, r7
    43a2:	427f      	negs	r7, r7
    43a4:	19e4      	adds	r4, r4, r7
    43a6:	001f      	movs	r7, r3
    43a8:	0223      	lsls	r3, r4, #8
    43aa:	d52c      	bpl.n	4406 <__aeabi_dadd+0x17e>
    43ac:	4b96      	ldr	r3, [pc, #600]	; (4608 <__aeabi_dadd+0x380>)
    43ae:	3601      	adds	r6, #1
    43b0:	429e      	cmp	r6, r3
    43b2:	d100      	bne.n	43b6 <__aeabi_dadd+0x12e>
    43b4:	e09a      	b.n	44ec <__aeabi_dadd+0x264>
    43b6:	4645      	mov	r5, r8
    43b8:	4b94      	ldr	r3, [pc, #592]	; (460c <__aeabi_dadd+0x384>)
    43ba:	08ff      	lsrs	r7, r7, #3
    43bc:	401c      	ands	r4, r3
    43be:	0760      	lsls	r0, r4, #29
    43c0:	0576      	lsls	r6, r6, #21
    43c2:	0264      	lsls	r4, r4, #9
    43c4:	4307      	orrs	r7, r0
    43c6:	0b24      	lsrs	r4, r4, #12
    43c8:	0d76      	lsrs	r6, r6, #21
    43ca:	2100      	movs	r1, #0
    43cc:	0324      	lsls	r4, r4, #12
    43ce:	0b23      	lsrs	r3, r4, #12
    43d0:	0d0c      	lsrs	r4, r1, #20
    43d2:	4a8f      	ldr	r2, [pc, #572]	; (4610 <__aeabi_dadd+0x388>)
    43d4:	0524      	lsls	r4, r4, #20
    43d6:	431c      	orrs	r4, r3
    43d8:	4014      	ands	r4, r2
    43da:	0533      	lsls	r3, r6, #20
    43dc:	4323      	orrs	r3, r4
    43de:	005b      	lsls	r3, r3, #1
    43e0:	07ed      	lsls	r5, r5, #31
    43e2:	085b      	lsrs	r3, r3, #1
    43e4:	432b      	orrs	r3, r5
    43e6:	0038      	movs	r0, r7
    43e8:	0019      	movs	r1, r3
    43ea:	bc3c      	pop	{r2, r3, r4, r5}
    43ec:	4690      	mov	r8, r2
    43ee:	4699      	mov	r9, r3
    43f0:	46a2      	mov	sl, r4
    43f2:	46ab      	mov	fp, r5
    43f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    43f6:	4664      	mov	r4, ip
    43f8:	4304      	orrs	r4, r0
    43fa:	d100      	bne.n	43fe <__aeabi_dadd+0x176>
    43fc:	e211      	b.n	4822 <__aeabi_dadd+0x59a>
    43fe:	0004      	movs	r4, r0
    4400:	4667      	mov	r7, ip
    4402:	077b      	lsls	r3, r7, #29
    4404:	d1c6      	bne.n	4394 <__aeabi_dadd+0x10c>
    4406:	4645      	mov	r5, r8
    4408:	0760      	lsls	r0, r4, #29
    440a:	08ff      	lsrs	r7, r7, #3
    440c:	4307      	orrs	r7, r0
    440e:	08e4      	lsrs	r4, r4, #3
    4410:	4b7d      	ldr	r3, [pc, #500]	; (4608 <__aeabi_dadd+0x380>)
    4412:	429e      	cmp	r6, r3
    4414:	d030      	beq.n	4478 <__aeabi_dadd+0x1f0>
    4416:	0324      	lsls	r4, r4, #12
    4418:	0576      	lsls	r6, r6, #21
    441a:	0b24      	lsrs	r4, r4, #12
    441c:	0d76      	lsrs	r6, r6, #21
    441e:	e7d4      	b.n	43ca <__aeabi_dadd+0x142>
    4420:	1a33      	subs	r3, r6, r0
    4422:	469a      	mov	sl, r3
    4424:	2b00      	cmp	r3, #0
    4426:	dd78      	ble.n	451a <__aeabi_dadd+0x292>
    4428:	2800      	cmp	r0, #0
    442a:	d031      	beq.n	4490 <__aeabi_dadd+0x208>
    442c:	4876      	ldr	r0, [pc, #472]	; (4608 <__aeabi_dadd+0x380>)
    442e:	4286      	cmp	r6, r0
    4430:	d0ae      	beq.n	4390 <__aeabi_dadd+0x108>
    4432:	2080      	movs	r0, #128	; 0x80
    4434:	0400      	lsls	r0, r0, #16
    4436:	4301      	orrs	r1, r0
    4438:	4653      	mov	r3, sl
    443a:	2b38      	cmp	r3, #56	; 0x38
    443c:	dc00      	bgt.n	4440 <__aeabi_dadd+0x1b8>
    443e:	e0e9      	b.n	4614 <__aeabi_dadd+0x38c>
    4440:	430a      	orrs	r2, r1
    4442:	1e51      	subs	r1, r2, #1
    4444:	418a      	sbcs	r2, r1
    4446:	2100      	movs	r1, #0
    4448:	19d2      	adds	r2, r2, r7
    444a:	42ba      	cmp	r2, r7
    444c:	41bf      	sbcs	r7, r7
    444e:	1909      	adds	r1, r1, r4
    4450:	427c      	negs	r4, r7
    4452:	0017      	movs	r7, r2
    4454:	190c      	adds	r4, r1, r4
    4456:	0223      	lsls	r3, r4, #8
    4458:	d5d3      	bpl.n	4402 <__aeabi_dadd+0x17a>
    445a:	4b6b      	ldr	r3, [pc, #428]	; (4608 <__aeabi_dadd+0x380>)
    445c:	3601      	adds	r6, #1
    445e:	429e      	cmp	r6, r3
    4460:	d100      	bne.n	4464 <__aeabi_dadd+0x1dc>
    4462:	e13a      	b.n	46da <__aeabi_dadd+0x452>
    4464:	2001      	movs	r0, #1
    4466:	4b69      	ldr	r3, [pc, #420]	; (460c <__aeabi_dadd+0x384>)
    4468:	401c      	ands	r4, r3
    446a:	087b      	lsrs	r3, r7, #1
    446c:	4007      	ands	r7, r0
    446e:	431f      	orrs	r7, r3
    4470:	07e0      	lsls	r0, r4, #31
    4472:	4307      	orrs	r7, r0
    4474:	0864      	lsrs	r4, r4, #1
    4476:	e78b      	b.n	4390 <__aeabi_dadd+0x108>
    4478:	0023      	movs	r3, r4
    447a:	433b      	orrs	r3, r7
    447c:	d100      	bne.n	4480 <__aeabi_dadd+0x1f8>
    447e:	e1cb      	b.n	4818 <__aeabi_dadd+0x590>
    4480:	2280      	movs	r2, #128	; 0x80
    4482:	0312      	lsls	r2, r2, #12
    4484:	4314      	orrs	r4, r2
    4486:	0324      	lsls	r4, r4, #12
    4488:	0b24      	lsrs	r4, r4, #12
    448a:	e79e      	b.n	43ca <__aeabi_dadd+0x142>
    448c:	002e      	movs	r6, r5
    448e:	e77f      	b.n	4390 <__aeabi_dadd+0x108>
    4490:	0008      	movs	r0, r1
    4492:	4310      	orrs	r0, r2
    4494:	d100      	bne.n	4498 <__aeabi_dadd+0x210>
    4496:	e0b4      	b.n	4602 <__aeabi_dadd+0x37a>
    4498:	1e58      	subs	r0, r3, #1
    449a:	2800      	cmp	r0, #0
    449c:	d000      	beq.n	44a0 <__aeabi_dadd+0x218>
    449e:	e0de      	b.n	465e <__aeabi_dadd+0x3d6>
    44a0:	18ba      	adds	r2, r7, r2
    44a2:	42ba      	cmp	r2, r7
    44a4:	419b      	sbcs	r3, r3
    44a6:	1864      	adds	r4, r4, r1
    44a8:	425b      	negs	r3, r3
    44aa:	18e4      	adds	r4, r4, r3
    44ac:	0017      	movs	r7, r2
    44ae:	2601      	movs	r6, #1
    44b0:	0223      	lsls	r3, r4, #8
    44b2:	d5a6      	bpl.n	4402 <__aeabi_dadd+0x17a>
    44b4:	2602      	movs	r6, #2
    44b6:	e7d5      	b.n	4464 <__aeabi_dadd+0x1dc>
    44b8:	2d00      	cmp	r5, #0
    44ba:	d16e      	bne.n	459a <__aeabi_dadd+0x312>
    44bc:	1c70      	adds	r0, r6, #1
    44be:	0540      	lsls	r0, r0, #21
    44c0:	0d40      	lsrs	r0, r0, #21
    44c2:	2801      	cmp	r0, #1
    44c4:	dc00      	bgt.n	44c8 <__aeabi_dadd+0x240>
    44c6:	e0f9      	b.n	46bc <__aeabi_dadd+0x434>
    44c8:	1ab8      	subs	r0, r7, r2
    44ca:	4684      	mov	ip, r0
    44cc:	4287      	cmp	r7, r0
    44ce:	4180      	sbcs	r0, r0
    44d0:	1ae5      	subs	r5, r4, r3
    44d2:	4240      	negs	r0, r0
    44d4:	1a2d      	subs	r5, r5, r0
    44d6:	0228      	lsls	r0, r5, #8
    44d8:	d400      	bmi.n	44dc <__aeabi_dadd+0x254>
    44da:	e089      	b.n	45f0 <__aeabi_dadd+0x368>
    44dc:	1bd7      	subs	r7, r2, r7
    44de:	42ba      	cmp	r2, r7
    44e0:	4192      	sbcs	r2, r2
    44e2:	1b1c      	subs	r4, r3, r4
    44e4:	4252      	negs	r2, r2
    44e6:	1aa5      	subs	r5, r4, r2
    44e8:	46d8      	mov	r8, fp
    44ea:	e729      	b.n	4340 <__aeabi_dadd+0xb8>
    44ec:	4645      	mov	r5, r8
    44ee:	2400      	movs	r4, #0
    44f0:	2700      	movs	r7, #0
    44f2:	e76a      	b.n	43ca <__aeabi_dadd+0x142>
    44f4:	4c45      	ldr	r4, [pc, #276]	; (460c <__aeabi_dadd+0x384>)
    44f6:	1af6      	subs	r6, r6, r3
    44f8:	402c      	ands	r4, r5
    44fa:	e749      	b.n	4390 <__aeabi_dadd+0x108>
    44fc:	003d      	movs	r5, r7
    44fe:	3828      	subs	r0, #40	; 0x28
    4500:	4085      	lsls	r5, r0
    4502:	2700      	movs	r7, #0
    4504:	e72e      	b.n	4364 <__aeabi_dadd+0xdc>
    4506:	0038      	movs	r0, r7
    4508:	f001 fdce 	bl	60a8 <__clzsi2>
    450c:	3020      	adds	r0, #32
    450e:	e71d      	b.n	434c <__aeabi_dadd+0xc4>
    4510:	430a      	orrs	r2, r1
    4512:	1e51      	subs	r1, r2, #1
    4514:	418a      	sbcs	r2, r1
    4516:	2100      	movs	r1, #0
    4518:	e707      	b.n	432a <__aeabi_dadd+0xa2>
    451a:	2b00      	cmp	r3, #0
    451c:	d000      	beq.n	4520 <__aeabi_dadd+0x298>
    451e:	e0f3      	b.n	4708 <__aeabi_dadd+0x480>
    4520:	1c70      	adds	r0, r6, #1
    4522:	0543      	lsls	r3, r0, #21
    4524:	0d5b      	lsrs	r3, r3, #21
    4526:	2b01      	cmp	r3, #1
    4528:	dc00      	bgt.n	452c <__aeabi_dadd+0x2a4>
    452a:	e0ad      	b.n	4688 <__aeabi_dadd+0x400>
    452c:	4b36      	ldr	r3, [pc, #216]	; (4608 <__aeabi_dadd+0x380>)
    452e:	4298      	cmp	r0, r3
    4530:	d100      	bne.n	4534 <__aeabi_dadd+0x2ac>
    4532:	e0d1      	b.n	46d8 <__aeabi_dadd+0x450>
    4534:	18ba      	adds	r2, r7, r2
    4536:	42ba      	cmp	r2, r7
    4538:	41bf      	sbcs	r7, r7
    453a:	1864      	adds	r4, r4, r1
    453c:	427f      	negs	r7, r7
    453e:	19e4      	adds	r4, r4, r7
    4540:	07e7      	lsls	r7, r4, #31
    4542:	0852      	lsrs	r2, r2, #1
    4544:	4317      	orrs	r7, r2
    4546:	0864      	lsrs	r4, r4, #1
    4548:	0006      	movs	r6, r0
    454a:	e721      	b.n	4390 <__aeabi_dadd+0x108>
    454c:	482e      	ldr	r0, [pc, #184]	; (4608 <__aeabi_dadd+0x380>)
    454e:	4285      	cmp	r5, r0
    4550:	d100      	bne.n	4554 <__aeabi_dadd+0x2cc>
    4552:	e093      	b.n	467c <__aeabi_dadd+0x3f4>
    4554:	001d      	movs	r5, r3
    4556:	e6d0      	b.n	42fa <__aeabi_dadd+0x72>
    4558:	0029      	movs	r1, r5
    455a:	3e1f      	subs	r6, #31
    455c:	40f1      	lsrs	r1, r6
    455e:	2b20      	cmp	r3, #32
    4560:	d100      	bne.n	4564 <__aeabi_dadd+0x2dc>
    4562:	e08d      	b.n	4680 <__aeabi_dadd+0x3f8>
    4564:	2240      	movs	r2, #64	; 0x40
    4566:	1ad3      	subs	r3, r2, r3
    4568:	409d      	lsls	r5, r3
    456a:	432f      	orrs	r7, r5
    456c:	1e7d      	subs	r5, r7, #1
    456e:	41af      	sbcs	r7, r5
    4570:	2400      	movs	r4, #0
    4572:	430f      	orrs	r7, r1
    4574:	2600      	movs	r6, #0
    4576:	e744      	b.n	4402 <__aeabi_dadd+0x17a>
    4578:	002b      	movs	r3, r5
    457a:	0008      	movs	r0, r1
    457c:	3b20      	subs	r3, #32
    457e:	40d8      	lsrs	r0, r3
    4580:	0003      	movs	r3, r0
    4582:	2d20      	cmp	r5, #32
    4584:	d100      	bne.n	4588 <__aeabi_dadd+0x300>
    4586:	e07d      	b.n	4684 <__aeabi_dadd+0x3fc>
    4588:	2040      	movs	r0, #64	; 0x40
    458a:	1b45      	subs	r5, r0, r5
    458c:	40a9      	lsls	r1, r5
    458e:	430a      	orrs	r2, r1
    4590:	1e51      	subs	r1, r2, #1
    4592:	418a      	sbcs	r2, r1
    4594:	2100      	movs	r1, #0
    4596:	431a      	orrs	r2, r3
    4598:	e6c7      	b.n	432a <__aeabi_dadd+0xa2>
    459a:	2e00      	cmp	r6, #0
    459c:	d050      	beq.n	4640 <__aeabi_dadd+0x3b8>
    459e:	4e1a      	ldr	r6, [pc, #104]	; (4608 <__aeabi_dadd+0x380>)
    45a0:	42b0      	cmp	r0, r6
    45a2:	d057      	beq.n	4654 <__aeabi_dadd+0x3cc>
    45a4:	2680      	movs	r6, #128	; 0x80
    45a6:	426b      	negs	r3, r5
    45a8:	4699      	mov	r9, r3
    45aa:	0436      	lsls	r6, r6, #16
    45ac:	4334      	orrs	r4, r6
    45ae:	464b      	mov	r3, r9
    45b0:	2b38      	cmp	r3, #56	; 0x38
    45b2:	dd00      	ble.n	45b6 <__aeabi_dadd+0x32e>
    45b4:	e0d6      	b.n	4764 <__aeabi_dadd+0x4dc>
    45b6:	2b1f      	cmp	r3, #31
    45b8:	dd00      	ble.n	45bc <__aeabi_dadd+0x334>
    45ba:	e135      	b.n	4828 <__aeabi_dadd+0x5a0>
    45bc:	2620      	movs	r6, #32
    45be:	1af5      	subs	r5, r6, r3
    45c0:	0026      	movs	r6, r4
    45c2:	40ae      	lsls	r6, r5
    45c4:	46b2      	mov	sl, r6
    45c6:	003e      	movs	r6, r7
    45c8:	40de      	lsrs	r6, r3
    45ca:	46ac      	mov	ip, r5
    45cc:	0035      	movs	r5, r6
    45ce:	4656      	mov	r6, sl
    45d0:	432e      	orrs	r6, r5
    45d2:	4665      	mov	r5, ip
    45d4:	40af      	lsls	r7, r5
    45d6:	1e7d      	subs	r5, r7, #1
    45d8:	41af      	sbcs	r7, r5
    45da:	40dc      	lsrs	r4, r3
    45dc:	4337      	orrs	r7, r6
    45de:	1bd7      	subs	r7, r2, r7
    45e0:	42ba      	cmp	r2, r7
    45e2:	4192      	sbcs	r2, r2
    45e4:	1b0c      	subs	r4, r1, r4
    45e6:	4252      	negs	r2, r2
    45e8:	1aa4      	subs	r4, r4, r2
    45ea:	0006      	movs	r6, r0
    45ec:	46d8      	mov	r8, fp
    45ee:	e6a3      	b.n	4338 <__aeabi_dadd+0xb0>
    45f0:	4664      	mov	r4, ip
    45f2:	4667      	mov	r7, ip
    45f4:	432c      	orrs	r4, r5
    45f6:	d000      	beq.n	45fa <__aeabi_dadd+0x372>
    45f8:	e6a2      	b.n	4340 <__aeabi_dadd+0xb8>
    45fa:	2500      	movs	r5, #0
    45fc:	2600      	movs	r6, #0
    45fe:	2700      	movs	r7, #0
    4600:	e706      	b.n	4410 <__aeabi_dadd+0x188>
    4602:	001e      	movs	r6, r3
    4604:	e6c4      	b.n	4390 <__aeabi_dadd+0x108>
    4606:	46c0      	nop			; (mov r8, r8)
    4608:	000007ff 	.word	0x000007ff
    460c:	ff7fffff 	.word	0xff7fffff
    4610:	800fffff 	.word	0x800fffff
    4614:	2b1f      	cmp	r3, #31
    4616:	dc63      	bgt.n	46e0 <__aeabi_dadd+0x458>
    4618:	2020      	movs	r0, #32
    461a:	1ac3      	subs	r3, r0, r3
    461c:	0008      	movs	r0, r1
    461e:	4098      	lsls	r0, r3
    4620:	469c      	mov	ip, r3
    4622:	4683      	mov	fp, r0
    4624:	4653      	mov	r3, sl
    4626:	0010      	movs	r0, r2
    4628:	40d8      	lsrs	r0, r3
    462a:	0003      	movs	r3, r0
    462c:	4658      	mov	r0, fp
    462e:	4318      	orrs	r0, r3
    4630:	4663      	mov	r3, ip
    4632:	409a      	lsls	r2, r3
    4634:	1e53      	subs	r3, r2, #1
    4636:	419a      	sbcs	r2, r3
    4638:	4653      	mov	r3, sl
    463a:	4302      	orrs	r2, r0
    463c:	40d9      	lsrs	r1, r3
    463e:	e703      	b.n	4448 <__aeabi_dadd+0x1c0>
    4640:	0026      	movs	r6, r4
    4642:	433e      	orrs	r6, r7
    4644:	d006      	beq.n	4654 <__aeabi_dadd+0x3cc>
    4646:	43eb      	mvns	r3, r5
    4648:	4699      	mov	r9, r3
    464a:	2b00      	cmp	r3, #0
    464c:	d0c7      	beq.n	45de <__aeabi_dadd+0x356>
    464e:	4e94      	ldr	r6, [pc, #592]	; (48a0 <__aeabi_dadd+0x618>)
    4650:	42b0      	cmp	r0, r6
    4652:	d1ac      	bne.n	45ae <__aeabi_dadd+0x326>
    4654:	000c      	movs	r4, r1
    4656:	0017      	movs	r7, r2
    4658:	0006      	movs	r6, r0
    465a:	46d8      	mov	r8, fp
    465c:	e698      	b.n	4390 <__aeabi_dadd+0x108>
    465e:	4b90      	ldr	r3, [pc, #576]	; (48a0 <__aeabi_dadd+0x618>)
    4660:	459a      	cmp	sl, r3
    4662:	d00b      	beq.n	467c <__aeabi_dadd+0x3f4>
    4664:	4682      	mov	sl, r0
    4666:	e6e7      	b.n	4438 <__aeabi_dadd+0x1b0>
    4668:	2800      	cmp	r0, #0
    466a:	d000      	beq.n	466e <__aeabi_dadd+0x3e6>
    466c:	e09e      	b.n	47ac <__aeabi_dadd+0x524>
    466e:	0018      	movs	r0, r3
    4670:	4310      	orrs	r0, r2
    4672:	d100      	bne.n	4676 <__aeabi_dadd+0x3ee>
    4674:	e0e9      	b.n	484a <__aeabi_dadd+0x5c2>
    4676:	001c      	movs	r4, r3
    4678:	0017      	movs	r7, r2
    467a:	46d8      	mov	r8, fp
    467c:	4e88      	ldr	r6, [pc, #544]	; (48a0 <__aeabi_dadd+0x618>)
    467e:	e687      	b.n	4390 <__aeabi_dadd+0x108>
    4680:	2500      	movs	r5, #0
    4682:	e772      	b.n	456a <__aeabi_dadd+0x2e2>
    4684:	2100      	movs	r1, #0
    4686:	e782      	b.n	458e <__aeabi_dadd+0x306>
    4688:	0023      	movs	r3, r4
    468a:	433b      	orrs	r3, r7
    468c:	2e00      	cmp	r6, #0
    468e:	d000      	beq.n	4692 <__aeabi_dadd+0x40a>
    4690:	e0ab      	b.n	47ea <__aeabi_dadd+0x562>
    4692:	2b00      	cmp	r3, #0
    4694:	d100      	bne.n	4698 <__aeabi_dadd+0x410>
    4696:	e0e7      	b.n	4868 <__aeabi_dadd+0x5e0>
    4698:	000b      	movs	r3, r1
    469a:	4313      	orrs	r3, r2
    469c:	d100      	bne.n	46a0 <__aeabi_dadd+0x418>
    469e:	e677      	b.n	4390 <__aeabi_dadd+0x108>
    46a0:	18ba      	adds	r2, r7, r2
    46a2:	42ba      	cmp	r2, r7
    46a4:	41bf      	sbcs	r7, r7
    46a6:	1864      	adds	r4, r4, r1
    46a8:	427f      	negs	r7, r7
    46aa:	19e4      	adds	r4, r4, r7
    46ac:	0223      	lsls	r3, r4, #8
    46ae:	d400      	bmi.n	46b2 <__aeabi_dadd+0x42a>
    46b0:	e0f2      	b.n	4898 <__aeabi_dadd+0x610>
    46b2:	4b7c      	ldr	r3, [pc, #496]	; (48a4 <__aeabi_dadd+0x61c>)
    46b4:	0017      	movs	r7, r2
    46b6:	401c      	ands	r4, r3
    46b8:	0006      	movs	r6, r0
    46ba:	e669      	b.n	4390 <__aeabi_dadd+0x108>
    46bc:	0020      	movs	r0, r4
    46be:	4338      	orrs	r0, r7
    46c0:	2e00      	cmp	r6, #0
    46c2:	d1d1      	bne.n	4668 <__aeabi_dadd+0x3e0>
    46c4:	2800      	cmp	r0, #0
    46c6:	d15b      	bne.n	4780 <__aeabi_dadd+0x4f8>
    46c8:	001c      	movs	r4, r3
    46ca:	4314      	orrs	r4, r2
    46cc:	d100      	bne.n	46d0 <__aeabi_dadd+0x448>
    46ce:	e0a8      	b.n	4822 <__aeabi_dadd+0x59a>
    46d0:	001c      	movs	r4, r3
    46d2:	0017      	movs	r7, r2
    46d4:	46d8      	mov	r8, fp
    46d6:	e65b      	b.n	4390 <__aeabi_dadd+0x108>
    46d8:	0006      	movs	r6, r0
    46da:	2400      	movs	r4, #0
    46dc:	2700      	movs	r7, #0
    46de:	e697      	b.n	4410 <__aeabi_dadd+0x188>
    46e0:	4650      	mov	r0, sl
    46e2:	000b      	movs	r3, r1
    46e4:	3820      	subs	r0, #32
    46e6:	40c3      	lsrs	r3, r0
    46e8:	4699      	mov	r9, r3
    46ea:	4653      	mov	r3, sl
    46ec:	2b20      	cmp	r3, #32
    46ee:	d100      	bne.n	46f2 <__aeabi_dadd+0x46a>
    46f0:	e095      	b.n	481e <__aeabi_dadd+0x596>
    46f2:	2340      	movs	r3, #64	; 0x40
    46f4:	4650      	mov	r0, sl
    46f6:	1a1b      	subs	r3, r3, r0
    46f8:	4099      	lsls	r1, r3
    46fa:	430a      	orrs	r2, r1
    46fc:	1e51      	subs	r1, r2, #1
    46fe:	418a      	sbcs	r2, r1
    4700:	464b      	mov	r3, r9
    4702:	2100      	movs	r1, #0
    4704:	431a      	orrs	r2, r3
    4706:	e69f      	b.n	4448 <__aeabi_dadd+0x1c0>
    4708:	2e00      	cmp	r6, #0
    470a:	d130      	bne.n	476e <__aeabi_dadd+0x4e6>
    470c:	0026      	movs	r6, r4
    470e:	433e      	orrs	r6, r7
    4710:	d067      	beq.n	47e2 <__aeabi_dadd+0x55a>
    4712:	43db      	mvns	r3, r3
    4714:	469a      	mov	sl, r3
    4716:	2b00      	cmp	r3, #0
    4718:	d01c      	beq.n	4754 <__aeabi_dadd+0x4cc>
    471a:	4e61      	ldr	r6, [pc, #388]	; (48a0 <__aeabi_dadd+0x618>)
    471c:	42b0      	cmp	r0, r6
    471e:	d060      	beq.n	47e2 <__aeabi_dadd+0x55a>
    4720:	4653      	mov	r3, sl
    4722:	2b38      	cmp	r3, #56	; 0x38
    4724:	dd00      	ble.n	4728 <__aeabi_dadd+0x4a0>
    4726:	e096      	b.n	4856 <__aeabi_dadd+0x5ce>
    4728:	2b1f      	cmp	r3, #31
    472a:	dd00      	ble.n	472e <__aeabi_dadd+0x4a6>
    472c:	e09f      	b.n	486e <__aeabi_dadd+0x5e6>
    472e:	2620      	movs	r6, #32
    4730:	1af3      	subs	r3, r6, r3
    4732:	0026      	movs	r6, r4
    4734:	409e      	lsls	r6, r3
    4736:	469c      	mov	ip, r3
    4738:	46b3      	mov	fp, r6
    473a:	4653      	mov	r3, sl
    473c:	003e      	movs	r6, r7
    473e:	40de      	lsrs	r6, r3
    4740:	0033      	movs	r3, r6
    4742:	465e      	mov	r6, fp
    4744:	431e      	orrs	r6, r3
    4746:	4663      	mov	r3, ip
    4748:	409f      	lsls	r7, r3
    474a:	1e7b      	subs	r3, r7, #1
    474c:	419f      	sbcs	r7, r3
    474e:	4653      	mov	r3, sl
    4750:	40dc      	lsrs	r4, r3
    4752:	4337      	orrs	r7, r6
    4754:	18bf      	adds	r7, r7, r2
    4756:	4297      	cmp	r7, r2
    4758:	4192      	sbcs	r2, r2
    475a:	1864      	adds	r4, r4, r1
    475c:	4252      	negs	r2, r2
    475e:	18a4      	adds	r4, r4, r2
    4760:	0006      	movs	r6, r0
    4762:	e678      	b.n	4456 <__aeabi_dadd+0x1ce>
    4764:	4327      	orrs	r7, r4
    4766:	1e7c      	subs	r4, r7, #1
    4768:	41a7      	sbcs	r7, r4
    476a:	2400      	movs	r4, #0
    476c:	e737      	b.n	45de <__aeabi_dadd+0x356>
    476e:	4e4c      	ldr	r6, [pc, #304]	; (48a0 <__aeabi_dadd+0x618>)
    4770:	42b0      	cmp	r0, r6
    4772:	d036      	beq.n	47e2 <__aeabi_dadd+0x55a>
    4774:	2680      	movs	r6, #128	; 0x80
    4776:	425b      	negs	r3, r3
    4778:	0436      	lsls	r6, r6, #16
    477a:	469a      	mov	sl, r3
    477c:	4334      	orrs	r4, r6
    477e:	e7cf      	b.n	4720 <__aeabi_dadd+0x498>
    4780:	0018      	movs	r0, r3
    4782:	4310      	orrs	r0, r2
    4784:	d100      	bne.n	4788 <__aeabi_dadd+0x500>
    4786:	e603      	b.n	4390 <__aeabi_dadd+0x108>
    4788:	1ab8      	subs	r0, r7, r2
    478a:	4684      	mov	ip, r0
    478c:	4567      	cmp	r7, ip
    478e:	41ad      	sbcs	r5, r5
    4790:	1ae0      	subs	r0, r4, r3
    4792:	426d      	negs	r5, r5
    4794:	1b40      	subs	r0, r0, r5
    4796:	0205      	lsls	r5, r0, #8
    4798:	d400      	bmi.n	479c <__aeabi_dadd+0x514>
    479a:	e62c      	b.n	43f6 <__aeabi_dadd+0x16e>
    479c:	1bd7      	subs	r7, r2, r7
    479e:	42ba      	cmp	r2, r7
    47a0:	4192      	sbcs	r2, r2
    47a2:	1b1c      	subs	r4, r3, r4
    47a4:	4252      	negs	r2, r2
    47a6:	1aa4      	subs	r4, r4, r2
    47a8:	46d8      	mov	r8, fp
    47aa:	e5f1      	b.n	4390 <__aeabi_dadd+0x108>
    47ac:	0018      	movs	r0, r3
    47ae:	4310      	orrs	r0, r2
    47b0:	d100      	bne.n	47b4 <__aeabi_dadd+0x52c>
    47b2:	e763      	b.n	467c <__aeabi_dadd+0x3f4>
    47b4:	08f8      	lsrs	r0, r7, #3
    47b6:	0767      	lsls	r7, r4, #29
    47b8:	4307      	orrs	r7, r0
    47ba:	2080      	movs	r0, #128	; 0x80
    47bc:	08e4      	lsrs	r4, r4, #3
    47be:	0300      	lsls	r0, r0, #12
    47c0:	4204      	tst	r4, r0
    47c2:	d008      	beq.n	47d6 <__aeabi_dadd+0x54e>
    47c4:	08dd      	lsrs	r5, r3, #3
    47c6:	4205      	tst	r5, r0
    47c8:	d105      	bne.n	47d6 <__aeabi_dadd+0x54e>
    47ca:	08d2      	lsrs	r2, r2, #3
    47cc:	0759      	lsls	r1, r3, #29
    47ce:	4311      	orrs	r1, r2
    47d0:	000f      	movs	r7, r1
    47d2:	002c      	movs	r4, r5
    47d4:	46d8      	mov	r8, fp
    47d6:	0f7b      	lsrs	r3, r7, #29
    47d8:	00e4      	lsls	r4, r4, #3
    47da:	431c      	orrs	r4, r3
    47dc:	00ff      	lsls	r7, r7, #3
    47de:	4e30      	ldr	r6, [pc, #192]	; (48a0 <__aeabi_dadd+0x618>)
    47e0:	e5d6      	b.n	4390 <__aeabi_dadd+0x108>
    47e2:	000c      	movs	r4, r1
    47e4:	0017      	movs	r7, r2
    47e6:	0006      	movs	r6, r0
    47e8:	e5d2      	b.n	4390 <__aeabi_dadd+0x108>
    47ea:	2b00      	cmp	r3, #0
    47ec:	d038      	beq.n	4860 <__aeabi_dadd+0x5d8>
    47ee:	000b      	movs	r3, r1
    47f0:	4313      	orrs	r3, r2
    47f2:	d100      	bne.n	47f6 <__aeabi_dadd+0x56e>
    47f4:	e742      	b.n	467c <__aeabi_dadd+0x3f4>
    47f6:	08f8      	lsrs	r0, r7, #3
    47f8:	0767      	lsls	r7, r4, #29
    47fa:	4307      	orrs	r7, r0
    47fc:	2080      	movs	r0, #128	; 0x80
    47fe:	08e4      	lsrs	r4, r4, #3
    4800:	0300      	lsls	r0, r0, #12
    4802:	4204      	tst	r4, r0
    4804:	d0e7      	beq.n	47d6 <__aeabi_dadd+0x54e>
    4806:	08cb      	lsrs	r3, r1, #3
    4808:	4203      	tst	r3, r0
    480a:	d1e4      	bne.n	47d6 <__aeabi_dadd+0x54e>
    480c:	08d2      	lsrs	r2, r2, #3
    480e:	0749      	lsls	r1, r1, #29
    4810:	4311      	orrs	r1, r2
    4812:	000f      	movs	r7, r1
    4814:	001c      	movs	r4, r3
    4816:	e7de      	b.n	47d6 <__aeabi_dadd+0x54e>
    4818:	2700      	movs	r7, #0
    481a:	2400      	movs	r4, #0
    481c:	e5d5      	b.n	43ca <__aeabi_dadd+0x142>
    481e:	2100      	movs	r1, #0
    4820:	e76b      	b.n	46fa <__aeabi_dadd+0x472>
    4822:	2500      	movs	r5, #0
    4824:	2700      	movs	r7, #0
    4826:	e5f3      	b.n	4410 <__aeabi_dadd+0x188>
    4828:	464e      	mov	r6, r9
    482a:	0025      	movs	r5, r4
    482c:	3e20      	subs	r6, #32
    482e:	40f5      	lsrs	r5, r6
    4830:	464b      	mov	r3, r9
    4832:	002e      	movs	r6, r5
    4834:	2b20      	cmp	r3, #32
    4836:	d02d      	beq.n	4894 <__aeabi_dadd+0x60c>
    4838:	2540      	movs	r5, #64	; 0x40
    483a:	1aed      	subs	r5, r5, r3
    483c:	40ac      	lsls	r4, r5
    483e:	4327      	orrs	r7, r4
    4840:	1e7c      	subs	r4, r7, #1
    4842:	41a7      	sbcs	r7, r4
    4844:	2400      	movs	r4, #0
    4846:	4337      	orrs	r7, r6
    4848:	e6c9      	b.n	45de <__aeabi_dadd+0x356>
    484a:	2480      	movs	r4, #128	; 0x80
    484c:	2500      	movs	r5, #0
    484e:	0324      	lsls	r4, r4, #12
    4850:	4e13      	ldr	r6, [pc, #76]	; (48a0 <__aeabi_dadd+0x618>)
    4852:	2700      	movs	r7, #0
    4854:	e5dc      	b.n	4410 <__aeabi_dadd+0x188>
    4856:	4327      	orrs	r7, r4
    4858:	1e7c      	subs	r4, r7, #1
    485a:	41a7      	sbcs	r7, r4
    485c:	2400      	movs	r4, #0
    485e:	e779      	b.n	4754 <__aeabi_dadd+0x4cc>
    4860:	000c      	movs	r4, r1
    4862:	0017      	movs	r7, r2
    4864:	4e0e      	ldr	r6, [pc, #56]	; (48a0 <__aeabi_dadd+0x618>)
    4866:	e593      	b.n	4390 <__aeabi_dadd+0x108>
    4868:	000c      	movs	r4, r1
    486a:	0017      	movs	r7, r2
    486c:	e590      	b.n	4390 <__aeabi_dadd+0x108>
    486e:	4656      	mov	r6, sl
    4870:	0023      	movs	r3, r4
    4872:	3e20      	subs	r6, #32
    4874:	40f3      	lsrs	r3, r6
    4876:	4699      	mov	r9, r3
    4878:	4653      	mov	r3, sl
    487a:	2b20      	cmp	r3, #32
    487c:	d00e      	beq.n	489c <__aeabi_dadd+0x614>
    487e:	2340      	movs	r3, #64	; 0x40
    4880:	4656      	mov	r6, sl
    4882:	1b9b      	subs	r3, r3, r6
    4884:	409c      	lsls	r4, r3
    4886:	4327      	orrs	r7, r4
    4888:	1e7c      	subs	r4, r7, #1
    488a:	41a7      	sbcs	r7, r4
    488c:	464b      	mov	r3, r9
    488e:	2400      	movs	r4, #0
    4890:	431f      	orrs	r7, r3
    4892:	e75f      	b.n	4754 <__aeabi_dadd+0x4cc>
    4894:	2400      	movs	r4, #0
    4896:	e7d2      	b.n	483e <__aeabi_dadd+0x5b6>
    4898:	0017      	movs	r7, r2
    489a:	e5b2      	b.n	4402 <__aeabi_dadd+0x17a>
    489c:	2400      	movs	r4, #0
    489e:	e7f2      	b.n	4886 <__aeabi_dadd+0x5fe>
    48a0:	000007ff 	.word	0x000007ff
    48a4:	ff7fffff 	.word	0xff7fffff

000048a8 <__aeabi_ddiv>:
    48a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    48aa:	4657      	mov	r7, sl
    48ac:	4645      	mov	r5, r8
    48ae:	46de      	mov	lr, fp
    48b0:	464e      	mov	r6, r9
    48b2:	b5e0      	push	{r5, r6, r7, lr}
    48b4:	004c      	lsls	r4, r1, #1
    48b6:	030e      	lsls	r6, r1, #12
    48b8:	b087      	sub	sp, #28
    48ba:	4683      	mov	fp, r0
    48bc:	4692      	mov	sl, r2
    48be:	001d      	movs	r5, r3
    48c0:	4680      	mov	r8, r0
    48c2:	0b36      	lsrs	r6, r6, #12
    48c4:	0d64      	lsrs	r4, r4, #21
    48c6:	0fcf      	lsrs	r7, r1, #31
    48c8:	2c00      	cmp	r4, #0
    48ca:	d04f      	beq.n	496c <__aeabi_ddiv+0xc4>
    48cc:	4b6f      	ldr	r3, [pc, #444]	; (4a8c <__aeabi_ddiv+0x1e4>)
    48ce:	429c      	cmp	r4, r3
    48d0:	d035      	beq.n	493e <__aeabi_ddiv+0x96>
    48d2:	2380      	movs	r3, #128	; 0x80
    48d4:	0f42      	lsrs	r2, r0, #29
    48d6:	041b      	lsls	r3, r3, #16
    48d8:	00f6      	lsls	r6, r6, #3
    48da:	4313      	orrs	r3, r2
    48dc:	4333      	orrs	r3, r6
    48de:	4699      	mov	r9, r3
    48e0:	00c3      	lsls	r3, r0, #3
    48e2:	4698      	mov	r8, r3
    48e4:	4b6a      	ldr	r3, [pc, #424]	; (4a90 <__aeabi_ddiv+0x1e8>)
    48e6:	2600      	movs	r6, #0
    48e8:	469c      	mov	ip, r3
    48ea:	2300      	movs	r3, #0
    48ec:	4464      	add	r4, ip
    48ee:	9303      	str	r3, [sp, #12]
    48f0:	032b      	lsls	r3, r5, #12
    48f2:	0b1b      	lsrs	r3, r3, #12
    48f4:	469b      	mov	fp, r3
    48f6:	006b      	lsls	r3, r5, #1
    48f8:	0fed      	lsrs	r5, r5, #31
    48fa:	4650      	mov	r0, sl
    48fc:	0d5b      	lsrs	r3, r3, #21
    48fe:	9501      	str	r5, [sp, #4]
    4900:	d05e      	beq.n	49c0 <__aeabi_ddiv+0x118>
    4902:	4a62      	ldr	r2, [pc, #392]	; (4a8c <__aeabi_ddiv+0x1e4>)
    4904:	4293      	cmp	r3, r2
    4906:	d053      	beq.n	49b0 <__aeabi_ddiv+0x108>
    4908:	465a      	mov	r2, fp
    490a:	00d1      	lsls	r1, r2, #3
    490c:	2280      	movs	r2, #128	; 0x80
    490e:	0f40      	lsrs	r0, r0, #29
    4910:	0412      	lsls	r2, r2, #16
    4912:	4302      	orrs	r2, r0
    4914:	430a      	orrs	r2, r1
    4916:	4693      	mov	fp, r2
    4918:	4652      	mov	r2, sl
    491a:	00d1      	lsls	r1, r2, #3
    491c:	4a5c      	ldr	r2, [pc, #368]	; (4a90 <__aeabi_ddiv+0x1e8>)
    491e:	4694      	mov	ip, r2
    4920:	2200      	movs	r2, #0
    4922:	4463      	add	r3, ip
    4924:	0038      	movs	r0, r7
    4926:	4068      	eors	r0, r5
    4928:	4684      	mov	ip, r0
    492a:	9002      	str	r0, [sp, #8]
    492c:	1ae4      	subs	r4, r4, r3
    492e:	4316      	orrs	r6, r2
    4930:	2e0f      	cmp	r6, #15
    4932:	d900      	bls.n	4936 <__aeabi_ddiv+0x8e>
    4934:	e0b4      	b.n	4aa0 <__aeabi_ddiv+0x1f8>
    4936:	4b57      	ldr	r3, [pc, #348]	; (4a94 <__aeabi_ddiv+0x1ec>)
    4938:	00b6      	lsls	r6, r6, #2
    493a:	599b      	ldr	r3, [r3, r6]
    493c:	469f      	mov	pc, r3
    493e:	0003      	movs	r3, r0
    4940:	4333      	orrs	r3, r6
    4942:	4699      	mov	r9, r3
    4944:	d16c      	bne.n	4a20 <__aeabi_ddiv+0x178>
    4946:	2300      	movs	r3, #0
    4948:	4698      	mov	r8, r3
    494a:	3302      	adds	r3, #2
    494c:	2608      	movs	r6, #8
    494e:	9303      	str	r3, [sp, #12]
    4950:	e7ce      	b.n	48f0 <__aeabi_ddiv+0x48>
    4952:	46cb      	mov	fp, r9
    4954:	4641      	mov	r1, r8
    4956:	9a03      	ldr	r2, [sp, #12]
    4958:	9701      	str	r7, [sp, #4]
    495a:	2a02      	cmp	r2, #2
    495c:	d165      	bne.n	4a2a <__aeabi_ddiv+0x182>
    495e:	9b01      	ldr	r3, [sp, #4]
    4960:	4c4a      	ldr	r4, [pc, #296]	; (4a8c <__aeabi_ddiv+0x1e4>)
    4962:	469c      	mov	ip, r3
    4964:	2300      	movs	r3, #0
    4966:	2200      	movs	r2, #0
    4968:	4698      	mov	r8, r3
    496a:	e06b      	b.n	4a44 <__aeabi_ddiv+0x19c>
    496c:	0003      	movs	r3, r0
    496e:	4333      	orrs	r3, r6
    4970:	4699      	mov	r9, r3
    4972:	d04e      	beq.n	4a12 <__aeabi_ddiv+0x16a>
    4974:	2e00      	cmp	r6, #0
    4976:	d100      	bne.n	497a <__aeabi_ddiv+0xd2>
    4978:	e1bc      	b.n	4cf4 <__aeabi_ddiv+0x44c>
    497a:	0030      	movs	r0, r6
    497c:	f001 fb94 	bl	60a8 <__clzsi2>
    4980:	0003      	movs	r3, r0
    4982:	3b0b      	subs	r3, #11
    4984:	2b1c      	cmp	r3, #28
    4986:	dd00      	ble.n	498a <__aeabi_ddiv+0xe2>
    4988:	e1ac      	b.n	4ce4 <__aeabi_ddiv+0x43c>
    498a:	221d      	movs	r2, #29
    498c:	1ad3      	subs	r3, r2, r3
    498e:	465a      	mov	r2, fp
    4990:	0001      	movs	r1, r0
    4992:	40da      	lsrs	r2, r3
    4994:	3908      	subs	r1, #8
    4996:	408e      	lsls	r6, r1
    4998:	0013      	movs	r3, r2
    499a:	4333      	orrs	r3, r6
    499c:	4699      	mov	r9, r3
    499e:	465b      	mov	r3, fp
    49a0:	408b      	lsls	r3, r1
    49a2:	4698      	mov	r8, r3
    49a4:	2300      	movs	r3, #0
    49a6:	4c3c      	ldr	r4, [pc, #240]	; (4a98 <__aeabi_ddiv+0x1f0>)
    49a8:	2600      	movs	r6, #0
    49aa:	1a24      	subs	r4, r4, r0
    49ac:	9303      	str	r3, [sp, #12]
    49ae:	e79f      	b.n	48f0 <__aeabi_ddiv+0x48>
    49b0:	4651      	mov	r1, sl
    49b2:	465a      	mov	r2, fp
    49b4:	4311      	orrs	r1, r2
    49b6:	d129      	bne.n	4a0c <__aeabi_ddiv+0x164>
    49b8:	2200      	movs	r2, #0
    49ba:	4693      	mov	fp, r2
    49bc:	3202      	adds	r2, #2
    49be:	e7b1      	b.n	4924 <__aeabi_ddiv+0x7c>
    49c0:	4659      	mov	r1, fp
    49c2:	4301      	orrs	r1, r0
    49c4:	d01e      	beq.n	4a04 <__aeabi_ddiv+0x15c>
    49c6:	465b      	mov	r3, fp
    49c8:	2b00      	cmp	r3, #0
    49ca:	d100      	bne.n	49ce <__aeabi_ddiv+0x126>
    49cc:	e19e      	b.n	4d0c <__aeabi_ddiv+0x464>
    49ce:	4658      	mov	r0, fp
    49d0:	f001 fb6a 	bl	60a8 <__clzsi2>
    49d4:	0003      	movs	r3, r0
    49d6:	3b0b      	subs	r3, #11
    49d8:	2b1c      	cmp	r3, #28
    49da:	dd00      	ble.n	49de <__aeabi_ddiv+0x136>
    49dc:	e18f      	b.n	4cfe <__aeabi_ddiv+0x456>
    49de:	0002      	movs	r2, r0
    49e0:	4659      	mov	r1, fp
    49e2:	3a08      	subs	r2, #8
    49e4:	4091      	lsls	r1, r2
    49e6:	468b      	mov	fp, r1
    49e8:	211d      	movs	r1, #29
    49ea:	1acb      	subs	r3, r1, r3
    49ec:	4651      	mov	r1, sl
    49ee:	40d9      	lsrs	r1, r3
    49f0:	000b      	movs	r3, r1
    49f2:	4659      	mov	r1, fp
    49f4:	430b      	orrs	r3, r1
    49f6:	4651      	mov	r1, sl
    49f8:	469b      	mov	fp, r3
    49fa:	4091      	lsls	r1, r2
    49fc:	4b26      	ldr	r3, [pc, #152]	; (4a98 <__aeabi_ddiv+0x1f0>)
    49fe:	2200      	movs	r2, #0
    4a00:	1a1b      	subs	r3, r3, r0
    4a02:	e78f      	b.n	4924 <__aeabi_ddiv+0x7c>
    4a04:	2300      	movs	r3, #0
    4a06:	2201      	movs	r2, #1
    4a08:	469b      	mov	fp, r3
    4a0a:	e78b      	b.n	4924 <__aeabi_ddiv+0x7c>
    4a0c:	4651      	mov	r1, sl
    4a0e:	2203      	movs	r2, #3
    4a10:	e788      	b.n	4924 <__aeabi_ddiv+0x7c>
    4a12:	2300      	movs	r3, #0
    4a14:	4698      	mov	r8, r3
    4a16:	3301      	adds	r3, #1
    4a18:	2604      	movs	r6, #4
    4a1a:	2400      	movs	r4, #0
    4a1c:	9303      	str	r3, [sp, #12]
    4a1e:	e767      	b.n	48f0 <__aeabi_ddiv+0x48>
    4a20:	2303      	movs	r3, #3
    4a22:	46b1      	mov	r9, r6
    4a24:	9303      	str	r3, [sp, #12]
    4a26:	260c      	movs	r6, #12
    4a28:	e762      	b.n	48f0 <__aeabi_ddiv+0x48>
    4a2a:	2a03      	cmp	r2, #3
    4a2c:	d100      	bne.n	4a30 <__aeabi_ddiv+0x188>
    4a2e:	e25c      	b.n	4eea <__aeabi_ddiv+0x642>
    4a30:	9b01      	ldr	r3, [sp, #4]
    4a32:	2a01      	cmp	r2, #1
    4a34:	d000      	beq.n	4a38 <__aeabi_ddiv+0x190>
    4a36:	e1e4      	b.n	4e02 <__aeabi_ddiv+0x55a>
    4a38:	4013      	ands	r3, r2
    4a3a:	469c      	mov	ip, r3
    4a3c:	2300      	movs	r3, #0
    4a3e:	2400      	movs	r4, #0
    4a40:	2200      	movs	r2, #0
    4a42:	4698      	mov	r8, r3
    4a44:	2100      	movs	r1, #0
    4a46:	0312      	lsls	r2, r2, #12
    4a48:	0b13      	lsrs	r3, r2, #12
    4a4a:	0d0a      	lsrs	r2, r1, #20
    4a4c:	0512      	lsls	r2, r2, #20
    4a4e:	431a      	orrs	r2, r3
    4a50:	0523      	lsls	r3, r4, #20
    4a52:	4c12      	ldr	r4, [pc, #72]	; (4a9c <__aeabi_ddiv+0x1f4>)
    4a54:	4640      	mov	r0, r8
    4a56:	4022      	ands	r2, r4
    4a58:	4313      	orrs	r3, r2
    4a5a:	4662      	mov	r2, ip
    4a5c:	005b      	lsls	r3, r3, #1
    4a5e:	07d2      	lsls	r2, r2, #31
    4a60:	085b      	lsrs	r3, r3, #1
    4a62:	4313      	orrs	r3, r2
    4a64:	0019      	movs	r1, r3
    4a66:	b007      	add	sp, #28
    4a68:	bc3c      	pop	{r2, r3, r4, r5}
    4a6a:	4690      	mov	r8, r2
    4a6c:	4699      	mov	r9, r3
    4a6e:	46a2      	mov	sl, r4
    4a70:	46ab      	mov	fp, r5
    4a72:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4a74:	2300      	movs	r3, #0
    4a76:	2280      	movs	r2, #128	; 0x80
    4a78:	469c      	mov	ip, r3
    4a7a:	0312      	lsls	r2, r2, #12
    4a7c:	4698      	mov	r8, r3
    4a7e:	4c03      	ldr	r4, [pc, #12]	; (4a8c <__aeabi_ddiv+0x1e4>)
    4a80:	e7e0      	b.n	4a44 <__aeabi_ddiv+0x19c>
    4a82:	2300      	movs	r3, #0
    4a84:	4c01      	ldr	r4, [pc, #4]	; (4a8c <__aeabi_ddiv+0x1e4>)
    4a86:	2200      	movs	r2, #0
    4a88:	4698      	mov	r8, r3
    4a8a:	e7db      	b.n	4a44 <__aeabi_ddiv+0x19c>
    4a8c:	000007ff 	.word	0x000007ff
    4a90:	fffffc01 	.word	0xfffffc01
    4a94:	000062e0 	.word	0x000062e0
    4a98:	fffffc0d 	.word	0xfffffc0d
    4a9c:	800fffff 	.word	0x800fffff
    4aa0:	45d9      	cmp	r9, fp
    4aa2:	d900      	bls.n	4aa6 <__aeabi_ddiv+0x1fe>
    4aa4:	e139      	b.n	4d1a <__aeabi_ddiv+0x472>
    4aa6:	d100      	bne.n	4aaa <__aeabi_ddiv+0x202>
    4aa8:	e134      	b.n	4d14 <__aeabi_ddiv+0x46c>
    4aaa:	2300      	movs	r3, #0
    4aac:	4646      	mov	r6, r8
    4aae:	464d      	mov	r5, r9
    4ab0:	469a      	mov	sl, r3
    4ab2:	3c01      	subs	r4, #1
    4ab4:	465b      	mov	r3, fp
    4ab6:	0e0a      	lsrs	r2, r1, #24
    4ab8:	021b      	lsls	r3, r3, #8
    4aba:	431a      	orrs	r2, r3
    4abc:	020b      	lsls	r3, r1, #8
    4abe:	0c17      	lsrs	r7, r2, #16
    4ac0:	9303      	str	r3, [sp, #12]
    4ac2:	0413      	lsls	r3, r2, #16
    4ac4:	0c1b      	lsrs	r3, r3, #16
    4ac6:	0039      	movs	r1, r7
    4ac8:	0028      	movs	r0, r5
    4aca:	4690      	mov	r8, r2
    4acc:	9301      	str	r3, [sp, #4]
    4ace:	f001 fa5f 	bl	5f90 <__udivsi3>
    4ad2:	0002      	movs	r2, r0
    4ad4:	9b01      	ldr	r3, [sp, #4]
    4ad6:	4683      	mov	fp, r0
    4ad8:	435a      	muls	r2, r3
    4ada:	0028      	movs	r0, r5
    4adc:	0039      	movs	r1, r7
    4ade:	4691      	mov	r9, r2
    4ae0:	f001 fadc 	bl	609c <__aeabi_uidivmod>
    4ae4:	0c35      	lsrs	r5, r6, #16
    4ae6:	0409      	lsls	r1, r1, #16
    4ae8:	430d      	orrs	r5, r1
    4aea:	45a9      	cmp	r9, r5
    4aec:	d90d      	bls.n	4b0a <__aeabi_ddiv+0x262>
    4aee:	465b      	mov	r3, fp
    4af0:	4445      	add	r5, r8
    4af2:	3b01      	subs	r3, #1
    4af4:	45a8      	cmp	r8, r5
    4af6:	d900      	bls.n	4afa <__aeabi_ddiv+0x252>
    4af8:	e13a      	b.n	4d70 <__aeabi_ddiv+0x4c8>
    4afa:	45a9      	cmp	r9, r5
    4afc:	d800      	bhi.n	4b00 <__aeabi_ddiv+0x258>
    4afe:	e137      	b.n	4d70 <__aeabi_ddiv+0x4c8>
    4b00:	2302      	movs	r3, #2
    4b02:	425b      	negs	r3, r3
    4b04:	469c      	mov	ip, r3
    4b06:	4445      	add	r5, r8
    4b08:	44e3      	add	fp, ip
    4b0a:	464b      	mov	r3, r9
    4b0c:	1aeb      	subs	r3, r5, r3
    4b0e:	0039      	movs	r1, r7
    4b10:	0018      	movs	r0, r3
    4b12:	9304      	str	r3, [sp, #16]
    4b14:	f001 fa3c 	bl	5f90 <__udivsi3>
    4b18:	9b01      	ldr	r3, [sp, #4]
    4b1a:	0005      	movs	r5, r0
    4b1c:	4343      	muls	r3, r0
    4b1e:	0039      	movs	r1, r7
    4b20:	9804      	ldr	r0, [sp, #16]
    4b22:	4699      	mov	r9, r3
    4b24:	f001 faba 	bl	609c <__aeabi_uidivmod>
    4b28:	0433      	lsls	r3, r6, #16
    4b2a:	0409      	lsls	r1, r1, #16
    4b2c:	0c1b      	lsrs	r3, r3, #16
    4b2e:	430b      	orrs	r3, r1
    4b30:	4599      	cmp	r9, r3
    4b32:	d909      	bls.n	4b48 <__aeabi_ddiv+0x2a0>
    4b34:	4443      	add	r3, r8
    4b36:	1e6a      	subs	r2, r5, #1
    4b38:	4598      	cmp	r8, r3
    4b3a:	d900      	bls.n	4b3e <__aeabi_ddiv+0x296>
    4b3c:	e11a      	b.n	4d74 <__aeabi_ddiv+0x4cc>
    4b3e:	4599      	cmp	r9, r3
    4b40:	d800      	bhi.n	4b44 <__aeabi_ddiv+0x29c>
    4b42:	e117      	b.n	4d74 <__aeabi_ddiv+0x4cc>
    4b44:	3d02      	subs	r5, #2
    4b46:	4443      	add	r3, r8
    4b48:	464a      	mov	r2, r9
    4b4a:	1a9b      	subs	r3, r3, r2
    4b4c:	465a      	mov	r2, fp
    4b4e:	0412      	lsls	r2, r2, #16
    4b50:	432a      	orrs	r2, r5
    4b52:	9903      	ldr	r1, [sp, #12]
    4b54:	4693      	mov	fp, r2
    4b56:	0c10      	lsrs	r0, r2, #16
    4b58:	0c0a      	lsrs	r2, r1, #16
    4b5a:	4691      	mov	r9, r2
    4b5c:	0409      	lsls	r1, r1, #16
    4b5e:	465a      	mov	r2, fp
    4b60:	0c09      	lsrs	r1, r1, #16
    4b62:	464e      	mov	r6, r9
    4b64:	000d      	movs	r5, r1
    4b66:	0412      	lsls	r2, r2, #16
    4b68:	0c12      	lsrs	r2, r2, #16
    4b6a:	4345      	muls	r5, r0
    4b6c:	9105      	str	r1, [sp, #20]
    4b6e:	4351      	muls	r1, r2
    4b70:	4372      	muls	r2, r6
    4b72:	4370      	muls	r0, r6
    4b74:	1952      	adds	r2, r2, r5
    4b76:	0c0e      	lsrs	r6, r1, #16
    4b78:	18b2      	adds	r2, r6, r2
    4b7a:	4295      	cmp	r5, r2
    4b7c:	d903      	bls.n	4b86 <__aeabi_ddiv+0x2de>
    4b7e:	2580      	movs	r5, #128	; 0x80
    4b80:	026d      	lsls	r5, r5, #9
    4b82:	46ac      	mov	ip, r5
    4b84:	4460      	add	r0, ip
    4b86:	0c15      	lsrs	r5, r2, #16
    4b88:	0409      	lsls	r1, r1, #16
    4b8a:	0412      	lsls	r2, r2, #16
    4b8c:	0c09      	lsrs	r1, r1, #16
    4b8e:	1828      	adds	r0, r5, r0
    4b90:	1852      	adds	r2, r2, r1
    4b92:	4283      	cmp	r3, r0
    4b94:	d200      	bcs.n	4b98 <__aeabi_ddiv+0x2f0>
    4b96:	e0ce      	b.n	4d36 <__aeabi_ddiv+0x48e>
    4b98:	d100      	bne.n	4b9c <__aeabi_ddiv+0x2f4>
    4b9a:	e0c8      	b.n	4d2e <__aeabi_ddiv+0x486>
    4b9c:	1a1d      	subs	r5, r3, r0
    4b9e:	4653      	mov	r3, sl
    4ba0:	1a9e      	subs	r6, r3, r2
    4ba2:	45b2      	cmp	sl, r6
    4ba4:	4192      	sbcs	r2, r2
    4ba6:	4252      	negs	r2, r2
    4ba8:	1aab      	subs	r3, r5, r2
    4baa:	469a      	mov	sl, r3
    4bac:	4598      	cmp	r8, r3
    4bae:	d100      	bne.n	4bb2 <__aeabi_ddiv+0x30a>
    4bb0:	e117      	b.n	4de2 <__aeabi_ddiv+0x53a>
    4bb2:	0039      	movs	r1, r7
    4bb4:	0018      	movs	r0, r3
    4bb6:	f001 f9eb 	bl	5f90 <__udivsi3>
    4bba:	9b01      	ldr	r3, [sp, #4]
    4bbc:	0005      	movs	r5, r0
    4bbe:	4343      	muls	r3, r0
    4bc0:	0039      	movs	r1, r7
    4bc2:	4650      	mov	r0, sl
    4bc4:	9304      	str	r3, [sp, #16]
    4bc6:	f001 fa69 	bl	609c <__aeabi_uidivmod>
    4bca:	9804      	ldr	r0, [sp, #16]
    4bcc:	040b      	lsls	r3, r1, #16
    4bce:	0c31      	lsrs	r1, r6, #16
    4bd0:	4319      	orrs	r1, r3
    4bd2:	4288      	cmp	r0, r1
    4bd4:	d909      	bls.n	4bea <__aeabi_ddiv+0x342>
    4bd6:	4441      	add	r1, r8
    4bd8:	1e6b      	subs	r3, r5, #1
    4bda:	4588      	cmp	r8, r1
    4bdc:	d900      	bls.n	4be0 <__aeabi_ddiv+0x338>
    4bde:	e107      	b.n	4df0 <__aeabi_ddiv+0x548>
    4be0:	4288      	cmp	r0, r1
    4be2:	d800      	bhi.n	4be6 <__aeabi_ddiv+0x33e>
    4be4:	e104      	b.n	4df0 <__aeabi_ddiv+0x548>
    4be6:	3d02      	subs	r5, #2
    4be8:	4441      	add	r1, r8
    4bea:	9b04      	ldr	r3, [sp, #16]
    4bec:	1acb      	subs	r3, r1, r3
    4bee:	0018      	movs	r0, r3
    4bf0:	0039      	movs	r1, r7
    4bf2:	9304      	str	r3, [sp, #16]
    4bf4:	f001 f9cc 	bl	5f90 <__udivsi3>
    4bf8:	9b01      	ldr	r3, [sp, #4]
    4bfa:	4682      	mov	sl, r0
    4bfc:	4343      	muls	r3, r0
    4bfe:	0039      	movs	r1, r7
    4c00:	9804      	ldr	r0, [sp, #16]
    4c02:	9301      	str	r3, [sp, #4]
    4c04:	f001 fa4a 	bl	609c <__aeabi_uidivmod>
    4c08:	9801      	ldr	r0, [sp, #4]
    4c0a:	040b      	lsls	r3, r1, #16
    4c0c:	0431      	lsls	r1, r6, #16
    4c0e:	0c09      	lsrs	r1, r1, #16
    4c10:	4319      	orrs	r1, r3
    4c12:	4288      	cmp	r0, r1
    4c14:	d90d      	bls.n	4c32 <__aeabi_ddiv+0x38a>
    4c16:	4653      	mov	r3, sl
    4c18:	4441      	add	r1, r8
    4c1a:	3b01      	subs	r3, #1
    4c1c:	4588      	cmp	r8, r1
    4c1e:	d900      	bls.n	4c22 <__aeabi_ddiv+0x37a>
    4c20:	e0e8      	b.n	4df4 <__aeabi_ddiv+0x54c>
    4c22:	4288      	cmp	r0, r1
    4c24:	d800      	bhi.n	4c28 <__aeabi_ddiv+0x380>
    4c26:	e0e5      	b.n	4df4 <__aeabi_ddiv+0x54c>
    4c28:	2302      	movs	r3, #2
    4c2a:	425b      	negs	r3, r3
    4c2c:	469c      	mov	ip, r3
    4c2e:	4441      	add	r1, r8
    4c30:	44e2      	add	sl, ip
    4c32:	9b01      	ldr	r3, [sp, #4]
    4c34:	042d      	lsls	r5, r5, #16
    4c36:	1ace      	subs	r6, r1, r3
    4c38:	4651      	mov	r1, sl
    4c3a:	4329      	orrs	r1, r5
    4c3c:	9d05      	ldr	r5, [sp, #20]
    4c3e:	464f      	mov	r7, r9
    4c40:	002a      	movs	r2, r5
    4c42:	040b      	lsls	r3, r1, #16
    4c44:	0c08      	lsrs	r0, r1, #16
    4c46:	0c1b      	lsrs	r3, r3, #16
    4c48:	435a      	muls	r2, r3
    4c4a:	4345      	muls	r5, r0
    4c4c:	437b      	muls	r3, r7
    4c4e:	4378      	muls	r0, r7
    4c50:	195b      	adds	r3, r3, r5
    4c52:	0c17      	lsrs	r7, r2, #16
    4c54:	18fb      	adds	r3, r7, r3
    4c56:	429d      	cmp	r5, r3
    4c58:	d903      	bls.n	4c62 <__aeabi_ddiv+0x3ba>
    4c5a:	2580      	movs	r5, #128	; 0x80
    4c5c:	026d      	lsls	r5, r5, #9
    4c5e:	46ac      	mov	ip, r5
    4c60:	4460      	add	r0, ip
    4c62:	0c1d      	lsrs	r5, r3, #16
    4c64:	0412      	lsls	r2, r2, #16
    4c66:	041b      	lsls	r3, r3, #16
    4c68:	0c12      	lsrs	r2, r2, #16
    4c6a:	1828      	adds	r0, r5, r0
    4c6c:	189b      	adds	r3, r3, r2
    4c6e:	4286      	cmp	r6, r0
    4c70:	d200      	bcs.n	4c74 <__aeabi_ddiv+0x3cc>
    4c72:	e093      	b.n	4d9c <__aeabi_ddiv+0x4f4>
    4c74:	d100      	bne.n	4c78 <__aeabi_ddiv+0x3d0>
    4c76:	e08e      	b.n	4d96 <__aeabi_ddiv+0x4ee>
    4c78:	2301      	movs	r3, #1
    4c7a:	4319      	orrs	r1, r3
    4c7c:	4ba0      	ldr	r3, [pc, #640]	; (4f00 <__aeabi_ddiv+0x658>)
    4c7e:	18e3      	adds	r3, r4, r3
    4c80:	2b00      	cmp	r3, #0
    4c82:	dc00      	bgt.n	4c86 <__aeabi_ddiv+0x3de>
    4c84:	e099      	b.n	4dba <__aeabi_ddiv+0x512>
    4c86:	074a      	lsls	r2, r1, #29
    4c88:	d000      	beq.n	4c8c <__aeabi_ddiv+0x3e4>
    4c8a:	e09e      	b.n	4dca <__aeabi_ddiv+0x522>
    4c8c:	465a      	mov	r2, fp
    4c8e:	01d2      	lsls	r2, r2, #7
    4c90:	d506      	bpl.n	4ca0 <__aeabi_ddiv+0x3f8>
    4c92:	465a      	mov	r2, fp
    4c94:	4b9b      	ldr	r3, [pc, #620]	; (4f04 <__aeabi_ddiv+0x65c>)
    4c96:	401a      	ands	r2, r3
    4c98:	2380      	movs	r3, #128	; 0x80
    4c9a:	4693      	mov	fp, r2
    4c9c:	00db      	lsls	r3, r3, #3
    4c9e:	18e3      	adds	r3, r4, r3
    4ca0:	4a99      	ldr	r2, [pc, #612]	; (4f08 <__aeabi_ddiv+0x660>)
    4ca2:	4293      	cmp	r3, r2
    4ca4:	dd68      	ble.n	4d78 <__aeabi_ddiv+0x4d0>
    4ca6:	2301      	movs	r3, #1
    4ca8:	9a02      	ldr	r2, [sp, #8]
    4caa:	4c98      	ldr	r4, [pc, #608]	; (4f0c <__aeabi_ddiv+0x664>)
    4cac:	401a      	ands	r2, r3
    4cae:	2300      	movs	r3, #0
    4cb0:	4694      	mov	ip, r2
    4cb2:	4698      	mov	r8, r3
    4cb4:	2200      	movs	r2, #0
    4cb6:	e6c5      	b.n	4a44 <__aeabi_ddiv+0x19c>
    4cb8:	2280      	movs	r2, #128	; 0x80
    4cba:	464b      	mov	r3, r9
    4cbc:	0312      	lsls	r2, r2, #12
    4cbe:	4213      	tst	r3, r2
    4cc0:	d00a      	beq.n	4cd8 <__aeabi_ddiv+0x430>
    4cc2:	465b      	mov	r3, fp
    4cc4:	4213      	tst	r3, r2
    4cc6:	d106      	bne.n	4cd6 <__aeabi_ddiv+0x42e>
    4cc8:	431a      	orrs	r2, r3
    4cca:	0312      	lsls	r2, r2, #12
    4ccc:	0b12      	lsrs	r2, r2, #12
    4cce:	46ac      	mov	ip, r5
    4cd0:	4688      	mov	r8, r1
    4cd2:	4c8e      	ldr	r4, [pc, #568]	; (4f0c <__aeabi_ddiv+0x664>)
    4cd4:	e6b6      	b.n	4a44 <__aeabi_ddiv+0x19c>
    4cd6:	464b      	mov	r3, r9
    4cd8:	431a      	orrs	r2, r3
    4cda:	0312      	lsls	r2, r2, #12
    4cdc:	0b12      	lsrs	r2, r2, #12
    4cde:	46bc      	mov	ip, r7
    4ce0:	4c8a      	ldr	r4, [pc, #552]	; (4f0c <__aeabi_ddiv+0x664>)
    4ce2:	e6af      	b.n	4a44 <__aeabi_ddiv+0x19c>
    4ce4:	0003      	movs	r3, r0
    4ce6:	465a      	mov	r2, fp
    4ce8:	3b28      	subs	r3, #40	; 0x28
    4cea:	409a      	lsls	r2, r3
    4cec:	2300      	movs	r3, #0
    4cee:	4691      	mov	r9, r2
    4cf0:	4698      	mov	r8, r3
    4cf2:	e657      	b.n	49a4 <__aeabi_ddiv+0xfc>
    4cf4:	4658      	mov	r0, fp
    4cf6:	f001 f9d7 	bl	60a8 <__clzsi2>
    4cfa:	3020      	adds	r0, #32
    4cfc:	e640      	b.n	4980 <__aeabi_ddiv+0xd8>
    4cfe:	0003      	movs	r3, r0
    4d00:	4652      	mov	r2, sl
    4d02:	3b28      	subs	r3, #40	; 0x28
    4d04:	409a      	lsls	r2, r3
    4d06:	2100      	movs	r1, #0
    4d08:	4693      	mov	fp, r2
    4d0a:	e677      	b.n	49fc <__aeabi_ddiv+0x154>
    4d0c:	f001 f9cc 	bl	60a8 <__clzsi2>
    4d10:	3020      	adds	r0, #32
    4d12:	e65f      	b.n	49d4 <__aeabi_ddiv+0x12c>
    4d14:	4588      	cmp	r8, r1
    4d16:	d200      	bcs.n	4d1a <__aeabi_ddiv+0x472>
    4d18:	e6c7      	b.n	4aaa <__aeabi_ddiv+0x202>
    4d1a:	464b      	mov	r3, r9
    4d1c:	07de      	lsls	r6, r3, #31
    4d1e:	085d      	lsrs	r5, r3, #1
    4d20:	4643      	mov	r3, r8
    4d22:	085b      	lsrs	r3, r3, #1
    4d24:	431e      	orrs	r6, r3
    4d26:	4643      	mov	r3, r8
    4d28:	07db      	lsls	r3, r3, #31
    4d2a:	469a      	mov	sl, r3
    4d2c:	e6c2      	b.n	4ab4 <__aeabi_ddiv+0x20c>
    4d2e:	2500      	movs	r5, #0
    4d30:	4592      	cmp	sl, r2
    4d32:	d300      	bcc.n	4d36 <__aeabi_ddiv+0x48e>
    4d34:	e733      	b.n	4b9e <__aeabi_ddiv+0x2f6>
    4d36:	9e03      	ldr	r6, [sp, #12]
    4d38:	4659      	mov	r1, fp
    4d3a:	46b4      	mov	ip, r6
    4d3c:	44e2      	add	sl, ip
    4d3e:	45b2      	cmp	sl, r6
    4d40:	41ad      	sbcs	r5, r5
    4d42:	426d      	negs	r5, r5
    4d44:	4445      	add	r5, r8
    4d46:	18eb      	adds	r3, r5, r3
    4d48:	3901      	subs	r1, #1
    4d4a:	4598      	cmp	r8, r3
    4d4c:	d207      	bcs.n	4d5e <__aeabi_ddiv+0x4b6>
    4d4e:	4298      	cmp	r0, r3
    4d50:	d900      	bls.n	4d54 <__aeabi_ddiv+0x4ac>
    4d52:	e07f      	b.n	4e54 <__aeabi_ddiv+0x5ac>
    4d54:	d100      	bne.n	4d58 <__aeabi_ddiv+0x4b0>
    4d56:	e0bc      	b.n	4ed2 <__aeabi_ddiv+0x62a>
    4d58:	1a1d      	subs	r5, r3, r0
    4d5a:	468b      	mov	fp, r1
    4d5c:	e71f      	b.n	4b9e <__aeabi_ddiv+0x2f6>
    4d5e:	4598      	cmp	r8, r3
    4d60:	d1fa      	bne.n	4d58 <__aeabi_ddiv+0x4b0>
    4d62:	9d03      	ldr	r5, [sp, #12]
    4d64:	4555      	cmp	r5, sl
    4d66:	d9f2      	bls.n	4d4e <__aeabi_ddiv+0x4a6>
    4d68:	4643      	mov	r3, r8
    4d6a:	468b      	mov	fp, r1
    4d6c:	1a1d      	subs	r5, r3, r0
    4d6e:	e716      	b.n	4b9e <__aeabi_ddiv+0x2f6>
    4d70:	469b      	mov	fp, r3
    4d72:	e6ca      	b.n	4b0a <__aeabi_ddiv+0x262>
    4d74:	0015      	movs	r5, r2
    4d76:	e6e7      	b.n	4b48 <__aeabi_ddiv+0x2a0>
    4d78:	465a      	mov	r2, fp
    4d7a:	08c9      	lsrs	r1, r1, #3
    4d7c:	0752      	lsls	r2, r2, #29
    4d7e:	430a      	orrs	r2, r1
    4d80:	055b      	lsls	r3, r3, #21
    4d82:	4690      	mov	r8, r2
    4d84:	0d5c      	lsrs	r4, r3, #21
    4d86:	465a      	mov	r2, fp
    4d88:	2301      	movs	r3, #1
    4d8a:	9902      	ldr	r1, [sp, #8]
    4d8c:	0252      	lsls	r2, r2, #9
    4d8e:	4019      	ands	r1, r3
    4d90:	0b12      	lsrs	r2, r2, #12
    4d92:	468c      	mov	ip, r1
    4d94:	e656      	b.n	4a44 <__aeabi_ddiv+0x19c>
    4d96:	2b00      	cmp	r3, #0
    4d98:	d100      	bne.n	4d9c <__aeabi_ddiv+0x4f4>
    4d9a:	e76f      	b.n	4c7c <__aeabi_ddiv+0x3d4>
    4d9c:	4446      	add	r6, r8
    4d9e:	1e4a      	subs	r2, r1, #1
    4da0:	45b0      	cmp	r8, r6
    4da2:	d929      	bls.n	4df8 <__aeabi_ddiv+0x550>
    4da4:	0011      	movs	r1, r2
    4da6:	4286      	cmp	r6, r0
    4da8:	d000      	beq.n	4dac <__aeabi_ddiv+0x504>
    4daa:	e765      	b.n	4c78 <__aeabi_ddiv+0x3d0>
    4dac:	9a03      	ldr	r2, [sp, #12]
    4dae:	4293      	cmp	r3, r2
    4db0:	d000      	beq.n	4db4 <__aeabi_ddiv+0x50c>
    4db2:	e761      	b.n	4c78 <__aeabi_ddiv+0x3d0>
    4db4:	e762      	b.n	4c7c <__aeabi_ddiv+0x3d4>
    4db6:	2101      	movs	r1, #1
    4db8:	4249      	negs	r1, r1
    4dba:	2001      	movs	r0, #1
    4dbc:	1ac2      	subs	r2, r0, r3
    4dbe:	2a38      	cmp	r2, #56	; 0x38
    4dc0:	dd21      	ble.n	4e06 <__aeabi_ddiv+0x55e>
    4dc2:	9b02      	ldr	r3, [sp, #8]
    4dc4:	4003      	ands	r3, r0
    4dc6:	469c      	mov	ip, r3
    4dc8:	e638      	b.n	4a3c <__aeabi_ddiv+0x194>
    4dca:	220f      	movs	r2, #15
    4dcc:	400a      	ands	r2, r1
    4dce:	2a04      	cmp	r2, #4
    4dd0:	d100      	bne.n	4dd4 <__aeabi_ddiv+0x52c>
    4dd2:	e75b      	b.n	4c8c <__aeabi_ddiv+0x3e4>
    4dd4:	000a      	movs	r2, r1
    4dd6:	1d11      	adds	r1, r2, #4
    4dd8:	4291      	cmp	r1, r2
    4dda:	4192      	sbcs	r2, r2
    4ddc:	4252      	negs	r2, r2
    4dde:	4493      	add	fp, r2
    4de0:	e754      	b.n	4c8c <__aeabi_ddiv+0x3e4>
    4de2:	4b47      	ldr	r3, [pc, #284]	; (4f00 <__aeabi_ddiv+0x658>)
    4de4:	18e3      	adds	r3, r4, r3
    4de6:	2b00      	cmp	r3, #0
    4de8:	dde5      	ble.n	4db6 <__aeabi_ddiv+0x50e>
    4dea:	2201      	movs	r2, #1
    4dec:	4252      	negs	r2, r2
    4dee:	e7f2      	b.n	4dd6 <__aeabi_ddiv+0x52e>
    4df0:	001d      	movs	r5, r3
    4df2:	e6fa      	b.n	4bea <__aeabi_ddiv+0x342>
    4df4:	469a      	mov	sl, r3
    4df6:	e71c      	b.n	4c32 <__aeabi_ddiv+0x38a>
    4df8:	42b0      	cmp	r0, r6
    4dfa:	d839      	bhi.n	4e70 <__aeabi_ddiv+0x5c8>
    4dfc:	d06e      	beq.n	4edc <__aeabi_ddiv+0x634>
    4dfe:	0011      	movs	r1, r2
    4e00:	e73a      	b.n	4c78 <__aeabi_ddiv+0x3d0>
    4e02:	9302      	str	r3, [sp, #8]
    4e04:	e73a      	b.n	4c7c <__aeabi_ddiv+0x3d4>
    4e06:	2a1f      	cmp	r2, #31
    4e08:	dc3c      	bgt.n	4e84 <__aeabi_ddiv+0x5dc>
    4e0a:	2320      	movs	r3, #32
    4e0c:	1a9b      	subs	r3, r3, r2
    4e0e:	000c      	movs	r4, r1
    4e10:	4658      	mov	r0, fp
    4e12:	4099      	lsls	r1, r3
    4e14:	4098      	lsls	r0, r3
    4e16:	1e4b      	subs	r3, r1, #1
    4e18:	4199      	sbcs	r1, r3
    4e1a:	465b      	mov	r3, fp
    4e1c:	40d4      	lsrs	r4, r2
    4e1e:	40d3      	lsrs	r3, r2
    4e20:	4320      	orrs	r0, r4
    4e22:	4308      	orrs	r0, r1
    4e24:	001a      	movs	r2, r3
    4e26:	0743      	lsls	r3, r0, #29
    4e28:	d009      	beq.n	4e3e <__aeabi_ddiv+0x596>
    4e2a:	230f      	movs	r3, #15
    4e2c:	4003      	ands	r3, r0
    4e2e:	2b04      	cmp	r3, #4
    4e30:	d005      	beq.n	4e3e <__aeabi_ddiv+0x596>
    4e32:	0001      	movs	r1, r0
    4e34:	1d08      	adds	r0, r1, #4
    4e36:	4288      	cmp	r0, r1
    4e38:	419b      	sbcs	r3, r3
    4e3a:	425b      	negs	r3, r3
    4e3c:	18d2      	adds	r2, r2, r3
    4e3e:	0213      	lsls	r3, r2, #8
    4e40:	d53a      	bpl.n	4eb8 <__aeabi_ddiv+0x610>
    4e42:	2301      	movs	r3, #1
    4e44:	9a02      	ldr	r2, [sp, #8]
    4e46:	2401      	movs	r4, #1
    4e48:	401a      	ands	r2, r3
    4e4a:	2300      	movs	r3, #0
    4e4c:	4694      	mov	ip, r2
    4e4e:	4698      	mov	r8, r3
    4e50:	2200      	movs	r2, #0
    4e52:	e5f7      	b.n	4a44 <__aeabi_ddiv+0x19c>
    4e54:	2102      	movs	r1, #2
    4e56:	4249      	negs	r1, r1
    4e58:	468c      	mov	ip, r1
    4e5a:	9d03      	ldr	r5, [sp, #12]
    4e5c:	44e3      	add	fp, ip
    4e5e:	46ac      	mov	ip, r5
    4e60:	44e2      	add	sl, ip
    4e62:	45aa      	cmp	sl, r5
    4e64:	41ad      	sbcs	r5, r5
    4e66:	426d      	negs	r5, r5
    4e68:	4445      	add	r5, r8
    4e6a:	18ed      	adds	r5, r5, r3
    4e6c:	1a2d      	subs	r5, r5, r0
    4e6e:	e696      	b.n	4b9e <__aeabi_ddiv+0x2f6>
    4e70:	1e8a      	subs	r2, r1, #2
    4e72:	9903      	ldr	r1, [sp, #12]
    4e74:	004d      	lsls	r5, r1, #1
    4e76:	428d      	cmp	r5, r1
    4e78:	4189      	sbcs	r1, r1
    4e7a:	4249      	negs	r1, r1
    4e7c:	4441      	add	r1, r8
    4e7e:	1876      	adds	r6, r6, r1
    4e80:	9503      	str	r5, [sp, #12]
    4e82:	e78f      	b.n	4da4 <__aeabi_ddiv+0x4fc>
    4e84:	201f      	movs	r0, #31
    4e86:	4240      	negs	r0, r0
    4e88:	1ac3      	subs	r3, r0, r3
    4e8a:	4658      	mov	r0, fp
    4e8c:	40d8      	lsrs	r0, r3
    4e8e:	0003      	movs	r3, r0
    4e90:	2a20      	cmp	r2, #32
    4e92:	d028      	beq.n	4ee6 <__aeabi_ddiv+0x63e>
    4e94:	2040      	movs	r0, #64	; 0x40
    4e96:	465d      	mov	r5, fp
    4e98:	1a82      	subs	r2, r0, r2
    4e9a:	4095      	lsls	r5, r2
    4e9c:	4329      	orrs	r1, r5
    4e9e:	1e4a      	subs	r2, r1, #1
    4ea0:	4191      	sbcs	r1, r2
    4ea2:	4319      	orrs	r1, r3
    4ea4:	2307      	movs	r3, #7
    4ea6:	2200      	movs	r2, #0
    4ea8:	400b      	ands	r3, r1
    4eaa:	d009      	beq.n	4ec0 <__aeabi_ddiv+0x618>
    4eac:	230f      	movs	r3, #15
    4eae:	2200      	movs	r2, #0
    4eb0:	400b      	ands	r3, r1
    4eb2:	0008      	movs	r0, r1
    4eb4:	2b04      	cmp	r3, #4
    4eb6:	d1bd      	bne.n	4e34 <__aeabi_ddiv+0x58c>
    4eb8:	0001      	movs	r1, r0
    4eba:	0753      	lsls	r3, r2, #29
    4ebc:	0252      	lsls	r2, r2, #9
    4ebe:	0b12      	lsrs	r2, r2, #12
    4ec0:	08c9      	lsrs	r1, r1, #3
    4ec2:	4319      	orrs	r1, r3
    4ec4:	2301      	movs	r3, #1
    4ec6:	4688      	mov	r8, r1
    4ec8:	9902      	ldr	r1, [sp, #8]
    4eca:	2400      	movs	r4, #0
    4ecc:	4019      	ands	r1, r3
    4ece:	468c      	mov	ip, r1
    4ed0:	e5b8      	b.n	4a44 <__aeabi_ddiv+0x19c>
    4ed2:	4552      	cmp	r2, sl
    4ed4:	d8be      	bhi.n	4e54 <__aeabi_ddiv+0x5ac>
    4ed6:	468b      	mov	fp, r1
    4ed8:	2500      	movs	r5, #0
    4eda:	e660      	b.n	4b9e <__aeabi_ddiv+0x2f6>
    4edc:	9d03      	ldr	r5, [sp, #12]
    4ede:	429d      	cmp	r5, r3
    4ee0:	d3c6      	bcc.n	4e70 <__aeabi_ddiv+0x5c8>
    4ee2:	0011      	movs	r1, r2
    4ee4:	e762      	b.n	4dac <__aeabi_ddiv+0x504>
    4ee6:	2500      	movs	r5, #0
    4ee8:	e7d8      	b.n	4e9c <__aeabi_ddiv+0x5f4>
    4eea:	2280      	movs	r2, #128	; 0x80
    4eec:	465b      	mov	r3, fp
    4eee:	0312      	lsls	r2, r2, #12
    4ef0:	431a      	orrs	r2, r3
    4ef2:	9b01      	ldr	r3, [sp, #4]
    4ef4:	0312      	lsls	r2, r2, #12
    4ef6:	0b12      	lsrs	r2, r2, #12
    4ef8:	469c      	mov	ip, r3
    4efa:	4688      	mov	r8, r1
    4efc:	4c03      	ldr	r4, [pc, #12]	; (4f0c <__aeabi_ddiv+0x664>)
    4efe:	e5a1      	b.n	4a44 <__aeabi_ddiv+0x19c>
    4f00:	000003ff 	.word	0x000003ff
    4f04:	feffffff 	.word	0xfeffffff
    4f08:	000007fe 	.word	0x000007fe
    4f0c:	000007ff 	.word	0x000007ff

00004f10 <__eqdf2>:
    4f10:	b5f0      	push	{r4, r5, r6, r7, lr}
    4f12:	464f      	mov	r7, r9
    4f14:	4646      	mov	r6, r8
    4f16:	46d6      	mov	lr, sl
    4f18:	005c      	lsls	r4, r3, #1
    4f1a:	b5c0      	push	{r6, r7, lr}
    4f1c:	031f      	lsls	r7, r3, #12
    4f1e:	0fdb      	lsrs	r3, r3, #31
    4f20:	469a      	mov	sl, r3
    4f22:	4b17      	ldr	r3, [pc, #92]	; (4f80 <__eqdf2+0x70>)
    4f24:	030e      	lsls	r6, r1, #12
    4f26:	004d      	lsls	r5, r1, #1
    4f28:	4684      	mov	ip, r0
    4f2a:	4680      	mov	r8, r0
    4f2c:	0b36      	lsrs	r6, r6, #12
    4f2e:	0d6d      	lsrs	r5, r5, #21
    4f30:	0fc9      	lsrs	r1, r1, #31
    4f32:	4691      	mov	r9, r2
    4f34:	0b3f      	lsrs	r7, r7, #12
    4f36:	0d64      	lsrs	r4, r4, #21
    4f38:	2001      	movs	r0, #1
    4f3a:	429d      	cmp	r5, r3
    4f3c:	d008      	beq.n	4f50 <__eqdf2+0x40>
    4f3e:	429c      	cmp	r4, r3
    4f40:	d001      	beq.n	4f46 <__eqdf2+0x36>
    4f42:	42a5      	cmp	r5, r4
    4f44:	d00b      	beq.n	4f5e <__eqdf2+0x4e>
    4f46:	bc1c      	pop	{r2, r3, r4}
    4f48:	4690      	mov	r8, r2
    4f4a:	4699      	mov	r9, r3
    4f4c:	46a2      	mov	sl, r4
    4f4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4f50:	4663      	mov	r3, ip
    4f52:	4333      	orrs	r3, r6
    4f54:	d1f7      	bne.n	4f46 <__eqdf2+0x36>
    4f56:	42ac      	cmp	r4, r5
    4f58:	d1f5      	bne.n	4f46 <__eqdf2+0x36>
    4f5a:	433a      	orrs	r2, r7
    4f5c:	d1f3      	bne.n	4f46 <__eqdf2+0x36>
    4f5e:	2001      	movs	r0, #1
    4f60:	42be      	cmp	r6, r7
    4f62:	d1f0      	bne.n	4f46 <__eqdf2+0x36>
    4f64:	45c8      	cmp	r8, r9
    4f66:	d1ee      	bne.n	4f46 <__eqdf2+0x36>
    4f68:	4551      	cmp	r1, sl
    4f6a:	d007      	beq.n	4f7c <__eqdf2+0x6c>
    4f6c:	2d00      	cmp	r5, #0
    4f6e:	d1ea      	bne.n	4f46 <__eqdf2+0x36>
    4f70:	4663      	mov	r3, ip
    4f72:	431e      	orrs	r6, r3
    4f74:	0030      	movs	r0, r6
    4f76:	1e46      	subs	r6, r0, #1
    4f78:	41b0      	sbcs	r0, r6
    4f7a:	e7e4      	b.n	4f46 <__eqdf2+0x36>
    4f7c:	2000      	movs	r0, #0
    4f7e:	e7e2      	b.n	4f46 <__eqdf2+0x36>
    4f80:	000007ff 	.word	0x000007ff

00004f84 <__gedf2>:
    4f84:	b5f0      	push	{r4, r5, r6, r7, lr}
    4f86:	4645      	mov	r5, r8
    4f88:	46de      	mov	lr, fp
    4f8a:	4657      	mov	r7, sl
    4f8c:	464e      	mov	r6, r9
    4f8e:	b5e0      	push	{r5, r6, r7, lr}
    4f90:	031f      	lsls	r7, r3, #12
    4f92:	0b3d      	lsrs	r5, r7, #12
    4f94:	4f2c      	ldr	r7, [pc, #176]	; (5048 <__gedf2+0xc4>)
    4f96:	030e      	lsls	r6, r1, #12
    4f98:	004c      	lsls	r4, r1, #1
    4f9a:	46ab      	mov	fp, r5
    4f9c:	005d      	lsls	r5, r3, #1
    4f9e:	4684      	mov	ip, r0
    4fa0:	0b36      	lsrs	r6, r6, #12
    4fa2:	0d64      	lsrs	r4, r4, #21
    4fa4:	0fc9      	lsrs	r1, r1, #31
    4fa6:	4690      	mov	r8, r2
    4fa8:	0d6d      	lsrs	r5, r5, #21
    4faa:	0fdb      	lsrs	r3, r3, #31
    4fac:	42bc      	cmp	r4, r7
    4fae:	d02a      	beq.n	5006 <__gedf2+0x82>
    4fb0:	4f25      	ldr	r7, [pc, #148]	; (5048 <__gedf2+0xc4>)
    4fb2:	42bd      	cmp	r5, r7
    4fb4:	d02d      	beq.n	5012 <__gedf2+0x8e>
    4fb6:	2c00      	cmp	r4, #0
    4fb8:	d10f      	bne.n	4fda <__gedf2+0x56>
    4fba:	4330      	orrs	r0, r6
    4fbc:	0007      	movs	r7, r0
    4fbe:	4681      	mov	r9, r0
    4fc0:	4278      	negs	r0, r7
    4fc2:	4178      	adcs	r0, r7
    4fc4:	b2c0      	uxtb	r0, r0
    4fc6:	2d00      	cmp	r5, #0
    4fc8:	d117      	bne.n	4ffa <__gedf2+0x76>
    4fca:	465f      	mov	r7, fp
    4fcc:	433a      	orrs	r2, r7
    4fce:	d114      	bne.n	4ffa <__gedf2+0x76>
    4fd0:	464b      	mov	r3, r9
    4fd2:	2000      	movs	r0, #0
    4fd4:	2b00      	cmp	r3, #0
    4fd6:	d00a      	beq.n	4fee <__gedf2+0x6a>
    4fd8:	e006      	b.n	4fe8 <__gedf2+0x64>
    4fda:	2d00      	cmp	r5, #0
    4fdc:	d102      	bne.n	4fe4 <__gedf2+0x60>
    4fde:	4658      	mov	r0, fp
    4fe0:	4302      	orrs	r2, r0
    4fe2:	d001      	beq.n	4fe8 <__gedf2+0x64>
    4fe4:	4299      	cmp	r1, r3
    4fe6:	d018      	beq.n	501a <__gedf2+0x96>
    4fe8:	4248      	negs	r0, r1
    4fea:	2101      	movs	r1, #1
    4fec:	4308      	orrs	r0, r1
    4fee:	bc3c      	pop	{r2, r3, r4, r5}
    4ff0:	4690      	mov	r8, r2
    4ff2:	4699      	mov	r9, r3
    4ff4:	46a2      	mov	sl, r4
    4ff6:	46ab      	mov	fp, r5
    4ff8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4ffa:	2800      	cmp	r0, #0
    4ffc:	d0f2      	beq.n	4fe4 <__gedf2+0x60>
    4ffe:	2001      	movs	r0, #1
    5000:	3b01      	subs	r3, #1
    5002:	4318      	orrs	r0, r3
    5004:	e7f3      	b.n	4fee <__gedf2+0x6a>
    5006:	0037      	movs	r7, r6
    5008:	4307      	orrs	r7, r0
    500a:	d0d1      	beq.n	4fb0 <__gedf2+0x2c>
    500c:	2002      	movs	r0, #2
    500e:	4240      	negs	r0, r0
    5010:	e7ed      	b.n	4fee <__gedf2+0x6a>
    5012:	465f      	mov	r7, fp
    5014:	4317      	orrs	r7, r2
    5016:	d0ce      	beq.n	4fb6 <__gedf2+0x32>
    5018:	e7f8      	b.n	500c <__gedf2+0x88>
    501a:	42ac      	cmp	r4, r5
    501c:	dce4      	bgt.n	4fe8 <__gedf2+0x64>
    501e:	da03      	bge.n	5028 <__gedf2+0xa4>
    5020:	1e48      	subs	r0, r1, #1
    5022:	2101      	movs	r1, #1
    5024:	4308      	orrs	r0, r1
    5026:	e7e2      	b.n	4fee <__gedf2+0x6a>
    5028:	455e      	cmp	r6, fp
    502a:	d8dd      	bhi.n	4fe8 <__gedf2+0x64>
    502c:	d006      	beq.n	503c <__gedf2+0xb8>
    502e:	2000      	movs	r0, #0
    5030:	455e      	cmp	r6, fp
    5032:	d2dc      	bcs.n	4fee <__gedf2+0x6a>
    5034:	2301      	movs	r3, #1
    5036:	1e48      	subs	r0, r1, #1
    5038:	4318      	orrs	r0, r3
    503a:	e7d8      	b.n	4fee <__gedf2+0x6a>
    503c:	45c4      	cmp	ip, r8
    503e:	d8d3      	bhi.n	4fe8 <__gedf2+0x64>
    5040:	2000      	movs	r0, #0
    5042:	45c4      	cmp	ip, r8
    5044:	d3f6      	bcc.n	5034 <__gedf2+0xb0>
    5046:	e7d2      	b.n	4fee <__gedf2+0x6a>
    5048:	000007ff 	.word	0x000007ff

0000504c <__ledf2>:
    504c:	b5f0      	push	{r4, r5, r6, r7, lr}
    504e:	464e      	mov	r6, r9
    5050:	4645      	mov	r5, r8
    5052:	46de      	mov	lr, fp
    5054:	4657      	mov	r7, sl
    5056:	005c      	lsls	r4, r3, #1
    5058:	b5e0      	push	{r5, r6, r7, lr}
    505a:	031f      	lsls	r7, r3, #12
    505c:	0fdb      	lsrs	r3, r3, #31
    505e:	4699      	mov	r9, r3
    5060:	4b2a      	ldr	r3, [pc, #168]	; (510c <__ledf2+0xc0>)
    5062:	030e      	lsls	r6, r1, #12
    5064:	004d      	lsls	r5, r1, #1
    5066:	0fc9      	lsrs	r1, r1, #31
    5068:	4684      	mov	ip, r0
    506a:	0b36      	lsrs	r6, r6, #12
    506c:	0d6d      	lsrs	r5, r5, #21
    506e:	468b      	mov	fp, r1
    5070:	4690      	mov	r8, r2
    5072:	0b3f      	lsrs	r7, r7, #12
    5074:	0d64      	lsrs	r4, r4, #21
    5076:	429d      	cmp	r5, r3
    5078:	d020      	beq.n	50bc <__ledf2+0x70>
    507a:	4b24      	ldr	r3, [pc, #144]	; (510c <__ledf2+0xc0>)
    507c:	429c      	cmp	r4, r3
    507e:	d022      	beq.n	50c6 <__ledf2+0x7a>
    5080:	2d00      	cmp	r5, #0
    5082:	d112      	bne.n	50aa <__ledf2+0x5e>
    5084:	4330      	orrs	r0, r6
    5086:	4243      	negs	r3, r0
    5088:	4143      	adcs	r3, r0
    508a:	b2db      	uxtb	r3, r3
    508c:	2c00      	cmp	r4, #0
    508e:	d01f      	beq.n	50d0 <__ledf2+0x84>
    5090:	2b00      	cmp	r3, #0
    5092:	d00c      	beq.n	50ae <__ledf2+0x62>
    5094:	464b      	mov	r3, r9
    5096:	2001      	movs	r0, #1
    5098:	3b01      	subs	r3, #1
    509a:	4303      	orrs	r3, r0
    509c:	0018      	movs	r0, r3
    509e:	bc3c      	pop	{r2, r3, r4, r5}
    50a0:	4690      	mov	r8, r2
    50a2:	4699      	mov	r9, r3
    50a4:	46a2      	mov	sl, r4
    50a6:	46ab      	mov	fp, r5
    50a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    50aa:	2c00      	cmp	r4, #0
    50ac:	d016      	beq.n	50dc <__ledf2+0x90>
    50ae:	45cb      	cmp	fp, r9
    50b0:	d017      	beq.n	50e2 <__ledf2+0x96>
    50b2:	465b      	mov	r3, fp
    50b4:	4259      	negs	r1, r3
    50b6:	2301      	movs	r3, #1
    50b8:	430b      	orrs	r3, r1
    50ba:	e7ef      	b.n	509c <__ledf2+0x50>
    50bc:	0031      	movs	r1, r6
    50be:	2302      	movs	r3, #2
    50c0:	4301      	orrs	r1, r0
    50c2:	d1eb      	bne.n	509c <__ledf2+0x50>
    50c4:	e7d9      	b.n	507a <__ledf2+0x2e>
    50c6:	0039      	movs	r1, r7
    50c8:	2302      	movs	r3, #2
    50ca:	4311      	orrs	r1, r2
    50cc:	d1e6      	bne.n	509c <__ledf2+0x50>
    50ce:	e7d7      	b.n	5080 <__ledf2+0x34>
    50d0:	433a      	orrs	r2, r7
    50d2:	d1dd      	bne.n	5090 <__ledf2+0x44>
    50d4:	2300      	movs	r3, #0
    50d6:	2800      	cmp	r0, #0
    50d8:	d0e0      	beq.n	509c <__ledf2+0x50>
    50da:	e7ea      	b.n	50b2 <__ledf2+0x66>
    50dc:	433a      	orrs	r2, r7
    50de:	d1e6      	bne.n	50ae <__ledf2+0x62>
    50e0:	e7e7      	b.n	50b2 <__ledf2+0x66>
    50e2:	42a5      	cmp	r5, r4
    50e4:	dce5      	bgt.n	50b2 <__ledf2+0x66>
    50e6:	db05      	blt.n	50f4 <__ledf2+0xa8>
    50e8:	42be      	cmp	r6, r7
    50ea:	d8e2      	bhi.n	50b2 <__ledf2+0x66>
    50ec:	d007      	beq.n	50fe <__ledf2+0xb2>
    50ee:	2300      	movs	r3, #0
    50f0:	42be      	cmp	r6, r7
    50f2:	d2d3      	bcs.n	509c <__ledf2+0x50>
    50f4:	4659      	mov	r1, fp
    50f6:	2301      	movs	r3, #1
    50f8:	3901      	subs	r1, #1
    50fa:	430b      	orrs	r3, r1
    50fc:	e7ce      	b.n	509c <__ledf2+0x50>
    50fe:	45c4      	cmp	ip, r8
    5100:	d8d7      	bhi.n	50b2 <__ledf2+0x66>
    5102:	2300      	movs	r3, #0
    5104:	45c4      	cmp	ip, r8
    5106:	d3f5      	bcc.n	50f4 <__ledf2+0xa8>
    5108:	e7c8      	b.n	509c <__ledf2+0x50>
    510a:	46c0      	nop			; (mov r8, r8)
    510c:	000007ff 	.word	0x000007ff

00005110 <__aeabi_dmul>:
    5110:	b5f0      	push	{r4, r5, r6, r7, lr}
    5112:	4657      	mov	r7, sl
    5114:	4645      	mov	r5, r8
    5116:	46de      	mov	lr, fp
    5118:	464e      	mov	r6, r9
    511a:	b5e0      	push	{r5, r6, r7, lr}
    511c:	030c      	lsls	r4, r1, #12
    511e:	4698      	mov	r8, r3
    5120:	004e      	lsls	r6, r1, #1
    5122:	0b23      	lsrs	r3, r4, #12
    5124:	b087      	sub	sp, #28
    5126:	0007      	movs	r7, r0
    5128:	4692      	mov	sl, r2
    512a:	469b      	mov	fp, r3
    512c:	0d76      	lsrs	r6, r6, #21
    512e:	0fcd      	lsrs	r5, r1, #31
    5130:	2e00      	cmp	r6, #0
    5132:	d06b      	beq.n	520c <__aeabi_dmul+0xfc>
    5134:	4b6d      	ldr	r3, [pc, #436]	; (52ec <__aeabi_dmul+0x1dc>)
    5136:	429e      	cmp	r6, r3
    5138:	d035      	beq.n	51a6 <__aeabi_dmul+0x96>
    513a:	2480      	movs	r4, #128	; 0x80
    513c:	465b      	mov	r3, fp
    513e:	0f42      	lsrs	r2, r0, #29
    5140:	0424      	lsls	r4, r4, #16
    5142:	00db      	lsls	r3, r3, #3
    5144:	4314      	orrs	r4, r2
    5146:	431c      	orrs	r4, r3
    5148:	00c3      	lsls	r3, r0, #3
    514a:	4699      	mov	r9, r3
    514c:	4b68      	ldr	r3, [pc, #416]	; (52f0 <__aeabi_dmul+0x1e0>)
    514e:	46a3      	mov	fp, r4
    5150:	469c      	mov	ip, r3
    5152:	2300      	movs	r3, #0
    5154:	2700      	movs	r7, #0
    5156:	4466      	add	r6, ip
    5158:	9302      	str	r3, [sp, #8]
    515a:	4643      	mov	r3, r8
    515c:	031c      	lsls	r4, r3, #12
    515e:	005a      	lsls	r2, r3, #1
    5160:	0fdb      	lsrs	r3, r3, #31
    5162:	4650      	mov	r0, sl
    5164:	0b24      	lsrs	r4, r4, #12
    5166:	0d52      	lsrs	r2, r2, #21
    5168:	4698      	mov	r8, r3
    516a:	d100      	bne.n	516e <__aeabi_dmul+0x5e>
    516c:	e076      	b.n	525c <__aeabi_dmul+0x14c>
    516e:	4b5f      	ldr	r3, [pc, #380]	; (52ec <__aeabi_dmul+0x1dc>)
    5170:	429a      	cmp	r2, r3
    5172:	d06d      	beq.n	5250 <__aeabi_dmul+0x140>
    5174:	2380      	movs	r3, #128	; 0x80
    5176:	0f41      	lsrs	r1, r0, #29
    5178:	041b      	lsls	r3, r3, #16
    517a:	430b      	orrs	r3, r1
    517c:	495c      	ldr	r1, [pc, #368]	; (52f0 <__aeabi_dmul+0x1e0>)
    517e:	00e4      	lsls	r4, r4, #3
    5180:	468c      	mov	ip, r1
    5182:	431c      	orrs	r4, r3
    5184:	00c3      	lsls	r3, r0, #3
    5186:	2000      	movs	r0, #0
    5188:	4462      	add	r2, ip
    518a:	4641      	mov	r1, r8
    518c:	18b6      	adds	r6, r6, r2
    518e:	4069      	eors	r1, r5
    5190:	1c72      	adds	r2, r6, #1
    5192:	9101      	str	r1, [sp, #4]
    5194:	4694      	mov	ip, r2
    5196:	4307      	orrs	r7, r0
    5198:	2f0f      	cmp	r7, #15
    519a:	d900      	bls.n	519e <__aeabi_dmul+0x8e>
    519c:	e0b0      	b.n	5300 <__aeabi_dmul+0x1f0>
    519e:	4a55      	ldr	r2, [pc, #340]	; (52f4 <__aeabi_dmul+0x1e4>)
    51a0:	00bf      	lsls	r7, r7, #2
    51a2:	59d2      	ldr	r2, [r2, r7]
    51a4:	4697      	mov	pc, r2
    51a6:	465b      	mov	r3, fp
    51a8:	4303      	orrs	r3, r0
    51aa:	4699      	mov	r9, r3
    51ac:	d000      	beq.n	51b0 <__aeabi_dmul+0xa0>
    51ae:	e087      	b.n	52c0 <__aeabi_dmul+0x1b0>
    51b0:	2300      	movs	r3, #0
    51b2:	469b      	mov	fp, r3
    51b4:	3302      	adds	r3, #2
    51b6:	2708      	movs	r7, #8
    51b8:	9302      	str	r3, [sp, #8]
    51ba:	e7ce      	b.n	515a <__aeabi_dmul+0x4a>
    51bc:	4642      	mov	r2, r8
    51be:	9201      	str	r2, [sp, #4]
    51c0:	2802      	cmp	r0, #2
    51c2:	d067      	beq.n	5294 <__aeabi_dmul+0x184>
    51c4:	2803      	cmp	r0, #3
    51c6:	d100      	bne.n	51ca <__aeabi_dmul+0xba>
    51c8:	e20e      	b.n	55e8 <__aeabi_dmul+0x4d8>
    51ca:	2801      	cmp	r0, #1
    51cc:	d000      	beq.n	51d0 <__aeabi_dmul+0xc0>
    51ce:	e162      	b.n	5496 <__aeabi_dmul+0x386>
    51d0:	2300      	movs	r3, #0
    51d2:	2400      	movs	r4, #0
    51d4:	2200      	movs	r2, #0
    51d6:	4699      	mov	r9, r3
    51d8:	9901      	ldr	r1, [sp, #4]
    51da:	4001      	ands	r1, r0
    51dc:	b2cd      	uxtb	r5, r1
    51de:	2100      	movs	r1, #0
    51e0:	0312      	lsls	r2, r2, #12
    51e2:	0d0b      	lsrs	r3, r1, #20
    51e4:	0b12      	lsrs	r2, r2, #12
    51e6:	051b      	lsls	r3, r3, #20
    51e8:	4313      	orrs	r3, r2
    51ea:	4a43      	ldr	r2, [pc, #268]	; (52f8 <__aeabi_dmul+0x1e8>)
    51ec:	0524      	lsls	r4, r4, #20
    51ee:	4013      	ands	r3, r2
    51f0:	431c      	orrs	r4, r3
    51f2:	0064      	lsls	r4, r4, #1
    51f4:	07ed      	lsls	r5, r5, #31
    51f6:	0864      	lsrs	r4, r4, #1
    51f8:	432c      	orrs	r4, r5
    51fa:	4648      	mov	r0, r9
    51fc:	0021      	movs	r1, r4
    51fe:	b007      	add	sp, #28
    5200:	bc3c      	pop	{r2, r3, r4, r5}
    5202:	4690      	mov	r8, r2
    5204:	4699      	mov	r9, r3
    5206:	46a2      	mov	sl, r4
    5208:	46ab      	mov	fp, r5
    520a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    520c:	4303      	orrs	r3, r0
    520e:	4699      	mov	r9, r3
    5210:	d04f      	beq.n	52b2 <__aeabi_dmul+0x1a2>
    5212:	465b      	mov	r3, fp
    5214:	2b00      	cmp	r3, #0
    5216:	d100      	bne.n	521a <__aeabi_dmul+0x10a>
    5218:	e189      	b.n	552e <__aeabi_dmul+0x41e>
    521a:	4658      	mov	r0, fp
    521c:	f000 ff44 	bl	60a8 <__clzsi2>
    5220:	0003      	movs	r3, r0
    5222:	3b0b      	subs	r3, #11
    5224:	2b1c      	cmp	r3, #28
    5226:	dd00      	ble.n	522a <__aeabi_dmul+0x11a>
    5228:	e17a      	b.n	5520 <__aeabi_dmul+0x410>
    522a:	221d      	movs	r2, #29
    522c:	1ad3      	subs	r3, r2, r3
    522e:	003a      	movs	r2, r7
    5230:	0001      	movs	r1, r0
    5232:	465c      	mov	r4, fp
    5234:	40da      	lsrs	r2, r3
    5236:	3908      	subs	r1, #8
    5238:	408c      	lsls	r4, r1
    523a:	0013      	movs	r3, r2
    523c:	408f      	lsls	r7, r1
    523e:	4323      	orrs	r3, r4
    5240:	469b      	mov	fp, r3
    5242:	46b9      	mov	r9, r7
    5244:	2300      	movs	r3, #0
    5246:	4e2d      	ldr	r6, [pc, #180]	; (52fc <__aeabi_dmul+0x1ec>)
    5248:	2700      	movs	r7, #0
    524a:	1a36      	subs	r6, r6, r0
    524c:	9302      	str	r3, [sp, #8]
    524e:	e784      	b.n	515a <__aeabi_dmul+0x4a>
    5250:	4653      	mov	r3, sl
    5252:	4323      	orrs	r3, r4
    5254:	d12a      	bne.n	52ac <__aeabi_dmul+0x19c>
    5256:	2400      	movs	r4, #0
    5258:	2002      	movs	r0, #2
    525a:	e796      	b.n	518a <__aeabi_dmul+0x7a>
    525c:	4653      	mov	r3, sl
    525e:	4323      	orrs	r3, r4
    5260:	d020      	beq.n	52a4 <__aeabi_dmul+0x194>
    5262:	2c00      	cmp	r4, #0
    5264:	d100      	bne.n	5268 <__aeabi_dmul+0x158>
    5266:	e157      	b.n	5518 <__aeabi_dmul+0x408>
    5268:	0020      	movs	r0, r4
    526a:	f000 ff1d 	bl	60a8 <__clzsi2>
    526e:	0003      	movs	r3, r0
    5270:	3b0b      	subs	r3, #11
    5272:	2b1c      	cmp	r3, #28
    5274:	dd00      	ble.n	5278 <__aeabi_dmul+0x168>
    5276:	e149      	b.n	550c <__aeabi_dmul+0x3fc>
    5278:	211d      	movs	r1, #29
    527a:	1acb      	subs	r3, r1, r3
    527c:	4651      	mov	r1, sl
    527e:	0002      	movs	r2, r0
    5280:	40d9      	lsrs	r1, r3
    5282:	4653      	mov	r3, sl
    5284:	3a08      	subs	r2, #8
    5286:	4094      	lsls	r4, r2
    5288:	4093      	lsls	r3, r2
    528a:	430c      	orrs	r4, r1
    528c:	4a1b      	ldr	r2, [pc, #108]	; (52fc <__aeabi_dmul+0x1ec>)
    528e:	1a12      	subs	r2, r2, r0
    5290:	2000      	movs	r0, #0
    5292:	e77a      	b.n	518a <__aeabi_dmul+0x7a>
    5294:	2501      	movs	r5, #1
    5296:	9b01      	ldr	r3, [sp, #4]
    5298:	4c14      	ldr	r4, [pc, #80]	; (52ec <__aeabi_dmul+0x1dc>)
    529a:	401d      	ands	r5, r3
    529c:	2300      	movs	r3, #0
    529e:	2200      	movs	r2, #0
    52a0:	4699      	mov	r9, r3
    52a2:	e79c      	b.n	51de <__aeabi_dmul+0xce>
    52a4:	2400      	movs	r4, #0
    52a6:	2200      	movs	r2, #0
    52a8:	2001      	movs	r0, #1
    52aa:	e76e      	b.n	518a <__aeabi_dmul+0x7a>
    52ac:	4653      	mov	r3, sl
    52ae:	2003      	movs	r0, #3
    52b0:	e76b      	b.n	518a <__aeabi_dmul+0x7a>
    52b2:	2300      	movs	r3, #0
    52b4:	469b      	mov	fp, r3
    52b6:	3301      	adds	r3, #1
    52b8:	2704      	movs	r7, #4
    52ba:	2600      	movs	r6, #0
    52bc:	9302      	str	r3, [sp, #8]
    52be:	e74c      	b.n	515a <__aeabi_dmul+0x4a>
    52c0:	2303      	movs	r3, #3
    52c2:	4681      	mov	r9, r0
    52c4:	270c      	movs	r7, #12
    52c6:	9302      	str	r3, [sp, #8]
    52c8:	e747      	b.n	515a <__aeabi_dmul+0x4a>
    52ca:	2280      	movs	r2, #128	; 0x80
    52cc:	2300      	movs	r3, #0
    52ce:	2500      	movs	r5, #0
    52d0:	0312      	lsls	r2, r2, #12
    52d2:	4699      	mov	r9, r3
    52d4:	4c05      	ldr	r4, [pc, #20]	; (52ec <__aeabi_dmul+0x1dc>)
    52d6:	e782      	b.n	51de <__aeabi_dmul+0xce>
    52d8:	465c      	mov	r4, fp
    52da:	464b      	mov	r3, r9
    52dc:	9802      	ldr	r0, [sp, #8]
    52de:	e76f      	b.n	51c0 <__aeabi_dmul+0xb0>
    52e0:	465c      	mov	r4, fp
    52e2:	464b      	mov	r3, r9
    52e4:	9501      	str	r5, [sp, #4]
    52e6:	9802      	ldr	r0, [sp, #8]
    52e8:	e76a      	b.n	51c0 <__aeabi_dmul+0xb0>
    52ea:	46c0      	nop			; (mov r8, r8)
    52ec:	000007ff 	.word	0x000007ff
    52f0:	fffffc01 	.word	0xfffffc01
    52f4:	00006320 	.word	0x00006320
    52f8:	800fffff 	.word	0x800fffff
    52fc:	fffffc0d 	.word	0xfffffc0d
    5300:	464a      	mov	r2, r9
    5302:	4649      	mov	r1, r9
    5304:	0c17      	lsrs	r7, r2, #16
    5306:	0c1a      	lsrs	r2, r3, #16
    5308:	041b      	lsls	r3, r3, #16
    530a:	0c1b      	lsrs	r3, r3, #16
    530c:	0408      	lsls	r0, r1, #16
    530e:	0019      	movs	r1, r3
    5310:	0c00      	lsrs	r0, r0, #16
    5312:	4341      	muls	r1, r0
    5314:	0015      	movs	r5, r2
    5316:	4688      	mov	r8, r1
    5318:	0019      	movs	r1, r3
    531a:	437d      	muls	r5, r7
    531c:	4379      	muls	r1, r7
    531e:	9503      	str	r5, [sp, #12]
    5320:	4689      	mov	r9, r1
    5322:	0029      	movs	r1, r5
    5324:	0015      	movs	r5, r2
    5326:	4345      	muls	r5, r0
    5328:	444d      	add	r5, r9
    532a:	9502      	str	r5, [sp, #8]
    532c:	4645      	mov	r5, r8
    532e:	0c2d      	lsrs	r5, r5, #16
    5330:	46aa      	mov	sl, r5
    5332:	9d02      	ldr	r5, [sp, #8]
    5334:	4455      	add	r5, sl
    5336:	45a9      	cmp	r9, r5
    5338:	d906      	bls.n	5348 <__aeabi_dmul+0x238>
    533a:	468a      	mov	sl, r1
    533c:	2180      	movs	r1, #128	; 0x80
    533e:	0249      	lsls	r1, r1, #9
    5340:	4689      	mov	r9, r1
    5342:	44ca      	add	sl, r9
    5344:	4651      	mov	r1, sl
    5346:	9103      	str	r1, [sp, #12]
    5348:	0c29      	lsrs	r1, r5, #16
    534a:	9104      	str	r1, [sp, #16]
    534c:	4641      	mov	r1, r8
    534e:	0409      	lsls	r1, r1, #16
    5350:	042d      	lsls	r5, r5, #16
    5352:	0c09      	lsrs	r1, r1, #16
    5354:	4688      	mov	r8, r1
    5356:	0029      	movs	r1, r5
    5358:	0c25      	lsrs	r5, r4, #16
    535a:	0424      	lsls	r4, r4, #16
    535c:	4441      	add	r1, r8
    535e:	0c24      	lsrs	r4, r4, #16
    5360:	9105      	str	r1, [sp, #20]
    5362:	0021      	movs	r1, r4
    5364:	4341      	muls	r1, r0
    5366:	4688      	mov	r8, r1
    5368:	0021      	movs	r1, r4
    536a:	4379      	muls	r1, r7
    536c:	468a      	mov	sl, r1
    536e:	4368      	muls	r0, r5
    5370:	4641      	mov	r1, r8
    5372:	4450      	add	r0, sl
    5374:	4681      	mov	r9, r0
    5376:	0c08      	lsrs	r0, r1, #16
    5378:	4448      	add	r0, r9
    537a:	436f      	muls	r7, r5
    537c:	4582      	cmp	sl, r0
    537e:	d903      	bls.n	5388 <__aeabi_dmul+0x278>
    5380:	2180      	movs	r1, #128	; 0x80
    5382:	0249      	lsls	r1, r1, #9
    5384:	4689      	mov	r9, r1
    5386:	444f      	add	r7, r9
    5388:	0c01      	lsrs	r1, r0, #16
    538a:	4689      	mov	r9, r1
    538c:	0039      	movs	r1, r7
    538e:	4449      	add	r1, r9
    5390:	9102      	str	r1, [sp, #8]
    5392:	4641      	mov	r1, r8
    5394:	040f      	lsls	r7, r1, #16
    5396:	9904      	ldr	r1, [sp, #16]
    5398:	0c3f      	lsrs	r7, r7, #16
    539a:	4688      	mov	r8, r1
    539c:	0400      	lsls	r0, r0, #16
    539e:	19c0      	adds	r0, r0, r7
    53a0:	4480      	add	r8, r0
    53a2:	4641      	mov	r1, r8
    53a4:	9104      	str	r1, [sp, #16]
    53a6:	4659      	mov	r1, fp
    53a8:	0c0f      	lsrs	r7, r1, #16
    53aa:	0409      	lsls	r1, r1, #16
    53ac:	0c09      	lsrs	r1, r1, #16
    53ae:	4688      	mov	r8, r1
    53b0:	4359      	muls	r1, r3
    53b2:	468a      	mov	sl, r1
    53b4:	0039      	movs	r1, r7
    53b6:	4351      	muls	r1, r2
    53b8:	4689      	mov	r9, r1
    53ba:	4641      	mov	r1, r8
    53bc:	434a      	muls	r2, r1
    53be:	4651      	mov	r1, sl
    53c0:	0c09      	lsrs	r1, r1, #16
    53c2:	468b      	mov	fp, r1
    53c4:	437b      	muls	r3, r7
    53c6:	18d2      	adds	r2, r2, r3
    53c8:	445a      	add	r2, fp
    53ca:	4293      	cmp	r3, r2
    53cc:	d903      	bls.n	53d6 <__aeabi_dmul+0x2c6>
    53ce:	2380      	movs	r3, #128	; 0x80
    53d0:	025b      	lsls	r3, r3, #9
    53d2:	469b      	mov	fp, r3
    53d4:	44d9      	add	r9, fp
    53d6:	4651      	mov	r1, sl
    53d8:	0409      	lsls	r1, r1, #16
    53da:	0c09      	lsrs	r1, r1, #16
    53dc:	468a      	mov	sl, r1
    53de:	4641      	mov	r1, r8
    53e0:	4361      	muls	r1, r4
    53e2:	437c      	muls	r4, r7
    53e4:	0c13      	lsrs	r3, r2, #16
    53e6:	0412      	lsls	r2, r2, #16
    53e8:	444b      	add	r3, r9
    53ea:	4452      	add	r2, sl
    53ec:	46a1      	mov	r9, r4
    53ee:	468a      	mov	sl, r1
    53f0:	003c      	movs	r4, r7
    53f2:	4641      	mov	r1, r8
    53f4:	436c      	muls	r4, r5
    53f6:	434d      	muls	r5, r1
    53f8:	4651      	mov	r1, sl
    53fa:	444d      	add	r5, r9
    53fc:	0c0f      	lsrs	r7, r1, #16
    53fe:	197d      	adds	r5, r7, r5
    5400:	45a9      	cmp	r9, r5
    5402:	d903      	bls.n	540c <__aeabi_dmul+0x2fc>
    5404:	2180      	movs	r1, #128	; 0x80
    5406:	0249      	lsls	r1, r1, #9
    5408:	4688      	mov	r8, r1
    540a:	4444      	add	r4, r8
    540c:	9f04      	ldr	r7, [sp, #16]
    540e:	9903      	ldr	r1, [sp, #12]
    5410:	46b8      	mov	r8, r7
    5412:	4441      	add	r1, r8
    5414:	468b      	mov	fp, r1
    5416:	4583      	cmp	fp, r0
    5418:	4180      	sbcs	r0, r0
    541a:	4241      	negs	r1, r0
    541c:	4688      	mov	r8, r1
    541e:	4651      	mov	r1, sl
    5420:	0408      	lsls	r0, r1, #16
    5422:	042f      	lsls	r7, r5, #16
    5424:	0c00      	lsrs	r0, r0, #16
    5426:	183f      	adds	r7, r7, r0
    5428:	4658      	mov	r0, fp
    542a:	9902      	ldr	r1, [sp, #8]
    542c:	1810      	adds	r0, r2, r0
    542e:	4689      	mov	r9, r1
    5430:	4290      	cmp	r0, r2
    5432:	4192      	sbcs	r2, r2
    5434:	444f      	add	r7, r9
    5436:	46ba      	mov	sl, r7
    5438:	4252      	negs	r2, r2
    543a:	4699      	mov	r9, r3
    543c:	4693      	mov	fp, r2
    543e:	44c2      	add	sl, r8
    5440:	44d1      	add	r9, sl
    5442:	44cb      	add	fp, r9
    5444:	428f      	cmp	r7, r1
    5446:	41bf      	sbcs	r7, r7
    5448:	45c2      	cmp	sl, r8
    544a:	4189      	sbcs	r1, r1
    544c:	4599      	cmp	r9, r3
    544e:	419b      	sbcs	r3, r3
    5450:	4593      	cmp	fp, r2
    5452:	4192      	sbcs	r2, r2
    5454:	427f      	negs	r7, r7
    5456:	4249      	negs	r1, r1
    5458:	0c2d      	lsrs	r5, r5, #16
    545a:	4252      	negs	r2, r2
    545c:	430f      	orrs	r7, r1
    545e:	425b      	negs	r3, r3
    5460:	4313      	orrs	r3, r2
    5462:	197f      	adds	r7, r7, r5
    5464:	18ff      	adds	r7, r7, r3
    5466:	465b      	mov	r3, fp
    5468:	193c      	adds	r4, r7, r4
    546a:	0ddb      	lsrs	r3, r3, #23
    546c:	9a05      	ldr	r2, [sp, #20]
    546e:	0264      	lsls	r4, r4, #9
    5470:	431c      	orrs	r4, r3
    5472:	0243      	lsls	r3, r0, #9
    5474:	4313      	orrs	r3, r2
    5476:	1e5d      	subs	r5, r3, #1
    5478:	41ab      	sbcs	r3, r5
    547a:	465a      	mov	r2, fp
    547c:	0dc0      	lsrs	r0, r0, #23
    547e:	4303      	orrs	r3, r0
    5480:	0252      	lsls	r2, r2, #9
    5482:	4313      	orrs	r3, r2
    5484:	01e2      	lsls	r2, r4, #7
    5486:	d556      	bpl.n	5536 <__aeabi_dmul+0x426>
    5488:	2001      	movs	r0, #1
    548a:	085a      	lsrs	r2, r3, #1
    548c:	4003      	ands	r3, r0
    548e:	4313      	orrs	r3, r2
    5490:	07e2      	lsls	r2, r4, #31
    5492:	4313      	orrs	r3, r2
    5494:	0864      	lsrs	r4, r4, #1
    5496:	485a      	ldr	r0, [pc, #360]	; (5600 <__aeabi_dmul+0x4f0>)
    5498:	4460      	add	r0, ip
    549a:	2800      	cmp	r0, #0
    549c:	dd4d      	ble.n	553a <__aeabi_dmul+0x42a>
    549e:	075a      	lsls	r2, r3, #29
    54a0:	d009      	beq.n	54b6 <__aeabi_dmul+0x3a6>
    54a2:	220f      	movs	r2, #15
    54a4:	401a      	ands	r2, r3
    54a6:	2a04      	cmp	r2, #4
    54a8:	d005      	beq.n	54b6 <__aeabi_dmul+0x3a6>
    54aa:	1d1a      	adds	r2, r3, #4
    54ac:	429a      	cmp	r2, r3
    54ae:	419b      	sbcs	r3, r3
    54b0:	425b      	negs	r3, r3
    54b2:	18e4      	adds	r4, r4, r3
    54b4:	0013      	movs	r3, r2
    54b6:	01e2      	lsls	r2, r4, #7
    54b8:	d504      	bpl.n	54c4 <__aeabi_dmul+0x3b4>
    54ba:	2080      	movs	r0, #128	; 0x80
    54bc:	4a51      	ldr	r2, [pc, #324]	; (5604 <__aeabi_dmul+0x4f4>)
    54be:	00c0      	lsls	r0, r0, #3
    54c0:	4014      	ands	r4, r2
    54c2:	4460      	add	r0, ip
    54c4:	4a50      	ldr	r2, [pc, #320]	; (5608 <__aeabi_dmul+0x4f8>)
    54c6:	4290      	cmp	r0, r2
    54c8:	dd00      	ble.n	54cc <__aeabi_dmul+0x3bc>
    54ca:	e6e3      	b.n	5294 <__aeabi_dmul+0x184>
    54cc:	2501      	movs	r5, #1
    54ce:	08db      	lsrs	r3, r3, #3
    54d0:	0762      	lsls	r2, r4, #29
    54d2:	431a      	orrs	r2, r3
    54d4:	0264      	lsls	r4, r4, #9
    54d6:	9b01      	ldr	r3, [sp, #4]
    54d8:	4691      	mov	r9, r2
    54da:	0b22      	lsrs	r2, r4, #12
    54dc:	0544      	lsls	r4, r0, #21
    54de:	0d64      	lsrs	r4, r4, #21
    54e0:	401d      	ands	r5, r3
    54e2:	e67c      	b.n	51de <__aeabi_dmul+0xce>
    54e4:	2280      	movs	r2, #128	; 0x80
    54e6:	4659      	mov	r1, fp
    54e8:	0312      	lsls	r2, r2, #12
    54ea:	4211      	tst	r1, r2
    54ec:	d008      	beq.n	5500 <__aeabi_dmul+0x3f0>
    54ee:	4214      	tst	r4, r2
    54f0:	d106      	bne.n	5500 <__aeabi_dmul+0x3f0>
    54f2:	4322      	orrs	r2, r4
    54f4:	0312      	lsls	r2, r2, #12
    54f6:	0b12      	lsrs	r2, r2, #12
    54f8:	4645      	mov	r5, r8
    54fa:	4699      	mov	r9, r3
    54fc:	4c43      	ldr	r4, [pc, #268]	; (560c <__aeabi_dmul+0x4fc>)
    54fe:	e66e      	b.n	51de <__aeabi_dmul+0xce>
    5500:	465b      	mov	r3, fp
    5502:	431a      	orrs	r2, r3
    5504:	0312      	lsls	r2, r2, #12
    5506:	0b12      	lsrs	r2, r2, #12
    5508:	4c40      	ldr	r4, [pc, #256]	; (560c <__aeabi_dmul+0x4fc>)
    550a:	e668      	b.n	51de <__aeabi_dmul+0xce>
    550c:	0003      	movs	r3, r0
    550e:	4654      	mov	r4, sl
    5510:	3b28      	subs	r3, #40	; 0x28
    5512:	409c      	lsls	r4, r3
    5514:	2300      	movs	r3, #0
    5516:	e6b9      	b.n	528c <__aeabi_dmul+0x17c>
    5518:	f000 fdc6 	bl	60a8 <__clzsi2>
    551c:	3020      	adds	r0, #32
    551e:	e6a6      	b.n	526e <__aeabi_dmul+0x15e>
    5520:	0003      	movs	r3, r0
    5522:	3b28      	subs	r3, #40	; 0x28
    5524:	409f      	lsls	r7, r3
    5526:	2300      	movs	r3, #0
    5528:	46bb      	mov	fp, r7
    552a:	4699      	mov	r9, r3
    552c:	e68a      	b.n	5244 <__aeabi_dmul+0x134>
    552e:	f000 fdbb 	bl	60a8 <__clzsi2>
    5532:	3020      	adds	r0, #32
    5534:	e674      	b.n	5220 <__aeabi_dmul+0x110>
    5536:	46b4      	mov	ip, r6
    5538:	e7ad      	b.n	5496 <__aeabi_dmul+0x386>
    553a:	2501      	movs	r5, #1
    553c:	1a2a      	subs	r2, r5, r0
    553e:	2a38      	cmp	r2, #56	; 0x38
    5540:	dd06      	ble.n	5550 <__aeabi_dmul+0x440>
    5542:	9b01      	ldr	r3, [sp, #4]
    5544:	2400      	movs	r4, #0
    5546:	401d      	ands	r5, r3
    5548:	2300      	movs	r3, #0
    554a:	2200      	movs	r2, #0
    554c:	4699      	mov	r9, r3
    554e:	e646      	b.n	51de <__aeabi_dmul+0xce>
    5550:	2a1f      	cmp	r2, #31
    5552:	dc21      	bgt.n	5598 <__aeabi_dmul+0x488>
    5554:	2520      	movs	r5, #32
    5556:	0020      	movs	r0, r4
    5558:	1aad      	subs	r5, r5, r2
    555a:	001e      	movs	r6, r3
    555c:	40ab      	lsls	r3, r5
    555e:	40a8      	lsls	r0, r5
    5560:	40d6      	lsrs	r6, r2
    5562:	1e5d      	subs	r5, r3, #1
    5564:	41ab      	sbcs	r3, r5
    5566:	4330      	orrs	r0, r6
    5568:	4318      	orrs	r0, r3
    556a:	40d4      	lsrs	r4, r2
    556c:	0743      	lsls	r3, r0, #29
    556e:	d009      	beq.n	5584 <__aeabi_dmul+0x474>
    5570:	230f      	movs	r3, #15
    5572:	4003      	ands	r3, r0
    5574:	2b04      	cmp	r3, #4
    5576:	d005      	beq.n	5584 <__aeabi_dmul+0x474>
    5578:	0003      	movs	r3, r0
    557a:	1d18      	adds	r0, r3, #4
    557c:	4298      	cmp	r0, r3
    557e:	419b      	sbcs	r3, r3
    5580:	425b      	negs	r3, r3
    5582:	18e4      	adds	r4, r4, r3
    5584:	0223      	lsls	r3, r4, #8
    5586:	d521      	bpl.n	55cc <__aeabi_dmul+0x4bc>
    5588:	2501      	movs	r5, #1
    558a:	9b01      	ldr	r3, [sp, #4]
    558c:	2401      	movs	r4, #1
    558e:	401d      	ands	r5, r3
    5590:	2300      	movs	r3, #0
    5592:	2200      	movs	r2, #0
    5594:	4699      	mov	r9, r3
    5596:	e622      	b.n	51de <__aeabi_dmul+0xce>
    5598:	251f      	movs	r5, #31
    559a:	0021      	movs	r1, r4
    559c:	426d      	negs	r5, r5
    559e:	1a28      	subs	r0, r5, r0
    55a0:	40c1      	lsrs	r1, r0
    55a2:	0008      	movs	r0, r1
    55a4:	2a20      	cmp	r2, #32
    55a6:	d01d      	beq.n	55e4 <__aeabi_dmul+0x4d4>
    55a8:	355f      	adds	r5, #95	; 0x5f
    55aa:	1aaa      	subs	r2, r5, r2
    55ac:	4094      	lsls	r4, r2
    55ae:	4323      	orrs	r3, r4
    55b0:	1e5c      	subs	r4, r3, #1
    55b2:	41a3      	sbcs	r3, r4
    55b4:	2507      	movs	r5, #7
    55b6:	4303      	orrs	r3, r0
    55b8:	401d      	ands	r5, r3
    55ba:	2200      	movs	r2, #0
    55bc:	2d00      	cmp	r5, #0
    55be:	d009      	beq.n	55d4 <__aeabi_dmul+0x4c4>
    55c0:	220f      	movs	r2, #15
    55c2:	2400      	movs	r4, #0
    55c4:	401a      	ands	r2, r3
    55c6:	0018      	movs	r0, r3
    55c8:	2a04      	cmp	r2, #4
    55ca:	d1d6      	bne.n	557a <__aeabi_dmul+0x46a>
    55cc:	0003      	movs	r3, r0
    55ce:	0765      	lsls	r5, r4, #29
    55d0:	0264      	lsls	r4, r4, #9
    55d2:	0b22      	lsrs	r2, r4, #12
    55d4:	08db      	lsrs	r3, r3, #3
    55d6:	432b      	orrs	r3, r5
    55d8:	2501      	movs	r5, #1
    55da:	4699      	mov	r9, r3
    55dc:	9b01      	ldr	r3, [sp, #4]
    55de:	2400      	movs	r4, #0
    55e0:	401d      	ands	r5, r3
    55e2:	e5fc      	b.n	51de <__aeabi_dmul+0xce>
    55e4:	2400      	movs	r4, #0
    55e6:	e7e2      	b.n	55ae <__aeabi_dmul+0x49e>
    55e8:	2280      	movs	r2, #128	; 0x80
    55ea:	2501      	movs	r5, #1
    55ec:	0312      	lsls	r2, r2, #12
    55ee:	4322      	orrs	r2, r4
    55f0:	9901      	ldr	r1, [sp, #4]
    55f2:	0312      	lsls	r2, r2, #12
    55f4:	0b12      	lsrs	r2, r2, #12
    55f6:	400d      	ands	r5, r1
    55f8:	4699      	mov	r9, r3
    55fa:	4c04      	ldr	r4, [pc, #16]	; (560c <__aeabi_dmul+0x4fc>)
    55fc:	e5ef      	b.n	51de <__aeabi_dmul+0xce>
    55fe:	46c0      	nop			; (mov r8, r8)
    5600:	000003ff 	.word	0x000003ff
    5604:	feffffff 	.word	0xfeffffff
    5608:	000007fe 	.word	0x000007fe
    560c:	000007ff 	.word	0x000007ff

00005610 <__aeabi_dsub>:
    5610:	b5f0      	push	{r4, r5, r6, r7, lr}
    5612:	4646      	mov	r6, r8
    5614:	46d6      	mov	lr, sl
    5616:	464f      	mov	r7, r9
    5618:	030c      	lsls	r4, r1, #12
    561a:	b5c0      	push	{r6, r7, lr}
    561c:	0fcd      	lsrs	r5, r1, #31
    561e:	004e      	lsls	r6, r1, #1
    5620:	0a61      	lsrs	r1, r4, #9
    5622:	0f44      	lsrs	r4, r0, #29
    5624:	430c      	orrs	r4, r1
    5626:	00c1      	lsls	r1, r0, #3
    5628:	0058      	lsls	r0, r3, #1
    562a:	0d40      	lsrs	r0, r0, #21
    562c:	4684      	mov	ip, r0
    562e:	468a      	mov	sl, r1
    5630:	000f      	movs	r7, r1
    5632:	0319      	lsls	r1, r3, #12
    5634:	0f50      	lsrs	r0, r2, #29
    5636:	0a49      	lsrs	r1, r1, #9
    5638:	4301      	orrs	r1, r0
    563a:	48c6      	ldr	r0, [pc, #792]	; (5954 <__aeabi_dsub+0x344>)
    563c:	0d76      	lsrs	r6, r6, #21
    563e:	46a8      	mov	r8, r5
    5640:	0fdb      	lsrs	r3, r3, #31
    5642:	00d2      	lsls	r2, r2, #3
    5644:	4584      	cmp	ip, r0
    5646:	d100      	bne.n	564a <__aeabi_dsub+0x3a>
    5648:	e0d8      	b.n	57fc <__aeabi_dsub+0x1ec>
    564a:	2001      	movs	r0, #1
    564c:	4043      	eors	r3, r0
    564e:	42ab      	cmp	r3, r5
    5650:	d100      	bne.n	5654 <__aeabi_dsub+0x44>
    5652:	e0a6      	b.n	57a2 <__aeabi_dsub+0x192>
    5654:	4660      	mov	r0, ip
    5656:	1a35      	subs	r5, r6, r0
    5658:	2d00      	cmp	r5, #0
    565a:	dc00      	bgt.n	565e <__aeabi_dsub+0x4e>
    565c:	e105      	b.n	586a <__aeabi_dsub+0x25a>
    565e:	2800      	cmp	r0, #0
    5660:	d110      	bne.n	5684 <__aeabi_dsub+0x74>
    5662:	000b      	movs	r3, r1
    5664:	4313      	orrs	r3, r2
    5666:	d100      	bne.n	566a <__aeabi_dsub+0x5a>
    5668:	e0d7      	b.n	581a <__aeabi_dsub+0x20a>
    566a:	1e6b      	subs	r3, r5, #1
    566c:	2b00      	cmp	r3, #0
    566e:	d000      	beq.n	5672 <__aeabi_dsub+0x62>
    5670:	e14b      	b.n	590a <__aeabi_dsub+0x2fa>
    5672:	4653      	mov	r3, sl
    5674:	1a9f      	subs	r7, r3, r2
    5676:	45ba      	cmp	sl, r7
    5678:	4180      	sbcs	r0, r0
    567a:	1a64      	subs	r4, r4, r1
    567c:	4240      	negs	r0, r0
    567e:	1a24      	subs	r4, r4, r0
    5680:	2601      	movs	r6, #1
    5682:	e01e      	b.n	56c2 <__aeabi_dsub+0xb2>
    5684:	4bb3      	ldr	r3, [pc, #716]	; (5954 <__aeabi_dsub+0x344>)
    5686:	429e      	cmp	r6, r3
    5688:	d048      	beq.n	571c <__aeabi_dsub+0x10c>
    568a:	2380      	movs	r3, #128	; 0x80
    568c:	041b      	lsls	r3, r3, #16
    568e:	4319      	orrs	r1, r3
    5690:	2d38      	cmp	r5, #56	; 0x38
    5692:	dd00      	ble.n	5696 <__aeabi_dsub+0x86>
    5694:	e119      	b.n	58ca <__aeabi_dsub+0x2ba>
    5696:	2d1f      	cmp	r5, #31
    5698:	dd00      	ble.n	569c <__aeabi_dsub+0x8c>
    569a:	e14c      	b.n	5936 <__aeabi_dsub+0x326>
    569c:	2320      	movs	r3, #32
    569e:	000f      	movs	r7, r1
    56a0:	1b5b      	subs	r3, r3, r5
    56a2:	0010      	movs	r0, r2
    56a4:	409a      	lsls	r2, r3
    56a6:	409f      	lsls	r7, r3
    56a8:	40e8      	lsrs	r0, r5
    56aa:	1e53      	subs	r3, r2, #1
    56ac:	419a      	sbcs	r2, r3
    56ae:	40e9      	lsrs	r1, r5
    56b0:	4307      	orrs	r7, r0
    56b2:	4317      	orrs	r7, r2
    56b4:	4653      	mov	r3, sl
    56b6:	1bdf      	subs	r7, r3, r7
    56b8:	1a61      	subs	r1, r4, r1
    56ba:	45ba      	cmp	sl, r7
    56bc:	41a4      	sbcs	r4, r4
    56be:	4264      	negs	r4, r4
    56c0:	1b0c      	subs	r4, r1, r4
    56c2:	0223      	lsls	r3, r4, #8
    56c4:	d400      	bmi.n	56c8 <__aeabi_dsub+0xb8>
    56c6:	e0c5      	b.n	5854 <__aeabi_dsub+0x244>
    56c8:	0264      	lsls	r4, r4, #9
    56ca:	0a65      	lsrs	r5, r4, #9
    56cc:	2d00      	cmp	r5, #0
    56ce:	d100      	bne.n	56d2 <__aeabi_dsub+0xc2>
    56d0:	e0f6      	b.n	58c0 <__aeabi_dsub+0x2b0>
    56d2:	0028      	movs	r0, r5
    56d4:	f000 fce8 	bl	60a8 <__clzsi2>
    56d8:	0003      	movs	r3, r0
    56da:	3b08      	subs	r3, #8
    56dc:	2b1f      	cmp	r3, #31
    56de:	dd00      	ble.n	56e2 <__aeabi_dsub+0xd2>
    56e0:	e0e9      	b.n	58b6 <__aeabi_dsub+0x2a6>
    56e2:	2220      	movs	r2, #32
    56e4:	003c      	movs	r4, r7
    56e6:	1ad2      	subs	r2, r2, r3
    56e8:	409d      	lsls	r5, r3
    56ea:	40d4      	lsrs	r4, r2
    56ec:	409f      	lsls	r7, r3
    56ee:	4325      	orrs	r5, r4
    56f0:	429e      	cmp	r6, r3
    56f2:	dd00      	ble.n	56f6 <__aeabi_dsub+0xe6>
    56f4:	e0db      	b.n	58ae <__aeabi_dsub+0x29e>
    56f6:	1b9e      	subs	r6, r3, r6
    56f8:	1c73      	adds	r3, r6, #1
    56fa:	2b1f      	cmp	r3, #31
    56fc:	dd00      	ble.n	5700 <__aeabi_dsub+0xf0>
    56fe:	e10a      	b.n	5916 <__aeabi_dsub+0x306>
    5700:	2220      	movs	r2, #32
    5702:	0038      	movs	r0, r7
    5704:	1ad2      	subs	r2, r2, r3
    5706:	0029      	movs	r1, r5
    5708:	4097      	lsls	r7, r2
    570a:	002c      	movs	r4, r5
    570c:	4091      	lsls	r1, r2
    570e:	40d8      	lsrs	r0, r3
    5710:	1e7a      	subs	r2, r7, #1
    5712:	4197      	sbcs	r7, r2
    5714:	40dc      	lsrs	r4, r3
    5716:	2600      	movs	r6, #0
    5718:	4301      	orrs	r1, r0
    571a:	430f      	orrs	r7, r1
    571c:	077b      	lsls	r3, r7, #29
    571e:	d009      	beq.n	5734 <__aeabi_dsub+0x124>
    5720:	230f      	movs	r3, #15
    5722:	403b      	ands	r3, r7
    5724:	2b04      	cmp	r3, #4
    5726:	d005      	beq.n	5734 <__aeabi_dsub+0x124>
    5728:	1d3b      	adds	r3, r7, #4
    572a:	42bb      	cmp	r3, r7
    572c:	41bf      	sbcs	r7, r7
    572e:	427f      	negs	r7, r7
    5730:	19e4      	adds	r4, r4, r7
    5732:	001f      	movs	r7, r3
    5734:	0223      	lsls	r3, r4, #8
    5736:	d525      	bpl.n	5784 <__aeabi_dsub+0x174>
    5738:	4b86      	ldr	r3, [pc, #536]	; (5954 <__aeabi_dsub+0x344>)
    573a:	3601      	adds	r6, #1
    573c:	429e      	cmp	r6, r3
    573e:	d100      	bne.n	5742 <__aeabi_dsub+0x132>
    5740:	e0af      	b.n	58a2 <__aeabi_dsub+0x292>
    5742:	4b85      	ldr	r3, [pc, #532]	; (5958 <__aeabi_dsub+0x348>)
    5744:	2501      	movs	r5, #1
    5746:	401c      	ands	r4, r3
    5748:	4643      	mov	r3, r8
    574a:	0762      	lsls	r2, r4, #29
    574c:	08ff      	lsrs	r7, r7, #3
    574e:	0264      	lsls	r4, r4, #9
    5750:	0576      	lsls	r6, r6, #21
    5752:	4317      	orrs	r7, r2
    5754:	0b24      	lsrs	r4, r4, #12
    5756:	0d76      	lsrs	r6, r6, #21
    5758:	401d      	ands	r5, r3
    575a:	2100      	movs	r1, #0
    575c:	0324      	lsls	r4, r4, #12
    575e:	0b23      	lsrs	r3, r4, #12
    5760:	0d0c      	lsrs	r4, r1, #20
    5762:	4a7e      	ldr	r2, [pc, #504]	; (595c <__aeabi_dsub+0x34c>)
    5764:	0524      	lsls	r4, r4, #20
    5766:	431c      	orrs	r4, r3
    5768:	4014      	ands	r4, r2
    576a:	0533      	lsls	r3, r6, #20
    576c:	4323      	orrs	r3, r4
    576e:	005b      	lsls	r3, r3, #1
    5770:	07ed      	lsls	r5, r5, #31
    5772:	085b      	lsrs	r3, r3, #1
    5774:	432b      	orrs	r3, r5
    5776:	0038      	movs	r0, r7
    5778:	0019      	movs	r1, r3
    577a:	bc1c      	pop	{r2, r3, r4}
    577c:	4690      	mov	r8, r2
    577e:	4699      	mov	r9, r3
    5780:	46a2      	mov	sl, r4
    5782:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5784:	2501      	movs	r5, #1
    5786:	4643      	mov	r3, r8
    5788:	0762      	lsls	r2, r4, #29
    578a:	08ff      	lsrs	r7, r7, #3
    578c:	4317      	orrs	r7, r2
    578e:	08e4      	lsrs	r4, r4, #3
    5790:	401d      	ands	r5, r3
    5792:	4b70      	ldr	r3, [pc, #448]	; (5954 <__aeabi_dsub+0x344>)
    5794:	429e      	cmp	r6, r3
    5796:	d036      	beq.n	5806 <__aeabi_dsub+0x1f6>
    5798:	0324      	lsls	r4, r4, #12
    579a:	0576      	lsls	r6, r6, #21
    579c:	0b24      	lsrs	r4, r4, #12
    579e:	0d76      	lsrs	r6, r6, #21
    57a0:	e7db      	b.n	575a <__aeabi_dsub+0x14a>
    57a2:	4663      	mov	r3, ip
    57a4:	1af3      	subs	r3, r6, r3
    57a6:	2b00      	cmp	r3, #0
    57a8:	dc00      	bgt.n	57ac <__aeabi_dsub+0x19c>
    57aa:	e094      	b.n	58d6 <__aeabi_dsub+0x2c6>
    57ac:	4660      	mov	r0, ip
    57ae:	2800      	cmp	r0, #0
    57b0:	d035      	beq.n	581e <__aeabi_dsub+0x20e>
    57b2:	4868      	ldr	r0, [pc, #416]	; (5954 <__aeabi_dsub+0x344>)
    57b4:	4286      	cmp	r6, r0
    57b6:	d0b1      	beq.n	571c <__aeabi_dsub+0x10c>
    57b8:	2780      	movs	r7, #128	; 0x80
    57ba:	043f      	lsls	r7, r7, #16
    57bc:	4339      	orrs	r1, r7
    57be:	2b38      	cmp	r3, #56	; 0x38
    57c0:	dc00      	bgt.n	57c4 <__aeabi_dsub+0x1b4>
    57c2:	e0fd      	b.n	59c0 <__aeabi_dsub+0x3b0>
    57c4:	430a      	orrs	r2, r1
    57c6:	0017      	movs	r7, r2
    57c8:	2100      	movs	r1, #0
    57ca:	1e7a      	subs	r2, r7, #1
    57cc:	4197      	sbcs	r7, r2
    57ce:	4457      	add	r7, sl
    57d0:	4557      	cmp	r7, sl
    57d2:	4180      	sbcs	r0, r0
    57d4:	1909      	adds	r1, r1, r4
    57d6:	4244      	negs	r4, r0
    57d8:	190c      	adds	r4, r1, r4
    57da:	0223      	lsls	r3, r4, #8
    57dc:	d53a      	bpl.n	5854 <__aeabi_dsub+0x244>
    57de:	4b5d      	ldr	r3, [pc, #372]	; (5954 <__aeabi_dsub+0x344>)
    57e0:	3601      	adds	r6, #1
    57e2:	429e      	cmp	r6, r3
    57e4:	d100      	bne.n	57e8 <__aeabi_dsub+0x1d8>
    57e6:	e14b      	b.n	5a80 <__aeabi_dsub+0x470>
    57e8:	2201      	movs	r2, #1
    57ea:	4b5b      	ldr	r3, [pc, #364]	; (5958 <__aeabi_dsub+0x348>)
    57ec:	401c      	ands	r4, r3
    57ee:	087b      	lsrs	r3, r7, #1
    57f0:	4017      	ands	r7, r2
    57f2:	431f      	orrs	r7, r3
    57f4:	07e2      	lsls	r2, r4, #31
    57f6:	4317      	orrs	r7, r2
    57f8:	0864      	lsrs	r4, r4, #1
    57fa:	e78f      	b.n	571c <__aeabi_dsub+0x10c>
    57fc:	0008      	movs	r0, r1
    57fe:	4310      	orrs	r0, r2
    5800:	d000      	beq.n	5804 <__aeabi_dsub+0x1f4>
    5802:	e724      	b.n	564e <__aeabi_dsub+0x3e>
    5804:	e721      	b.n	564a <__aeabi_dsub+0x3a>
    5806:	0023      	movs	r3, r4
    5808:	433b      	orrs	r3, r7
    580a:	d100      	bne.n	580e <__aeabi_dsub+0x1fe>
    580c:	e1b9      	b.n	5b82 <__aeabi_dsub+0x572>
    580e:	2280      	movs	r2, #128	; 0x80
    5810:	0312      	lsls	r2, r2, #12
    5812:	4314      	orrs	r4, r2
    5814:	0324      	lsls	r4, r4, #12
    5816:	0b24      	lsrs	r4, r4, #12
    5818:	e79f      	b.n	575a <__aeabi_dsub+0x14a>
    581a:	002e      	movs	r6, r5
    581c:	e77e      	b.n	571c <__aeabi_dsub+0x10c>
    581e:	0008      	movs	r0, r1
    5820:	4310      	orrs	r0, r2
    5822:	d100      	bne.n	5826 <__aeabi_dsub+0x216>
    5824:	e0ca      	b.n	59bc <__aeabi_dsub+0x3ac>
    5826:	1e58      	subs	r0, r3, #1
    5828:	4684      	mov	ip, r0
    582a:	2800      	cmp	r0, #0
    582c:	d000      	beq.n	5830 <__aeabi_dsub+0x220>
    582e:	e0e7      	b.n	5a00 <__aeabi_dsub+0x3f0>
    5830:	4452      	add	r2, sl
    5832:	4552      	cmp	r2, sl
    5834:	4180      	sbcs	r0, r0
    5836:	1864      	adds	r4, r4, r1
    5838:	4240      	negs	r0, r0
    583a:	1824      	adds	r4, r4, r0
    583c:	0017      	movs	r7, r2
    583e:	2601      	movs	r6, #1
    5840:	0223      	lsls	r3, r4, #8
    5842:	d507      	bpl.n	5854 <__aeabi_dsub+0x244>
    5844:	2602      	movs	r6, #2
    5846:	e7cf      	b.n	57e8 <__aeabi_dsub+0x1d8>
    5848:	4664      	mov	r4, ip
    584a:	432c      	orrs	r4, r5
    584c:	d100      	bne.n	5850 <__aeabi_dsub+0x240>
    584e:	e1b3      	b.n	5bb8 <__aeabi_dsub+0x5a8>
    5850:	002c      	movs	r4, r5
    5852:	4667      	mov	r7, ip
    5854:	077b      	lsls	r3, r7, #29
    5856:	d000      	beq.n	585a <__aeabi_dsub+0x24a>
    5858:	e762      	b.n	5720 <__aeabi_dsub+0x110>
    585a:	0763      	lsls	r3, r4, #29
    585c:	08ff      	lsrs	r7, r7, #3
    585e:	431f      	orrs	r7, r3
    5860:	2501      	movs	r5, #1
    5862:	4643      	mov	r3, r8
    5864:	08e4      	lsrs	r4, r4, #3
    5866:	401d      	ands	r5, r3
    5868:	e793      	b.n	5792 <__aeabi_dsub+0x182>
    586a:	2d00      	cmp	r5, #0
    586c:	d178      	bne.n	5960 <__aeabi_dsub+0x350>
    586e:	1c75      	adds	r5, r6, #1
    5870:	056d      	lsls	r5, r5, #21
    5872:	0d6d      	lsrs	r5, r5, #21
    5874:	2d01      	cmp	r5, #1
    5876:	dc00      	bgt.n	587a <__aeabi_dsub+0x26a>
    5878:	e0f2      	b.n	5a60 <__aeabi_dsub+0x450>
    587a:	4650      	mov	r0, sl
    587c:	1a80      	subs	r0, r0, r2
    587e:	4582      	cmp	sl, r0
    5880:	41bf      	sbcs	r7, r7
    5882:	1a65      	subs	r5, r4, r1
    5884:	427f      	negs	r7, r7
    5886:	1bed      	subs	r5, r5, r7
    5888:	4684      	mov	ip, r0
    588a:	0228      	lsls	r0, r5, #8
    588c:	d400      	bmi.n	5890 <__aeabi_dsub+0x280>
    588e:	e08c      	b.n	59aa <__aeabi_dsub+0x39a>
    5890:	4650      	mov	r0, sl
    5892:	1a17      	subs	r7, r2, r0
    5894:	42ba      	cmp	r2, r7
    5896:	4192      	sbcs	r2, r2
    5898:	1b0c      	subs	r4, r1, r4
    589a:	4255      	negs	r5, r2
    589c:	1b65      	subs	r5, r4, r5
    589e:	4698      	mov	r8, r3
    58a0:	e714      	b.n	56cc <__aeabi_dsub+0xbc>
    58a2:	2501      	movs	r5, #1
    58a4:	4643      	mov	r3, r8
    58a6:	2400      	movs	r4, #0
    58a8:	401d      	ands	r5, r3
    58aa:	2700      	movs	r7, #0
    58ac:	e755      	b.n	575a <__aeabi_dsub+0x14a>
    58ae:	4c2a      	ldr	r4, [pc, #168]	; (5958 <__aeabi_dsub+0x348>)
    58b0:	1af6      	subs	r6, r6, r3
    58b2:	402c      	ands	r4, r5
    58b4:	e732      	b.n	571c <__aeabi_dsub+0x10c>
    58b6:	003d      	movs	r5, r7
    58b8:	3828      	subs	r0, #40	; 0x28
    58ba:	4085      	lsls	r5, r0
    58bc:	2700      	movs	r7, #0
    58be:	e717      	b.n	56f0 <__aeabi_dsub+0xe0>
    58c0:	0038      	movs	r0, r7
    58c2:	f000 fbf1 	bl	60a8 <__clzsi2>
    58c6:	3020      	adds	r0, #32
    58c8:	e706      	b.n	56d8 <__aeabi_dsub+0xc8>
    58ca:	430a      	orrs	r2, r1
    58cc:	0017      	movs	r7, r2
    58ce:	2100      	movs	r1, #0
    58d0:	1e7a      	subs	r2, r7, #1
    58d2:	4197      	sbcs	r7, r2
    58d4:	e6ee      	b.n	56b4 <__aeabi_dsub+0xa4>
    58d6:	2b00      	cmp	r3, #0
    58d8:	d000      	beq.n	58dc <__aeabi_dsub+0x2cc>
    58da:	e0e5      	b.n	5aa8 <__aeabi_dsub+0x498>
    58dc:	1c73      	adds	r3, r6, #1
    58de:	469c      	mov	ip, r3
    58e0:	055b      	lsls	r3, r3, #21
    58e2:	0d5b      	lsrs	r3, r3, #21
    58e4:	2b01      	cmp	r3, #1
    58e6:	dc00      	bgt.n	58ea <__aeabi_dsub+0x2da>
    58e8:	e09f      	b.n	5a2a <__aeabi_dsub+0x41a>
    58ea:	4b1a      	ldr	r3, [pc, #104]	; (5954 <__aeabi_dsub+0x344>)
    58ec:	459c      	cmp	ip, r3
    58ee:	d100      	bne.n	58f2 <__aeabi_dsub+0x2e2>
    58f0:	e0c5      	b.n	5a7e <__aeabi_dsub+0x46e>
    58f2:	4452      	add	r2, sl
    58f4:	4552      	cmp	r2, sl
    58f6:	4180      	sbcs	r0, r0
    58f8:	1864      	adds	r4, r4, r1
    58fa:	4240      	negs	r0, r0
    58fc:	1824      	adds	r4, r4, r0
    58fe:	07e7      	lsls	r7, r4, #31
    5900:	0852      	lsrs	r2, r2, #1
    5902:	4317      	orrs	r7, r2
    5904:	0864      	lsrs	r4, r4, #1
    5906:	4666      	mov	r6, ip
    5908:	e708      	b.n	571c <__aeabi_dsub+0x10c>
    590a:	4812      	ldr	r0, [pc, #72]	; (5954 <__aeabi_dsub+0x344>)
    590c:	4285      	cmp	r5, r0
    590e:	d100      	bne.n	5912 <__aeabi_dsub+0x302>
    5910:	e085      	b.n	5a1e <__aeabi_dsub+0x40e>
    5912:	001d      	movs	r5, r3
    5914:	e6bc      	b.n	5690 <__aeabi_dsub+0x80>
    5916:	0029      	movs	r1, r5
    5918:	3e1f      	subs	r6, #31
    591a:	40f1      	lsrs	r1, r6
    591c:	2b20      	cmp	r3, #32
    591e:	d100      	bne.n	5922 <__aeabi_dsub+0x312>
    5920:	e07f      	b.n	5a22 <__aeabi_dsub+0x412>
    5922:	2240      	movs	r2, #64	; 0x40
    5924:	1ad3      	subs	r3, r2, r3
    5926:	409d      	lsls	r5, r3
    5928:	432f      	orrs	r7, r5
    592a:	1e7d      	subs	r5, r7, #1
    592c:	41af      	sbcs	r7, r5
    592e:	2400      	movs	r4, #0
    5930:	430f      	orrs	r7, r1
    5932:	2600      	movs	r6, #0
    5934:	e78e      	b.n	5854 <__aeabi_dsub+0x244>
    5936:	002b      	movs	r3, r5
    5938:	000f      	movs	r7, r1
    593a:	3b20      	subs	r3, #32
    593c:	40df      	lsrs	r7, r3
    593e:	2d20      	cmp	r5, #32
    5940:	d071      	beq.n	5a26 <__aeabi_dsub+0x416>
    5942:	2340      	movs	r3, #64	; 0x40
    5944:	1b5d      	subs	r5, r3, r5
    5946:	40a9      	lsls	r1, r5
    5948:	430a      	orrs	r2, r1
    594a:	1e51      	subs	r1, r2, #1
    594c:	418a      	sbcs	r2, r1
    594e:	2100      	movs	r1, #0
    5950:	4317      	orrs	r7, r2
    5952:	e6af      	b.n	56b4 <__aeabi_dsub+0xa4>
    5954:	000007ff 	.word	0x000007ff
    5958:	ff7fffff 	.word	0xff7fffff
    595c:	800fffff 	.word	0x800fffff
    5960:	2e00      	cmp	r6, #0
    5962:	d03e      	beq.n	59e2 <__aeabi_dsub+0x3d2>
    5964:	4eb3      	ldr	r6, [pc, #716]	; (5c34 <__aeabi_dsub+0x624>)
    5966:	45b4      	cmp	ip, r6
    5968:	d045      	beq.n	59f6 <__aeabi_dsub+0x3e6>
    596a:	2680      	movs	r6, #128	; 0x80
    596c:	0436      	lsls	r6, r6, #16
    596e:	426d      	negs	r5, r5
    5970:	4334      	orrs	r4, r6
    5972:	2d38      	cmp	r5, #56	; 0x38
    5974:	dd00      	ble.n	5978 <__aeabi_dsub+0x368>
    5976:	e0a8      	b.n	5aca <__aeabi_dsub+0x4ba>
    5978:	2d1f      	cmp	r5, #31
    597a:	dd00      	ble.n	597e <__aeabi_dsub+0x36e>
    597c:	e11f      	b.n	5bbe <__aeabi_dsub+0x5ae>
    597e:	2620      	movs	r6, #32
    5980:	0027      	movs	r7, r4
    5982:	4650      	mov	r0, sl
    5984:	1b76      	subs	r6, r6, r5
    5986:	40b7      	lsls	r7, r6
    5988:	40e8      	lsrs	r0, r5
    598a:	4307      	orrs	r7, r0
    598c:	4650      	mov	r0, sl
    598e:	40b0      	lsls	r0, r6
    5990:	1e46      	subs	r6, r0, #1
    5992:	41b0      	sbcs	r0, r6
    5994:	40ec      	lsrs	r4, r5
    5996:	4338      	orrs	r0, r7
    5998:	1a17      	subs	r7, r2, r0
    599a:	42ba      	cmp	r2, r7
    599c:	4192      	sbcs	r2, r2
    599e:	1b0c      	subs	r4, r1, r4
    59a0:	4252      	negs	r2, r2
    59a2:	1aa4      	subs	r4, r4, r2
    59a4:	4666      	mov	r6, ip
    59a6:	4698      	mov	r8, r3
    59a8:	e68b      	b.n	56c2 <__aeabi_dsub+0xb2>
    59aa:	4664      	mov	r4, ip
    59ac:	4667      	mov	r7, ip
    59ae:	432c      	orrs	r4, r5
    59b0:	d000      	beq.n	59b4 <__aeabi_dsub+0x3a4>
    59b2:	e68b      	b.n	56cc <__aeabi_dsub+0xbc>
    59b4:	2500      	movs	r5, #0
    59b6:	2600      	movs	r6, #0
    59b8:	2700      	movs	r7, #0
    59ba:	e6ea      	b.n	5792 <__aeabi_dsub+0x182>
    59bc:	001e      	movs	r6, r3
    59be:	e6ad      	b.n	571c <__aeabi_dsub+0x10c>
    59c0:	2b1f      	cmp	r3, #31
    59c2:	dc60      	bgt.n	5a86 <__aeabi_dsub+0x476>
    59c4:	2720      	movs	r7, #32
    59c6:	1af8      	subs	r0, r7, r3
    59c8:	000f      	movs	r7, r1
    59ca:	4684      	mov	ip, r0
    59cc:	4087      	lsls	r7, r0
    59ce:	0010      	movs	r0, r2
    59d0:	40d8      	lsrs	r0, r3
    59d2:	4307      	orrs	r7, r0
    59d4:	4660      	mov	r0, ip
    59d6:	4082      	lsls	r2, r0
    59d8:	1e50      	subs	r0, r2, #1
    59da:	4182      	sbcs	r2, r0
    59dc:	40d9      	lsrs	r1, r3
    59de:	4317      	orrs	r7, r2
    59e0:	e6f5      	b.n	57ce <__aeabi_dsub+0x1be>
    59e2:	0026      	movs	r6, r4
    59e4:	4650      	mov	r0, sl
    59e6:	4306      	orrs	r6, r0
    59e8:	d005      	beq.n	59f6 <__aeabi_dsub+0x3e6>
    59ea:	43ed      	mvns	r5, r5
    59ec:	2d00      	cmp	r5, #0
    59ee:	d0d3      	beq.n	5998 <__aeabi_dsub+0x388>
    59f0:	4e90      	ldr	r6, [pc, #576]	; (5c34 <__aeabi_dsub+0x624>)
    59f2:	45b4      	cmp	ip, r6
    59f4:	d1bd      	bne.n	5972 <__aeabi_dsub+0x362>
    59f6:	000c      	movs	r4, r1
    59f8:	0017      	movs	r7, r2
    59fa:	4666      	mov	r6, ip
    59fc:	4698      	mov	r8, r3
    59fe:	e68d      	b.n	571c <__aeabi_dsub+0x10c>
    5a00:	488c      	ldr	r0, [pc, #560]	; (5c34 <__aeabi_dsub+0x624>)
    5a02:	4283      	cmp	r3, r0
    5a04:	d00b      	beq.n	5a1e <__aeabi_dsub+0x40e>
    5a06:	4663      	mov	r3, ip
    5a08:	e6d9      	b.n	57be <__aeabi_dsub+0x1ae>
    5a0a:	2d00      	cmp	r5, #0
    5a0c:	d000      	beq.n	5a10 <__aeabi_dsub+0x400>
    5a0e:	e096      	b.n	5b3e <__aeabi_dsub+0x52e>
    5a10:	0008      	movs	r0, r1
    5a12:	4310      	orrs	r0, r2
    5a14:	d100      	bne.n	5a18 <__aeabi_dsub+0x408>
    5a16:	e0e2      	b.n	5bde <__aeabi_dsub+0x5ce>
    5a18:	000c      	movs	r4, r1
    5a1a:	0017      	movs	r7, r2
    5a1c:	4698      	mov	r8, r3
    5a1e:	4e85      	ldr	r6, [pc, #532]	; (5c34 <__aeabi_dsub+0x624>)
    5a20:	e67c      	b.n	571c <__aeabi_dsub+0x10c>
    5a22:	2500      	movs	r5, #0
    5a24:	e780      	b.n	5928 <__aeabi_dsub+0x318>
    5a26:	2100      	movs	r1, #0
    5a28:	e78e      	b.n	5948 <__aeabi_dsub+0x338>
    5a2a:	0023      	movs	r3, r4
    5a2c:	4650      	mov	r0, sl
    5a2e:	4303      	orrs	r3, r0
    5a30:	2e00      	cmp	r6, #0
    5a32:	d000      	beq.n	5a36 <__aeabi_dsub+0x426>
    5a34:	e0a8      	b.n	5b88 <__aeabi_dsub+0x578>
    5a36:	2b00      	cmp	r3, #0
    5a38:	d100      	bne.n	5a3c <__aeabi_dsub+0x42c>
    5a3a:	e0de      	b.n	5bfa <__aeabi_dsub+0x5ea>
    5a3c:	000b      	movs	r3, r1
    5a3e:	4313      	orrs	r3, r2
    5a40:	d100      	bne.n	5a44 <__aeabi_dsub+0x434>
    5a42:	e66b      	b.n	571c <__aeabi_dsub+0x10c>
    5a44:	4452      	add	r2, sl
    5a46:	4552      	cmp	r2, sl
    5a48:	4180      	sbcs	r0, r0
    5a4a:	1864      	adds	r4, r4, r1
    5a4c:	4240      	negs	r0, r0
    5a4e:	1824      	adds	r4, r4, r0
    5a50:	0017      	movs	r7, r2
    5a52:	0223      	lsls	r3, r4, #8
    5a54:	d400      	bmi.n	5a58 <__aeabi_dsub+0x448>
    5a56:	e6fd      	b.n	5854 <__aeabi_dsub+0x244>
    5a58:	4b77      	ldr	r3, [pc, #476]	; (5c38 <__aeabi_dsub+0x628>)
    5a5a:	4666      	mov	r6, ip
    5a5c:	401c      	ands	r4, r3
    5a5e:	e65d      	b.n	571c <__aeabi_dsub+0x10c>
    5a60:	0025      	movs	r5, r4
    5a62:	4650      	mov	r0, sl
    5a64:	4305      	orrs	r5, r0
    5a66:	2e00      	cmp	r6, #0
    5a68:	d1cf      	bne.n	5a0a <__aeabi_dsub+0x3fa>
    5a6a:	2d00      	cmp	r5, #0
    5a6c:	d14f      	bne.n	5b0e <__aeabi_dsub+0x4fe>
    5a6e:	000c      	movs	r4, r1
    5a70:	4314      	orrs	r4, r2
    5a72:	d100      	bne.n	5a76 <__aeabi_dsub+0x466>
    5a74:	e0a0      	b.n	5bb8 <__aeabi_dsub+0x5a8>
    5a76:	000c      	movs	r4, r1
    5a78:	0017      	movs	r7, r2
    5a7a:	4698      	mov	r8, r3
    5a7c:	e64e      	b.n	571c <__aeabi_dsub+0x10c>
    5a7e:	4666      	mov	r6, ip
    5a80:	2400      	movs	r4, #0
    5a82:	2700      	movs	r7, #0
    5a84:	e685      	b.n	5792 <__aeabi_dsub+0x182>
    5a86:	001f      	movs	r7, r3
    5a88:	0008      	movs	r0, r1
    5a8a:	3f20      	subs	r7, #32
    5a8c:	40f8      	lsrs	r0, r7
    5a8e:	0007      	movs	r7, r0
    5a90:	2b20      	cmp	r3, #32
    5a92:	d100      	bne.n	5a96 <__aeabi_dsub+0x486>
    5a94:	e08e      	b.n	5bb4 <__aeabi_dsub+0x5a4>
    5a96:	2040      	movs	r0, #64	; 0x40
    5a98:	1ac3      	subs	r3, r0, r3
    5a9a:	4099      	lsls	r1, r3
    5a9c:	430a      	orrs	r2, r1
    5a9e:	1e51      	subs	r1, r2, #1
    5aa0:	418a      	sbcs	r2, r1
    5aa2:	2100      	movs	r1, #0
    5aa4:	4317      	orrs	r7, r2
    5aa6:	e692      	b.n	57ce <__aeabi_dsub+0x1be>
    5aa8:	2e00      	cmp	r6, #0
    5aaa:	d114      	bne.n	5ad6 <__aeabi_dsub+0x4c6>
    5aac:	0026      	movs	r6, r4
    5aae:	4650      	mov	r0, sl
    5ab0:	4306      	orrs	r6, r0
    5ab2:	d062      	beq.n	5b7a <__aeabi_dsub+0x56a>
    5ab4:	43db      	mvns	r3, r3
    5ab6:	2b00      	cmp	r3, #0
    5ab8:	d15c      	bne.n	5b74 <__aeabi_dsub+0x564>
    5aba:	1887      	adds	r7, r0, r2
    5abc:	4297      	cmp	r7, r2
    5abe:	4192      	sbcs	r2, r2
    5ac0:	1864      	adds	r4, r4, r1
    5ac2:	4252      	negs	r2, r2
    5ac4:	18a4      	adds	r4, r4, r2
    5ac6:	4666      	mov	r6, ip
    5ac8:	e687      	b.n	57da <__aeabi_dsub+0x1ca>
    5aca:	4650      	mov	r0, sl
    5acc:	4320      	orrs	r0, r4
    5ace:	1e44      	subs	r4, r0, #1
    5ad0:	41a0      	sbcs	r0, r4
    5ad2:	2400      	movs	r4, #0
    5ad4:	e760      	b.n	5998 <__aeabi_dsub+0x388>
    5ad6:	4e57      	ldr	r6, [pc, #348]	; (5c34 <__aeabi_dsub+0x624>)
    5ad8:	45b4      	cmp	ip, r6
    5ada:	d04e      	beq.n	5b7a <__aeabi_dsub+0x56a>
    5adc:	2680      	movs	r6, #128	; 0x80
    5ade:	0436      	lsls	r6, r6, #16
    5ae0:	425b      	negs	r3, r3
    5ae2:	4334      	orrs	r4, r6
    5ae4:	2b38      	cmp	r3, #56	; 0x38
    5ae6:	dd00      	ble.n	5aea <__aeabi_dsub+0x4da>
    5ae8:	e07f      	b.n	5bea <__aeabi_dsub+0x5da>
    5aea:	2b1f      	cmp	r3, #31
    5aec:	dd00      	ble.n	5af0 <__aeabi_dsub+0x4e0>
    5aee:	e08b      	b.n	5c08 <__aeabi_dsub+0x5f8>
    5af0:	2620      	movs	r6, #32
    5af2:	0027      	movs	r7, r4
    5af4:	4650      	mov	r0, sl
    5af6:	1af6      	subs	r6, r6, r3
    5af8:	40b7      	lsls	r7, r6
    5afa:	40d8      	lsrs	r0, r3
    5afc:	4307      	orrs	r7, r0
    5afe:	4650      	mov	r0, sl
    5b00:	40b0      	lsls	r0, r6
    5b02:	1e46      	subs	r6, r0, #1
    5b04:	41b0      	sbcs	r0, r6
    5b06:	4307      	orrs	r7, r0
    5b08:	40dc      	lsrs	r4, r3
    5b0a:	18bf      	adds	r7, r7, r2
    5b0c:	e7d6      	b.n	5abc <__aeabi_dsub+0x4ac>
    5b0e:	000d      	movs	r5, r1
    5b10:	4315      	orrs	r5, r2
    5b12:	d100      	bne.n	5b16 <__aeabi_dsub+0x506>
    5b14:	e602      	b.n	571c <__aeabi_dsub+0x10c>
    5b16:	4650      	mov	r0, sl
    5b18:	1a80      	subs	r0, r0, r2
    5b1a:	4582      	cmp	sl, r0
    5b1c:	41bf      	sbcs	r7, r7
    5b1e:	1a65      	subs	r5, r4, r1
    5b20:	427f      	negs	r7, r7
    5b22:	1bed      	subs	r5, r5, r7
    5b24:	4684      	mov	ip, r0
    5b26:	0228      	lsls	r0, r5, #8
    5b28:	d400      	bmi.n	5b2c <__aeabi_dsub+0x51c>
    5b2a:	e68d      	b.n	5848 <__aeabi_dsub+0x238>
    5b2c:	4650      	mov	r0, sl
    5b2e:	1a17      	subs	r7, r2, r0
    5b30:	42ba      	cmp	r2, r7
    5b32:	4192      	sbcs	r2, r2
    5b34:	1b0c      	subs	r4, r1, r4
    5b36:	4252      	negs	r2, r2
    5b38:	1aa4      	subs	r4, r4, r2
    5b3a:	4698      	mov	r8, r3
    5b3c:	e5ee      	b.n	571c <__aeabi_dsub+0x10c>
    5b3e:	000d      	movs	r5, r1
    5b40:	4315      	orrs	r5, r2
    5b42:	d100      	bne.n	5b46 <__aeabi_dsub+0x536>
    5b44:	e76b      	b.n	5a1e <__aeabi_dsub+0x40e>
    5b46:	4650      	mov	r0, sl
    5b48:	0767      	lsls	r7, r4, #29
    5b4a:	08c0      	lsrs	r0, r0, #3
    5b4c:	4307      	orrs	r7, r0
    5b4e:	2080      	movs	r0, #128	; 0x80
    5b50:	08e4      	lsrs	r4, r4, #3
    5b52:	0300      	lsls	r0, r0, #12
    5b54:	4204      	tst	r4, r0
    5b56:	d007      	beq.n	5b68 <__aeabi_dsub+0x558>
    5b58:	08cd      	lsrs	r5, r1, #3
    5b5a:	4205      	tst	r5, r0
    5b5c:	d104      	bne.n	5b68 <__aeabi_dsub+0x558>
    5b5e:	002c      	movs	r4, r5
    5b60:	4698      	mov	r8, r3
    5b62:	08d7      	lsrs	r7, r2, #3
    5b64:	0749      	lsls	r1, r1, #29
    5b66:	430f      	orrs	r7, r1
    5b68:	0f7b      	lsrs	r3, r7, #29
    5b6a:	00e4      	lsls	r4, r4, #3
    5b6c:	431c      	orrs	r4, r3
    5b6e:	00ff      	lsls	r7, r7, #3
    5b70:	4e30      	ldr	r6, [pc, #192]	; (5c34 <__aeabi_dsub+0x624>)
    5b72:	e5d3      	b.n	571c <__aeabi_dsub+0x10c>
    5b74:	4e2f      	ldr	r6, [pc, #188]	; (5c34 <__aeabi_dsub+0x624>)
    5b76:	45b4      	cmp	ip, r6
    5b78:	d1b4      	bne.n	5ae4 <__aeabi_dsub+0x4d4>
    5b7a:	000c      	movs	r4, r1
    5b7c:	0017      	movs	r7, r2
    5b7e:	4666      	mov	r6, ip
    5b80:	e5cc      	b.n	571c <__aeabi_dsub+0x10c>
    5b82:	2700      	movs	r7, #0
    5b84:	2400      	movs	r4, #0
    5b86:	e5e8      	b.n	575a <__aeabi_dsub+0x14a>
    5b88:	2b00      	cmp	r3, #0
    5b8a:	d039      	beq.n	5c00 <__aeabi_dsub+0x5f0>
    5b8c:	000b      	movs	r3, r1
    5b8e:	4313      	orrs	r3, r2
    5b90:	d100      	bne.n	5b94 <__aeabi_dsub+0x584>
    5b92:	e744      	b.n	5a1e <__aeabi_dsub+0x40e>
    5b94:	08c0      	lsrs	r0, r0, #3
    5b96:	0767      	lsls	r7, r4, #29
    5b98:	4307      	orrs	r7, r0
    5b9a:	2080      	movs	r0, #128	; 0x80
    5b9c:	08e4      	lsrs	r4, r4, #3
    5b9e:	0300      	lsls	r0, r0, #12
    5ba0:	4204      	tst	r4, r0
    5ba2:	d0e1      	beq.n	5b68 <__aeabi_dsub+0x558>
    5ba4:	08cb      	lsrs	r3, r1, #3
    5ba6:	4203      	tst	r3, r0
    5ba8:	d1de      	bne.n	5b68 <__aeabi_dsub+0x558>
    5baa:	08d7      	lsrs	r7, r2, #3
    5bac:	0749      	lsls	r1, r1, #29
    5bae:	430f      	orrs	r7, r1
    5bb0:	001c      	movs	r4, r3
    5bb2:	e7d9      	b.n	5b68 <__aeabi_dsub+0x558>
    5bb4:	2100      	movs	r1, #0
    5bb6:	e771      	b.n	5a9c <__aeabi_dsub+0x48c>
    5bb8:	2500      	movs	r5, #0
    5bba:	2700      	movs	r7, #0
    5bbc:	e5e9      	b.n	5792 <__aeabi_dsub+0x182>
    5bbe:	002e      	movs	r6, r5
    5bc0:	0027      	movs	r7, r4
    5bc2:	3e20      	subs	r6, #32
    5bc4:	40f7      	lsrs	r7, r6
    5bc6:	2d20      	cmp	r5, #32
    5bc8:	d02f      	beq.n	5c2a <__aeabi_dsub+0x61a>
    5bca:	2640      	movs	r6, #64	; 0x40
    5bcc:	1b75      	subs	r5, r6, r5
    5bce:	40ac      	lsls	r4, r5
    5bd0:	4650      	mov	r0, sl
    5bd2:	4320      	orrs	r0, r4
    5bd4:	1e44      	subs	r4, r0, #1
    5bd6:	41a0      	sbcs	r0, r4
    5bd8:	2400      	movs	r4, #0
    5bda:	4338      	orrs	r0, r7
    5bdc:	e6dc      	b.n	5998 <__aeabi_dsub+0x388>
    5bde:	2480      	movs	r4, #128	; 0x80
    5be0:	2500      	movs	r5, #0
    5be2:	0324      	lsls	r4, r4, #12
    5be4:	4e13      	ldr	r6, [pc, #76]	; (5c34 <__aeabi_dsub+0x624>)
    5be6:	2700      	movs	r7, #0
    5be8:	e5d3      	b.n	5792 <__aeabi_dsub+0x182>
    5bea:	4650      	mov	r0, sl
    5bec:	4320      	orrs	r0, r4
    5bee:	0007      	movs	r7, r0
    5bf0:	1e78      	subs	r0, r7, #1
    5bf2:	4187      	sbcs	r7, r0
    5bf4:	2400      	movs	r4, #0
    5bf6:	18bf      	adds	r7, r7, r2
    5bf8:	e760      	b.n	5abc <__aeabi_dsub+0x4ac>
    5bfa:	000c      	movs	r4, r1
    5bfc:	0017      	movs	r7, r2
    5bfe:	e58d      	b.n	571c <__aeabi_dsub+0x10c>
    5c00:	000c      	movs	r4, r1
    5c02:	0017      	movs	r7, r2
    5c04:	4e0b      	ldr	r6, [pc, #44]	; (5c34 <__aeabi_dsub+0x624>)
    5c06:	e589      	b.n	571c <__aeabi_dsub+0x10c>
    5c08:	001e      	movs	r6, r3
    5c0a:	0027      	movs	r7, r4
    5c0c:	3e20      	subs	r6, #32
    5c0e:	40f7      	lsrs	r7, r6
    5c10:	2b20      	cmp	r3, #32
    5c12:	d00c      	beq.n	5c2e <__aeabi_dsub+0x61e>
    5c14:	2640      	movs	r6, #64	; 0x40
    5c16:	1af3      	subs	r3, r6, r3
    5c18:	409c      	lsls	r4, r3
    5c1a:	4650      	mov	r0, sl
    5c1c:	4320      	orrs	r0, r4
    5c1e:	1e44      	subs	r4, r0, #1
    5c20:	41a0      	sbcs	r0, r4
    5c22:	4307      	orrs	r7, r0
    5c24:	2400      	movs	r4, #0
    5c26:	18bf      	adds	r7, r7, r2
    5c28:	e748      	b.n	5abc <__aeabi_dsub+0x4ac>
    5c2a:	2400      	movs	r4, #0
    5c2c:	e7d0      	b.n	5bd0 <__aeabi_dsub+0x5c0>
    5c2e:	2400      	movs	r4, #0
    5c30:	e7f3      	b.n	5c1a <__aeabi_dsub+0x60a>
    5c32:	46c0      	nop			; (mov r8, r8)
    5c34:	000007ff 	.word	0x000007ff
    5c38:	ff7fffff 	.word	0xff7fffff

00005c3c <__aeabi_dcmpun>:
    5c3c:	b570      	push	{r4, r5, r6, lr}
    5c3e:	4e0e      	ldr	r6, [pc, #56]	; (5c78 <__aeabi_dcmpun+0x3c>)
    5c40:	030d      	lsls	r5, r1, #12
    5c42:	031c      	lsls	r4, r3, #12
    5c44:	0049      	lsls	r1, r1, #1
    5c46:	005b      	lsls	r3, r3, #1
    5c48:	0b2d      	lsrs	r5, r5, #12
    5c4a:	0d49      	lsrs	r1, r1, #21
    5c4c:	0b24      	lsrs	r4, r4, #12
    5c4e:	0d5b      	lsrs	r3, r3, #21
    5c50:	42b1      	cmp	r1, r6
    5c52:	d004      	beq.n	5c5e <__aeabi_dcmpun+0x22>
    5c54:	4908      	ldr	r1, [pc, #32]	; (5c78 <__aeabi_dcmpun+0x3c>)
    5c56:	2000      	movs	r0, #0
    5c58:	428b      	cmp	r3, r1
    5c5a:	d008      	beq.n	5c6e <__aeabi_dcmpun+0x32>
    5c5c:	bd70      	pop	{r4, r5, r6, pc}
    5c5e:	4305      	orrs	r5, r0
    5c60:	2001      	movs	r0, #1
    5c62:	2d00      	cmp	r5, #0
    5c64:	d1fa      	bne.n	5c5c <__aeabi_dcmpun+0x20>
    5c66:	4904      	ldr	r1, [pc, #16]	; (5c78 <__aeabi_dcmpun+0x3c>)
    5c68:	2000      	movs	r0, #0
    5c6a:	428b      	cmp	r3, r1
    5c6c:	d1f6      	bne.n	5c5c <__aeabi_dcmpun+0x20>
    5c6e:	4314      	orrs	r4, r2
    5c70:	0020      	movs	r0, r4
    5c72:	1e44      	subs	r4, r0, #1
    5c74:	41a0      	sbcs	r0, r4
    5c76:	e7f1      	b.n	5c5c <__aeabi_dcmpun+0x20>
    5c78:	000007ff 	.word	0x000007ff

00005c7c <__aeabi_d2iz>:
    5c7c:	b530      	push	{r4, r5, lr}
    5c7e:	4d13      	ldr	r5, [pc, #76]	; (5ccc <__aeabi_d2iz+0x50>)
    5c80:	030a      	lsls	r2, r1, #12
    5c82:	004b      	lsls	r3, r1, #1
    5c84:	0b12      	lsrs	r2, r2, #12
    5c86:	0d5b      	lsrs	r3, r3, #21
    5c88:	0fc9      	lsrs	r1, r1, #31
    5c8a:	2400      	movs	r4, #0
    5c8c:	42ab      	cmp	r3, r5
    5c8e:	dd10      	ble.n	5cb2 <__aeabi_d2iz+0x36>
    5c90:	4c0f      	ldr	r4, [pc, #60]	; (5cd0 <__aeabi_d2iz+0x54>)
    5c92:	42a3      	cmp	r3, r4
    5c94:	dc0f      	bgt.n	5cb6 <__aeabi_d2iz+0x3a>
    5c96:	2480      	movs	r4, #128	; 0x80
    5c98:	4d0e      	ldr	r5, [pc, #56]	; (5cd4 <__aeabi_d2iz+0x58>)
    5c9a:	0364      	lsls	r4, r4, #13
    5c9c:	4322      	orrs	r2, r4
    5c9e:	1aed      	subs	r5, r5, r3
    5ca0:	2d1f      	cmp	r5, #31
    5ca2:	dd0b      	ble.n	5cbc <__aeabi_d2iz+0x40>
    5ca4:	480c      	ldr	r0, [pc, #48]	; (5cd8 <__aeabi_d2iz+0x5c>)
    5ca6:	1ac3      	subs	r3, r0, r3
    5ca8:	40da      	lsrs	r2, r3
    5caa:	4254      	negs	r4, r2
    5cac:	2900      	cmp	r1, #0
    5cae:	d100      	bne.n	5cb2 <__aeabi_d2iz+0x36>
    5cb0:	0014      	movs	r4, r2
    5cb2:	0020      	movs	r0, r4
    5cb4:	bd30      	pop	{r4, r5, pc}
    5cb6:	4b09      	ldr	r3, [pc, #36]	; (5cdc <__aeabi_d2iz+0x60>)
    5cb8:	18cc      	adds	r4, r1, r3
    5cba:	e7fa      	b.n	5cb2 <__aeabi_d2iz+0x36>
    5cbc:	4c08      	ldr	r4, [pc, #32]	; (5ce0 <__aeabi_d2iz+0x64>)
    5cbe:	40e8      	lsrs	r0, r5
    5cc0:	46a4      	mov	ip, r4
    5cc2:	4463      	add	r3, ip
    5cc4:	409a      	lsls	r2, r3
    5cc6:	4302      	orrs	r2, r0
    5cc8:	e7ef      	b.n	5caa <__aeabi_d2iz+0x2e>
    5cca:	46c0      	nop			; (mov r8, r8)
    5ccc:	000003fe 	.word	0x000003fe
    5cd0:	0000041d 	.word	0x0000041d
    5cd4:	00000433 	.word	0x00000433
    5cd8:	00000413 	.word	0x00000413
    5cdc:	7fffffff 	.word	0x7fffffff
    5ce0:	fffffbed 	.word	0xfffffbed

00005ce4 <__aeabi_i2d>:
    5ce4:	b570      	push	{r4, r5, r6, lr}
    5ce6:	2800      	cmp	r0, #0
    5ce8:	d030      	beq.n	5d4c <__aeabi_i2d+0x68>
    5cea:	17c3      	asrs	r3, r0, #31
    5cec:	18c4      	adds	r4, r0, r3
    5cee:	405c      	eors	r4, r3
    5cf0:	0fc5      	lsrs	r5, r0, #31
    5cf2:	0020      	movs	r0, r4
    5cf4:	f000 f9d8 	bl	60a8 <__clzsi2>
    5cf8:	4b17      	ldr	r3, [pc, #92]	; (5d58 <__aeabi_i2d+0x74>)
    5cfa:	4a18      	ldr	r2, [pc, #96]	; (5d5c <__aeabi_i2d+0x78>)
    5cfc:	1a1b      	subs	r3, r3, r0
    5cfe:	1ad2      	subs	r2, r2, r3
    5d00:	2a1f      	cmp	r2, #31
    5d02:	dd18      	ble.n	5d36 <__aeabi_i2d+0x52>
    5d04:	4a16      	ldr	r2, [pc, #88]	; (5d60 <__aeabi_i2d+0x7c>)
    5d06:	1ad2      	subs	r2, r2, r3
    5d08:	4094      	lsls	r4, r2
    5d0a:	2200      	movs	r2, #0
    5d0c:	0324      	lsls	r4, r4, #12
    5d0e:	055b      	lsls	r3, r3, #21
    5d10:	0b24      	lsrs	r4, r4, #12
    5d12:	0d5b      	lsrs	r3, r3, #21
    5d14:	2100      	movs	r1, #0
    5d16:	0010      	movs	r0, r2
    5d18:	0324      	lsls	r4, r4, #12
    5d1a:	0d0a      	lsrs	r2, r1, #20
    5d1c:	0b24      	lsrs	r4, r4, #12
    5d1e:	0512      	lsls	r2, r2, #20
    5d20:	4322      	orrs	r2, r4
    5d22:	4c10      	ldr	r4, [pc, #64]	; (5d64 <__aeabi_i2d+0x80>)
    5d24:	051b      	lsls	r3, r3, #20
    5d26:	4022      	ands	r2, r4
    5d28:	4313      	orrs	r3, r2
    5d2a:	005b      	lsls	r3, r3, #1
    5d2c:	07ed      	lsls	r5, r5, #31
    5d2e:	085b      	lsrs	r3, r3, #1
    5d30:	432b      	orrs	r3, r5
    5d32:	0019      	movs	r1, r3
    5d34:	bd70      	pop	{r4, r5, r6, pc}
    5d36:	0021      	movs	r1, r4
    5d38:	4091      	lsls	r1, r2
    5d3a:	000a      	movs	r2, r1
    5d3c:	210b      	movs	r1, #11
    5d3e:	1a08      	subs	r0, r1, r0
    5d40:	40c4      	lsrs	r4, r0
    5d42:	055b      	lsls	r3, r3, #21
    5d44:	0324      	lsls	r4, r4, #12
    5d46:	0b24      	lsrs	r4, r4, #12
    5d48:	0d5b      	lsrs	r3, r3, #21
    5d4a:	e7e3      	b.n	5d14 <__aeabi_i2d+0x30>
    5d4c:	2500      	movs	r5, #0
    5d4e:	2300      	movs	r3, #0
    5d50:	2400      	movs	r4, #0
    5d52:	2200      	movs	r2, #0
    5d54:	e7de      	b.n	5d14 <__aeabi_i2d+0x30>
    5d56:	46c0      	nop			; (mov r8, r8)
    5d58:	0000041e 	.word	0x0000041e
    5d5c:	00000433 	.word	0x00000433
    5d60:	00000413 	.word	0x00000413
    5d64:	800fffff 	.word	0x800fffff

00005d68 <__aeabi_ui2d>:
    5d68:	b510      	push	{r4, lr}
    5d6a:	1e04      	subs	r4, r0, #0
    5d6c:	d028      	beq.n	5dc0 <__aeabi_ui2d+0x58>
    5d6e:	f000 f99b 	bl	60a8 <__clzsi2>
    5d72:	4b15      	ldr	r3, [pc, #84]	; (5dc8 <__aeabi_ui2d+0x60>)
    5d74:	4a15      	ldr	r2, [pc, #84]	; (5dcc <__aeabi_ui2d+0x64>)
    5d76:	1a1b      	subs	r3, r3, r0
    5d78:	1ad2      	subs	r2, r2, r3
    5d7a:	2a1f      	cmp	r2, #31
    5d7c:	dd15      	ble.n	5daa <__aeabi_ui2d+0x42>
    5d7e:	4a14      	ldr	r2, [pc, #80]	; (5dd0 <__aeabi_ui2d+0x68>)
    5d80:	1ad2      	subs	r2, r2, r3
    5d82:	4094      	lsls	r4, r2
    5d84:	2200      	movs	r2, #0
    5d86:	0324      	lsls	r4, r4, #12
    5d88:	055b      	lsls	r3, r3, #21
    5d8a:	0b24      	lsrs	r4, r4, #12
    5d8c:	0d5b      	lsrs	r3, r3, #21
    5d8e:	2100      	movs	r1, #0
    5d90:	0010      	movs	r0, r2
    5d92:	0324      	lsls	r4, r4, #12
    5d94:	0d0a      	lsrs	r2, r1, #20
    5d96:	0b24      	lsrs	r4, r4, #12
    5d98:	0512      	lsls	r2, r2, #20
    5d9a:	4322      	orrs	r2, r4
    5d9c:	4c0d      	ldr	r4, [pc, #52]	; (5dd4 <__aeabi_ui2d+0x6c>)
    5d9e:	051b      	lsls	r3, r3, #20
    5da0:	4022      	ands	r2, r4
    5da2:	4313      	orrs	r3, r2
    5da4:	005b      	lsls	r3, r3, #1
    5da6:	0859      	lsrs	r1, r3, #1
    5da8:	bd10      	pop	{r4, pc}
    5daa:	0021      	movs	r1, r4
    5dac:	4091      	lsls	r1, r2
    5dae:	000a      	movs	r2, r1
    5db0:	210b      	movs	r1, #11
    5db2:	1a08      	subs	r0, r1, r0
    5db4:	40c4      	lsrs	r4, r0
    5db6:	055b      	lsls	r3, r3, #21
    5db8:	0324      	lsls	r4, r4, #12
    5dba:	0b24      	lsrs	r4, r4, #12
    5dbc:	0d5b      	lsrs	r3, r3, #21
    5dbe:	e7e6      	b.n	5d8e <__aeabi_ui2d+0x26>
    5dc0:	2300      	movs	r3, #0
    5dc2:	2400      	movs	r4, #0
    5dc4:	2200      	movs	r2, #0
    5dc6:	e7e2      	b.n	5d8e <__aeabi_ui2d+0x26>
    5dc8:	0000041e 	.word	0x0000041e
    5dcc:	00000433 	.word	0x00000433
    5dd0:	00000413 	.word	0x00000413
    5dd4:	800fffff 	.word	0x800fffff

00005dd8 <__aeabi_f2d>:
    5dd8:	0041      	lsls	r1, r0, #1
    5dda:	0e09      	lsrs	r1, r1, #24
    5ddc:	1c4b      	adds	r3, r1, #1
    5dde:	b570      	push	{r4, r5, r6, lr}
    5de0:	b2db      	uxtb	r3, r3
    5de2:	0246      	lsls	r6, r0, #9
    5de4:	0a75      	lsrs	r5, r6, #9
    5de6:	0fc4      	lsrs	r4, r0, #31
    5de8:	2b01      	cmp	r3, #1
    5dea:	dd14      	ble.n	5e16 <__aeabi_f2d+0x3e>
    5dec:	23e0      	movs	r3, #224	; 0xe0
    5dee:	009b      	lsls	r3, r3, #2
    5df0:	076d      	lsls	r5, r5, #29
    5df2:	0b36      	lsrs	r6, r6, #12
    5df4:	18cb      	adds	r3, r1, r3
    5df6:	2100      	movs	r1, #0
    5df8:	0d0a      	lsrs	r2, r1, #20
    5dfa:	0028      	movs	r0, r5
    5dfc:	0512      	lsls	r2, r2, #20
    5dfe:	4d1c      	ldr	r5, [pc, #112]	; (5e70 <__aeabi_f2d+0x98>)
    5e00:	4332      	orrs	r2, r6
    5e02:	055b      	lsls	r3, r3, #21
    5e04:	402a      	ands	r2, r5
    5e06:	085b      	lsrs	r3, r3, #1
    5e08:	4313      	orrs	r3, r2
    5e0a:	005b      	lsls	r3, r3, #1
    5e0c:	07e4      	lsls	r4, r4, #31
    5e0e:	085b      	lsrs	r3, r3, #1
    5e10:	4323      	orrs	r3, r4
    5e12:	0019      	movs	r1, r3
    5e14:	bd70      	pop	{r4, r5, r6, pc}
    5e16:	2900      	cmp	r1, #0
    5e18:	d114      	bne.n	5e44 <__aeabi_f2d+0x6c>
    5e1a:	2d00      	cmp	r5, #0
    5e1c:	d01e      	beq.n	5e5c <__aeabi_f2d+0x84>
    5e1e:	0028      	movs	r0, r5
    5e20:	f000 f942 	bl	60a8 <__clzsi2>
    5e24:	280a      	cmp	r0, #10
    5e26:	dc1c      	bgt.n	5e62 <__aeabi_f2d+0x8a>
    5e28:	230b      	movs	r3, #11
    5e2a:	002a      	movs	r2, r5
    5e2c:	1a1b      	subs	r3, r3, r0
    5e2e:	40da      	lsrs	r2, r3
    5e30:	0003      	movs	r3, r0
    5e32:	3315      	adds	r3, #21
    5e34:	409d      	lsls	r5, r3
    5e36:	4b0f      	ldr	r3, [pc, #60]	; (5e74 <__aeabi_f2d+0x9c>)
    5e38:	0312      	lsls	r2, r2, #12
    5e3a:	1a1b      	subs	r3, r3, r0
    5e3c:	055b      	lsls	r3, r3, #21
    5e3e:	0b16      	lsrs	r6, r2, #12
    5e40:	0d5b      	lsrs	r3, r3, #21
    5e42:	e7d8      	b.n	5df6 <__aeabi_f2d+0x1e>
    5e44:	2d00      	cmp	r5, #0
    5e46:	d006      	beq.n	5e56 <__aeabi_f2d+0x7e>
    5e48:	0b32      	lsrs	r2, r6, #12
    5e4a:	2680      	movs	r6, #128	; 0x80
    5e4c:	0336      	lsls	r6, r6, #12
    5e4e:	076d      	lsls	r5, r5, #29
    5e50:	4316      	orrs	r6, r2
    5e52:	4b09      	ldr	r3, [pc, #36]	; (5e78 <__aeabi_f2d+0xa0>)
    5e54:	e7cf      	b.n	5df6 <__aeabi_f2d+0x1e>
    5e56:	4b08      	ldr	r3, [pc, #32]	; (5e78 <__aeabi_f2d+0xa0>)
    5e58:	2600      	movs	r6, #0
    5e5a:	e7cc      	b.n	5df6 <__aeabi_f2d+0x1e>
    5e5c:	2300      	movs	r3, #0
    5e5e:	2600      	movs	r6, #0
    5e60:	e7c9      	b.n	5df6 <__aeabi_f2d+0x1e>
    5e62:	0003      	movs	r3, r0
    5e64:	002a      	movs	r2, r5
    5e66:	3b0b      	subs	r3, #11
    5e68:	409a      	lsls	r2, r3
    5e6a:	2500      	movs	r5, #0
    5e6c:	e7e3      	b.n	5e36 <__aeabi_f2d+0x5e>
    5e6e:	46c0      	nop			; (mov r8, r8)
    5e70:	800fffff 	.word	0x800fffff
    5e74:	00000389 	.word	0x00000389
    5e78:	000007ff 	.word	0x000007ff

00005e7c <__aeabi_d2f>:
    5e7c:	b5f0      	push	{r4, r5, r6, r7, lr}
    5e7e:	004c      	lsls	r4, r1, #1
    5e80:	0d64      	lsrs	r4, r4, #21
    5e82:	030b      	lsls	r3, r1, #12
    5e84:	1c62      	adds	r2, r4, #1
    5e86:	0f45      	lsrs	r5, r0, #29
    5e88:	0a5b      	lsrs	r3, r3, #9
    5e8a:	0552      	lsls	r2, r2, #21
    5e8c:	432b      	orrs	r3, r5
    5e8e:	0fc9      	lsrs	r1, r1, #31
    5e90:	00c5      	lsls	r5, r0, #3
    5e92:	0d52      	lsrs	r2, r2, #21
    5e94:	2a01      	cmp	r2, #1
    5e96:	dd28      	ble.n	5eea <__aeabi_d2f+0x6e>
    5e98:	4a3a      	ldr	r2, [pc, #232]	; (5f84 <__aeabi_d2f+0x108>)
    5e9a:	18a6      	adds	r6, r4, r2
    5e9c:	2efe      	cmp	r6, #254	; 0xfe
    5e9e:	dc1b      	bgt.n	5ed8 <__aeabi_d2f+0x5c>
    5ea0:	2e00      	cmp	r6, #0
    5ea2:	dd3e      	ble.n	5f22 <__aeabi_d2f+0xa6>
    5ea4:	0180      	lsls	r0, r0, #6
    5ea6:	0002      	movs	r2, r0
    5ea8:	1e50      	subs	r0, r2, #1
    5eaa:	4182      	sbcs	r2, r0
    5eac:	0f6d      	lsrs	r5, r5, #29
    5eae:	432a      	orrs	r2, r5
    5eb0:	00db      	lsls	r3, r3, #3
    5eb2:	4313      	orrs	r3, r2
    5eb4:	075a      	lsls	r2, r3, #29
    5eb6:	d004      	beq.n	5ec2 <__aeabi_d2f+0x46>
    5eb8:	220f      	movs	r2, #15
    5eba:	401a      	ands	r2, r3
    5ebc:	2a04      	cmp	r2, #4
    5ebe:	d000      	beq.n	5ec2 <__aeabi_d2f+0x46>
    5ec0:	3304      	adds	r3, #4
    5ec2:	2280      	movs	r2, #128	; 0x80
    5ec4:	04d2      	lsls	r2, r2, #19
    5ec6:	401a      	ands	r2, r3
    5ec8:	d05a      	beq.n	5f80 <__aeabi_d2f+0x104>
    5eca:	3601      	adds	r6, #1
    5ecc:	2eff      	cmp	r6, #255	; 0xff
    5ece:	d003      	beq.n	5ed8 <__aeabi_d2f+0x5c>
    5ed0:	019b      	lsls	r3, r3, #6
    5ed2:	0a5b      	lsrs	r3, r3, #9
    5ed4:	b2f4      	uxtb	r4, r6
    5ed6:	e001      	b.n	5edc <__aeabi_d2f+0x60>
    5ed8:	24ff      	movs	r4, #255	; 0xff
    5eda:	2300      	movs	r3, #0
    5edc:	0258      	lsls	r0, r3, #9
    5ede:	05e4      	lsls	r4, r4, #23
    5ee0:	0a40      	lsrs	r0, r0, #9
    5ee2:	07c9      	lsls	r1, r1, #31
    5ee4:	4320      	orrs	r0, r4
    5ee6:	4308      	orrs	r0, r1
    5ee8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5eea:	2c00      	cmp	r4, #0
    5eec:	d007      	beq.n	5efe <__aeabi_d2f+0x82>
    5eee:	431d      	orrs	r5, r3
    5ef0:	d0f2      	beq.n	5ed8 <__aeabi_d2f+0x5c>
    5ef2:	2080      	movs	r0, #128	; 0x80
    5ef4:	00db      	lsls	r3, r3, #3
    5ef6:	0480      	lsls	r0, r0, #18
    5ef8:	4303      	orrs	r3, r0
    5efa:	26ff      	movs	r6, #255	; 0xff
    5efc:	e7da      	b.n	5eb4 <__aeabi_d2f+0x38>
    5efe:	432b      	orrs	r3, r5
    5f00:	d003      	beq.n	5f0a <__aeabi_d2f+0x8e>
    5f02:	2305      	movs	r3, #5
    5f04:	08db      	lsrs	r3, r3, #3
    5f06:	2cff      	cmp	r4, #255	; 0xff
    5f08:	d003      	beq.n	5f12 <__aeabi_d2f+0x96>
    5f0a:	025b      	lsls	r3, r3, #9
    5f0c:	0a5b      	lsrs	r3, r3, #9
    5f0e:	b2e4      	uxtb	r4, r4
    5f10:	e7e4      	b.n	5edc <__aeabi_d2f+0x60>
    5f12:	2b00      	cmp	r3, #0
    5f14:	d032      	beq.n	5f7c <__aeabi_d2f+0x100>
    5f16:	2080      	movs	r0, #128	; 0x80
    5f18:	03c0      	lsls	r0, r0, #15
    5f1a:	4303      	orrs	r3, r0
    5f1c:	025b      	lsls	r3, r3, #9
    5f1e:	0a5b      	lsrs	r3, r3, #9
    5f20:	e7dc      	b.n	5edc <__aeabi_d2f+0x60>
    5f22:	0032      	movs	r2, r6
    5f24:	3217      	adds	r2, #23
    5f26:	db14      	blt.n	5f52 <__aeabi_d2f+0xd6>
    5f28:	2280      	movs	r2, #128	; 0x80
    5f2a:	271e      	movs	r7, #30
    5f2c:	0412      	lsls	r2, r2, #16
    5f2e:	4313      	orrs	r3, r2
    5f30:	1bbf      	subs	r7, r7, r6
    5f32:	2f1f      	cmp	r7, #31
    5f34:	dc0f      	bgt.n	5f56 <__aeabi_d2f+0xda>
    5f36:	4a14      	ldr	r2, [pc, #80]	; (5f88 <__aeabi_d2f+0x10c>)
    5f38:	4694      	mov	ip, r2
    5f3a:	4464      	add	r4, ip
    5f3c:	002a      	movs	r2, r5
    5f3e:	40a5      	lsls	r5, r4
    5f40:	002e      	movs	r6, r5
    5f42:	40a3      	lsls	r3, r4
    5f44:	1e75      	subs	r5, r6, #1
    5f46:	41ae      	sbcs	r6, r5
    5f48:	40fa      	lsrs	r2, r7
    5f4a:	4333      	orrs	r3, r6
    5f4c:	4313      	orrs	r3, r2
    5f4e:	2600      	movs	r6, #0
    5f50:	e7b0      	b.n	5eb4 <__aeabi_d2f+0x38>
    5f52:	2400      	movs	r4, #0
    5f54:	e7d5      	b.n	5f02 <__aeabi_d2f+0x86>
    5f56:	2202      	movs	r2, #2
    5f58:	4252      	negs	r2, r2
    5f5a:	1b96      	subs	r6, r2, r6
    5f5c:	001a      	movs	r2, r3
    5f5e:	40f2      	lsrs	r2, r6
    5f60:	2f20      	cmp	r7, #32
    5f62:	d009      	beq.n	5f78 <__aeabi_d2f+0xfc>
    5f64:	4809      	ldr	r0, [pc, #36]	; (5f8c <__aeabi_d2f+0x110>)
    5f66:	4684      	mov	ip, r0
    5f68:	4464      	add	r4, ip
    5f6a:	40a3      	lsls	r3, r4
    5f6c:	432b      	orrs	r3, r5
    5f6e:	1e5d      	subs	r5, r3, #1
    5f70:	41ab      	sbcs	r3, r5
    5f72:	2600      	movs	r6, #0
    5f74:	4313      	orrs	r3, r2
    5f76:	e79d      	b.n	5eb4 <__aeabi_d2f+0x38>
    5f78:	2300      	movs	r3, #0
    5f7a:	e7f7      	b.n	5f6c <__aeabi_d2f+0xf0>
    5f7c:	2300      	movs	r3, #0
    5f7e:	e7ad      	b.n	5edc <__aeabi_d2f+0x60>
    5f80:	0034      	movs	r4, r6
    5f82:	e7bf      	b.n	5f04 <__aeabi_d2f+0x88>
    5f84:	fffffc80 	.word	0xfffffc80
    5f88:	fffffc82 	.word	0xfffffc82
    5f8c:	fffffca2 	.word	0xfffffca2

00005f90 <__udivsi3>:
    5f90:	2200      	movs	r2, #0
    5f92:	0843      	lsrs	r3, r0, #1
    5f94:	428b      	cmp	r3, r1
    5f96:	d374      	bcc.n	6082 <__udivsi3+0xf2>
    5f98:	0903      	lsrs	r3, r0, #4
    5f9a:	428b      	cmp	r3, r1
    5f9c:	d35f      	bcc.n	605e <__udivsi3+0xce>
    5f9e:	0a03      	lsrs	r3, r0, #8
    5fa0:	428b      	cmp	r3, r1
    5fa2:	d344      	bcc.n	602e <__udivsi3+0x9e>
    5fa4:	0b03      	lsrs	r3, r0, #12
    5fa6:	428b      	cmp	r3, r1
    5fa8:	d328      	bcc.n	5ffc <__udivsi3+0x6c>
    5faa:	0c03      	lsrs	r3, r0, #16
    5fac:	428b      	cmp	r3, r1
    5fae:	d30d      	bcc.n	5fcc <__udivsi3+0x3c>
    5fb0:	22ff      	movs	r2, #255	; 0xff
    5fb2:	0209      	lsls	r1, r1, #8
    5fb4:	ba12      	rev	r2, r2
    5fb6:	0c03      	lsrs	r3, r0, #16
    5fb8:	428b      	cmp	r3, r1
    5fba:	d302      	bcc.n	5fc2 <__udivsi3+0x32>
    5fbc:	1212      	asrs	r2, r2, #8
    5fbe:	0209      	lsls	r1, r1, #8
    5fc0:	d065      	beq.n	608e <__udivsi3+0xfe>
    5fc2:	0b03      	lsrs	r3, r0, #12
    5fc4:	428b      	cmp	r3, r1
    5fc6:	d319      	bcc.n	5ffc <__udivsi3+0x6c>
    5fc8:	e000      	b.n	5fcc <__udivsi3+0x3c>
    5fca:	0a09      	lsrs	r1, r1, #8
    5fcc:	0bc3      	lsrs	r3, r0, #15
    5fce:	428b      	cmp	r3, r1
    5fd0:	d301      	bcc.n	5fd6 <__udivsi3+0x46>
    5fd2:	03cb      	lsls	r3, r1, #15
    5fd4:	1ac0      	subs	r0, r0, r3
    5fd6:	4152      	adcs	r2, r2
    5fd8:	0b83      	lsrs	r3, r0, #14
    5fda:	428b      	cmp	r3, r1
    5fdc:	d301      	bcc.n	5fe2 <__udivsi3+0x52>
    5fde:	038b      	lsls	r3, r1, #14
    5fe0:	1ac0      	subs	r0, r0, r3
    5fe2:	4152      	adcs	r2, r2
    5fe4:	0b43      	lsrs	r3, r0, #13
    5fe6:	428b      	cmp	r3, r1
    5fe8:	d301      	bcc.n	5fee <__udivsi3+0x5e>
    5fea:	034b      	lsls	r3, r1, #13
    5fec:	1ac0      	subs	r0, r0, r3
    5fee:	4152      	adcs	r2, r2
    5ff0:	0b03      	lsrs	r3, r0, #12
    5ff2:	428b      	cmp	r3, r1
    5ff4:	d301      	bcc.n	5ffa <__udivsi3+0x6a>
    5ff6:	030b      	lsls	r3, r1, #12
    5ff8:	1ac0      	subs	r0, r0, r3
    5ffa:	4152      	adcs	r2, r2
    5ffc:	0ac3      	lsrs	r3, r0, #11
    5ffe:	428b      	cmp	r3, r1
    6000:	d301      	bcc.n	6006 <__udivsi3+0x76>
    6002:	02cb      	lsls	r3, r1, #11
    6004:	1ac0      	subs	r0, r0, r3
    6006:	4152      	adcs	r2, r2
    6008:	0a83      	lsrs	r3, r0, #10
    600a:	428b      	cmp	r3, r1
    600c:	d301      	bcc.n	6012 <__udivsi3+0x82>
    600e:	028b      	lsls	r3, r1, #10
    6010:	1ac0      	subs	r0, r0, r3
    6012:	4152      	adcs	r2, r2
    6014:	0a43      	lsrs	r3, r0, #9
    6016:	428b      	cmp	r3, r1
    6018:	d301      	bcc.n	601e <__udivsi3+0x8e>
    601a:	024b      	lsls	r3, r1, #9
    601c:	1ac0      	subs	r0, r0, r3
    601e:	4152      	adcs	r2, r2
    6020:	0a03      	lsrs	r3, r0, #8
    6022:	428b      	cmp	r3, r1
    6024:	d301      	bcc.n	602a <__udivsi3+0x9a>
    6026:	020b      	lsls	r3, r1, #8
    6028:	1ac0      	subs	r0, r0, r3
    602a:	4152      	adcs	r2, r2
    602c:	d2cd      	bcs.n	5fca <__udivsi3+0x3a>
    602e:	09c3      	lsrs	r3, r0, #7
    6030:	428b      	cmp	r3, r1
    6032:	d301      	bcc.n	6038 <__udivsi3+0xa8>
    6034:	01cb      	lsls	r3, r1, #7
    6036:	1ac0      	subs	r0, r0, r3
    6038:	4152      	adcs	r2, r2
    603a:	0983      	lsrs	r3, r0, #6
    603c:	428b      	cmp	r3, r1
    603e:	d301      	bcc.n	6044 <__udivsi3+0xb4>
    6040:	018b      	lsls	r3, r1, #6
    6042:	1ac0      	subs	r0, r0, r3
    6044:	4152      	adcs	r2, r2
    6046:	0943      	lsrs	r3, r0, #5
    6048:	428b      	cmp	r3, r1
    604a:	d301      	bcc.n	6050 <__udivsi3+0xc0>
    604c:	014b      	lsls	r3, r1, #5
    604e:	1ac0      	subs	r0, r0, r3
    6050:	4152      	adcs	r2, r2
    6052:	0903      	lsrs	r3, r0, #4
    6054:	428b      	cmp	r3, r1
    6056:	d301      	bcc.n	605c <__udivsi3+0xcc>
    6058:	010b      	lsls	r3, r1, #4
    605a:	1ac0      	subs	r0, r0, r3
    605c:	4152      	adcs	r2, r2
    605e:	08c3      	lsrs	r3, r0, #3
    6060:	428b      	cmp	r3, r1
    6062:	d301      	bcc.n	6068 <__udivsi3+0xd8>
    6064:	00cb      	lsls	r3, r1, #3
    6066:	1ac0      	subs	r0, r0, r3
    6068:	4152      	adcs	r2, r2
    606a:	0883      	lsrs	r3, r0, #2
    606c:	428b      	cmp	r3, r1
    606e:	d301      	bcc.n	6074 <__udivsi3+0xe4>
    6070:	008b      	lsls	r3, r1, #2
    6072:	1ac0      	subs	r0, r0, r3
    6074:	4152      	adcs	r2, r2
    6076:	0843      	lsrs	r3, r0, #1
    6078:	428b      	cmp	r3, r1
    607a:	d301      	bcc.n	6080 <__udivsi3+0xf0>
    607c:	004b      	lsls	r3, r1, #1
    607e:	1ac0      	subs	r0, r0, r3
    6080:	4152      	adcs	r2, r2
    6082:	1a41      	subs	r1, r0, r1
    6084:	d200      	bcs.n	6088 <__udivsi3+0xf8>
    6086:	4601      	mov	r1, r0
    6088:	4152      	adcs	r2, r2
    608a:	4610      	mov	r0, r2
    608c:	4770      	bx	lr
    608e:	e7ff      	b.n	6090 <__udivsi3+0x100>
    6090:	b501      	push	{r0, lr}
    6092:	2000      	movs	r0, #0
    6094:	f000 f806 	bl	60a4 <__aeabi_idiv0>
    6098:	bd02      	pop	{r1, pc}
    609a:	46c0      	nop			; (mov r8, r8)

0000609c <__aeabi_uidivmod>:
    609c:	2900      	cmp	r1, #0
    609e:	d0f7      	beq.n	6090 <__udivsi3+0x100>
    60a0:	e776      	b.n	5f90 <__udivsi3>
    60a2:	4770      	bx	lr

000060a4 <__aeabi_idiv0>:
    60a4:	4770      	bx	lr
    60a6:	46c0      	nop			; (mov r8, r8)

000060a8 <__clzsi2>:
    60a8:	211c      	movs	r1, #28
    60aa:	2301      	movs	r3, #1
    60ac:	041b      	lsls	r3, r3, #16
    60ae:	4298      	cmp	r0, r3
    60b0:	d301      	bcc.n	60b6 <__clzsi2+0xe>
    60b2:	0c00      	lsrs	r0, r0, #16
    60b4:	3910      	subs	r1, #16
    60b6:	0a1b      	lsrs	r3, r3, #8
    60b8:	4298      	cmp	r0, r3
    60ba:	d301      	bcc.n	60c0 <__clzsi2+0x18>
    60bc:	0a00      	lsrs	r0, r0, #8
    60be:	3908      	subs	r1, #8
    60c0:	091b      	lsrs	r3, r3, #4
    60c2:	4298      	cmp	r0, r3
    60c4:	d301      	bcc.n	60ca <__clzsi2+0x22>
    60c6:	0900      	lsrs	r0, r0, #4
    60c8:	3904      	subs	r1, #4
    60ca:	a202      	add	r2, pc, #8	; (adr r2, 60d4 <__clzsi2+0x2c>)
    60cc:	5c10      	ldrb	r0, [r2, r0]
    60ce:	1840      	adds	r0, r0, r1
    60d0:	4770      	bx	lr
    60d2:	46c0      	nop			; (mov r8, r8)
    60d4:	02020304 	.word	0x02020304
    60d8:	01010101 	.word	0x01010101
	...

000060e4 <__errno>:
    60e4:	4b01      	ldr	r3, [pc, #4]	; (60ec <__errno+0x8>)
    60e6:	6818      	ldr	r0, [r3, #0]
    60e8:	4770      	bx	lr
    60ea:	46c0      	nop			; (mov r8, r8)
    60ec:	20000074 	.word	0x20000074

000060f0 <__libc_init_array>:
    60f0:	b570      	push	{r4, r5, r6, lr}
    60f2:	4e0d      	ldr	r6, [pc, #52]	; (6128 <__libc_init_array+0x38>)
    60f4:	4d0d      	ldr	r5, [pc, #52]	; (612c <__libc_init_array+0x3c>)
    60f6:	2400      	movs	r4, #0
    60f8:	1bad      	subs	r5, r5, r6
    60fa:	10ad      	asrs	r5, r5, #2
    60fc:	d005      	beq.n	610a <__libc_init_array+0x1a>
    60fe:	00a3      	lsls	r3, r4, #2
    6100:	58f3      	ldr	r3, [r6, r3]
    6102:	3401      	adds	r4, #1
    6104:	4798      	blx	r3
    6106:	42a5      	cmp	r5, r4
    6108:	d1f9      	bne.n	60fe <__libc_init_array+0xe>
    610a:	f000 f92b 	bl	6364 <_init>
    610e:	4e08      	ldr	r6, [pc, #32]	; (6130 <__libc_init_array+0x40>)
    6110:	4d08      	ldr	r5, [pc, #32]	; (6134 <__libc_init_array+0x44>)
    6112:	2400      	movs	r4, #0
    6114:	1bad      	subs	r5, r5, r6
    6116:	10ad      	asrs	r5, r5, #2
    6118:	d005      	beq.n	6126 <__libc_init_array+0x36>
    611a:	00a3      	lsls	r3, r4, #2
    611c:	58f3      	ldr	r3, [r6, r3]
    611e:	3401      	adds	r4, #1
    6120:	4798      	blx	r3
    6122:	42a5      	cmp	r5, r4
    6124:	d1f9      	bne.n	611a <__libc_init_array+0x2a>
    6126:	bd70      	pop	{r4, r5, r6, pc}
    6128:	00006370 	.word	0x00006370
    612c:	00006370 	.word	0x00006370
    6130:	00006370 	.word	0x00006370
    6134:	00006378 	.word	0x00006378

00006138 <register_fini>:
    6138:	4b03      	ldr	r3, [pc, #12]	; (6148 <register_fini+0x10>)
    613a:	b510      	push	{r4, lr}
    613c:	2b00      	cmp	r3, #0
    613e:	d002      	beq.n	6146 <register_fini+0xe>
    6140:	4802      	ldr	r0, [pc, #8]	; (614c <register_fini+0x14>)
    6142:	f000 f805 	bl	6150 <atexit>
    6146:	bd10      	pop	{r4, pc}
    6148:	00000000 	.word	0x00000000
    614c:	00006161 	.word	0x00006161

00006150 <atexit>:
    6150:	b510      	push	{r4, lr}
    6152:	0001      	movs	r1, r0
    6154:	2300      	movs	r3, #0
    6156:	2200      	movs	r2, #0
    6158:	2000      	movs	r0, #0
    615a:	f000 f81b 	bl	6194 <__register_exitproc>
    615e:	bd10      	pop	{r4, pc}

00006160 <__libc_fini_array>:
    6160:	b570      	push	{r4, r5, r6, lr}
    6162:	4b09      	ldr	r3, [pc, #36]	; (6188 <__libc_fini_array+0x28>)
    6164:	4c09      	ldr	r4, [pc, #36]	; (618c <__libc_fini_array+0x2c>)
    6166:	1ae4      	subs	r4, r4, r3
    6168:	10a4      	asrs	r4, r4, #2
    616a:	d009      	beq.n	6180 <__libc_fini_array+0x20>
    616c:	4a08      	ldr	r2, [pc, #32]	; (6190 <__libc_fini_array+0x30>)
    616e:	18a5      	adds	r5, r4, r2
    6170:	00ad      	lsls	r5, r5, #2
    6172:	18ed      	adds	r5, r5, r3
    6174:	682b      	ldr	r3, [r5, #0]
    6176:	3c01      	subs	r4, #1
    6178:	4798      	blx	r3
    617a:	3d04      	subs	r5, #4
    617c:	2c00      	cmp	r4, #0
    617e:	d1f9      	bne.n	6174 <__libc_fini_array+0x14>
    6180:	f000 f8fa 	bl	6378 <_fini>
    6184:	bd70      	pop	{r4, r5, r6, pc}
    6186:	46c0      	nop			; (mov r8, r8)
    6188:	00006384 	.word	0x00006384
    618c:	00006388 	.word	0x00006388
    6190:	3fffffff 	.word	0x3fffffff

00006194 <__register_exitproc>:
    6194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6196:	46de      	mov	lr, fp
    6198:	469b      	mov	fp, r3
    619a:	4b31      	ldr	r3, [pc, #196]	; (6260 <__register_exitproc+0xcc>)
    619c:	4645      	mov	r5, r8
    619e:	681c      	ldr	r4, [r3, #0]
    61a0:	23a4      	movs	r3, #164	; 0xa4
    61a2:	464e      	mov	r6, r9
    61a4:	4657      	mov	r7, sl
    61a6:	005b      	lsls	r3, r3, #1
    61a8:	b5e0      	push	{r5, r6, r7, lr}
    61aa:	0005      	movs	r5, r0
    61ac:	58e0      	ldr	r0, [r4, r3]
    61ae:	000e      	movs	r6, r1
    61b0:	4690      	mov	r8, r2
    61b2:	2800      	cmp	r0, #0
    61b4:	d04b      	beq.n	624e <__register_exitproc+0xba>
    61b6:	6843      	ldr	r3, [r0, #4]
    61b8:	2b1f      	cmp	r3, #31
    61ba:	dc0d      	bgt.n	61d8 <__register_exitproc+0x44>
    61bc:	1c5c      	adds	r4, r3, #1
    61be:	2d00      	cmp	r5, #0
    61c0:	d121      	bne.n	6206 <__register_exitproc+0x72>
    61c2:	3302      	adds	r3, #2
    61c4:	009b      	lsls	r3, r3, #2
    61c6:	6044      	str	r4, [r0, #4]
    61c8:	501e      	str	r6, [r3, r0]
    61ca:	2000      	movs	r0, #0
    61cc:	bc3c      	pop	{r2, r3, r4, r5}
    61ce:	4690      	mov	r8, r2
    61d0:	4699      	mov	r9, r3
    61d2:	46a2      	mov	sl, r4
    61d4:	46ab      	mov	fp, r5
    61d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    61d8:	4b22      	ldr	r3, [pc, #136]	; (6264 <__register_exitproc+0xd0>)
    61da:	2b00      	cmp	r3, #0
    61dc:	d03c      	beq.n	6258 <__register_exitproc+0xc4>
    61de:	20c8      	movs	r0, #200	; 0xc8
    61e0:	0040      	lsls	r0, r0, #1
    61e2:	e000      	b.n	61e6 <__register_exitproc+0x52>
    61e4:	bf00      	nop
    61e6:	2800      	cmp	r0, #0
    61e8:	d036      	beq.n	6258 <__register_exitproc+0xc4>
    61ea:	22a4      	movs	r2, #164	; 0xa4
    61ec:	2300      	movs	r3, #0
    61ee:	0052      	lsls	r2, r2, #1
    61f0:	58a1      	ldr	r1, [r4, r2]
    61f2:	6043      	str	r3, [r0, #4]
    61f4:	6001      	str	r1, [r0, #0]
    61f6:	50a0      	str	r0, [r4, r2]
    61f8:	3240      	adds	r2, #64	; 0x40
    61fa:	5083      	str	r3, [r0, r2]
    61fc:	3204      	adds	r2, #4
    61fe:	5083      	str	r3, [r0, r2]
    6200:	2401      	movs	r4, #1
    6202:	2d00      	cmp	r5, #0
    6204:	d0dd      	beq.n	61c2 <__register_exitproc+0x2e>
    6206:	009a      	lsls	r2, r3, #2
    6208:	4691      	mov	r9, r2
    620a:	4481      	add	r9, r0
    620c:	4642      	mov	r2, r8
    620e:	2188      	movs	r1, #136	; 0x88
    6210:	464f      	mov	r7, r9
    6212:	507a      	str	r2, [r7, r1]
    6214:	22c4      	movs	r2, #196	; 0xc4
    6216:	0052      	lsls	r2, r2, #1
    6218:	4690      	mov	r8, r2
    621a:	4480      	add	r8, r0
    621c:	4642      	mov	r2, r8
    621e:	3987      	subs	r1, #135	; 0x87
    6220:	4099      	lsls	r1, r3
    6222:	6812      	ldr	r2, [r2, #0]
    6224:	468a      	mov	sl, r1
    6226:	430a      	orrs	r2, r1
    6228:	4694      	mov	ip, r2
    622a:	4642      	mov	r2, r8
    622c:	4661      	mov	r1, ip
    622e:	6011      	str	r1, [r2, #0]
    6230:	2284      	movs	r2, #132	; 0x84
    6232:	4649      	mov	r1, r9
    6234:	465f      	mov	r7, fp
    6236:	0052      	lsls	r2, r2, #1
    6238:	508f      	str	r7, [r1, r2]
    623a:	2d02      	cmp	r5, #2
    623c:	d1c1      	bne.n	61c2 <__register_exitproc+0x2e>
    623e:	0002      	movs	r2, r0
    6240:	4655      	mov	r5, sl
    6242:	328d      	adds	r2, #141	; 0x8d
    6244:	32ff      	adds	r2, #255	; 0xff
    6246:	6811      	ldr	r1, [r2, #0]
    6248:	430d      	orrs	r5, r1
    624a:	6015      	str	r5, [r2, #0]
    624c:	e7b9      	b.n	61c2 <__register_exitproc+0x2e>
    624e:	0020      	movs	r0, r4
    6250:	304d      	adds	r0, #77	; 0x4d
    6252:	30ff      	adds	r0, #255	; 0xff
    6254:	50e0      	str	r0, [r4, r3]
    6256:	e7ae      	b.n	61b6 <__register_exitproc+0x22>
    6258:	2001      	movs	r0, #1
    625a:	4240      	negs	r0, r0
    625c:	e7b6      	b.n	61cc <__register_exitproc+0x38>
    625e:	46c0      	nop			; (mov r8, r8)
    6260:	00006360 	.word	0x00006360
    6264:	00000000 	.word	0x00000000

00006268 <senseBatPin>:
    6268:	06000000 01000106                                .....

0000626d <senseAPin>:
    626d:	03010001 0100010b                                .....

00006272 <senseBPin>:
    6272:	02010001 0000010a                                .....

00006277 <senseCPin>:
    6277:	03000001 00000101                                .....

0000627c <senseDPin>:
    627c:	02000001 00000000                                .....

00006281 <analogAccelPin>:
    6281:	07000000 70000007 0000776f 00000000              .......pow.....

00006290 <TWO52>:
    6290:	00000000 43300000 00000000 c3300000     ......0C......0.
    62a0:	00003d5c 00003cac 00003cac 00003caa     \=...<...<...<..
    62b0:	00003d4e 00003d4e 00003d44 00003caa     N=..N=..D=...<..
    62c0:	00003d4e 00003d44 00003d4e 00003caa     N=..D=..N=...<..
    62d0:	00003d54 00003d54 00003d54 00003de4     T=..T=..T=...=..
    62e0:	00004aa0 00004a82 00004a3c 0000495a     .J...J..<J..ZI..
    62f0:	00004a3c 00004a74 00004a3c 0000495a     <J..tJ..<J..ZI..
    6300:	00004a82 00004a82 00004a74 0000495a     .J...J..tJ..ZI..
    6310:	00004952 00004952 00004952 00004cb8     RI..RI..RI...L..
    6320:	00005300 000051c0 000051c0 000051bc     .S...Q...Q...Q..
    6330:	000052d8 000052d8 000052ca 000051bc     .R...R...R...Q..
    6340:	000052d8 000052ca 000052d8 000051bc     .R...R...R...Q..
    6350:	000052e0 000052e0 000052e0 000054e4     .R...R...R...T..

00006360 <_global_impure_ptr>:
    6360:	20000078                                x.. 

00006364 <_init>:
    6364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6366:	46c0      	nop			; (mov r8, r8)
    6368:	bcf8      	pop	{r3, r4, r5, r6, r7}
    636a:	bc08      	pop	{r3}
    636c:	469e      	mov	lr, r3
    636e:	4770      	bx	lr

00006370 <__init_array_start>:
    6370:	00006139 	.word	0x00006139

00006374 <__frame_dummy_init_array_entry>:
    6374:	000000dd                                ....

00006378 <_fini>:
    6378:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    637a:	46c0      	nop			; (mov r8, r8)
    637c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    637e:	bc08      	pop	{r3}
    6380:	469e      	mov	lr, r3
    6382:	4770      	bx	lr

00006384 <__fini_array_start>:
    6384:	000000b5 	.word	0x000000b5
