
Parabeep V0.2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000061c0  00000000  00000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000001e0  20000000  000061c0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bkupram      00000000  47000000  47000000  000201e0  2**0
                  CONTENTS
  3 .qspi         00000000  04000000  04000000  000201e0  2**0
                  CONTENTS
  4 .bss          000000d4  200001e0  000063a0  000201e0  2**3
                  ALLOC
  5 .stack        0000c004  200002b4  00006474  000201e0  2**0
                  ALLOC
  6 .ARM.attributes 0000002c  00000000  00000000  000201e0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  0002020c  2**0
                  CONTENTS, READONLY
  8 .debug_info   0002053d  00000000  00000000  00020265  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00002a6b  00000000  00000000  000407a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000014ff  00000000  00000000  0004320d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000003a8  00000000  00000000  0004470c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000005c0  00000000  00000000  00044ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000249ef  00000000  00000000  00045074  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00008cc7  00000000  00000000  00069a63  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000ceddc  00000000  00000000  0007272a  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  000014b4  00000000  00000000  00141508  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	b8 c2 00 20 dd 07 00 00 d9 07 00 00 d9 07 00 00     ... ............
      10:	d9 07 00 00 d9 07 00 00 d9 07 00 00 00 00 00 00     ................
	...
      2c:	d9 07 00 00 d9 07 00 00 00 00 00 00 d9 07 00 00     ................
      3c:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
      4c:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
      5c:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
      6c:	85 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
      7c:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
      8c:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
      9c:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
      ac:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
      bc:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
      cc:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
      dc:	d9 07 00 00 d9 07 00 00 d9 07 00 00 00 00 00 00     ................
	...
      f4:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     104:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     114:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     124:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     134:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     144:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     154:	d9 07 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     180:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     190:	00 00 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     1a0:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     1b0:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     1c0:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     1d0:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     1e0:	d9 07 00 00 d9 07 00 00 d9 07 00 00 75 06 00 00     ............u...
     1f0:	89 06 00 00 9d 06 00 00 d9 07 00 00 d9 07 00 00     ................
     200:	d9 07 00 00 00 00 00 00 00 00 00 00 d9 07 00 00     ................
     210:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     220:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     230:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     240:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     250:	d9 07 00 00 d9 07 00 00 d9 07 00 00 d9 07 00 00     ................
     260:	00 00 00 00                                         ....

00000264 <__do_global_dtors_aux>:
     264:	b510      	push	{r4, lr}
     266:	4c05      	ldr	r4, [pc, #20]	; (27c <__do_global_dtors_aux+0x18>)
     268:	7823      	ldrb	r3, [r4, #0]
     26a:	b933      	cbnz	r3, 27a <__do_global_dtors_aux+0x16>
     26c:	4b04      	ldr	r3, [pc, #16]	; (280 <__do_global_dtors_aux+0x1c>)
     26e:	b113      	cbz	r3, 276 <__do_global_dtors_aux+0x12>
     270:	4804      	ldr	r0, [pc, #16]	; (284 <__do_global_dtors_aux+0x20>)
     272:	f3af 8000 	nop.w
     276:	2301      	movs	r3, #1
     278:	7023      	strb	r3, [r4, #0]
     27a:	bd10      	pop	{r4, pc}
     27c:	200001e0 	.word	0x200001e0
     280:	00000000 	.word	0x00000000
     284:	000061c0 	.word	0x000061c0

00000288 <frame_dummy>:
     288:	4b0c      	ldr	r3, [pc, #48]	; (2bc <frame_dummy+0x34>)
     28a:	b143      	cbz	r3, 29e <frame_dummy+0x16>
     28c:	480c      	ldr	r0, [pc, #48]	; (2c0 <frame_dummy+0x38>)
     28e:	490d      	ldr	r1, [pc, #52]	; (2c4 <frame_dummy+0x3c>)
     290:	b510      	push	{r4, lr}
     292:	f3af 8000 	nop.w
     296:	480c      	ldr	r0, [pc, #48]	; (2c8 <frame_dummy+0x40>)
     298:	6803      	ldr	r3, [r0, #0]
     29a:	b923      	cbnz	r3, 2a6 <frame_dummy+0x1e>
     29c:	bd10      	pop	{r4, pc}
     29e:	480a      	ldr	r0, [pc, #40]	; (2c8 <frame_dummy+0x40>)
     2a0:	6803      	ldr	r3, [r0, #0]
     2a2:	b933      	cbnz	r3, 2b2 <frame_dummy+0x2a>
     2a4:	4770      	bx	lr
     2a6:	4b09      	ldr	r3, [pc, #36]	; (2cc <frame_dummy+0x44>)
     2a8:	2b00      	cmp	r3, #0
     2aa:	d0f7      	beq.n	29c <frame_dummy+0x14>
     2ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     2b0:	4718      	bx	r3
     2b2:	4b06      	ldr	r3, [pc, #24]	; (2cc <frame_dummy+0x44>)
     2b4:	2b00      	cmp	r3, #0
     2b6:	d0f5      	beq.n	2a4 <frame_dummy+0x1c>
     2b8:	4718      	bx	r3
     2ba:	bf00      	nop
     2bc:	00000000 	.word	0x00000000
     2c0:	000061c0 	.word	0x000061c0
     2c4:	200001e4 	.word	0x200001e4
     2c8:	000061c0 	.word	0x000061c0
     2cc:	00000000 	.word	0x00000000

000002d0 <adxlWriteByte>:
    u8_t rx = spiDataIn(SPI0);
    pinHigh(cs_accel);
    return rx;
}

void adxlWriteByte(u8_t address, u8_t data) {
     2d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     2d2:	460f      	mov	r7, r1
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
}


inline static void pinLow(Pin p) {
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     2d4:	4c07      	ldr	r4, [pc, #28]	; (2f4 <adxlWriteByte+0x24>)
     2d6:	f44f 6500 	mov.w	r5, #2048	; 0x800
     2da:	6165      	str	r5, [r4, #20]
    pinLow(cs_accel);
    spiDataOut(SPI0, address);
     2dc:	4601      	mov	r1, r0
     2de:	2000      	movs	r0, #0
     2e0:	4e05      	ldr	r6, [pc, #20]	; (2f8 <adxlWriteByte+0x28>)
     2e2:	47b0      	blx	r6
    delay_us(1);
     2e4:	2001      	movs	r0, #1
     2e6:	4b05      	ldr	r3, [pc, #20]	; (2fc <adxlWriteByte+0x2c>)
     2e8:	4798      	blx	r3
    spiDataOut(SPI0, data);
     2ea:	4639      	mov	r1, r7
     2ec:	2000      	movs	r0, #0
     2ee:	47b0      	blx	r6
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     2f0:	61a5      	str	r5, [r4, #24]
     2f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     2f4:	41008000 	.word	0x41008000
     2f8:	00001231 	.word	0x00001231
     2fc:	000006fd 	.word	0x000006fd

00000300 <ADXLgetAccelData>:
    pinHigh(cs_accel);
}

void ADXLgetAccelData() {
     300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     302:	4e12      	ldr	r6, [pc, #72]	; (34c <ADXLgetAccelData+0x4c>)
     304:	f44f 6700 	mov.w	r7, #2048	; 0x800
     308:	6177      	str	r7, [r6, #20]

    pinLow(cs_accel);
    spiDataOut(SPI0, ADXL345_REG_DATAX0 | READ_BIT | MULTI_BIT);
     30a:	21f2      	movs	r1, #242	; 0xf2
     30c:	2000      	movs	r0, #0
     30e:	4b10      	ldr	r3, [pc, #64]	; (350 <ADXLgetAccelData+0x50>)
     310:	4798      	blx	r3
    sample.ADXLX0 = spiDataIn(SPI0);
     312:	2000      	movs	r0, #0
     314:	4d0f      	ldr	r5, [pc, #60]	; (354 <ADXLgetAccelData+0x54>)
     316:	47a8      	blx	r5
     318:	4c0f      	ldr	r4, [pc, #60]	; (358 <ADXLgetAccelData+0x58>)
     31a:	f884 0060 	strb.w	r0, [r4, #96]	; 0x60
    sample.ADXLX1 = spiDataIn(SPI0);
     31e:	2000      	movs	r0, #0
     320:	47a8      	blx	r5
     322:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
    sample.ADXLY0 = spiDataIn(SPI0);
     326:	2000      	movs	r0, #0
     328:	47a8      	blx	r5
     32a:	f884 0062 	strb.w	r0, [r4, #98]	; 0x62
    sample.ADXLY1 = spiDataIn(SPI0);
     32e:	2000      	movs	r0, #0
     330:	47a8      	blx	r5
     332:	f884 0063 	strb.w	r0, [r4, #99]	; 0x63
    sample.ADXLZ0 = spiDataIn(SPI0);
     336:	2000      	movs	r0, #0
     338:	47a8      	blx	r5
     33a:	f884 0064 	strb.w	r0, [r4, #100]	; 0x64
    sample.ADXLZ1 = spiDataIn(SPI0);
     33e:	2000      	movs	r0, #0
     340:	47a8      	blx	r5
     342:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     346:	61b7      	str	r7, [r6, #24]
     348:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     34a:	bf00      	nop
     34c:	41008000 	.word	0x41008000
     350:	00001231 	.word	0x00001231
     354:	000012f1 	.word	0x000012f1
     358:	20000230 	.word	0x20000230

0000035c <adcInit>:

#include <util.h>



void adcInit() {
     35c:	b538      	push	{r3, r4, r5, lr}

// set up clock
    MCLK->APBDMASK.reg |= MCLK_APBDMASK_ADC0;
     35e:	4a0e      	ldr	r2, [pc, #56]	; (398 <adcInit+0x3c>)
     360:	6a13      	ldr	r3, [r2, #32]
     362:	f043 0380 	orr.w	r3, r3, #128	; 0x80
     366:	6213      	str	r3, [r2, #32]

// divide prescaler by 512 (93.75KHz), max adc freq is 2.1MHz
    ADC0->CTRLB.reg = ADC_CTRLB_RESSEL_12BIT ;
     368:	4c0c      	ldr	r4, [pc, #48]	; (39c <adcInit+0x40>)
     36a:	2500      	movs	r5, #0
     36c:	80e5      	strh	r5, [r4, #6]

// enable clock adc channel
    connect_gclk_to_peripheral(1, 40);
     36e:	2128      	movs	r1, #40	; 0x28
     370:	2001      	movs	r0, #1
     372:	4b0b      	ldr	r3, [pc, #44]	; (3a0 <adcInit+0x44>)
     374:	4798      	blx	r3

    ADC0->CALIB.reg =ADC_CALIB_BIASREFBUF(ADC1_FUSES_BIASREFBUF_Pos) |
     376:	f240 3302 	movw	r3, #770	; 0x302
     37a:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
                     ADC_CALIB_BIASR2R(ADC0_FUSES_BIASR2R_Pos)|
                     ADC_CALIB_BIASCOMP(ADC0_FUSES_BIASCOMP_Pos);

    ADC0->REFCTRL.reg = ADC_REFCTRL_REFSEL_INTVCC0;
     37e:	2302      	movs	r3, #2
     380:	7223      	strb	r3, [r4, #8]
	
	ADC0->AVGCTRL.reg = ADC_AVGCTRL_SAMPLENUM_1;
     382:	72a5      	strb	r5, [r4, #10]

    ADC0->CTRLA.reg = ADC_CTRLA_ENABLE |
     384:	f240 7302 	movw	r3, #1794	; 0x702
     388:	8023      	strh	r3, [r4, #0]
                      ADC_CTRLA_PRESCALER_DIV256; // enable
    while(ADC0->STATUS.reg & ADC_STATUS_ADCBUSY);
     38a:	4b04      	ldr	r3, [pc, #16]	; (39c <adcInit+0x40>)
     38c:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
     390:	f013 0f01 	tst.w	r3, #1
     394:	d1f9      	bne.n	38a <adcInit+0x2e>
}
     396:	bd38      	pop	{r3, r4, r5, pc}
     398:	40000800 	.word	0x40000800
     39c:	43001c00 	.word	0x43001c00
     3a0:	000004bd 	.word	0x000004bd

000003a4 <adcSample>:



u16_t adcSample() {
    ADC0->SWTRIG.reg = ADC_SWTRIG_START;
     3a4:	4b04      	ldr	r3, [pc, #16]	; (3b8 <adcSample+0x14>)
     3a6:	2202      	movs	r2, #2
     3a8:	751a      	strb	r2, [r3, #20]
    while(!(ADC0->INTFLAG.reg = ADC_INTFLAG_RESRDY)); // wait until result is ready
     3aa:	2201      	movs	r2, #1
     3ac:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
    return ADC0->RESULT.reg;
     3b0:	f8b3 0040 	ldrh.w	r0, [r3, #64]	; 0x40
}
     3b4:	b280      	uxth	r0, r0
     3b6:	4770      	bx	lr
     3b8:	43001c00 	.word	0x43001c00

000003bc <adc_read>:


u16_t adc_read(Pin p) {
     3bc:	b500      	push	{lr}
     3be:	b085      	sub	sp, #20
     3c0:	e88d 0003 	stmia.w	sp, {r0, r1}
     3c4:	e89d 0003 	ldmia.w	sp, {r0, r1}
     3c8:	9002      	str	r0, [sp, #8]
     3ca:	f88d 100c 	strb.w	r1, [sp, #12]
    if (p.pin & 1) {
     3ce:	0e00      	lsrs	r0, r0, #24
     3d0:	f010 0f01 	tst.w	r0, #1
     3d4:	d12a      	bne.n	42c <adc_read+0x70>
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = 0x1;
     3d6:	f89d 200a 	ldrb.w	r2, [sp, #10]
     3da:	01d2      	lsls	r2, r2, #7
     3dc:	f102 4282 	add.w	r2, r2, #1090519040	; 0x41000000
     3e0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
     3e4:	eb02 0250 	add.w	r2, r2, r0, lsr #1
     3e8:	f892 3030 	ldrb.w	r3, [r2, #48]	; 0x30
     3ec:	2101      	movs	r1, #1
     3ee:	f361 0303 	bfi	r3, r1, #0, #4
     3f2:	f882 3030 	strb.w	r3, [r2, #48]	; 0x30
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     3f6:	f89d 300a 	ldrb.w	r3, [sp, #10]
     3fa:	01db      	lsls	r3, r3, #7
     3fc:	f103 4382 	add.w	r3, r3, #1090519040	; 0x41000000
     400:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
     404:	4403      	add	r3, r0
     406:	f893 2040 	ldrb.w	r2, [r3, #64]	; 0x40
     40a:	f042 0201 	orr.w	r2, r2, #1
     40e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
    // switch pin mux to analog in
    pinAnalog(p);

    ADC0->INPUTCTRL.reg = ADC_INPUTCTRL_MUXPOS(p.chan) // select from proper pin
     412:	f89d 3004 	ldrb.w	r3, [sp, #4]
     416:	f003 031f 	and.w	r3, r3, #31
                          | ADC_INPUTCTRL_MUXNEG_GND; // 0 = gnd
     41a:	f443 53c0 	orr.w	r3, r3, #6144	; 0x1800
    ADC0->INPUTCTRL.reg = ADC_INPUTCTRL_MUXPOS(p.chan) // select from proper pin
     41e:	4a0c      	ldr	r2, [pc, #48]	; (450 <adc_read+0x94>)
     420:	8093      	strh	r3, [r2, #4]
    return adcSample();
     422:	4b0c      	ldr	r3, [pc, #48]	; (454 <adc_read+0x98>)
     424:	4798      	blx	r3
}
     426:	b005      	add	sp, #20
     428:	f85d fb04 	ldr.w	pc, [sp], #4
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = 0x1;
     42c:	f89d 200a 	ldrb.w	r2, [sp, #10]
     430:	01d2      	lsls	r2, r2, #7
     432:	f102 4282 	add.w	r2, r2, #1090519040	; 0x41000000
     436:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
     43a:	eb02 0250 	add.w	r2, r2, r0, lsr #1
     43e:	f892 3030 	ldrb.w	r3, [r2, #48]	; 0x30
     442:	2101      	movs	r1, #1
     444:	f361 1307 	bfi	r3, r1, #4, #4
     448:	f882 3030 	strb.w	r3, [r2, #48]	; 0x30
     44c:	e7d3      	b.n	3f6 <adc_read+0x3a>
     44e:	bf00      	nop
     450:	43001c00 	.word	0x43001c00
     454:	000003a5 	.word	0x000003a5

00000458 <buzzerTick>:
#include <util.h>



void buzzerTick(u32_t time) {
     458:	4770      	bx	lr
	...

0000045c <enable_clock_generator_sync>:

void disconnect_gclk_from_peripheral(uint8_t gclk, uint8_t peripheral) {
    GCLK->PCHCTRL[peripheral].reg = 0;
}

static void enable_clock_generator_sync(uint8_t gclk, uint32_t source, uint16_t divisor, bool sync) {
     45c:	b430      	push	{r4, r5}
    uint32_t divsel = 0;
    // The datasheet says 8 bits and max value of 512, how is that possible?
    if (divisor > 255) { // Generator 1 has 16 bits
     45e:	2aff      	cmp	r2, #255	; 0xff
     460:	d81d      	bhi.n	49e <enable_clock_generator_sync+0x42>
    uint32_t divsel = 0;
     462:	2500      	movs	r5, #0
                break;
            }
        }
    }

    GCLK->GENCTRL[gclk].reg = GCLK_GENCTRL_SRC(source) | GCLK_GENCTRL_DIV(divisor) | divsel | GCLK_GENCTRL_OE | GCLK_GENCTRL_GENEN;
     464:	4604      	mov	r4, r0
     466:	f001 010f 	and.w	r1, r1, #15
     46a:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
     46e:	432a      	orrs	r2, r5
     470:	f442 6210 	orr.w	r2, r2, #2304	; 0x900
     474:	3008      	adds	r0, #8
     476:	4910      	ldr	r1, [pc, #64]	; (4b8 <enable_clock_generator_sync+0x5c>)
     478:	f841 2020 	str.w	r2, [r1, r0, lsl #2]
    if (sync)
     47c:	b13b      	cbz	r3, 48e <enable_clock_generator_sync+0x32>
        while ((GCLK->SYNCBUSY.vec.GENCTRL & (1 << gclk)) != 0) {}
     47e:	4b0e      	ldr	r3, [pc, #56]	; (4b8 <enable_clock_generator_sync+0x5c>)
     480:	685b      	ldr	r3, [r3, #4]
     482:	f3c3 038b 	ubfx	r3, r3, #2, #12
     486:	4123      	asrs	r3, r4
     488:	f013 0f01 	tst.w	r3, #1
     48c:	d1f7      	bne.n	47e <enable_clock_generator_sync+0x22>
}
     48e:	bc30      	pop	{r4, r5}
     490:	4770      	bx	lr
                divisor = i - 1;
     492:	b2a2      	uxth	r2, r4
     494:	3a01      	subs	r2, #1
     496:	b292      	uxth	r2, r2
        divsel = GCLK_GENCTRL_DIVSEL;
     498:	f44f 5580 	mov.w	r5, #4096	; 0x1000
                break;
     49c:	e7e2      	b.n	464 <enable_clock_generator_sync+0x8>
     49e:	240f      	movs	r4, #15
        for (int i = 15; i > 0; i--) {
     4a0:	2c00      	cmp	r4, #0
     4a2:	dd06      	ble.n	4b2 <enable_clock_generator_sync+0x56>
            if (divisor & (1 << i)) {
     4a4:	fa42 f504 	asr.w	r5, r2, r4
     4a8:	f015 0f01 	tst.w	r5, #1
     4ac:	d1f1      	bne.n	492 <enable_clock_generator_sync+0x36>
        for (int i = 15; i > 0; i--) {
     4ae:	3c01      	subs	r4, #1
     4b0:	e7f6      	b.n	4a0 <enable_clock_generator_sync+0x44>
        divsel = GCLK_GENCTRL_DIVSEL;
     4b2:	f44f 5580 	mov.w	r5, #4096	; 0x1000
     4b6:	e7d5      	b.n	464 <enable_clock_generator_sync+0x8>
     4b8:	40001c00 	.word	0x40001c00

000004bc <connect_gclk_to_peripheral>:
    GCLK->PCHCTRL[peripheral].reg = GCLK_PCHCTRL_CHEN | GCLK_PCHCTRL_GEN(gclk);
     4bc:	f000 000f 	and.w	r0, r0, #15
     4c0:	f040 0040 	orr.w	r0, r0, #64	; 0x40
     4c4:	3120      	adds	r1, #32
     4c6:	4b04      	ldr	r3, [pc, #16]	; (4d8 <connect_gclk_to_peripheral+0x1c>)
     4c8:	f843 0021 	str.w	r0, [r3, r1, lsl #2]
    while(GCLK->SYNCBUSY.reg != 0) {}
     4cc:	4b02      	ldr	r3, [pc, #8]	; (4d8 <connect_gclk_to_peripheral+0x1c>)
     4ce:	685b      	ldr	r3, [r3, #4]
     4d0:	2b00      	cmp	r3, #0
     4d2:	d1fb      	bne.n	4cc <connect_gclk_to_peripheral+0x10>
}
     4d4:	4770      	bx	lr
     4d6:	bf00      	nop
     4d8:	40001c00 	.word	0x40001c00

000004dc <init_clock_source_osculp32k>:

void init_clock_source_osculp32k(void) {
    // Calibration value is loaded at startup
    OSC32KCTRL->OSCULP32K.bit.EN1K = 0;
     4dc:	4b04      	ldr	r3, [pc, #16]	; (4f0 <init_clock_source_osculp32k+0x14>)
     4de:	69da      	ldr	r2, [r3, #28]
     4e0:	f36f 0282 	bfc	r2, #2, #1
     4e4:	61da      	str	r2, [r3, #28]
    OSC32KCTRL->OSCULP32K.bit.EN32K = 1;
     4e6:	69da      	ldr	r2, [r3, #28]
     4e8:	f042 0202 	orr.w	r2, r2, #2
     4ec:	61da      	str	r2, [r3, #28]
     4ee:	4770      	bx	lr
     4f0:	40001400 	.word	0x40001400

000004f4 <enable_clock_generator>:
}

void enable_clock_generator(uint8_t gclk, uint32_t source, uint16_t divisor) {
     4f4:	b510      	push	{r4, lr}
    enable_clock_generator_sync(gclk, source, divisor, true);
     4f6:	2301      	movs	r3, #1
     4f8:	4c01      	ldr	r4, [pc, #4]	; (500 <enable_clock_generator+0xc>)
     4fa:	47a0      	blx	r4
     4fc:	bd10      	pop	{r4, pc}
     4fe:	bf00      	nop
     500:	0000045d 	.word	0x0000045d

00000504 <TC0Init>:
    while (!(OSCCTRL->Dpll[0].DPLLSTATUS.bit.LOCK || OSCCTRL->Dpll[0].DPLLSTATUS.bit.CLKRDY)) {}
}

volatile u8_t TC0Dur = 50;

void TC0Init() {
     504:	b508      	push	{r3, lr}

    enable_clock_generator(4, GCLK_GENCTRL_SRC_OSCULP32K, 32);
     506:	2220      	movs	r2, #32
     508:	2104      	movs	r1, #4
     50a:	4608      	mov	r0, r1
     50c:	4b12      	ldr	r3, [pc, #72]	; (558 <TC0Init+0x54>)
     50e:	4798      	blx	r3

    connect_gclk_to_peripheral(4, 9);
     510:	2109      	movs	r1, #9
     512:	2004      	movs	r0, #4
     514:	4b11      	ldr	r3, [pc, #68]	; (55c <TC0Init+0x58>)
     516:	4798      	blx	r3

    MCLK->APBAMASK.reg |= MCLK_APBAMASK_TC0;
     518:	4a11      	ldr	r2, [pc, #68]	; (560 <TC0Init+0x5c>)
     51a:	6953      	ldr	r3, [r2, #20]
     51c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
     520:	6153      	str	r3, [r2, #20]

    TC0->COUNT8.CTRLA.reg = TC_CTRLA_SWRST;
     522:	2201      	movs	r2, #1
     524:	4b0f      	ldr	r3, [pc, #60]	; (564 <TC0Init+0x60>)
     526:	601a      	str	r2, [r3, #0]
    while(TC0->COUNT8.SYNCBUSY.bit.SWRST);
     528:	4b0e      	ldr	r3, [pc, #56]	; (564 <TC0Init+0x60>)
     52a:	691b      	ldr	r3, [r3, #16]
     52c:	f013 0f01 	tst.w	r3, #1
     530:	d1fa      	bne.n	528 <TC0Init+0x24>

    TC0->COUNT8.CTRLA.reg = TC_CTRLA_MODE_COUNT8 |
     532:	4a0c      	ldr	r2, [pc, #48]	; (564 <TC0Init+0x60>)
     534:	2306      	movs	r3, #6
     536:	6013      	str	r3, [r2, #0]
                            TC_CTRLA_PRESCALER_DIV1 |
                            TC_CTRLA_ENABLE;
    TC0->COUNT8.PERBUF.reg = TC0Dur;
     538:	4b0b      	ldr	r3, [pc, #44]	; (568 <TC0Init+0x64>)
     53a:	781b      	ldrb	r3, [r3, #0]
     53c:	b2db      	uxtb	r3, r3
     53e:	f882 302f 	strb.w	r3, [r2, #47]	; 0x2f

    while(TC0->COUNT8.SYNCBUSY.bit.ENABLE);
     542:	4b08      	ldr	r3, [pc, #32]	; (564 <TC0Init+0x60>)
     544:	691b      	ldr	r3, [r3, #16]
     546:	f013 0f02 	tst.w	r3, #2
     54a:	d1fa      	bne.n	542 <TC0Init+0x3e>
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     54c:	f44f 6200 	mov.w	r2, #2048	; 0x800
     550:	4b06      	ldr	r3, [pc, #24]	; (56c <TC0Init+0x68>)
     552:	60da      	str	r2, [r3, #12]
     554:	bd08      	pop	{r3, pc}
     556:	bf00      	nop
     558:	000004f5 	.word	0x000004f5
     55c:	000004bd 	.word	0x000004bd
     560:	40000800 	.word	0x40000800
     564:	40003800 	.word	0x40003800
     568:	20000000 	.word	0x20000000
     56c:	e000e100 	.word	0xe000e100

00000570 <TC0_enable_interupt>:
    NVIC_EnableIRQ(TC0_IRQn);
}

void TC0_enable_interupt() {
    TC0->COUNT8.INTENSET.reg = TC_INTENSET_OVF;
     570:	2201      	movs	r2, #1
     572:	4b01      	ldr	r3, [pc, #4]	; (578 <TC0_enable_interupt+0x8>)
     574:	725a      	strb	r2, [r3, #9]
     576:	4770      	bx	lr
     578:	40003800 	.word	0x40003800

0000057c <TC1Init>:

    //already enabled by tc0
    //enable_clock_generator(4, GCLK_GENCTRL_SRC_OSCULP32K, 32);
    //connect_gclk_to_peripheral(4, 9);

    MCLK->APBAMASK.reg |= MCLK_APBAMASK_TC1;
     57c:	4a0f      	ldr	r2, [pc, #60]	; (5bc <TC1Init+0x40>)
     57e:	6953      	ldr	r3, [r2, #20]
     580:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
     584:	6153      	str	r3, [r2, #20]

    TC1->COUNT8.CTRLA.reg = TC_CTRLA_SWRST;
     586:	2201      	movs	r2, #1
     588:	4b0d      	ldr	r3, [pc, #52]	; (5c0 <TC1Init+0x44>)
     58a:	601a      	str	r2, [r3, #0]
    while(TC1->COUNT8.SYNCBUSY.bit.SWRST);
     58c:	4b0c      	ldr	r3, [pc, #48]	; (5c0 <TC1Init+0x44>)
     58e:	691b      	ldr	r3, [r3, #16]
     590:	f013 0f01 	tst.w	r3, #1
     594:	d1fa      	bne.n	58c <TC1Init+0x10>

    TC1->COUNT8.CTRLA.reg = TC_CTRLA_MODE_COUNT8 |
     596:	4a0a      	ldr	r2, [pc, #40]	; (5c0 <TC1Init+0x44>)
     598:	2306      	movs	r3, #6
     59a:	6013      	str	r3, [r2, #0]
                            TC_CTRLA_PRESCALER_DIV1 |
                            TC_CTRLA_ENABLE;
    TC1->COUNT8.PERBUF.reg = TC1Dur;
     59c:	4b09      	ldr	r3, [pc, #36]	; (5c4 <TC1Init+0x48>)
     59e:	785b      	ldrb	r3, [r3, #1]
     5a0:	b2db      	uxtb	r3, r3
     5a2:	f882 302f 	strb.w	r3, [r2, #47]	; 0x2f

    while(TC1->COUNT8.SYNCBUSY.bit.ENABLE);
     5a6:	4b06      	ldr	r3, [pc, #24]	; (5c0 <TC1Init+0x44>)
     5a8:	691b      	ldr	r3, [r3, #16]
     5aa:	f013 0f02 	tst.w	r3, #2
     5ae:	d1fa      	bne.n	5a6 <TC1Init+0x2a>
     5b0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
     5b4:	4b04      	ldr	r3, [pc, #16]	; (5c8 <TC1Init+0x4c>)
     5b6:	60da      	str	r2, [r3, #12]
     5b8:	4770      	bx	lr
     5ba:	bf00      	nop
     5bc:	40000800 	.word	0x40000800
     5c0:	40003c00 	.word	0x40003c00
     5c4:	20000000 	.word	0x20000000
     5c8:	e000e100 	.word	0xe000e100

000005cc <TC1_enable_interupt>:
    NVIC_EnableIRQ(TC1_IRQn);
}

void TC1_enable_interupt() {
    TC1->COUNT8.INTENSET.reg = TC_INTENSET_OVF;
     5cc:	2201      	movs	r2, #1
     5ce:	4b01      	ldr	r3, [pc, #4]	; (5d4 <TC1_enable_interupt+0x8>)
     5d0:	725a      	strb	r2, [r3, #9]
     5d2:	4770      	bx	lr
     5d4:	40003c00 	.word	0x40003c00

000005d8 <TC2Init>:
}


volatile u8_t TC2Dur = 50;

void TC2Init() { //buzzer
     5d8:	b508      	push	{r3, lr}

    enable_clock_generator(3, GCLK_GENCTRL_SRC_DFLL, 32);
     5da:	2220      	movs	r2, #32
     5dc:	2106      	movs	r1, #6
     5de:	2003      	movs	r0, #3
     5e0:	4b12      	ldr	r3, [pc, #72]	; (62c <TC2Init+0x54>)
     5e2:	4798      	blx	r3

    connect_gclk_to_peripheral(3, 26);
     5e4:	211a      	movs	r1, #26
     5e6:	2003      	movs	r0, #3
     5e8:	4b11      	ldr	r3, [pc, #68]	; (630 <TC2Init+0x58>)
     5ea:	4798      	blx	r3

    MCLK->APBBMASK.reg |= MCLK_APBBMASK_TC2;
     5ec:	4a11      	ldr	r2, [pc, #68]	; (634 <TC2Init+0x5c>)
     5ee:	6993      	ldr	r3, [r2, #24]
     5f0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
     5f4:	6193      	str	r3, [r2, #24]

    TC2->COUNT8.CTRLA.reg = TC_CTRLA_SWRST;
     5f6:	2201      	movs	r2, #1
     5f8:	4b0f      	ldr	r3, [pc, #60]	; (638 <TC2Init+0x60>)
     5fa:	601a      	str	r2, [r3, #0]
    while(TC2->COUNT8.SYNCBUSY.bit.SWRST);
     5fc:	4b0e      	ldr	r3, [pc, #56]	; (638 <TC2Init+0x60>)
     5fe:	691b      	ldr	r3, [r3, #16]
     600:	f013 0f01 	tst.w	r3, #1
     604:	d1fa      	bne.n	5fc <TC2Init+0x24>
    //TC0->COUNT16.CTRLBSET.reg = TC_CTRLBSET_ONESHOT;
    TC2->COUNT8.CTRLA.reg = TC_CTRLA_MODE_COUNT8 |
     606:	4a0c      	ldr	r2, [pc, #48]	; (638 <TC2Init+0x60>)
     608:	f240 2306 	movw	r3, #518	; 0x206
     60c:	6013      	str	r3, [r2, #0]
                            TC_CTRLA_PRESCALER_DIV4 |
                            TC_CTRLA_ENABLE;
    TC2->COUNT8.PERBUF.reg = TC2Dur;
     60e:	4b0b      	ldr	r3, [pc, #44]	; (63c <TC2Init+0x64>)
     610:	789b      	ldrb	r3, [r3, #2]
     612:	b2db      	uxtb	r3, r3
     614:	f882 302f 	strb.w	r3, [r2, #47]	; 0x2f

    while(TC2->COUNT8.SYNCBUSY.bit.ENABLE);
     618:	4b07      	ldr	r3, [pc, #28]	; (638 <TC2Init+0x60>)
     61a:	691b      	ldr	r3, [r3, #16]
     61c:	f013 0f02 	tst.w	r3, #2
     620:	d1fa      	bne.n	618 <TC2Init+0x40>
     622:	f44f 5200 	mov.w	r2, #8192	; 0x2000
     626:	4b06      	ldr	r3, [pc, #24]	; (640 <TC2Init+0x68>)
     628:	60da      	str	r2, [r3, #12]
     62a:	bd08      	pop	{r3, pc}
     62c:	000004f5 	.word	0x000004f5
     630:	000004bd 	.word	0x000004bd
     634:	40000800 	.word	0x40000800
     638:	4101a000 	.word	0x4101a000
     63c:	20000000 	.word	0x20000000
     640:	e000e100 	.word	0xe000e100

00000644 <TC2_setDur>:
    NVIC_EnableIRQ(TC2_IRQn);
}

void TC2_setDur(u8_t dur) {
    TC2->COUNT8.PERBUF.reg = dur;
     644:	4b01      	ldr	r3, [pc, #4]	; (64c <TC2_setDur+0x8>)
     646:	f883 002f 	strb.w	r0, [r3, #47]	; 0x2f
     64a:	4770      	bx	lr
     64c:	4101a000 	.word	0x4101a000

00000650 <TC2_enable_interupt>:


}

void TC2_enable_interupt() { //buzzer
    TC2->COUNT8.INTENSET.reg = TC_INTENSET_OVF;
     650:	2201      	movs	r2, #1
     652:	4b01      	ldr	r3, [pc, #4]	; (658 <TC2_enable_interupt+0x8>)
     654:	725a      	strb	r2, [r3, #9]
     656:	4770      	bx	lr
     658:	4101a000 	.word	0x4101a000

0000065c <TC2_disable_interupt>:
}

void TC2_disable_interupt() { //buzzer
    TC2->COUNT8.INTENCLR.reg = TC_INTENCLR_OVF;
     65c:	2201      	movs	r2, #1
     65e:	4b04      	ldr	r3, [pc, #16]	; (670 <TC2_disable_interupt+0x14>)
     660:	721a      	strb	r2, [r3, #8]
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     662:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
     666:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
     66a:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
     66e:	4770      	bx	lr
     670:	4101a000 	.word	0x4101a000

00000674 <TC0_Handler>:
    pinLow(BuzzerPin);
}


void TC0_Handler(void) {
    TC0->COUNT8.INTFLAG.reg = TC_INTFLAG_OVF;
     674:	2301      	movs	r3, #1
     676:	4a02      	ldr	r2, [pc, #8]	; (680 <TC0_Handler+0xc>)
     678:	7293      	strb	r3, [r2, #10]
    sample.takeSample = true;
     67a:	4a02      	ldr	r2, [pc, #8]	; (684 <TC0_Handler+0x10>)
     67c:	7213      	strb	r3, [r2, #8]
     67e:	4770      	bx	lr
     680:	40003800 	.word	0x40003800
     684:	20000230 	.word	0x20000230

00000688 <TC1_Handler>:
}

void TC1_Handler(void) {
    TC1->COUNT8.INTFLAG.reg = TC_INTFLAG_OVF;
     688:	2301      	movs	r3, #1
     68a:	4a02      	ldr	r2, [pc, #8]	; (694 <TC1_Handler+0xc>)
     68c:	7293      	strb	r3, [r2, #10]
    sample.sendBluetoothPacket = true;
     68e:	4a02      	ldr	r2, [pc, #8]	; (698 <TC1_Handler+0x10>)
     690:	7253      	strb	r3, [r2, #9]
     692:	4770      	bx	lr
     694:	40003c00 	.word	0x40003c00
     698:	20000230 	.word	0x20000230

0000069c <TC2_Handler>:
}


void TC2_Handler(void) {
    TC2->COUNT8.INTFLAG.reg = TC_INTFLAG_OVF;
     69c:	2201      	movs	r2, #1
     69e:	4b04      	ldr	r3, [pc, #16]	; (6b0 <TC2_Handler+0x14>)
     6a0:	729a      	strb	r2, [r3, #10]
}


inline static void pinToggle(Pin p) {
    PORT->Group[p.group].OUTTGL.reg = (1<<p.pin);
     6a2:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
     6a6:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
     6aa:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
     6ae:	4770      	bx	lr
     6b0:	4101a000 	.word	0x4101a000

000006b4 <delayInit>:
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
     6b4:	2200      	movs	r2, #0
     6b6:	4b04      	ldr	r3, [pc, #16]	; (6c8 <delayInit+0x14>)
     6b8:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23


void delayInit(void) {
    NVIC_SetPriority(SysTick_IRQn, 0x0);

    SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk |
     6bc:	2205      	movs	r2, #5
     6be:	f5a3 634f 	sub.w	r3, r3, #3312	; 0xcf0
     6c2:	601a      	str	r2, [r3, #0]
     6c4:	4770      	bx	lr
     6c6:	bf00      	nop
     6c8:	e000ed00 	.word	0xe000ed00

000006cc <delay_ms>:

    }
}

void delay_ms(uint32_t n) {
    while (n--) {
     6cc:	e003      	b.n	6d6 <delay_ms+0xa>
        SysTick->CTRL = 0;
     6ce:	2100      	movs	r1, #0
     6d0:	4b09      	ldr	r3, [pc, #36]	; (6f8 <delay_ms+0x2c>)
     6d2:	6019      	str	r1, [r3, #0]
     6d4:	4610      	mov	r0, r2
    while (n--) {
     6d6:	1e42      	subs	r2, r0, #1
     6d8:	b168      	cbz	r0, 6f6 <delay_ms+0x2a>
        SysTick->LOAD = n;
     6da:	4b07      	ldr	r3, [pc, #28]	; (6f8 <delay_ms+0x2c>)
     6dc:	f64b 3180 	movw	r1, #48000	; 0xbb80
     6e0:	6059      	str	r1, [r3, #4]
        SysTick->VAL = 0;
     6e2:	2100      	movs	r1, #0
     6e4:	6099      	str	r1, [r3, #8]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk;
     6e6:	2101      	movs	r1, #1
     6e8:	6019      	str	r1, [r3, #0]
        while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {};
     6ea:	4b03      	ldr	r3, [pc, #12]	; (6f8 <delay_ms+0x2c>)
     6ec:	681b      	ldr	r3, [r3, #0]
     6ee:	f413 3f80 	tst.w	r3, #65536	; 0x10000
     6f2:	d0fa      	beq.n	6ea <delay_ms+0x1e>
     6f4:	e7eb      	b.n	6ce <delay_ms+0x2>
        /* divide up to blocks of 1ms */
        delay_cycles(cycles_per_ms);
    }
}
     6f6:	4770      	bx	lr
     6f8:	e000e010 	.word	0xe000e010

000006fc <delay_us>:

void delay_us(uint32_t n) {
    while (n--) {
     6fc:	e003      	b.n	706 <delay_us+0xa>
        SysTick->CTRL = 0;
     6fe:	2100      	movs	r1, #0
     700:	4b09      	ldr	r3, [pc, #36]	; (728 <delay_us+0x2c>)
     702:	6019      	str	r1, [r3, #0]
     704:	4610      	mov	r0, r2
    while (n--) {
     706:	1e42      	subs	r2, r0, #1
     708:	b160      	cbz	r0, 724 <delay_us+0x28>
        SysTick->LOAD = n;
     70a:	4b07      	ldr	r3, [pc, #28]	; (728 <delay_us+0x2c>)
     70c:	2130      	movs	r1, #48	; 0x30
     70e:	6059      	str	r1, [r3, #4]
        SysTick->VAL = 0;
     710:	2100      	movs	r1, #0
     712:	6099      	str	r1, [r3, #8]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk;
     714:	2101      	movs	r1, #1
     716:	6019      	str	r1, [r3, #0]
        while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {};
     718:	4b03      	ldr	r3, [pc, #12]	; (728 <delay_us+0x2c>)
     71a:	681b      	ldr	r3, [r3, #0]
     71c:	f413 3f80 	tst.w	r3, #65536	; 0x10000
     720:	d0fa      	beq.n	718 <delay_us+0x1c>
     722:	e7ec      	b.n	6fe <delay_us+0x2>
        /* divide up to blocks of 10u */
        delay_cycles(cycles_per_us);
    }
}
     724:	4770      	bx	lr
     726:	bf00      	nop
     728:	e000e010 	.word	0xe000e010

0000072c <rtcInit>:

void rtcInit() {
    RTC->MODE1.CTRLA.reg = RTC_MODE1_CTRLA_SWRST;
     72c:	2201      	movs	r2, #1
     72e:	4b12      	ldr	r3, [pc, #72]	; (778 <rtcInit+0x4c>)
     730:	801a      	strh	r2, [r3, #0]
    while (RTC->MODE1.SYNCBUSY.bit.SWRST);
     732:	4b11      	ldr	r3, [pc, #68]	; (778 <rtcInit+0x4c>)
     734:	691b      	ldr	r3, [r3, #16]
     736:	f013 0f01 	tst.w	r3, #1
     73a:	d1fa      	bne.n	732 <rtcInit+0x6>

    OSC32KCTRL->RTCCTRL.reg = OSC32KCTRL_RTCCTRL_RTCSEL_ULP32K;
     73c:	2201      	movs	r2, #1
     73e:	4b0f      	ldr	r3, [pc, #60]	; (77c <rtcInit+0x50>)
     740:	741a      	strb	r2, [r3, #16]

    RTC->MODE1.INTENSET.reg = RTC_MODE1_INTENSET_OVF;
     742:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
     746:	f44f 4200 	mov.w	r2, #32768	; 0x8000
     74a:	815a      	strh	r2, [r3, #10]

    RTC->MODE1.CTRLA.reg = RTC_MODE1_CTRLA_MODE_COUNT16 |
     74c:	f248 6204 	movw	r2, #34308	; 0x8604
     750:	801a      	strh	r2, [r3, #0]
                           RTC_MODE1_CTRLA_PRESCALER_DIV32 |
                           RTC_MODE1_CTRLA_COUNTSYNC;
    RTC->MODE1.PER.reg = RTC_MODE1_PER_PER(998);
     752:	f240 32e6 	movw	r2, #998	; 0x3e6
     756:	839a      	strh	r2, [r3, #28]
    RTC->MODE1.CTRLA.reg |= RTC_MODE1_CTRLA_ENABLE;
     758:	881a      	ldrh	r2, [r3, #0]
     75a:	b292      	uxth	r2, r2
     75c:	f042 0202 	orr.w	r2, r2, #2
     760:	801a      	strh	r2, [r3, #0]
    while (RTC->MODE1.SYNCBUSY.bit.ENABLE);
     762:	4b05      	ldr	r3, [pc, #20]	; (778 <rtcInit+0x4c>)
     764:	691b      	ldr	r3, [r3, #16]
     766:	f013 0f02 	tst.w	r3, #2
     76a:	d1fa      	bne.n	762 <rtcInit+0x36>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     76c:	f44f 6200 	mov.w	r2, #2048	; 0x800
     770:	4b03      	ldr	r3, [pc, #12]	; (780 <rtcInit+0x54>)
     772:	601a      	str	r2, [r3, #0]
     774:	4770      	bx	lr
     776:	bf00      	nop
     778:	40002400 	.word	0x40002400
     77c:	40001400 	.word	0x40001400
     780:	e000e100 	.word	0xe000e100

00000784 <RTC_Handler>:
}

volatile uint32_t time_ms = 0;

void RTC_Handler(void) {
    RTC->MODE1.INTFLAG.reg = RTC_MODE1_INTFLAG_OVF;
     784:	f44f 4200 	mov.w	r2, #32768	; 0x8000
     788:	4b03      	ldr	r3, [pc, #12]	; (798 <RTC_Handler+0x14>)
     78a:	819a      	strh	r2, [r3, #12]
    time_ms += 1000;
     78c:	4a03      	ldr	r2, [pc, #12]	; (79c <RTC_Handler+0x18>)
     78e:	6813      	ldr	r3, [r2, #0]
     790:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
     794:	6013      	str	r3, [r2, #0]
     796:	4770      	bx	lr
     798:	40002400 	.word	0x40002400
     79c:	200001fc 	.word	0x200001fc

000007a0 <millis>:
}

uint32_t millis(void) {
    uint32_t ms;
    ATOMIC_SECTION_ENTER
     7a0:	f3ef 8210 	mrs	r2, PRIMASK
     7a4:	b672      	cpsid	i
    ms = time_ms + RTC->MODE1.COUNT.reg;
     7a6:	4b0a      	ldr	r3, [pc, #40]	; (7d0 <millis+0x30>)
     7a8:	8b18      	ldrh	r0, [r3, #24]
     7aa:	490a      	ldr	r1, [pc, #40]	; (7d4 <millis+0x34>)
     7ac:	6809      	ldr	r1, [r1, #0]
     7ae:	fa11 f080 	uxtah	r0, r1, r0
    if (RTC->MODE1.INTFLAG.bit.OVF) {
     7b2:	899b      	ldrh	r3, [r3, #12]
     7b4:	f413 4f00 	tst.w	r3, #32768	; 0x8000
     7b8:	d007      	beq.n	7ca <millis+0x2a>
        ms = time_ms + RTC->MODE1.COUNT.reg + 1000;
     7ba:	4b05      	ldr	r3, [pc, #20]	; (7d0 <millis+0x30>)
     7bc:	8b18      	ldrh	r0, [r3, #24]
     7be:	4b05      	ldr	r3, [pc, #20]	; (7d4 <millis+0x34>)
     7c0:	681b      	ldr	r3, [r3, #0]
     7c2:	fa13 f080 	uxtah	r0, r3, r0
     7c6:	f500 707a 	add.w	r0, r0, #1000	; 0x3e8
    }
    ATOMIC_SECTION_LEAVE
     7ca:	f382 8810 	msr	PRIMASK, r2
    return ms;
     7ce:	4770      	bx	lr
     7d0:	40002400 	.word	0x40002400
     7d4:	200001fc 	.word	0x200001fc

000007d8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     7d8:	e7fe      	b.n	7d8 <Dummy_Handler>
	...

000007dc <Reset_Handler>:
{
     7dc:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
     7de:	4b10      	ldr	r3, [pc, #64]	; (820 <Reset_Handler+0x44>)
     7e0:	4a10      	ldr	r2, [pc, #64]	; (824 <Reset_Handler+0x48>)
     7e2:	429a      	cmp	r2, r3
     7e4:	d009      	beq.n	7fa <Reset_Handler+0x1e>
     7e6:	4b0e      	ldr	r3, [pc, #56]	; (820 <Reset_Handler+0x44>)
     7e8:	4a0e      	ldr	r2, [pc, #56]	; (824 <Reset_Handler+0x48>)
     7ea:	e003      	b.n	7f4 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     7ec:	6811      	ldr	r1, [r2, #0]
     7ee:	6019      	str	r1, [r3, #0]
     7f0:	3304      	adds	r3, #4
     7f2:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     7f4:	490c      	ldr	r1, [pc, #48]	; (828 <Reset_Handler+0x4c>)
     7f6:	428b      	cmp	r3, r1
     7f8:	d3f8      	bcc.n	7ec <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     7fa:	4b0c      	ldr	r3, [pc, #48]	; (82c <Reset_Handler+0x50>)
     7fc:	e002      	b.n	804 <Reset_Handler+0x28>
                *pDest++ = 0;
     7fe:	2200      	movs	r2, #0
     800:	601a      	str	r2, [r3, #0]
     802:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     804:	4a0a      	ldr	r2, [pc, #40]	; (830 <Reset_Handler+0x54>)
     806:	4293      	cmp	r3, r2
     808:	d3f9      	bcc.n	7fe <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     80a:	4a0a      	ldr	r2, [pc, #40]	; (834 <Reset_Handler+0x58>)
     80c:	4b0a      	ldr	r3, [pc, #40]	; (838 <Reset_Handler+0x5c>)
     80e:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
     812:	6093      	str	r3, [r2, #8]
        __libc_init_array();
     814:	4b09      	ldr	r3, [pc, #36]	; (83c <Reset_Handler+0x60>)
     816:	4798      	blx	r3
        main();
     818:	4b09      	ldr	r3, [pc, #36]	; (840 <Reset_Handler+0x64>)
     81a:	4798      	blx	r3
     81c:	e7fe      	b.n	81c <Reset_Handler+0x40>
     81e:	bf00      	nop
     820:	20000000 	.word	0x20000000
     824:	000061c0 	.word	0x000061c0
     828:	200001e0 	.word	0x200001e0
     82c:	200001e0 	.word	0x200001e0
     830:	200002b4 	.word	0x200002b4
     834:	e000ed00 	.word	0xe000ed00
     838:	00000000 	.word	0x00000000
     83c:	00003cfd 	.word	0x00003cfd
     840:	00000845 	.word	0x00000845

00000844 <main>:
#include "util.h"




int main(void) {
     844:	b538      	push	{r3, r4, r5, lr}

    init();
     846:	4b20      	ldr	r3, [pc, #128]	; (8c8 <main+0x84>)
     848:	4798      	blx	r3
    POST();
     84a:	4b20      	ldr	r3, [pc, #128]	; (8cc <main+0x88>)
     84c:	4798      	blx	r3
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     84e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
     852:	4b1f      	ldr	r3, [pc, #124]	; (8d0 <main+0x8c>)
     854:	619a      	str	r2, [r3, #24]

    pinHigh(RN4870_NRST);


    u32_t tick = millis();
     856:	4b1f      	ldr	r3, [pc, #124]	; (8d4 <main+0x90>)
     858:	4798      	blx	r3
     85a:	4605      	mov	r5, r0
    u32_t lastTime = tick;

    u8_t catchReboot = RN4871Status();
     85c:	4b1e      	ldr	r3, [pc, #120]	; (8d8 <main+0x94>)
     85e:	4798      	blx	r3
    RN4871SetName();
     860:	4b1e      	ldr	r3, [pc, #120]	; (8dc <main+0x98>)
     862:	4798      	blx	r3

    TC1_enable_interupt(); //bluetooth
     864:	4b1e      	ldr	r3, [pc, #120]	; (8e0 <main+0x9c>)
     866:	4798      	blx	r3

    warmSensors(10);
     868:	200a      	movs	r0, #10
     86a:	4b1e      	ldr	r3, [pc, #120]	; (8e4 <main+0xa0>)
     86c:	4798      	blx	r3


    while (1) {
        tick = millis();
     86e:	4b19      	ldr	r3, [pc, #100]	; (8d4 <main+0x90>)
     870:	4798      	blx	r3
     872:	4604      	mov	r4, r0
        buzzerTick(tick);
     874:	4b1c      	ldr	r3, [pc, #112]	; (8e8 <main+0xa4>)
     876:	4798      	blx	r3


        if (sample.takeSample) {
     878:	4b1c      	ldr	r3, [pc, #112]	; (8ec <main+0xa8>)
     87a:	7a1b      	ldrb	r3, [r3, #8]
     87c:	b99b      	cbnz	r3, 8a6 <main+0x62>
            sample.takeSample = false;
            getSample();
            vario();

        }
        if (sample.sendBluetoothPacket) {
     87e:	4b1b      	ldr	r3, [pc, #108]	; (8ec <main+0xa8>)
     880:	7a5b      	ldrb	r3, [r3, #9]
     882:	b9c3      	cbnz	r3, 8b6 <main+0x72>
            sendDebugData();
        }



        if ((tick - lastTime) > 1000) {
     884:	1b63      	subs	r3, r4, r5
     886:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
     88a:	d905      	bls.n	898 <main+0x54>
    PORT->Group[p.group].OUTTGL.reg = (1<<p.pin);
     88c:	f44f 3280 	mov.w	r2, #65536	; 0x10000
     890:	4b0f      	ldr	r3, [pc, #60]	; (8d0 <main+0x8c>)
     892:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
            lastTime = tick;
     896:	4625      	mov	r5, r4
            pinToggle(LedPin);

        }

        if (tick > 10000) {
     898:	f242 7310 	movw	r3, #10000	; 0x2710
     89c:	429c      	cmp	r4, r3
     89e:	d9e6      	bls.n	86e <main+0x2a>
            EnterSleepModeOFF();
     8a0:	4b13      	ldr	r3, [pc, #76]	; (8f0 <main+0xac>)
     8a2:	4798      	blx	r3
     8a4:	e7e3      	b.n	86e <main+0x2a>
            sample.takeSample = false;
     8a6:	2200      	movs	r2, #0
     8a8:	4b10      	ldr	r3, [pc, #64]	; (8ec <main+0xa8>)
     8aa:	721a      	strb	r2, [r3, #8]
            getSample();
     8ac:	4b11      	ldr	r3, [pc, #68]	; (8f4 <main+0xb0>)
     8ae:	4798      	blx	r3
            vario();
     8b0:	4b11      	ldr	r3, [pc, #68]	; (8f8 <main+0xb4>)
     8b2:	4798      	blx	r3
     8b4:	e7e3      	b.n	87e <main+0x3a>
            sample.sendBluetoothPacket = false;
     8b6:	2200      	movs	r2, #0
     8b8:	4b0c      	ldr	r3, [pc, #48]	; (8ec <main+0xa8>)
     8ba:	725a      	strb	r2, [r3, #9]
            RN4871SendLK8EX1();
     8bc:	4b0f      	ldr	r3, [pc, #60]	; (8fc <main+0xb8>)
     8be:	4798      	blx	r3
            sendDebugData();
     8c0:	4b0f      	ldr	r3, [pc, #60]	; (900 <main+0xbc>)
     8c2:	4798      	blx	r3
     8c4:	e7de      	b.n	884 <main+0x40>
     8c6:	bf00      	nop
     8c8:	00001561 	.word	0x00001561
     8cc:	000018b9 	.word	0x000018b9
     8d0:	41008000 	.word	0x41008000
     8d4:	000007a1 	.word	0x000007a1
     8d8:	00000bb5 	.word	0x00000bb5
     8dc:	00000bf1 	.word	0x00000bf1
     8e0:	000005cd 	.word	0x000005cd
     8e4:	00001995 	.word	0x00001995
     8e8:	00000459 	.word	0x00000459
     8ec:	20000230 	.word	0x20000230
     8f0:	00001a01 	.word	0x00001a01
     8f4:	00000e61 	.word	0x00000e61
     8f8:	00001a79 	.word	0x00001a79
     8fc:	00000c59 	.word	0x00000c59
     900:	00001bed 	.word	0x00001bed

00000904 <readMS5803AdcResults>:
#include <MS5803.h>
#include <math.h>

u32_t readMS5803AdcResults() {
     904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     908:	4e0b      	ldr	r6, [pc, #44]	; (938 <readMS5803AdcResults+0x34>)
     90a:	2780      	movs	r7, #128	; 0x80
     90c:	6177      	str	r7, [r6, #20]

	pinLow(cs_baro);
	spiDataOut(SPI0, cmdAdcRead_);
     90e:	2100      	movs	r1, #0
     910:	4608      	mov	r0, r1
     912:	4b0a      	ldr	r3, [pc, #40]	; (93c <readMS5803AdcResults+0x38>)
     914:	4798      	blx	r3
	u8_t _byte1 = spiDataIn(SPI0);
     916:	2000      	movs	r0, #0
     918:	4d09      	ldr	r5, [pc, #36]	; (940 <readMS5803AdcResults+0x3c>)
     91a:	47a8      	blx	r5
     91c:	4680      	mov	r8, r0
	u8_t _byte2 = spiDataIn(SPI0);
     91e:	2000      	movs	r0, #0
     920:	47a8      	blx	r5
     922:	4604      	mov	r4, r0
	u8_t _byte3 = spiDataIn(SPI0);
     924:	2000      	movs	r0, #0
     926:	47a8      	blx	r5
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     928:	61b7      	str	r7, [r6, #24]
	pinHigh(cs_baro);

	u32_t _receive = (_byte1 << 16) | (_byte2 << 8) | (_byte3);
     92a:	0224      	lsls	r4, r4, #8
     92c:	ea44 4408 	orr.w	r4, r4, r8, lsl #16
	return _receive;
}
     930:	4320      	orrs	r0, r4
     932:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
     936:	bf00      	nop
     938:	41008000 	.word	0x41008000
     93c:	00001231 	.word	0x00001231
     940:	000012f1 	.word	0x000012f1
     944:	00000000 	.word	0x00000000

00000948 <ConvertPressureTemperature>:

void ConvertPressureTemperature(u32_t pressureRaw, u32_t tempRaw, u32_t* temperatureCelcus, double* pressureMbar ) {
     948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     94c:	b089      	sub	sp, #36	; 0x24
     94e:	9301      	str	r3, [sp, #4]
	const u16_t C1 = coefficients_[1];
     950:	4c33      	ldr	r4, [pc, #204]	; (a20 <ConvertPressureTemperature+0xd8>)
     952:	f8b4 e002 	ldrh.w	lr, [r4, #2]
	const u16_t C2 = coefficients_[2];
     956:	88a3      	ldrh	r3, [r4, #4]
	const u16_t C3 = coefficients_[3];
     958:	f8b4 c006 	ldrh.w	ip, [r4, #6]
	const u16_t C4 = coefficients_[4];
     95c:	8926      	ldrh	r6, [r4, #8]
	const u16_t C5 = coefficients_[5];
     95e:	8965      	ldrh	r5, [r4, #10]
	const u16_t C6 = coefficients_[6];
     960:	f8b4 800c 	ldrh.w	r8, [r4, #12]

	// calculate 1st order pressure and temperature (MS5607 1st order algorithm)
	volatile const  int32_t dT = (tempRaw) - ((int32_t)C5 << 8);
     964:	eba1 2105 	sub.w	r1, r1, r5, lsl #8
     968:	9107      	str	r1, [sp, #28]
	*temperatureCelcus  = 2000 + (((int64_t)dT * C6) >> 23) ;
     96a:	9c07      	ldr	r4, [sp, #28]
     96c:	ea4f 7be4 	mov.w	fp, r4, asr #31
     970:	fa1f f888 	uxth.w	r8, r8
     974:	fba8 4504 	umull	r4, r5, r8, r4
     978:	fb08 550b 	mla	r5, r8, fp, r5
     97c:	0de1      	lsrs	r1, r4, #23
     97e:	ea41 2145 	orr.w	r1, r1, r5, lsl #9
     982:	f501 61fa 	add.w	r1, r1, #2000	; 0x7d0
     986:	6011      	str	r1, [r2, #0]

	volatile const  int64_t OFF   = ((int64_t)C2 << 16) + ((C4 * (int64_t)dT) >> 7);
     988:	b29a      	uxth	r2, r3
     98a:	0c15      	lsrs	r5, r2, #16
     98c:	0414      	lsls	r4, r2, #16
     98e:	9a07      	ldr	r2, [sp, #28]
     990:	ea4f 79e2 	mov.w	r9, r2, asr #31
     994:	b2b6      	uxth	r6, r6
     996:	fba6 2302 	umull	r2, r3, r6, r2
     99a:	fb06 3309 	mla	r3, r6, r9, r3
     99e:	09d6      	lsrs	r6, r2, #7
     9a0:	ea46 6643 	orr.w	r6, r6, r3, lsl #25
     9a4:	11df      	asrs	r7, r3, #7
     9a6:	19a4      	adds	r4, r4, r6
     9a8:	417d      	adcs	r5, r7
     9aa:	e9cd 4504 	strd	r4, r5, [sp, #16]
	volatile const  int64_t SENS  =  ((int64_t)C1 << 15) + ((C3 * (int64_t)dT) >> 8);
     9ae:	2500      	movs	r5, #0
     9b0:	ea4f 34ce 	mov.w	r4, lr, lsl #15
     9b4:	9a07      	ldr	r2, [sp, #28]
     9b6:	17d7      	asrs	r7, r2, #31
     9b8:	fa1f f88c 	uxth.w	r8, ip
     9bc:	fba8 2302 	umull	r2, r3, r8, r2
     9c0:	fb08 3307 	mla	r3, r8, r7, r3
     9c4:	0a16      	lsrs	r6, r2, #8
     9c6:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
     9ca:	121f      	asrs	r7, r3, #8
     9cc:	19a4      	adds	r4, r4, r6
     9ce:	417d      	adcs	r5, r7
     9d0:	e9cd 4502 	strd	r4, r5, [sp, #8]
	*pressureMbar = ((((pressureRaw * SENS) >> 21) - OFF) >> 15);
     9d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
     9d8:	fba0 4502 	umull	r4, r5, r0, r2
     9dc:	fb00 5503 	mla	r5, r0, r3, r5
     9e0:	0d62      	lsrs	r2, r4, #21
     9e2:	ea42 22c5 	orr.w	r2, r2, r5, lsl #11
     9e6:	156b      	asrs	r3, r5, #21
     9e8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
     9ec:	1a12      	subs	r2, r2, r0
     9ee:	eb63 0301 	sbc.w	r3, r3, r1
     9f2:	0bd0      	lsrs	r0, r2, #15
     9f4:	ea40 4043 	orr.w	r0, r0, r3, lsl #17
     9f8:	13d9      	asrs	r1, r3, #15
     9fa:	4b0a      	ldr	r3, [pc, #40]	; (a24 <ConvertPressureTemperature+0xdc>)
     9fc:	4798      	blx	r3
	*pressureMbar = *pressureMbar/100;
     9fe:	a306      	add	r3, pc, #24	; (adr r3, a18 <ConvertPressureTemperature+0xd0>)
     a00:	e9d3 2300 	ldrd	r2, r3, [r3]
     a04:	4c08      	ldr	r4, [pc, #32]	; (a28 <ConvertPressureTemperature+0xe0>)
     a06:	47a0      	blx	r4
     a08:	9b01      	ldr	r3, [sp, #4]
     a0a:	e9c3 0100 	strd	r0, r1, [r3]
}
     a0e:	b009      	add	sp, #36	; 0x24
     a10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
     a14:	f3af 8000 	nop.w
     a18:	47ae147b 	.word	0x47ae147b
     a1c:	3f847ae1 	.word	0x3f847ae1
     a20:	2000021c 	.word	0x2000021c
     a24:	00003189 	.word	0x00003189
     a28:	000031e5 	.word	0x000031e5
     a2c:	00000000 	.word	0x00000000

00000a30 <paToFeetNOAA>:

double paToFeetNOAA(double pressureMbar) {
     a30:	b538      	push	{r3, r4, r5, lr}

	double lower =(((double)(pressureMbar))/1013.25);
     a32:	4c11      	ldr	r4, [pc, #68]	; (a78 <paToFeetNOAA+0x48>)
     a34:	a30a      	add	r3, pc, #40	; (adr r3, a60 <paToFeetNOAA+0x30>)
     a36:	e9d3 2300 	ldrd	r2, r3, [r3]
     a3a:	47a0      	blx	r4
	double exponent = 0.190284;

	double altFeet = (1-pow(lower,exponent))*145366.45;
     a3c:	a30a      	add	r3, pc, #40	; (adr r3, a68 <paToFeetNOAA+0x38>)
     a3e:	e9d3 2300 	ldrd	r2, r3, [r3]
     a42:	4d0e      	ldr	r5, [pc, #56]	; (a7c <paToFeetNOAA+0x4c>)
     a44:	47a8      	blx	r5
     a46:	4602      	mov	r2, r0
     a48:	460b      	mov	r3, r1
     a4a:	2000      	movs	r0, #0
     a4c:	490c      	ldr	r1, [pc, #48]	; (a80 <paToFeetNOAA+0x50>)
     a4e:	4d0d      	ldr	r5, [pc, #52]	; (a84 <paToFeetNOAA+0x54>)
     a50:	47a8      	blx	r5
     a52:	a307      	add	r3, pc, #28	; (adr r3, a70 <paToFeetNOAA+0x40>)
     a54:	e9d3 2300 	ldrd	r2, r3, [r3]
     a58:	47a0      	blx	r4
	return altFeet;

}
     a5a:	bd38      	pop	{r3, r4, r5, pc}
     a5c:	f3af 8000 	nop.w
     a60:	c9de8608 	.word	0xc9de8608
     a64:	3f502b74 	.word	0x3f502b74
     a68:	e279dd3c 	.word	0xe279dd3c
     a6c:	3fc85b39 	.word	0x3fc85b39
     a70:	9999999a 	.word	0x9999999a
     a74:	4101beb3 	.word	0x4101beb3
     a78:	000031e5 	.word	0x000031e5
     a7c:	00001c71 	.word	0x00001c71
     a80:	3ff00000 	.word	0x3ff00000
     a84:	00002e7d 	.word	0x00002e7d

00000a88 <readMS5803Coefficients>:



void readMS5803Coefficients() {
     a88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

	for (u8_t coeff_num = 1; coeff_num < 7 ; ++coeff_num ) {
     a8c:	2401      	movs	r4, #1
     a8e:	e026      	b.n	ade <readMS5803Coefficients+0x56>
		u8_t _cmd = MS5803_CMD_PROM_READ + ((coeff_num)*2);
     a90:	f104 0550 	add.w	r5, r4, #80	; 0x50
     a94:	006d      	lsls	r5, r5, #1
     a96:	b2ed      	uxtb	r5, r5
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     a98:	4f13      	ldr	r7, [pc, #76]	; (ae8 <readMS5803Coefficients+0x60>)
     a9a:	f04f 0880 	mov.w	r8, #128	; 0x80
     a9e:	f8c7 8014 	str.w	r8, [r7, #20]
		pinLow(cs_baro);
		delay_us(600);
     aa2:	f44f 7016 	mov.w	r0, #600	; 0x258
     aa6:	4e11      	ldr	r6, [pc, #68]	; (aec <readMS5803Coefficients+0x64>)
     aa8:	47b0      	blx	r6
		spiDataOut(SPI0, _cmd);
     aaa:	4629      	mov	r1, r5
     aac:	2000      	movs	r0, #0
     aae:	4b10      	ldr	r3, [pc, #64]	; (af0 <readMS5803Coefficients+0x68>)
     ab0:	4798      	blx	r3
		delay_us(600);
     ab2:	f44f 7016 	mov.w	r0, #600	; 0x258
     ab6:	47b0      	blx	r6
		u8_t _byte1 = spiDataIn(SPI0);
     ab8:	2000      	movs	r0, #0
     aba:	4d0e      	ldr	r5, [pc, #56]	; (af4 <readMS5803Coefficients+0x6c>)
     abc:	47a8      	blx	r5
     abe:	4681      	mov	r9, r0
		u8_t _byte2 = spiDataIn(SPI0);
     ac0:	2000      	movs	r0, #0
     ac2:	47a8      	blx	r5
     ac4:	4605      	mov	r5, r0
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     ac6:	f8c7 8018 	str.w	r8, [r7, #24]
		pinHigh(cs_baro);
		delay_us(600);
     aca:	f44f 7016 	mov.w	r0, #600	; 0x258
     ace:	47b0      	blx	r6

		coefficients_[coeff_num] = (_byte1 << 8) | _byte2;
     ad0:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
     ad4:	4b08      	ldr	r3, [pc, #32]	; (af8 <readMS5803Coefficients+0x70>)
     ad6:	f823 5014 	strh.w	r5, [r3, r4, lsl #1]
	for (u8_t coeff_num = 1; coeff_num < 7 ; ++coeff_num ) {
     ada:	3401      	adds	r4, #1
     adc:	b2e4      	uxtb	r4, r4
     ade:	2c06      	cmp	r4, #6
     ae0:	d9d6      	bls.n	a90 <readMS5803Coefficients+0x8>
	}

}
     ae2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
     ae6:	bf00      	nop
     ae8:	41008000 	.word	0x41008000
     aec:	000006fd 	.word	0x000006fd
     af0:	00001231 	.word	0x00001231
     af4:	000012f1 	.word	0x000012f1
     af8:	2000021c 	.word	0x2000021c

00000afc <initMS5803Barometer>:

void initMS5803Barometer() {
     afc:	b538      	push	{r3, r4, r5, lr}
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     afe:	4c07      	ldr	r4, [pc, #28]	; (b1c <initMS5803Barometer+0x20>)
     b00:	2580      	movs	r5, #128	; 0x80
     b02:	6165      	str	r5, [r4, #20]


	pinLow(cs_baro);
	spiDataOut(SPI0, MS5803_CMD_RES);
     b04:	211e      	movs	r1, #30
     b06:	2000      	movs	r0, #0
     b08:	4b05      	ldr	r3, [pc, #20]	; (b20 <initMS5803Barometer+0x24>)
     b0a:	4798      	blx	r3
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     b0c:	61a5      	str	r5, [r4, #24]

	pinHigh(cs_baro);
	delay_ms(300);
     b0e:	f44f 7096 	mov.w	r0, #300	; 0x12c
     b12:	4b04      	ldr	r3, [pc, #16]	; (b24 <initMS5803Barometer+0x28>)
     b14:	4798      	blx	r3
	readMS5803Coefficients();
     b16:	4b04      	ldr	r3, [pc, #16]	; (b28 <initMS5803Barometer+0x2c>)
     b18:	4798      	blx	r3
     b1a:	bd38      	pop	{r3, r4, r5, pc}
     b1c:	41008000 	.word	0x41008000
     b20:	00001231 	.word	0x00001231
     b24:	000006cd 	.word	0x000006cd
     b28:	00000a89 	.word	0x00000a89

00000b2c <MS5803_CRC4>:
	

}

u8_t MS5803_CRC4() {
     b2c:	b410      	push	{r4}
	u8_t n_rem;
	u8_t crc_read;
	u8_t n_bit;

	n_rem = 0x00;
	crc_read = coefficients_[7];
     b2e:	4b18      	ldr	r3, [pc, #96]	; (b90 <MS5803_CRC4+0x64>)
     b30:	89dc      	ldrh	r4, [r3, #14]
	coefficients_[7] = (0xFF00 & (coefficients_[7]));
     b32:	f404 427f 	and.w	r2, r4, #65280	; 0xff00
     b36:	81da      	strh	r2, [r3, #14]
	n_rem = 0x00;
     b38:	2300      	movs	r3, #0

	for (count = 0; count < 16; count++) {
     b3a:	4618      	mov	r0, r3
     b3c:	e014      	b.n	b68 <MS5803_CRC4+0x3c>
		if (count%2 == 1) {
			n_rem ^= (unsigned short) ((coefficients_[count>>1]) & 0x00FF);
			} else {
			n_rem ^= (unsigned short) (coefficients_[count>>1]>>8);
     b3e:	0842      	lsrs	r2, r0, #1
     b40:	4913      	ldr	r1, [pc, #76]	; (b90 <MS5803_CRC4+0x64>)
     b42:	f831 2012 	ldrh.w	r2, [r1, r2, lsl #1]
     b46:	ea83 2312 	eor.w	r3, r3, r2, lsr #8
     b4a:	e018      	b.n	b7e <MS5803_CRC4+0x52>
		}
		for (n_bit = 8; n_bit > 0; n_bit--) {
			if(n_rem & (0x8000)) {
				n_rem = (n_rem << 1) ^ 0x3000;
				} else {
				n_rem = (n_rem << 1);
     b4c:	005b      	lsls	r3, r3, #1
     b4e:	b2db      	uxtb	r3, r3
		for (n_bit = 8; n_bit > 0; n_bit--) {
     b50:	3a01      	subs	r2, #1
     b52:	b2d2      	uxtb	r2, r2
     b54:	b132      	cbz	r2, b64 <MS5803_CRC4+0x38>
			if(n_rem & (0x8000)) {
     b56:	f403 4100 	and.w	r1, r3, #32768	; 0x8000
     b5a:	2900      	cmp	r1, #0
     b5c:	d0f6      	beq.n	b4c <MS5803_CRC4+0x20>
				n_rem = (n_rem << 1) ^ 0x3000;
     b5e:	005b      	lsls	r3, r3, #1
     b60:	b2db      	uxtb	r3, r3
     b62:	e7f5      	b.n	b50 <MS5803_CRC4+0x24>
	for (count = 0; count < 16; count++) {
     b64:	3001      	adds	r0, #1
     b66:	b2c0      	uxtb	r0, r0
     b68:	280f      	cmp	r0, #15
     b6a:	d80a      	bhi.n	b82 <MS5803_CRC4+0x56>
		if (count%2 == 1) {
     b6c:	f010 0f01 	tst.w	r0, #1
     b70:	d0e5      	beq.n	b3e <MS5803_CRC4+0x12>
			n_rem ^= (unsigned short) ((coefficients_[count>>1]) & 0x00FF);
     b72:	0842      	lsrs	r2, r0, #1
     b74:	4906      	ldr	r1, [pc, #24]	; (b90 <MS5803_CRC4+0x64>)
     b76:	f831 2012 	ldrh.w	r2, [r1, r2, lsl #1]
     b7a:	4053      	eors	r3, r2
     b7c:	b2db      	uxtb	r3, r3
u8_t MS5803_CRC4() {
     b7e:	2208      	movs	r2, #8
     b80:	e7e8      	b.n	b54 <MS5803_CRC4+0x28>
			}
		}
	}
	n_rem = (0x000F & (n_rem >> 12));
	coefficients_[7] = crc_read;
     b82:	b2e4      	uxtb	r4, r4
     b84:	4b02      	ldr	r3, [pc, #8]	; (b90 <MS5803_CRC4+0x64>)
     b86:	81dc      	strh	r4, [r3, #14]
	return (n_rem & 0x00);
}
     b88:	2000      	movs	r0, #0
     b8a:	bc10      	pop	{r4}
     b8c:	4770      	bx	lr
     b8e:	bf00      	nop
     b90:	2000021c 	.word	0x2000021c

00000b94 <RN4870CMDMODE>:
#include <util.h>

asm(".global _printf_float");

u8_t RN4870CMDMODE() {
     b94:	b510      	push	{r4, lr}

    usartDataOut(RN4871, '$');
     b96:	2124      	movs	r1, #36	; 0x24
     b98:	2002      	movs	r0, #2
     b9a:	4c05      	ldr	r4, [pc, #20]	; (bb0 <RN4870CMDMODE+0x1c>)
     b9c:	47a0      	blx	r4
    usartDataOut(RN4871, '$');
     b9e:	2124      	movs	r1, #36	; 0x24
     ba0:	2002      	movs	r0, #2
     ba2:	47a0      	blx	r4
    usartDataOut(RN4871, '$');
     ba4:	2124      	movs	r1, #36	; 0x24
     ba6:	2002      	movs	r0, #2
     ba8:	47a0      	blx	r4

    return 1;
}
     baa:	2001      	movs	r0, #1
     bac:	bd10      	pop	{r4, pc}
     bae:	bf00      	nop
     bb0:	00001465 	.word	0x00001465

00000bb4 <RN4871Status>:

u8_t RN4871Status() {
     bb4:	b510      	push	{r4, lr}
    u8_t message[255];
    for (u8_t i = 0; i < 255; i++) {
     bb6:	2400      	movs	r4, #0
     bb8:	2cff      	cmp	r4, #255	; 0xff
     bba:	d00f      	beq.n	bdc <RN4871Status+0x28>
        while(sercom(RN4871)->USART.INTFLAG.bit.RXC == 0);
     bbc:	4b0a      	ldr	r3, [pc, #40]	; (be8 <RN4871Status+0x34>)
     bbe:	7e1b      	ldrb	r3, [r3, #24]
     bc0:	f013 0f04 	tst.w	r3, #4
     bc4:	d0fa      	beq.n	bbc <RN4871Status+0x8>
        message[i] = usartDataIn(RN4871);
     bc6:	2002      	movs	r0, #2
     bc8:	4b08      	ldr	r3, [pc, #32]	; (bec <RN4871Status+0x38>)
     bca:	4798      	blx	r3
        if (i != 0) {
     bcc:	b11c      	cbz	r4, bd6 <RN4871Status+0x22>
            if (message[i] == 0x25 || message[i] == 0x0D) {
     bce:	2825      	cmp	r0, #37	; 0x25
     bd0:	d006      	beq.n	be0 <RN4871Status+0x2c>
     bd2:	280d      	cmp	r0, #13
     bd4:	d006      	beq.n	be4 <RN4871Status+0x30>
    for (u8_t i = 0; i < 255; i++) {
     bd6:	3401      	adds	r4, #1
     bd8:	b2e4      	uxtb	r4, r4
     bda:	e7ed      	b.n	bb8 <RN4871Status+0x4>
                return 1;
            }
        }
    }
    return 0;
     bdc:	2000      	movs	r0, #0
     bde:	bd10      	pop	{r4, pc}
                return 1;
     be0:	2001      	movs	r0, #1
     be2:	bd10      	pop	{r4, pc}
     be4:	2001      	movs	r0, #1

}
     be6:	bd10      	pop	{r4, pc}
     be8:	41012000 	.word	0x41012000
     bec:	000014f1 	.word	0x000014f1

00000bf0 <RN4871SetName>:

void RN4871SetName() {
     bf0:	b510      	push	{r4, lr}
     bf2:	b084      	sub	sp, #16

    u8_t cmd = RN4870CMDMODE();
     bf4:	4b14      	ldr	r3, [pc, #80]	; (c48 <RN4871SetName+0x58>)
     bf6:	4798      	blx	r3
    delay_ms(150);
     bf8:	2096      	movs	r0, #150	; 0x96
     bfa:	4b14      	ldr	r3, [pc, #80]	; (c4c <RN4871SetName+0x5c>)
     bfc:	4798      	blx	r3
    char newName[11];
    sprintf(newName,"S-,ParaBeep_");
     bfe:	4b14      	ldr	r3, [pc, #80]	; (c50 <RN4871SetName+0x60>)
     c00:	ac01      	add	r4, sp, #4
     c02:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
     c04:	c407      	stmia	r4!, {r0, r1, r2}
     c06:	7023      	strb	r3, [r4, #0]
    for (u8_t i = 0; i < 11 ; i++) {
     c08:	2400      	movs	r4, #0
     c0a:	e008      	b.n	c1e <RN4871SetName+0x2e>
        usartDataOut(RN4871,newName[i]);
     c0c:	ab04      	add	r3, sp, #16
     c0e:	4423      	add	r3, r4
     c10:	f813 1c0c 	ldrb.w	r1, [r3, #-12]
     c14:	2002      	movs	r0, #2
     c16:	4b0f      	ldr	r3, [pc, #60]	; (c54 <RN4871SetName+0x64>)
     c18:	4798      	blx	r3
    for (u8_t i = 0; i < 11 ; i++) {
     c1a:	3401      	adds	r4, #1
     c1c:	b2e4      	uxtb	r4, r4
     c1e:	2c0a      	cmp	r4, #10
     c20:	d9f4      	bls.n	c0c <RN4871SetName+0x1c>
    }
    usartDataOut(RN4871,0x0d);
     c22:	210d      	movs	r1, #13
     c24:	2002      	movs	r0, #2
     c26:	4c0b      	ldr	r4, [pc, #44]	; (c54 <RN4871SetName+0x64>)
     c28:	47a0      	blx	r4

    delay_ms(10);
     c2a:	200a      	movs	r0, #10
     c2c:	4b07      	ldr	r3, [pc, #28]	; (c4c <RN4871SetName+0x5c>)
     c2e:	4798      	blx	r3
    usartDataOut(RN4871,'-');
     c30:	212d      	movs	r1, #45	; 0x2d
     c32:	2002      	movs	r0, #2
     c34:	47a0      	blx	r4
    usartDataOut(RN4871,'-');
     c36:	212d      	movs	r1, #45	; 0x2d
     c38:	2002      	movs	r0, #2
     c3a:	47a0      	blx	r4
    usartDataOut(RN4871,'-');
     c3c:	212d      	movs	r1, #45	; 0x2d
     c3e:	2002      	movs	r0, #2
     c40:	47a0      	blx	r4
}
     c42:	b004      	add	sp, #16
     c44:	bd10      	pop	{r4, pc}
     c46:	bf00      	nop
     c48:	00000b95 	.word	0x00000b95
     c4c:	000006cd 	.word	0x000006cd
     c50:	00005ec0 	.word	0x00005ec0
     c54:	00001465 	.word	0x00001465

00000c58 <RN4871SendLK8EX1>:

void RN4871SendLK8EX1() {
     c58:	b570      	push	{r4, r5, r6, lr}
     c5a:	b09c      	sub	sp, #112	; 0x70
    Percentage should be 0 to 100, with no decimals, added by 1000!
    */

    char s[100];

    sprintf(s, "LK8EX1,%d,99999,9999,%d,%4.2f,", (int)(sample.pressureMbar * 100), (int)sample.temperatureCelcus, sample.battVoltage);
     c5c:	4c24      	ldr	r4, [pc, #144]	; (cf0 <RN4871SendLK8EX1+0x98>)
     c5e:	2200      	movs	r2, #0
     c60:	4b24      	ldr	r3, [pc, #144]	; (cf4 <RN4871SendLK8EX1+0x9c>)
     c62:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
     c66:	4d24      	ldr	r5, [pc, #144]	; (cf8 <RN4871SendLK8EX1+0xa0>)
     c68:	47a8      	blx	r5
     c6a:	69a5      	ldr	r5, [r4, #24]
     c6c:	6fe6      	ldr	r6, [r4, #124]	; 0x7c
     c6e:	4b23      	ldr	r3, [pc, #140]	; (cfc <RN4871SendLK8EX1+0xa4>)
     c70:	4798      	blx	r3
     c72:	4604      	mov	r4, r0
     c74:	4630      	mov	r0, r6
     c76:	4b22      	ldr	r3, [pc, #136]	; (d00 <RN4871SendLK8EX1+0xa8>)
     c78:	4798      	blx	r3
     c7a:	e9cd 0100 	strd	r0, r1, [sp]
     c7e:	462b      	mov	r3, r5
     c80:	4622      	mov	r2, r4
     c82:	4920      	ldr	r1, [pc, #128]	; (d04 <RN4871SendLK8EX1+0xac>)
     c84:	a803      	add	r0, sp, #12
     c86:	4c20      	ldr	r4, [pc, #128]	; (d08 <RN4871SendLK8EX1+0xb0>)
     c88:	47a0      	blx	r4

	//nmea checksum start
    u8_t c, XOR;
    XOR = 0;
    u8_t len = strlen(s);
     c8a:	a803      	add	r0, sp, #12
     c8c:	4b1f      	ldr	r3, [pc, #124]	; (d0c <RN4871SendLK8EX1+0xb4>)
     c8e:	4798      	blx	r3
     c90:	b2c0      	uxtb	r0, r0
    for (u8_t i = 0; i < len; i++) {
     c92:	2200      	movs	r2, #0
    XOR = 0;
     c94:	4613      	mov	r3, r2
    for (u8_t i = 0; i < len; i++) {
     c96:	e006      	b.n	ca6 <RN4871SendLK8EX1+0x4e>
        c = s[i];
     c98:	a91c      	add	r1, sp, #112	; 0x70
     c9a:	4411      	add	r1, r2
     c9c:	f811 1c64 	ldrb.w	r1, [r1, #-100]
        XOR ^= c;
     ca0:	404b      	eors	r3, r1
    for (u8_t i = 0; i < len; i++) {
     ca2:	3201      	adds	r2, #1
     ca4:	b2d2      	uxtb	r2, r2
     ca6:	4282      	cmp	r2, r0
     ca8:	d3f6      	bcc.n	c98 <RN4871SendLK8EX1+0x40>
    }
    // Checksum berechnen

    sprintf(s,"%s*%x", s, XOR);
     caa:	aa03      	add	r2, sp, #12
     cac:	4918      	ldr	r1, [pc, #96]	; (d10 <RN4871SendLK8EX1+0xb8>)
     cae:	4610      	mov	r0, r2
     cb0:	4c15      	ldr	r4, [pc, #84]	; (d08 <RN4871SendLK8EX1+0xb0>)
     cb2:	47a0      	blx	r4

    usartDataOut(RN4871,0x24);
     cb4:	2124      	movs	r1, #36	; 0x24
     cb6:	2002      	movs	r0, #2
     cb8:	4b16      	ldr	r3, [pc, #88]	; (d14 <RN4871SendLK8EX1+0xbc>)
     cba:	4798      	blx	r3
    u8_t len2 = strlen(s);
     cbc:	a803      	add	r0, sp, #12
     cbe:	4b13      	ldr	r3, [pc, #76]	; (d0c <RN4871SendLK8EX1+0xb4>)
     cc0:	4798      	blx	r3
     cc2:	b2c5      	uxtb	r5, r0
    for (u8_t i = 0 ; i < len2; i++) {
     cc4:	2400      	movs	r4, #0
     cc6:	e008      	b.n	cda <RN4871SendLK8EX1+0x82>
        usartDataOut(RN4871,s[i]);
     cc8:	ab1c      	add	r3, sp, #112	; 0x70
     cca:	4423      	add	r3, r4
     ccc:	f813 1c64 	ldrb.w	r1, [r3, #-100]
     cd0:	2002      	movs	r0, #2
     cd2:	4b10      	ldr	r3, [pc, #64]	; (d14 <RN4871SendLK8EX1+0xbc>)
     cd4:	4798      	blx	r3
    for (u8_t i = 0 ; i < len2; i++) {
     cd6:	3401      	adds	r4, #1
     cd8:	b2e4      	uxtb	r4, r4
     cda:	42ac      	cmp	r4, r5
     cdc:	d3f4      	bcc.n	cc8 <RN4871SendLK8EX1+0x70>
    }
    usartDataOut(RN4871,0x0d);
     cde:	210d      	movs	r1, #13
     ce0:	2002      	movs	r0, #2
     ce2:	4c0c      	ldr	r4, [pc, #48]	; (d14 <RN4871SendLK8EX1+0xbc>)
     ce4:	47a0      	blx	r4
    usartDataOut(RN4871,0x0a);
     ce6:	210a      	movs	r1, #10
     ce8:	2002      	movs	r0, #2
     cea:	47a0      	blx	r4
     cec:	b01c      	add	sp, #112	; 0x70
     cee:	bd70      	pop	{r4, r5, r6, pc}
     cf0:	20000230 	.word	0x20000230
     cf4:	40590000 	.word	0x40590000
     cf8:	000031e5 	.word	0x000031e5
     cfc:	00003745 	.word	0x00003745
     d00:	0000313d 	.word	0x0000313d
     d04:	00005ed0 	.word	0x00005ed0
     d08:	00004615 	.word	0x00004615
     d0c:	0000465d 	.word	0x0000465d
     d10:	00005ef0 	.word	0x00005ef0
     d14:	00001465 	.word	0x00001465

00000d18 <getBaroData>:
#include <util.h>


void getBaroData() {
     d18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     d1c:	4c0e      	ldr	r4, [pc, #56]	; (d58 <getBaroData+0x40>)
     d1e:	2580      	movs	r5, #128	; 0x80
     d20:	6165      	str	r5, [r4, #20]
    pinLow(cs_baro);
    spiDataOut(SPI0, cmdAdcD2_4096_);
     d22:	2158      	movs	r1, #88	; 0x58
     d24:	2000      	movs	r0, #0
     d26:	f8df 903c 	ldr.w	r9, [pc, #60]	; d64 <getBaroData+0x4c>
     d2a:	47c8      	blx	r9
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     d2c:	61a5      	str	r5, [r4, #24]
    pinHigh(cs_baro);

    delay_us(9040);
     d2e:	f242 3050 	movw	r0, #9040	; 0x2350
     d32:	f8df 8034 	ldr.w	r8, [pc, #52]	; d68 <getBaroData+0x50>
     d36:	47c0      	blx	r8
    sample.tempRaw = readMS5803AdcResults();
     d38:	4f08      	ldr	r7, [pc, #32]	; (d5c <getBaroData+0x44>)
     d3a:	47b8      	blx	r7
     d3c:	4e08      	ldr	r6, [pc, #32]	; (d60 <getBaroData+0x48>)
     d3e:	6030      	str	r0, [r6, #0]
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     d40:	6165      	str	r5, [r4, #20]

    pinLow(cs_baro);
    spiDataOut(SPI0, cmdAdcD1_4096_);
     d42:	2148      	movs	r1, #72	; 0x48
     d44:	2000      	movs	r0, #0
     d46:	47c8      	blx	r9
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     d48:	61a5      	str	r5, [r4, #24]
    pinHigh(cs_baro);

    delay_us(9040);
     d4a:	f242 3050 	movw	r0, #9040	; 0x2350
     d4e:	47c0      	blx	r8
    sample.pressureRaw = readMS5803AdcResults();
     d50:	47b8      	blx	r7
     d52:	6070      	str	r0, [r6, #4]
     d54:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
     d58:	41008000 	.word	0x41008000
     d5c:	00000905 	.word	0x00000905
     d60:	20000230 	.word	0x20000230
     d64:	00001231 	.word	0x00001231
     d68:	000006fd 	.word	0x000006fd
     d6c:	00000000 	.word	0x00000000

00000d70 <cookAccelData>:

}

void cookAccelData() {
     d70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

    int16_t negative = (sample.ADXLX1 & (1 <<7)) != 0;
     d72:	4b31      	ldr	r3, [pc, #196]	; (e38 <cookAccelData+0xc8>)
     d74:	f893 3061 	ldrb.w	r3, [r3, #97]	; 0x61
    if (negative) {
     d78:	f013 0f80 	tst.w	r3, #128	; 0x80
     d7c:	d140      	bne.n	e00 <cookAccelData+0x90>
        // if negative then preform 2's complement to int conversion
        sample.Xaccel = ((sample.ADXLX1 | ~((1 << 8) - 1)) << 8 ) |  sample.ADXLX0;
    } else {
        sample.Xaccel = (sample.ADXLX1 << 8) +  sample.ADXLX0;
     d7e:	492e      	ldr	r1, [pc, #184]	; (e38 <cookAccelData+0xc8>)
     d80:	f891 2060 	ldrb.w	r2, [r1, #96]	; 0x60
     d84:	eb02 2303 	add.w	r3, r2, r3, lsl #8
     d88:	f8a1 3066 	strh.w	r3, [r1, #102]	; 0x66
    }
    negative = (sample.ADXLY1 & (1 <<7)) != 0;
     d8c:	4b2a      	ldr	r3, [pc, #168]	; (e38 <cookAccelData+0xc8>)
     d8e:	f893 3063 	ldrb.w	r3, [r3, #99]	; 0x63
    if (negative) {
     d92:	f013 0f80 	tst.w	r3, #128	; 0x80
     d96:	d13b      	bne.n	e10 <cookAccelData+0xa0>
        sample.Yaccel = ((sample.ADXLY1 | ~((1 << 8) - 1)) << 8 ) | sample.ADXLY0;
    } else {
        sample.Yaccel = (sample.ADXLY1 << 8) | sample.ADXLY0;
     d98:	4927      	ldr	r1, [pc, #156]	; (e38 <cookAccelData+0xc8>)
     d9a:	f891 2062 	ldrb.w	r2, [r1, #98]	; 0x62
     d9e:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
     da2:	f8a1 3068 	strh.w	r3, [r1, #104]	; 0x68
    }
    negative = (sample.ADXLZ1 & (1 <<7)) != 0;
     da6:	4b24      	ldr	r3, [pc, #144]	; (e38 <cookAccelData+0xc8>)
     da8:	f893 2065 	ldrb.w	r2, [r3, #101]	; 0x65
    if (negative) {
     dac:	f012 0f80 	tst.w	r2, #128	; 0x80
     db0:	d136      	bne.n	e20 <cookAccelData+0xb0>
        sample.Zaccel = ((sample.ADXLZ1 | ~((1 << 8) - 1)) << 8 ) | sample.ADXLZ0;
    } else {
        sample.Zaccel = (sample.ADXLZ1 << 8) | sample.ADXLZ0;
     db2:	4921      	ldr	r1, [pc, #132]	; (e38 <cookAccelData+0xc8>)
     db4:	f891 3064 	ldrb.w	r3, [r1, #100]	; 0x64
     db8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
     dbc:	f8a1 306a 	strh.w	r3, [r1, #106]	; 0x6a
    }

    sample.Xfloat = sample.Xaccel * ADXL345_MG2G_MULTIPLIER;
     dc0:	4c1d      	ldr	r4, [pc, #116]	; (e38 <cookAccelData+0xc8>)
     dc2:	4f1e      	ldr	r7, [pc, #120]	; (e3c <cookAccelData+0xcc>)
     dc4:	f9b4 0066 	ldrsh.w	r0, [r4, #102]	; 0x66
     dc8:	47b8      	blx	r7
     dca:	4e1d      	ldr	r6, [pc, #116]	; (e40 <cookAccelData+0xd0>)
     dcc:	a318      	add	r3, pc, #96	; (adr r3, e30 <cookAccelData+0xc0>)
     dce:	e9d3 2300 	ldrd	r2, r3, [r3]
     dd2:	47b0      	blx	r6
     dd4:	4d1b      	ldr	r5, [pc, #108]	; (e44 <cookAccelData+0xd4>)
     dd6:	47a8      	blx	r5
     dd8:	66e0      	str	r0, [r4, #108]	; 0x6c
    sample.Yfloat = sample.Yaccel * ADXL345_MG2G_MULTIPLIER;
     dda:	f9b4 0068 	ldrsh.w	r0, [r4, #104]	; 0x68
     dde:	47b8      	blx	r7
     de0:	a313      	add	r3, pc, #76	; (adr r3, e30 <cookAccelData+0xc0>)
     de2:	e9d3 2300 	ldrd	r2, r3, [r3]
     de6:	47b0      	blx	r6
     de8:	47a8      	blx	r5
     dea:	6720      	str	r0, [r4, #112]	; 0x70
    sample.Zfloat = sample.Zaccel * ADXL345_MG2G_MULTIPLIER;
     dec:	f9b4 006a 	ldrsh.w	r0, [r4, #106]	; 0x6a
     df0:	47b8      	blx	r7
     df2:	a30f      	add	r3, pc, #60	; (adr r3, e30 <cookAccelData+0xc0>)
     df4:	e9d3 2300 	ldrd	r2, r3, [r3]
     df8:	47b0      	blx	r6
     dfa:	47a8      	blx	r5
     dfc:	6760      	str	r0, [r4, #116]	; 0x74
     dfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        sample.Xaccel = ((sample.ADXLX1 | ~((1 << 8) - 1)) << 8 ) |  sample.ADXLX0;
     e00:	490d      	ldr	r1, [pc, #52]	; (e38 <cookAccelData+0xc8>)
     e02:	f891 2060 	ldrb.w	r2, [r1, #96]	; 0x60
     e06:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
     e0a:	f8a1 3066 	strh.w	r3, [r1, #102]	; 0x66
     e0e:	e7bd      	b.n	d8c <cookAccelData+0x1c>
        sample.Yaccel = ((sample.ADXLY1 | ~((1 << 8) - 1)) << 8 ) | sample.ADXLY0;
     e10:	4909      	ldr	r1, [pc, #36]	; (e38 <cookAccelData+0xc8>)
     e12:	f891 2062 	ldrb.w	r2, [r1, #98]	; 0x62
     e16:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
     e1a:	f8a1 3068 	strh.w	r3, [r1, #104]	; 0x68
     e1e:	e7c2      	b.n	da6 <cookAccelData+0x36>
        sample.Zaccel = ((sample.ADXLZ1 | ~((1 << 8) - 1)) << 8 ) | sample.ADXLZ0;
     e20:	4619      	mov	r1, r3
     e22:	f893 3064 	ldrb.w	r3, [r3, #100]	; 0x64
     e26:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
     e2a:	f8a1 306a 	strh.w	r3, [r1, #106]	; 0x6a
     e2e:	e7c7      	b.n	dc0 <cookAccelData+0x50>
     e30:	8e8a71de 	.word	0x8e8a71de
     e34:	3f6ff2e4 	.word	0x3f6ff2e4
     e38:	20000230 	.word	0x20000230
     e3c:	00003119 	.word	0x00003119
     e40:	000031e5 	.word	0x000031e5
     e44:	00003795 	.word	0x00003795

00000e48 <getAccelData>:
}

void getAccelData() {
     e48:	b508      	push	{r3, lr}
    ADXLgetAccelData();
     e4a:	4b02      	ldr	r3, [pc, #8]	; (e54 <getAccelData+0xc>)
     e4c:	4798      	blx	r3
    cookAccelData();
     e4e:	4b02      	ldr	r3, [pc, #8]	; (e58 <getAccelData+0x10>)
     e50:	4798      	blx	r3
     e52:	bd08      	pop	{r3, pc}
     e54:	00000301 	.word	0x00000301
     e58:	00000d71 	.word	0x00000d71
     e5c:	00000000 	.word	0x00000000

00000e60 <getSample>:
}

void getSample() {
     e60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

    getBaroData();
     e62:	4b1d      	ldr	r3, [pc, #116]	; (ed8 <getSample+0x78>)
     e64:	4798      	blx	r3
    getAccelData();
     e66:	4b1d      	ldr	r3, [pc, #116]	; (edc <getSample+0x7c>)
     e68:	4798      	blx	r3
    ConvertPressureTemperature(sample.pressureRaw, sample.tempRaw, &sample.temperatureCelcus, &sample.pressureMbar);
     e6a:	491d      	ldr	r1, [pc, #116]	; (ee0 <getSample+0x80>)
     e6c:	f1a1 0410 	sub.w	r4, r1, #16
     e70:	460b      	mov	r3, r1
     e72:	f101 0208 	add.w	r2, r1, #8
     e76:	f851 1c10 	ldr.w	r1, [r1, #-16]
     e7a:	6860      	ldr	r0, [r4, #4]
     e7c:	4d19      	ldr	r5, [pc, #100]	; (ee4 <getSample+0x84>)
     e7e:	47a8      	blx	r5

    sample.battRaw = adc_read(senseBat);
     e80:	4b19      	ldr	r3, [pc, #100]	; (ee8 <getSample+0x88>)
     e82:	e893 0003 	ldmia.w	r3, {r0, r1}
     e86:	4b19      	ldr	r3, [pc, #100]	; (eec <getSample+0x8c>)
     e88:	4798      	blx	r3
     e8a:	f8a4 0078 	strh.w	r0, [r4, #120]	; 0x78
    sample.battVoltage = (sample.battRaw * 0.00278)*0.1 + sample.battVoltage*0.9;
     e8e:	4b18      	ldr	r3, [pc, #96]	; (ef0 <getSample+0x90>)
     e90:	4798      	blx	r3
     e92:	4d18      	ldr	r5, [pc, #96]	; (ef4 <getSample+0x94>)
     e94:	a30c      	add	r3, pc, #48	; (adr r3, ec8 <getSample+0x68>)
     e96:	e9d3 2300 	ldrd	r2, r3, [r3]
     e9a:	47a8      	blx	r5
     e9c:	4606      	mov	r6, r0
     e9e:	460f      	mov	r7, r1
     ea0:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
     ea2:	4b15      	ldr	r3, [pc, #84]	; (ef8 <getSample+0x98>)
     ea4:	4798      	blx	r3
     ea6:	a30a      	add	r3, pc, #40	; (adr r3, ed0 <getSample+0x70>)
     ea8:	e9d3 2300 	ldrd	r2, r3, [r3]
     eac:	47a8      	blx	r5
     eae:	4602      	mov	r2, r0
     eb0:	460b      	mov	r3, r1
     eb2:	4630      	mov	r0, r6
     eb4:	4639      	mov	r1, r7
     eb6:	4d11      	ldr	r5, [pc, #68]	; (efc <getSample+0x9c>)
     eb8:	47a8      	blx	r5
     eba:	4b11      	ldr	r3, [pc, #68]	; (f00 <getSample+0xa0>)
     ebc:	4798      	blx	r3
     ebe:	67e0      	str	r0, [r4, #124]	; 0x7c

    sample.sampleCount = sample.sampleCount + 1;
     ec0:	68e3      	ldr	r3, [r4, #12]
     ec2:	3301      	adds	r3, #1
     ec4:	60e3      	str	r3, [r4, #12]
     ec6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     ec8:	e8858ff7 	.word	0xe8858ff7
     ecc:	3f323810 	.word	0x3f323810
     ed0:	cccccccd 	.word	0xcccccccd
     ed4:	3feccccc 	.word	0x3feccccc
     ed8:	00000d19 	.word	0x00000d19
     edc:	00000e49 	.word	0x00000e49
     ee0:	20000240 	.word	0x20000240
     ee4:	00000949 	.word	0x00000949
     ee8:	00005ef8 	.word	0x00005ef8
     eec:	000003bd 	.word	0x000003bd
     ef0:	00003119 	.word	0x00003119
     ef4:	000031e5 	.word	0x000031e5
     ef8:	0000313d 	.word	0x0000313d
     efc:	00002e81 	.word	0x00002e81
     f00:	00003795 	.word	0x00003795

00000f04 <SPI0init>:
 * Created: 2/6/2021 4:42:57 PM
 *  Author: Desktop
 */
#include "util.h"

void SPI0init(u8_t id) {
     f04:	b510      	push	{r4, lr}
     f06:	4604      	mov	r4, r0

    enable_clock_generator(1, GCLK_GENCTRL_SRC_DFLL, 12);
     f08:	220c      	movs	r2, #12
     f0a:	2106      	movs	r1, #6
     f0c:	2001      	movs	r0, #1
     f0e:	4b5b      	ldr	r3, [pc, #364]	; (107c <SPI0init+0x178>)
     f10:	4798      	blx	r3
    connect_gclk_to_peripheral(1, 7);
     f12:	2107      	movs	r1, #7
     f14:	2001      	movs	r0, #1
     f16:	4b5a      	ldr	r3, [pc, #360]	; (1080 <SPI0init+0x17c>)
     f18:	4798      	blx	r3

    MCLK->APBAMASK.reg |= MCLK_APBAMASK_SERCOM0;
     f1a:	4a5a      	ldr	r2, [pc, #360]	; (1084 <SPI0init+0x180>)
     f1c:	6953      	ldr	r3, [r2, #20]
     f1e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
     f22:	6153      	str	r3, [r2, #20]
void vario();
void sendDebugData();


inline static Sercom* sercom(SercomId id) {
    if ( id == 0) {
     f24:	b16c      	cbz	r4, f42 <SPI0init+0x3e>
        return (Sercom*) (0x40003000U);
    } else if ( id == 1) {
     f26:	2c01      	cmp	r4, #1
     f28:	d00f      	beq.n	f4a <SPI0init+0x46>
        return (Sercom*) (0x40003400U);
    } else if ( id == 2) {
     f2a:	2c02      	cmp	r4, #2
     f2c:	d00f      	beq.n	f4e <SPI0init+0x4a>
        return (Sercom*) (0x41012000U);
    } else if ( id == 3) {
     f2e:	2c03      	cmp	r4, #3
     f30:	d00f      	beq.n	f52 <SPI0init+0x4e>
        return (Sercom*) (0x41014000U);
    } else if ( id == 4) {
     f32:	2c04      	cmp	r4, #4
     f34:	d00f      	beq.n	f56 <SPI0init+0x52>
        return (Sercom*) (0x43000000U);
    } else if ( id == 5) {
     f36:	2c05      	cmp	r4, #5
     f38:	d001      	beq.n	f3e <SPI0init+0x3a>
        return (Sercom*) (0x43000400U);
    } else {
        return 0;
     f3a:	2200      	movs	r2, #0
     f3c:	e002      	b.n	f44 <SPI0init+0x40>
        return (Sercom*) (0x43000400U);
     f3e:	4a52      	ldr	r2, [pc, #328]	; (1088 <SPI0init+0x184>)
     f40:	e000      	b.n	f44 <SPI0init+0x40>
        return (Sercom*) (0x40003000U);
     f42:	4a52      	ldr	r2, [pc, #328]	; (108c <SPI0init+0x188>)


    sercom(id)->SPI.CTRLA.reg = SERCOM_SPI_CTRLA_SWRST;
     f44:	2301      	movs	r3, #1
     f46:	6013      	str	r3, [r2, #0]
    while(sercom(id)->SPI.CTRLA.reg & SERCOM_SPI_CTRLA_SWRST);
     f48:	e00f      	b.n	f6a <SPI0init+0x66>
        return (Sercom*) (0x40003400U);
     f4a:	4a51      	ldr	r2, [pc, #324]	; (1090 <SPI0init+0x18c>)
     f4c:	e7fa      	b.n	f44 <SPI0init+0x40>
        return (Sercom*) (0x41012000U);
     f4e:	4a51      	ldr	r2, [pc, #324]	; (1094 <SPI0init+0x190>)
     f50:	e7f8      	b.n	f44 <SPI0init+0x40>
        return (Sercom*) (0x41014000U);
     f52:	4a51      	ldr	r2, [pc, #324]	; (1098 <SPI0init+0x194>)
     f54:	e7f6      	b.n	f44 <SPI0init+0x40>
        return (Sercom*) (0x43000000U);
     f56:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
     f5a:	e7f3      	b.n	f44 <SPI0init+0x40>
        return (Sercom*) (0x43000400U);
     f5c:	4b4a      	ldr	r3, [pc, #296]	; (1088 <SPI0init+0x184>)
     f5e:	e000      	b.n	f62 <SPI0init+0x5e>
        return (Sercom*) (0x40003000U);
     f60:	4b4a      	ldr	r3, [pc, #296]	; (108c <SPI0init+0x188>)
     f62:	681b      	ldr	r3, [r3, #0]
     f64:	f013 0f01 	tst.w	r3, #1
     f68:	d016      	beq.n	f98 <SPI0init+0x94>
    if ( id == 0) {
     f6a:	2c00      	cmp	r4, #0
     f6c:	d0f8      	beq.n	f60 <SPI0init+0x5c>
    } else if ( id == 1) {
     f6e:	2c01      	cmp	r4, #1
     f70:	d009      	beq.n	f86 <SPI0init+0x82>
    } else if ( id == 2) {
     f72:	2c02      	cmp	r4, #2
     f74:	d009      	beq.n	f8a <SPI0init+0x86>
    } else if ( id == 3) {
     f76:	2c03      	cmp	r4, #3
     f78:	d009      	beq.n	f8e <SPI0init+0x8a>
    } else if ( id == 4) {
     f7a:	2c04      	cmp	r4, #4
     f7c:	d009      	beq.n	f92 <SPI0init+0x8e>
    } else if ( id == 5) {
     f7e:	2c05      	cmp	r4, #5
     f80:	d0ec      	beq.n	f5c <SPI0init+0x58>
        return 0;
     f82:	2300      	movs	r3, #0
     f84:	e7ed      	b.n	f62 <SPI0init+0x5e>
        return (Sercom*) (0x40003400U);
     f86:	4b42      	ldr	r3, [pc, #264]	; (1090 <SPI0init+0x18c>)
     f88:	e7eb      	b.n	f62 <SPI0init+0x5e>
        return (Sercom*) (0x41012000U);
     f8a:	4b42      	ldr	r3, [pc, #264]	; (1094 <SPI0init+0x190>)
     f8c:	e7e9      	b.n	f62 <SPI0init+0x5e>
        return (Sercom*) (0x41014000U);
     f8e:	4b42      	ldr	r3, [pc, #264]	; (1098 <SPI0init+0x194>)
     f90:	e7e7      	b.n	f62 <SPI0init+0x5e>
        return (Sercom*) (0x43000000U);
     f92:	f04f 4386 	mov.w	r3, #1124073472	; 0x43000000
     f96:	e7e4      	b.n	f62 <SPI0init+0x5e>
    if ( id == 0) {
     f98:	b16c      	cbz	r4, fb6 <SPI0init+0xb2>
    } else if ( id == 1) {
     f9a:	2c01      	cmp	r4, #1
     f9c:	d01c      	beq.n	fd8 <SPI0init+0xd4>
    } else if ( id == 2) {
     f9e:	2c02      	cmp	r4, #2
     fa0:	d01c      	beq.n	fdc <SPI0init+0xd8>
    } else if ( id == 3) {
     fa2:	2c03      	cmp	r4, #3
     fa4:	d01c      	beq.n	fe0 <SPI0init+0xdc>
    } else if ( id == 4) {
     fa6:	2c04      	cmp	r4, #4
     fa8:	d01c      	beq.n	fe4 <SPI0init+0xe0>
    } else if ( id == 5) {
     faa:	2c05      	cmp	r4, #5
     fac:	d001      	beq.n	fb2 <SPI0init+0xae>
        return 0;
     fae:	2200      	movs	r2, #0
     fb0:	e002      	b.n	fb8 <SPI0init+0xb4>
        return (Sercom*) (0x43000400U);
     fb2:	4a35      	ldr	r2, [pc, #212]	; (1088 <SPI0init+0x184>)
     fb4:	e000      	b.n	fb8 <SPI0init+0xb4>
        return (Sercom*) (0x40003000U);
     fb6:	4a35      	ldr	r2, [pc, #212]	; (108c <SPI0init+0x188>)

    sercom(id)->SPI.CTRLB.reg
        = SERCOM_SPI_CTRLB_RXEN;
     fb8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
     fbc:	6053      	str	r3, [r2, #4]
    if ( id == 0) {
     fbe:	b1b4      	cbz	r4, fee <SPI0init+0xea>
    } else if ( id == 1) {
     fc0:	2c01      	cmp	r4, #1
     fc2:	d024      	beq.n	100e <SPI0init+0x10a>
    } else if ( id == 2) {
     fc4:	2c02      	cmp	r4, #2
     fc6:	d024      	beq.n	1012 <SPI0init+0x10e>
    } else if ( id == 3) {
     fc8:	2c03      	cmp	r4, #3
     fca:	d024      	beq.n	1016 <SPI0init+0x112>
    } else if ( id == 4) {
     fcc:	2c04      	cmp	r4, #4
     fce:	d024      	beq.n	101a <SPI0init+0x116>
    } else if ( id == 5) {
     fd0:	2c05      	cmp	r4, #5
     fd2:	d00a      	beq.n	fea <SPI0init+0xe6>
        return 0;
     fd4:	2200      	movs	r2, #0
     fd6:	e00b      	b.n	ff0 <SPI0init+0xec>
        return (Sercom*) (0x40003400U);
     fd8:	4a2d      	ldr	r2, [pc, #180]	; (1090 <SPI0init+0x18c>)
     fda:	e7ed      	b.n	fb8 <SPI0init+0xb4>
        return (Sercom*) (0x41012000U);
     fdc:	4a2d      	ldr	r2, [pc, #180]	; (1094 <SPI0init+0x190>)
     fde:	e7eb      	b.n	fb8 <SPI0init+0xb4>
        return (Sercom*) (0x41014000U);
     fe0:	4a2d      	ldr	r2, [pc, #180]	; (1098 <SPI0init+0x194>)
     fe2:	e7e9      	b.n	fb8 <SPI0init+0xb4>
        return (Sercom*) (0x43000000U);
     fe4:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
     fe8:	e7e6      	b.n	fb8 <SPI0init+0xb4>
        return (Sercom*) (0x43000400U);
     fea:	4a27      	ldr	r2, [pc, #156]	; (1088 <SPI0init+0x184>)
     fec:	e000      	b.n	ff0 <SPI0init+0xec>
        return (Sercom*) (0x40003000U);
     fee:	4a27      	ldr	r2, [pc, #156]	; (108c <SPI0init+0x188>)

    sercom(id)->SPI.BAUD.reg = 0x05;
     ff0:	2305      	movs	r3, #5
     ff2:	7313      	strb	r3, [r2, #12]
    if ( id == 0) {
     ff4:	b1b4      	cbz	r4, 1024 <SPI0init+0x120>
    } else if ( id == 1) {
     ff6:	2c01      	cmp	r4, #1
     ff8:	d018      	beq.n	102c <SPI0init+0x128>
    } else if ( id == 2) {
     ffa:	2c02      	cmp	r4, #2
     ffc:	d018      	beq.n	1030 <SPI0init+0x12c>
    } else if ( id == 3) {
     ffe:	2c03      	cmp	r4, #3
    1000:	d018      	beq.n	1034 <SPI0init+0x130>
    } else if ( id == 4) {
    1002:	2c04      	cmp	r4, #4
    1004:	d018      	beq.n	1038 <SPI0init+0x134>
    } else if ( id == 5) {
    1006:	429c      	cmp	r4, r3
    1008:	d00a      	beq.n	1020 <SPI0init+0x11c>
        return 0;
    100a:	2200      	movs	r2, #0
    100c:	e00b      	b.n	1026 <SPI0init+0x122>
        return (Sercom*) (0x40003400U);
    100e:	4a20      	ldr	r2, [pc, #128]	; (1090 <SPI0init+0x18c>)
    1010:	e7ee      	b.n	ff0 <SPI0init+0xec>
        return (Sercom*) (0x41012000U);
    1012:	4a20      	ldr	r2, [pc, #128]	; (1094 <SPI0init+0x190>)
    1014:	e7ec      	b.n	ff0 <SPI0init+0xec>
        return (Sercom*) (0x41014000U);
    1016:	4a20      	ldr	r2, [pc, #128]	; (1098 <SPI0init+0x194>)
    1018:	e7ea      	b.n	ff0 <SPI0init+0xec>
        return (Sercom*) (0x43000000U);
    101a:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
    101e:	e7e7      	b.n	ff0 <SPI0init+0xec>
        return (Sercom*) (0x43000400U);
    1020:	4a19      	ldr	r2, [pc, #100]	; (1088 <SPI0init+0x184>)
    1022:	e000      	b.n	1026 <SPI0init+0x122>
        return (Sercom*) (0x40003000U);
    1024:	4a19      	ldr	r2, [pc, #100]	; (108c <SPI0init+0x188>)

    sercom(id)->SPI.CTRLA.reg
        = SERCOM_SPI_CTRLA_ENABLE
    1026:	4b1d      	ldr	r3, [pc, #116]	; (109c <SPI0init+0x198>)
    1028:	6013      	str	r3, [r2, #0]
          | SERCOM_SPI_CTRLA_CPOL
          | SERCOM_SPI_CTRLA_CPHA;
          //| (0 ? SERCOM_SPI_CTRLA_CPOL : 0)
          //| (0 ? SERCOM_SPI_CTRLA_CPHA : 0);

    while  (sercom(id)->SPI.SYNCBUSY.bit.CTRLB);
    102a:	e00f      	b.n	104c <SPI0init+0x148>
        return (Sercom*) (0x40003400U);
    102c:	4a18      	ldr	r2, [pc, #96]	; (1090 <SPI0init+0x18c>)
    102e:	e7fa      	b.n	1026 <SPI0init+0x122>
        return (Sercom*) (0x41012000U);
    1030:	4a18      	ldr	r2, [pc, #96]	; (1094 <SPI0init+0x190>)
    1032:	e7f8      	b.n	1026 <SPI0init+0x122>
        return (Sercom*) (0x41014000U);
    1034:	4a18      	ldr	r2, [pc, #96]	; (1098 <SPI0init+0x194>)
    1036:	e7f6      	b.n	1026 <SPI0init+0x122>
        return (Sercom*) (0x43000000U);
    1038:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
    103c:	e7f3      	b.n	1026 <SPI0init+0x122>
        return (Sercom*) (0x43000400U);
    103e:	4b12      	ldr	r3, [pc, #72]	; (1088 <SPI0init+0x184>)
    1040:	e000      	b.n	1044 <SPI0init+0x140>
        return (Sercom*) (0x40003000U);
    1042:	4b12      	ldr	r3, [pc, #72]	; (108c <SPI0init+0x188>)
    1044:	69db      	ldr	r3, [r3, #28]
    1046:	f013 0f04 	tst.w	r3, #4
    104a:	d016      	beq.n	107a <SPI0init+0x176>
    if ( id == 0) {
    104c:	2c00      	cmp	r4, #0
    104e:	d0f8      	beq.n	1042 <SPI0init+0x13e>
    } else if ( id == 1) {
    1050:	2c01      	cmp	r4, #1
    1052:	d009      	beq.n	1068 <SPI0init+0x164>
    } else if ( id == 2) {
    1054:	2c02      	cmp	r4, #2
    1056:	d009      	beq.n	106c <SPI0init+0x168>
    } else if ( id == 3) {
    1058:	2c03      	cmp	r4, #3
    105a:	d009      	beq.n	1070 <SPI0init+0x16c>
    } else if ( id == 4) {
    105c:	2c04      	cmp	r4, #4
    105e:	d009      	beq.n	1074 <SPI0init+0x170>
    } else if ( id == 5) {
    1060:	2c05      	cmp	r4, #5
    1062:	d0ec      	beq.n	103e <SPI0init+0x13a>
        return 0;
    1064:	2300      	movs	r3, #0
    1066:	e7ed      	b.n	1044 <SPI0init+0x140>
        return (Sercom*) (0x40003400U);
    1068:	4b09      	ldr	r3, [pc, #36]	; (1090 <SPI0init+0x18c>)
    106a:	e7eb      	b.n	1044 <SPI0init+0x140>
        return (Sercom*) (0x41012000U);
    106c:	4b09      	ldr	r3, [pc, #36]	; (1094 <SPI0init+0x190>)
    106e:	e7e9      	b.n	1044 <SPI0init+0x140>
        return (Sercom*) (0x41014000U);
    1070:	4b09      	ldr	r3, [pc, #36]	; (1098 <SPI0init+0x194>)
    1072:	e7e7      	b.n	1044 <SPI0init+0x140>
        return (Sercom*) (0x43000000U);
    1074:	f04f 4386 	mov.w	r3, #1124073472	; 0x43000000
    1078:	e7e4      	b.n	1044 <SPI0init+0x140>

}
    107a:	bd10      	pop	{r4, pc}
    107c:	000004f5 	.word	0x000004f5
    1080:	000004bd 	.word	0x000004bd
    1084:	40000800 	.word	0x40000800
    1088:	43000400 	.word	0x43000400
    108c:	40003000 	.word	0x40003000
    1090:	40003400 	.word	0x40003400
    1094:	41012000 	.word	0x41012000
    1098:	41014000 	.word	0x41014000
    109c:	3020000e 	.word	0x3020000e

000010a0 <SPI5init>:

void SPI5init(u8_t id) {
    10a0:	b510      	push	{r4, lr}
    10a2:	4604      	mov	r4, r0

    //enable_clock_generator(1, GCLK_GENCTRL_SRC_DFLL, 1);
    connect_gclk_to_peripheral(1, 35);
    10a4:	2123      	movs	r1, #35	; 0x23
    10a6:	2001      	movs	r0, #1
    10a8:	4b59      	ldr	r3, [pc, #356]	; (1210 <SPI5init+0x170>)
    10aa:	4798      	blx	r3
    MCLK->APBDMASK.reg |= MCLK_APBDMASK_SERCOM5;
    10ac:	4a59      	ldr	r2, [pc, #356]	; (1214 <SPI5init+0x174>)
    10ae:	6a13      	ldr	r3, [r2, #32]
    10b0:	f043 0302 	orr.w	r3, r3, #2
    10b4:	6213      	str	r3, [r2, #32]
    if ( id == 0) {
    10b6:	b16c      	cbz	r4, 10d4 <SPI5init+0x34>
    } else if ( id == 1) {
    10b8:	2c01      	cmp	r4, #1
    10ba:	d00f      	beq.n	10dc <SPI5init+0x3c>
    } else if ( id == 2) {
    10bc:	2c02      	cmp	r4, #2
    10be:	d00f      	beq.n	10e0 <SPI5init+0x40>
    } else if ( id == 3) {
    10c0:	2c03      	cmp	r4, #3
    10c2:	d00f      	beq.n	10e4 <SPI5init+0x44>
    } else if ( id == 4) {
    10c4:	2c04      	cmp	r4, #4
    10c6:	d00f      	beq.n	10e8 <SPI5init+0x48>
    } else if ( id == 5) {
    10c8:	2c05      	cmp	r4, #5
    10ca:	d001      	beq.n	10d0 <SPI5init+0x30>
        return 0;
    10cc:	2200      	movs	r2, #0
    10ce:	e002      	b.n	10d6 <SPI5init+0x36>
        return (Sercom*) (0x43000400U);
    10d0:	4a51      	ldr	r2, [pc, #324]	; (1218 <SPI5init+0x178>)
    10d2:	e000      	b.n	10d6 <SPI5init+0x36>
        return (Sercom*) (0x40003000U);
    10d4:	4a51      	ldr	r2, [pc, #324]	; (121c <SPI5init+0x17c>)




    sercom(id)->SPI.CTRLA.reg = SERCOM_SPI_CTRLA_SWRST;
    10d6:	2301      	movs	r3, #1
    10d8:	6013      	str	r3, [r2, #0]
    while(sercom(id)->SPI.CTRLA.reg & SERCOM_SPI_CTRLA_SWRST);
    10da:	e00f      	b.n	10fc <SPI5init+0x5c>
        return (Sercom*) (0x40003400U);
    10dc:	4a50      	ldr	r2, [pc, #320]	; (1220 <SPI5init+0x180>)
    10de:	e7fa      	b.n	10d6 <SPI5init+0x36>
        return (Sercom*) (0x41012000U);
    10e0:	4a50      	ldr	r2, [pc, #320]	; (1224 <SPI5init+0x184>)
    10e2:	e7f8      	b.n	10d6 <SPI5init+0x36>
        return (Sercom*) (0x41014000U);
    10e4:	4a50      	ldr	r2, [pc, #320]	; (1228 <SPI5init+0x188>)
    10e6:	e7f6      	b.n	10d6 <SPI5init+0x36>
        return (Sercom*) (0x43000000U);
    10e8:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
    10ec:	e7f3      	b.n	10d6 <SPI5init+0x36>
        return (Sercom*) (0x43000400U);
    10ee:	4b4a      	ldr	r3, [pc, #296]	; (1218 <SPI5init+0x178>)
    10f0:	e000      	b.n	10f4 <SPI5init+0x54>
        return (Sercom*) (0x40003000U);
    10f2:	4b4a      	ldr	r3, [pc, #296]	; (121c <SPI5init+0x17c>)
    10f4:	681b      	ldr	r3, [r3, #0]
    10f6:	f013 0f01 	tst.w	r3, #1
    10fa:	d016      	beq.n	112a <SPI5init+0x8a>
    if ( id == 0) {
    10fc:	2c00      	cmp	r4, #0
    10fe:	d0f8      	beq.n	10f2 <SPI5init+0x52>
    } else if ( id == 1) {
    1100:	2c01      	cmp	r4, #1
    1102:	d009      	beq.n	1118 <SPI5init+0x78>
    } else if ( id == 2) {
    1104:	2c02      	cmp	r4, #2
    1106:	d009      	beq.n	111c <SPI5init+0x7c>
    } else if ( id == 3) {
    1108:	2c03      	cmp	r4, #3
    110a:	d009      	beq.n	1120 <SPI5init+0x80>
    } else if ( id == 4) {
    110c:	2c04      	cmp	r4, #4
    110e:	d009      	beq.n	1124 <SPI5init+0x84>
    } else if ( id == 5) {
    1110:	2c05      	cmp	r4, #5
    1112:	d0ec      	beq.n	10ee <SPI5init+0x4e>
        return 0;
    1114:	2300      	movs	r3, #0
    1116:	e7ed      	b.n	10f4 <SPI5init+0x54>
        return (Sercom*) (0x40003400U);
    1118:	4b41      	ldr	r3, [pc, #260]	; (1220 <SPI5init+0x180>)
    111a:	e7eb      	b.n	10f4 <SPI5init+0x54>
        return (Sercom*) (0x41012000U);
    111c:	4b41      	ldr	r3, [pc, #260]	; (1224 <SPI5init+0x184>)
    111e:	e7e9      	b.n	10f4 <SPI5init+0x54>
        return (Sercom*) (0x41014000U);
    1120:	4b41      	ldr	r3, [pc, #260]	; (1228 <SPI5init+0x188>)
    1122:	e7e7      	b.n	10f4 <SPI5init+0x54>
        return (Sercom*) (0x43000000U);
    1124:	f04f 4386 	mov.w	r3, #1124073472	; 0x43000000
    1128:	e7e4      	b.n	10f4 <SPI5init+0x54>
    if ( id == 0) {
    112a:	b16c      	cbz	r4, 1148 <SPI5init+0xa8>
    } else if ( id == 1) {
    112c:	2c01      	cmp	r4, #1
    112e:	d01c      	beq.n	116a <SPI5init+0xca>
    } else if ( id == 2) {
    1130:	2c02      	cmp	r4, #2
    1132:	d01c      	beq.n	116e <SPI5init+0xce>
    } else if ( id == 3) {
    1134:	2c03      	cmp	r4, #3
    1136:	d01c      	beq.n	1172 <SPI5init+0xd2>
    } else if ( id == 4) {
    1138:	2c04      	cmp	r4, #4
    113a:	d01c      	beq.n	1176 <SPI5init+0xd6>
    } else if ( id == 5) {
    113c:	2c05      	cmp	r4, #5
    113e:	d001      	beq.n	1144 <SPI5init+0xa4>
        return 0;
    1140:	2200      	movs	r2, #0
    1142:	e002      	b.n	114a <SPI5init+0xaa>
        return (Sercom*) (0x43000400U);
    1144:	4a34      	ldr	r2, [pc, #208]	; (1218 <SPI5init+0x178>)
    1146:	e000      	b.n	114a <SPI5init+0xaa>
        return (Sercom*) (0x40003000U);
    1148:	4a34      	ldr	r2, [pc, #208]	; (121c <SPI5init+0x17c>)

    sercom(id)->SPI.CTRLB.reg
        = SERCOM_SPI_CTRLB_RXEN;
    114a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    114e:	6053      	str	r3, [r2, #4]
    if ( id == 0) {
    1150:	b1b4      	cbz	r4, 1180 <SPI5init+0xe0>
    } else if ( id == 1) {
    1152:	2c01      	cmp	r4, #1
    1154:	d024      	beq.n	11a0 <SPI5init+0x100>
    } else if ( id == 2) {
    1156:	2c02      	cmp	r4, #2
    1158:	d024      	beq.n	11a4 <SPI5init+0x104>
    } else if ( id == 3) {
    115a:	2c03      	cmp	r4, #3
    115c:	d024      	beq.n	11a8 <SPI5init+0x108>
    } else if ( id == 4) {
    115e:	2c04      	cmp	r4, #4
    1160:	d024      	beq.n	11ac <SPI5init+0x10c>
    } else if ( id == 5) {
    1162:	2c05      	cmp	r4, #5
    1164:	d00a      	beq.n	117c <SPI5init+0xdc>
        return 0;
    1166:	2200      	movs	r2, #0
    1168:	e00b      	b.n	1182 <SPI5init+0xe2>
        return (Sercom*) (0x40003400U);
    116a:	4a2d      	ldr	r2, [pc, #180]	; (1220 <SPI5init+0x180>)
    116c:	e7ed      	b.n	114a <SPI5init+0xaa>
        return (Sercom*) (0x41012000U);
    116e:	4a2d      	ldr	r2, [pc, #180]	; (1224 <SPI5init+0x184>)
    1170:	e7eb      	b.n	114a <SPI5init+0xaa>
        return (Sercom*) (0x41014000U);
    1172:	4a2d      	ldr	r2, [pc, #180]	; (1228 <SPI5init+0x188>)
    1174:	e7e9      	b.n	114a <SPI5init+0xaa>
        return (Sercom*) (0x43000000U);
    1176:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
    117a:	e7e6      	b.n	114a <SPI5init+0xaa>
        return (Sercom*) (0x43000400U);
    117c:	4a26      	ldr	r2, [pc, #152]	; (1218 <SPI5init+0x178>)
    117e:	e000      	b.n	1182 <SPI5init+0xe2>
        return (Sercom*) (0x40003000U);
    1180:	4a26      	ldr	r2, [pc, #152]	; (121c <SPI5init+0x17c>)

    sercom(id)->SPI.BAUD.reg = 0x05;
    1182:	2305      	movs	r3, #5
    1184:	7313      	strb	r3, [r2, #12]
    if ( id == 0) {
    1186:	b1b4      	cbz	r4, 11b6 <SPI5init+0x116>
    } else if ( id == 1) {
    1188:	2c01      	cmp	r4, #1
    118a:	d018      	beq.n	11be <SPI5init+0x11e>
    } else if ( id == 2) {
    118c:	2c02      	cmp	r4, #2
    118e:	d018      	beq.n	11c2 <SPI5init+0x122>
    } else if ( id == 3) {
    1190:	2c03      	cmp	r4, #3
    1192:	d018      	beq.n	11c6 <SPI5init+0x126>
    } else if ( id == 4) {
    1194:	2c04      	cmp	r4, #4
    1196:	d018      	beq.n	11ca <SPI5init+0x12a>
    } else if ( id == 5) {
    1198:	429c      	cmp	r4, r3
    119a:	d00a      	beq.n	11b2 <SPI5init+0x112>
        return 0;
    119c:	2200      	movs	r2, #0
    119e:	e00b      	b.n	11b8 <SPI5init+0x118>
        return (Sercom*) (0x40003400U);
    11a0:	4a1f      	ldr	r2, [pc, #124]	; (1220 <SPI5init+0x180>)
    11a2:	e7ee      	b.n	1182 <SPI5init+0xe2>
        return (Sercom*) (0x41012000U);
    11a4:	4a1f      	ldr	r2, [pc, #124]	; (1224 <SPI5init+0x184>)
    11a6:	e7ec      	b.n	1182 <SPI5init+0xe2>
        return (Sercom*) (0x41014000U);
    11a8:	4a1f      	ldr	r2, [pc, #124]	; (1228 <SPI5init+0x188>)
    11aa:	e7ea      	b.n	1182 <SPI5init+0xe2>
        return (Sercom*) (0x43000000U);
    11ac:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
    11b0:	e7e7      	b.n	1182 <SPI5init+0xe2>
        return (Sercom*) (0x43000400U);
    11b2:	4a19      	ldr	r2, [pc, #100]	; (1218 <SPI5init+0x178>)
    11b4:	e000      	b.n	11b8 <SPI5init+0x118>
        return (Sercom*) (0x40003000U);
    11b6:	4a19      	ldr	r2, [pc, #100]	; (121c <SPI5init+0x17c>)

    sercom(id)->SPI.CTRLA.reg
        = SERCOM_SPI_CTRLA_ENABLE
    11b8:	4b1c      	ldr	r3, [pc, #112]	; (122c <SPI5init+0x18c>)
    11ba:	6013      	str	r3, [r2, #0]
          | SERCOM_SPI_CTRLA_DOPO(0x0)
          //| SERCOM_SPI_CTRLA_CPOL
          //| SERCOM_SPI_CTRLA_CPHA;
          | (0 ? SERCOM_SPI_CTRLA_CPOL : 0)
          | (0 ? SERCOM_SPI_CTRLA_CPHA : 0);
    while  (sercom(id)->SPI.SYNCBUSY.bit.CTRLB);
    11bc:	e00f      	b.n	11de <SPI5init+0x13e>
        return (Sercom*) (0x40003400U);
    11be:	4a18      	ldr	r2, [pc, #96]	; (1220 <SPI5init+0x180>)
    11c0:	e7fa      	b.n	11b8 <SPI5init+0x118>
        return (Sercom*) (0x41012000U);
    11c2:	4a18      	ldr	r2, [pc, #96]	; (1224 <SPI5init+0x184>)
    11c4:	e7f8      	b.n	11b8 <SPI5init+0x118>
        return (Sercom*) (0x41014000U);
    11c6:	4a18      	ldr	r2, [pc, #96]	; (1228 <SPI5init+0x188>)
    11c8:	e7f6      	b.n	11b8 <SPI5init+0x118>
        return (Sercom*) (0x43000000U);
    11ca:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
    11ce:	e7f3      	b.n	11b8 <SPI5init+0x118>
        return (Sercom*) (0x43000400U);
    11d0:	4b11      	ldr	r3, [pc, #68]	; (1218 <SPI5init+0x178>)
    11d2:	e000      	b.n	11d6 <SPI5init+0x136>
        return (Sercom*) (0x40003000U);
    11d4:	4b11      	ldr	r3, [pc, #68]	; (121c <SPI5init+0x17c>)
    11d6:	69db      	ldr	r3, [r3, #28]
    11d8:	f013 0f04 	tst.w	r3, #4
    11dc:	d016      	beq.n	120c <SPI5init+0x16c>
    if ( id == 0) {
    11de:	2c00      	cmp	r4, #0
    11e0:	d0f8      	beq.n	11d4 <SPI5init+0x134>
    } else if ( id == 1) {
    11e2:	2c01      	cmp	r4, #1
    11e4:	d009      	beq.n	11fa <SPI5init+0x15a>
    } else if ( id == 2) {
    11e6:	2c02      	cmp	r4, #2
    11e8:	d009      	beq.n	11fe <SPI5init+0x15e>
    } else if ( id == 3) {
    11ea:	2c03      	cmp	r4, #3
    11ec:	d009      	beq.n	1202 <SPI5init+0x162>
    } else if ( id == 4) {
    11ee:	2c04      	cmp	r4, #4
    11f0:	d009      	beq.n	1206 <SPI5init+0x166>
    } else if ( id == 5) {
    11f2:	2c05      	cmp	r4, #5
    11f4:	d0ec      	beq.n	11d0 <SPI5init+0x130>
        return 0;
    11f6:	2300      	movs	r3, #0
    11f8:	e7ed      	b.n	11d6 <SPI5init+0x136>
        return (Sercom*) (0x40003400U);
    11fa:	4b09      	ldr	r3, [pc, #36]	; (1220 <SPI5init+0x180>)
    11fc:	e7eb      	b.n	11d6 <SPI5init+0x136>
        return (Sercom*) (0x41012000U);
    11fe:	4b09      	ldr	r3, [pc, #36]	; (1224 <SPI5init+0x184>)
    1200:	e7e9      	b.n	11d6 <SPI5init+0x136>
        return (Sercom*) (0x41014000U);
    1202:	4b09      	ldr	r3, [pc, #36]	; (1228 <SPI5init+0x188>)
    1204:	e7e7      	b.n	11d6 <SPI5init+0x136>
        return (Sercom*) (0x43000000U);
    1206:	f04f 4386 	mov.w	r3, #1124073472	; 0x43000000
    120a:	e7e4      	b.n	11d6 <SPI5init+0x136>

}
    120c:	bd10      	pop	{r4, pc}
    120e:	bf00      	nop
    1210:	000004bd 	.word	0x000004bd
    1214:	40000800 	.word	0x40000800
    1218:	43000400 	.word	0x43000400
    121c:	40003000 	.word	0x40003000
    1220:	40003400 	.word	0x40003400
    1224:	41012000 	.word	0x41012000
    1228:	41014000 	.word	0x41014000
    122c:	0030000e 	.word	0x0030000e

00001230 <spiDataOut>:
    if ( id == 0) {
    1230:	4603      	mov	r3, r0
    1232:	b168      	cbz	r0, 1250 <spiDataOut+0x20>
    } else if ( id == 1) {
    1234:	2801      	cmp	r0, #1
    1236:	d00e      	beq.n	1256 <spiDataOut+0x26>
    } else if ( id == 2) {
    1238:	2802      	cmp	r0, #2
    123a:	d00e      	beq.n	125a <spiDataOut+0x2a>
    } else if ( id == 3) {
    123c:	2803      	cmp	r0, #3
    123e:	d00e      	beq.n	125e <spiDataOut+0x2e>
    } else if ( id == 4) {
    1240:	2804      	cmp	r0, #4
    1242:	d00e      	beq.n	1262 <spiDataOut+0x32>
    } else if ( id == 5) {
    1244:	2805      	cmp	r0, #5
    1246:	d001      	beq.n	124c <spiDataOut+0x1c>
        return 0;
    1248:	2200      	movs	r2, #0
    124a:	e002      	b.n	1252 <spiDataOut+0x22>
        return (Sercom*) (0x43000400U);
    124c:	4a23      	ldr	r2, [pc, #140]	; (12dc <spiDataOut+0xac>)
    124e:	e000      	b.n	1252 <spiDataOut+0x22>
        return (Sercom*) (0x40003000U);
    1250:	4a23      	ldr	r2, [pc, #140]	; (12e0 <spiDataOut+0xb0>)
    while(sercom(id)->SPI.INTFLAG.bit.RXC == 0);
    return sercom(id)->SPI.DATA.reg;
}

void spiDataOut(SercomId id, u8_t data) {
    sercom(id)->SPI.DATA.reg = data;
    1252:	6291      	str	r1, [r2, #40]	; 0x28
    while(sercom(id)->SPI.INTFLAG.bit.RXC == 0);
    1254:	e00f      	b.n	1276 <spiDataOut+0x46>
        return (Sercom*) (0x40003400U);
    1256:	4a23      	ldr	r2, [pc, #140]	; (12e4 <spiDataOut+0xb4>)
    1258:	e7fb      	b.n	1252 <spiDataOut+0x22>
        return (Sercom*) (0x41012000U);
    125a:	4a23      	ldr	r2, [pc, #140]	; (12e8 <spiDataOut+0xb8>)
    125c:	e7f9      	b.n	1252 <spiDataOut+0x22>
        return (Sercom*) (0x41014000U);
    125e:	4a23      	ldr	r2, [pc, #140]	; (12ec <spiDataOut+0xbc>)
    1260:	e7f7      	b.n	1252 <spiDataOut+0x22>
        return (Sercom*) (0x43000000U);
    1262:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
    1266:	e7f4      	b.n	1252 <spiDataOut+0x22>
        return (Sercom*) (0x43000400U);
    1268:	4a1c      	ldr	r2, [pc, #112]	; (12dc <spiDataOut+0xac>)
    126a:	e000      	b.n	126e <spiDataOut+0x3e>
        return (Sercom*) (0x40003000U);
    126c:	4a1c      	ldr	r2, [pc, #112]	; (12e0 <spiDataOut+0xb0>)
    126e:	7e12      	ldrb	r2, [r2, #24]
    1270:	f012 0f04 	tst.w	r2, #4
    1274:	d116      	bne.n	12a4 <spiDataOut+0x74>
    if ( id == 0) {
    1276:	2b00      	cmp	r3, #0
    1278:	d0f8      	beq.n	126c <spiDataOut+0x3c>
    } else if ( id == 1) {
    127a:	2b01      	cmp	r3, #1
    127c:	d009      	beq.n	1292 <spiDataOut+0x62>
    } else if ( id == 2) {
    127e:	2b02      	cmp	r3, #2
    1280:	d009      	beq.n	1296 <spiDataOut+0x66>
    } else if ( id == 3) {
    1282:	2b03      	cmp	r3, #3
    1284:	d009      	beq.n	129a <spiDataOut+0x6a>
    } else if ( id == 4) {
    1286:	2b04      	cmp	r3, #4
    1288:	d009      	beq.n	129e <spiDataOut+0x6e>
    } else if ( id == 5) {
    128a:	2b05      	cmp	r3, #5
    128c:	d0ec      	beq.n	1268 <spiDataOut+0x38>
        return 0;
    128e:	2200      	movs	r2, #0
    1290:	e7ed      	b.n	126e <spiDataOut+0x3e>
        return (Sercom*) (0x40003400U);
    1292:	4a14      	ldr	r2, [pc, #80]	; (12e4 <spiDataOut+0xb4>)
    1294:	e7eb      	b.n	126e <spiDataOut+0x3e>
        return (Sercom*) (0x41012000U);
    1296:	4a14      	ldr	r2, [pc, #80]	; (12e8 <spiDataOut+0xb8>)
    1298:	e7e9      	b.n	126e <spiDataOut+0x3e>
        return (Sercom*) (0x41014000U);
    129a:	4a14      	ldr	r2, [pc, #80]	; (12ec <spiDataOut+0xbc>)
    129c:	e7e7      	b.n	126e <spiDataOut+0x3e>
        return (Sercom*) (0x43000000U);
    129e:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
    12a2:	e7e4      	b.n	126e <spiDataOut+0x3e>
    if ( id == 0) {
    12a4:	b16b      	cbz	r3, 12c2 <spiDataOut+0x92>
    } else if ( id == 1) {
    12a6:	2b01      	cmp	r3, #1
    12a8:	d00e      	beq.n	12c8 <spiDataOut+0x98>
    } else if ( id == 2) {
    12aa:	2b02      	cmp	r3, #2
    12ac:	d00e      	beq.n	12cc <spiDataOut+0x9c>
    } else if ( id == 3) {
    12ae:	2b03      	cmp	r3, #3
    12b0:	d00e      	beq.n	12d0 <spiDataOut+0xa0>
    } else if ( id == 4) {
    12b2:	2b04      	cmp	r3, #4
    12b4:	d00e      	beq.n	12d4 <spiDataOut+0xa4>
    } else if ( id == 5) {
    12b6:	2b05      	cmp	r3, #5
    12b8:	d001      	beq.n	12be <spiDataOut+0x8e>
        return 0;
    12ba:	2300      	movs	r3, #0
    12bc:	e002      	b.n	12c4 <spiDataOut+0x94>
        return (Sercom*) (0x43000400U);
    12be:	4b07      	ldr	r3, [pc, #28]	; (12dc <spiDataOut+0xac>)
    12c0:	e000      	b.n	12c4 <spiDataOut+0x94>
        return (Sercom*) (0x40003000U);
    12c2:	4b07      	ldr	r3, [pc, #28]	; (12e0 <spiDataOut+0xb0>)
    u8_t dummy = sercom(id)->SPI.DATA.reg;
    12c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    12c6:	4770      	bx	lr
        return (Sercom*) (0x40003400U);
    12c8:	4b06      	ldr	r3, [pc, #24]	; (12e4 <spiDataOut+0xb4>)
    12ca:	e7fb      	b.n	12c4 <spiDataOut+0x94>
        return (Sercom*) (0x41012000U);
    12cc:	4b06      	ldr	r3, [pc, #24]	; (12e8 <spiDataOut+0xb8>)
    12ce:	e7f9      	b.n	12c4 <spiDataOut+0x94>
        return (Sercom*) (0x41014000U);
    12d0:	4b06      	ldr	r3, [pc, #24]	; (12ec <spiDataOut+0xbc>)
    12d2:	e7f7      	b.n	12c4 <spiDataOut+0x94>
        return (Sercom*) (0x43000000U);
    12d4:	f04f 4386 	mov.w	r3, #1124073472	; 0x43000000
    12d8:	e7f4      	b.n	12c4 <spiDataOut+0x94>
    12da:	bf00      	nop
    12dc:	43000400 	.word	0x43000400
    12e0:	40003000 	.word	0x40003000
    12e4:	40003400 	.word	0x40003400
    12e8:	41012000 	.word	0x41012000
    12ec:	41014000 	.word	0x41014000

000012f0 <spiDataIn>:
    if ( id == 0) {
    12f0:	4603      	mov	r3, r0
    12f2:	b168      	cbz	r0, 1310 <spiDataIn+0x20>
    } else if ( id == 1) {
    12f4:	2801      	cmp	r0, #1
    12f6:	d00f      	beq.n	1318 <spiDataIn+0x28>
    } else if ( id == 2) {
    12f8:	2802      	cmp	r0, #2
    12fa:	d00f      	beq.n	131c <spiDataIn+0x2c>
    } else if ( id == 3) {
    12fc:	2803      	cmp	r0, #3
    12fe:	d00f      	beq.n	1320 <spiDataIn+0x30>
    } else if ( id == 4) {
    1300:	2804      	cmp	r0, #4
    1302:	d00f      	beq.n	1324 <spiDataIn+0x34>
    } else if ( id == 5) {
    1304:	2805      	cmp	r0, #5
    1306:	d001      	beq.n	130c <spiDataIn+0x1c>
        return 0;
    1308:	2100      	movs	r1, #0
    130a:	e002      	b.n	1312 <spiDataIn+0x22>
        return (Sercom*) (0x43000400U);
    130c:	4924      	ldr	r1, [pc, #144]	; (13a0 <spiDataIn+0xb0>)
    130e:	e000      	b.n	1312 <spiDataIn+0x22>
        return (Sercom*) (0x40003000U);
    1310:	4924      	ldr	r1, [pc, #144]	; (13a4 <spiDataIn+0xb4>)
}

u8_t spiDataIn(SercomId id) {
    sercom(id)->SPI.DATA.reg = 0xFF;
    1312:	22ff      	movs	r2, #255	; 0xff
    1314:	628a      	str	r2, [r1, #40]	; 0x28
    while(sercom(id)->SPI.INTFLAG.bit.RXC == 0);
    1316:	e00f      	b.n	1338 <spiDataIn+0x48>
        return (Sercom*) (0x40003400U);
    1318:	4923      	ldr	r1, [pc, #140]	; (13a8 <spiDataIn+0xb8>)
    131a:	e7fa      	b.n	1312 <spiDataIn+0x22>
        return (Sercom*) (0x41012000U);
    131c:	4923      	ldr	r1, [pc, #140]	; (13ac <spiDataIn+0xbc>)
    131e:	e7f8      	b.n	1312 <spiDataIn+0x22>
        return (Sercom*) (0x41014000U);
    1320:	4923      	ldr	r1, [pc, #140]	; (13b0 <spiDataIn+0xc0>)
    1322:	e7f6      	b.n	1312 <spiDataIn+0x22>
        return (Sercom*) (0x43000000U);
    1324:	f04f 4186 	mov.w	r1, #1124073472	; 0x43000000
    1328:	e7f3      	b.n	1312 <spiDataIn+0x22>
        return (Sercom*) (0x43000400U);
    132a:	4a1d      	ldr	r2, [pc, #116]	; (13a0 <spiDataIn+0xb0>)
    132c:	e000      	b.n	1330 <spiDataIn+0x40>
        return (Sercom*) (0x40003000U);
    132e:	4a1d      	ldr	r2, [pc, #116]	; (13a4 <spiDataIn+0xb4>)
    1330:	7e12      	ldrb	r2, [r2, #24]
    1332:	f012 0f04 	tst.w	r2, #4
    1336:	d116      	bne.n	1366 <spiDataIn+0x76>
    if ( id == 0) {
    1338:	2b00      	cmp	r3, #0
    133a:	d0f8      	beq.n	132e <spiDataIn+0x3e>
    } else if ( id == 1) {
    133c:	2b01      	cmp	r3, #1
    133e:	d009      	beq.n	1354 <spiDataIn+0x64>
    } else if ( id == 2) {
    1340:	2b02      	cmp	r3, #2
    1342:	d009      	beq.n	1358 <spiDataIn+0x68>
    } else if ( id == 3) {
    1344:	2b03      	cmp	r3, #3
    1346:	d009      	beq.n	135c <spiDataIn+0x6c>
    } else if ( id == 4) {
    1348:	2b04      	cmp	r3, #4
    134a:	d009      	beq.n	1360 <spiDataIn+0x70>
    } else if ( id == 5) {
    134c:	2b05      	cmp	r3, #5
    134e:	d0ec      	beq.n	132a <spiDataIn+0x3a>
        return 0;
    1350:	2200      	movs	r2, #0
    1352:	e7ed      	b.n	1330 <spiDataIn+0x40>
        return (Sercom*) (0x40003400U);
    1354:	4a14      	ldr	r2, [pc, #80]	; (13a8 <spiDataIn+0xb8>)
    1356:	e7eb      	b.n	1330 <spiDataIn+0x40>
        return (Sercom*) (0x41012000U);
    1358:	4a14      	ldr	r2, [pc, #80]	; (13ac <spiDataIn+0xbc>)
    135a:	e7e9      	b.n	1330 <spiDataIn+0x40>
        return (Sercom*) (0x41014000U);
    135c:	4a14      	ldr	r2, [pc, #80]	; (13b0 <spiDataIn+0xc0>)
    135e:	e7e7      	b.n	1330 <spiDataIn+0x40>
        return (Sercom*) (0x43000000U);
    1360:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
    1364:	e7e4      	b.n	1330 <spiDataIn+0x40>
    if ( id == 0) {
    1366:	b16b      	cbz	r3, 1384 <spiDataIn+0x94>
    } else if ( id == 1) {
    1368:	2b01      	cmp	r3, #1
    136a:	d00f      	beq.n	138c <spiDataIn+0x9c>
    } else if ( id == 2) {
    136c:	2b02      	cmp	r3, #2
    136e:	d00f      	beq.n	1390 <spiDataIn+0xa0>
    } else if ( id == 3) {
    1370:	2b03      	cmp	r3, #3
    1372:	d00f      	beq.n	1394 <spiDataIn+0xa4>
    } else if ( id == 4) {
    1374:	2b04      	cmp	r3, #4
    1376:	d00f      	beq.n	1398 <spiDataIn+0xa8>
    } else if ( id == 5) {
    1378:	2b05      	cmp	r3, #5
    137a:	d001      	beq.n	1380 <spiDataIn+0x90>
        return 0;
    137c:	2300      	movs	r3, #0
    137e:	e002      	b.n	1386 <spiDataIn+0x96>
        return (Sercom*) (0x43000400U);
    1380:	4b07      	ldr	r3, [pc, #28]	; (13a0 <spiDataIn+0xb0>)
    1382:	e000      	b.n	1386 <spiDataIn+0x96>
        return (Sercom*) (0x40003000U);
    1384:	4b07      	ldr	r3, [pc, #28]	; (13a4 <spiDataIn+0xb4>)
    return sercom(id)->SPI.DATA.reg;
    1386:	6a98      	ldr	r0, [r3, #40]	; 0x28
    1388:	b2c0      	uxtb	r0, r0
    138a:	4770      	bx	lr
        return (Sercom*) (0x40003400U);
    138c:	4b06      	ldr	r3, [pc, #24]	; (13a8 <spiDataIn+0xb8>)
    138e:	e7fa      	b.n	1386 <spiDataIn+0x96>
        return (Sercom*) (0x41012000U);
    1390:	4b06      	ldr	r3, [pc, #24]	; (13ac <spiDataIn+0xbc>)
    1392:	e7f8      	b.n	1386 <spiDataIn+0x96>
        return (Sercom*) (0x41014000U);
    1394:	4b06      	ldr	r3, [pc, #24]	; (13b0 <spiDataIn+0xc0>)
    1396:	e7f6      	b.n	1386 <spiDataIn+0x96>
        return (Sercom*) (0x43000000U);
    1398:	f04f 4386 	mov.w	r3, #1124073472	; 0x43000000
    139c:	e7f3      	b.n	1386 <spiDataIn+0x96>
    139e:	bf00      	nop
    13a0:	43000400 	.word	0x43000400
    13a4:	40003000 	.word	0x40003000
    13a8:	40003400 	.word	0x40003400
    13ac:	41012000 	.word	0x41012000
    13b0:	41014000 	.word	0x41014000

000013b4 <USART2init>:
#include <util.h>


void USART2init() {
    13b4:	b508      	push	{r3, lr}

    enable_clock_generator(2, GCLK_GENCTRL_SRC_DFLL, 1);
    13b6:	2201      	movs	r2, #1
    13b8:	2106      	movs	r1, #6
    13ba:	2002      	movs	r0, #2
    13bc:	4b0e      	ldr	r3, [pc, #56]	; (13f8 <USART2init+0x44>)
    13be:	4798      	blx	r3

    connect_gclk_to_peripheral(2, 23);
    13c0:	2117      	movs	r1, #23
    13c2:	2002      	movs	r0, #2
    13c4:	4b0d      	ldr	r3, [pc, #52]	; (13fc <USART2init+0x48>)
    13c6:	4798      	blx	r3
    MCLK->APBBMASK.reg |= MCLK_APBBMASK_SERCOM2;
    13c8:	4a0d      	ldr	r2, [pc, #52]	; (1400 <USART2init+0x4c>)
    13ca:	6993      	ldr	r3, [r2, #24]
    13cc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    13d0:	6193      	str	r3, [r2, #24]


    //float BAUD = 65536*(1-(16*(9600/(16000000/1))));

    sercom(2)->USART.CTRLA.reg = SERCOM_USART_CTRLA_SWRST;
    13d2:	2201      	movs	r2, #1
    13d4:	4b0b      	ldr	r3, [pc, #44]	; (1404 <USART2init+0x50>)
    13d6:	601a      	str	r2, [r3, #0]
    while(sercom(2)->USART.CTRLA.reg & SERCOM_USART_CTRLA_SWRST);
    13d8:	4b0a      	ldr	r3, [pc, #40]	; (1404 <USART2init+0x50>)
    13da:	681b      	ldr	r3, [r3, #0]
    13dc:	f013 0f01 	tst.w	r3, #1
    13e0:	d1fa      	bne.n	13d8 <USART2init+0x24>

    //sercom(0)->USART.BAUD.reg = 57986;
    sercom(2)->USART.BAUD.reg = 63018;
    13e2:	4b08      	ldr	r3, [pc, #32]	; (1404 <USART2init+0x50>)
    13e4:	f24f 622a 	movw	r2, #63018	; 0xf62a
    13e8:	819a      	strh	r2, [r3, #12]
    sercom(2)->USART.CTRLA.reg = SERCOM_USART_CTRLA_ENABLE |
    13ea:	4a07      	ldr	r2, [pc, #28]	; (1408 <USART2init+0x54>)
    13ec:	601a      	str	r2, [r3, #0]
                                 SERCOM_USART_CTRLA_MODE(1) |
                                 SERCOM_USART_CTRLA_RXPO(1) |
                                 SERCOM_USART_CTRLA_TXPO(0) |
                                 SERCOM_USART_CTRLA_DORD;

    sercom(2)->USART.CTRLB.reg = SERCOM_USART_CTRLB_RXEN |
    13ee:	f44f 3240 	mov.w	r2, #196608	; 0x30000
    13f2:	605a      	str	r2, [r3, #4]
    13f4:	bd08      	pop	{r3, pc}
    13f6:	bf00      	nop
    13f8:	000004f5 	.word	0x000004f5
    13fc:	000004bd 	.word	0x000004bd
    1400:	40000800 	.word	0x40000800
    1404:	41012000 	.word	0x41012000
    1408:	40100006 	.word	0x40100006

0000140c <USART3init>:
                                 SERCOM_USART_CTRLB_TXEN;
}

void USART3init() {
    140c:	b508      	push	{r3, lr}

    enable_clock_generator(2, GCLK_GENCTRL_SRC_DFLL, 1);
    140e:	2201      	movs	r2, #1
    1410:	2106      	movs	r1, #6
    1412:	2002      	movs	r0, #2
    1414:	4b0e      	ldr	r3, [pc, #56]	; (1450 <USART3init+0x44>)
    1416:	4798      	blx	r3


    connect_gclk_to_peripheral(2, 24);
    1418:	2118      	movs	r1, #24
    141a:	2002      	movs	r0, #2
    141c:	4b0d      	ldr	r3, [pc, #52]	; (1454 <USART3init+0x48>)
    141e:	4798      	blx	r3
    MCLK->APBBMASK.reg |= MCLK_APBBMASK_SERCOM3;
    1420:	4a0d      	ldr	r2, [pc, #52]	; (1458 <USART3init+0x4c>)
    1422:	6993      	ldr	r3, [r2, #24]
    1424:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
    1428:	6193      	str	r3, [r2, #24]


    //float BAUD = 65536*(1-(16*(9600/(16000000/1))));

    sercom(3)->USART.CTRLA.reg = SERCOM_USART_CTRLA_SWRST;
    142a:	2201      	movs	r2, #1
    142c:	4b0b      	ldr	r3, [pc, #44]	; (145c <USART3init+0x50>)
    142e:	601a      	str	r2, [r3, #0]
    while(sercom(3)->USART.CTRLA.reg & SERCOM_USART_CTRLA_SWRST);
    1430:	4b0a      	ldr	r3, [pc, #40]	; (145c <USART3init+0x50>)
    1432:	681b      	ldr	r3, [r3, #0]
    1434:	f013 0f01 	tst.w	r3, #1
    1438:	d1fa      	bne.n	1430 <USART3init+0x24>

    //sercom(0)->USART.BAUD.reg = 57986;
    sercom(3)->USART.BAUD.reg = 63018;
    143a:	4b08      	ldr	r3, [pc, #32]	; (145c <USART3init+0x50>)
    143c:	f24f 622a 	movw	r2, #63018	; 0xf62a
    1440:	819a      	strh	r2, [r3, #12]
    //sercom(3)->USART.BAUD.reg = 65326;

    sercom(3)->USART.CTRLA.reg = SERCOM_USART_CTRLA_ENABLE |
    1442:	4a07      	ldr	r2, [pc, #28]	; (1460 <USART3init+0x54>)
    1444:	601a      	str	r2, [r3, #0]
                                 SERCOM_USART_CTRLA_MODE(1) |
                                 SERCOM_USART_CTRLA_RXPO(1) |
                                 SERCOM_USART_CTRLA_TXPO(0) |
                                 SERCOM_USART_CTRLA_DORD;

    sercom(3)->USART.CTRLB.reg = SERCOM_USART_CTRLB_RXEN |
    1446:	f44f 3240 	mov.w	r2, #196608	; 0x30000
    144a:	605a      	str	r2, [r3, #4]
    144c:	bd08      	pop	{r3, pc}
    144e:	bf00      	nop
    1450:	000004f5 	.word	0x000004f5
    1454:	000004bd 	.word	0x000004bd
    1458:	40000800 	.word	0x40000800
    145c:	41014000 	.word	0x41014000
    1460:	40100006 	.word	0x40100006

00001464 <usartDataOut>:
void vario();
void sendDebugData();


inline static Sercom* sercom(SercomId id) {
    if ( id == 0) {
    1464:	4603      	mov	r3, r0
    1466:	b168      	cbz	r0, 1484 <usartDataOut+0x20>
        return (Sercom*) (0x40003000U);
    } else if ( id == 1) {
    1468:	2801      	cmp	r0, #1
    146a:	d00e      	beq.n	148a <usartDataOut+0x26>
        return (Sercom*) (0x40003400U);
    } else if ( id == 2) {
    146c:	2802      	cmp	r0, #2
    146e:	d00e      	beq.n	148e <usartDataOut+0x2a>
        return (Sercom*) (0x41012000U);
    } else if ( id == 3) {
    1470:	2803      	cmp	r0, #3
    1472:	d00e      	beq.n	1492 <usartDataOut+0x2e>
        return (Sercom*) (0x41014000U);
    } else if ( id == 4) {
    1474:	2804      	cmp	r0, #4
    1476:	d00e      	beq.n	1496 <usartDataOut+0x32>
        return (Sercom*) (0x43000000U);
    } else if ( id == 5) {
    1478:	2805      	cmp	r0, #5
    147a:	d001      	beq.n	1480 <usartDataOut+0x1c>
        return (Sercom*) (0x43000400U);
    } else {
        return 0;
    147c:	2200      	movs	r2, #0
    147e:	e002      	b.n	1486 <usartDataOut+0x22>
        return (Sercom*) (0x43000400U);
    1480:	4a16      	ldr	r2, [pc, #88]	; (14dc <usartDataOut+0x78>)
    1482:	e000      	b.n	1486 <usartDataOut+0x22>
        return (Sercom*) (0x40003000U);
    1484:	4a16      	ldr	r2, [pc, #88]	; (14e0 <usartDataOut+0x7c>)
                                 SERCOM_USART_CTRLB_TXEN;
}


void usartDataOut(SercomId id, u8_t data) {
    sercom(id)->USART.DATA.reg = data;
    1486:	6291      	str	r1, [r2, #40]	; 0x28
    //this needs to be enabled normally!!!!!!!
    while(sercom(id)->USART.INTFLAG.bit.TXC == 0);
    1488:	e00f      	b.n	14aa <usartDataOut+0x46>
        return (Sercom*) (0x40003400U);
    148a:	4a16      	ldr	r2, [pc, #88]	; (14e4 <usartDataOut+0x80>)
    148c:	e7fb      	b.n	1486 <usartDataOut+0x22>
        return (Sercom*) (0x41012000U);
    148e:	4a16      	ldr	r2, [pc, #88]	; (14e8 <usartDataOut+0x84>)
    1490:	e7f9      	b.n	1486 <usartDataOut+0x22>
        return (Sercom*) (0x41014000U);
    1492:	4a16      	ldr	r2, [pc, #88]	; (14ec <usartDataOut+0x88>)
    1494:	e7f7      	b.n	1486 <usartDataOut+0x22>
        return (Sercom*) (0x43000000U);
    1496:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
    149a:	e7f4      	b.n	1486 <usartDataOut+0x22>
        return (Sercom*) (0x43000400U);
    149c:	4a0f      	ldr	r2, [pc, #60]	; (14dc <usartDataOut+0x78>)
    149e:	e000      	b.n	14a2 <usartDataOut+0x3e>
        return (Sercom*) (0x40003000U);
    14a0:	4a0f      	ldr	r2, [pc, #60]	; (14e0 <usartDataOut+0x7c>)
    14a2:	7e12      	ldrb	r2, [r2, #24]
    14a4:	f012 0f02 	tst.w	r2, #2
    14a8:	d116      	bne.n	14d8 <usartDataOut+0x74>
    if ( id == 0) {
    14aa:	2b00      	cmp	r3, #0
    14ac:	d0f8      	beq.n	14a0 <usartDataOut+0x3c>
    } else if ( id == 1) {
    14ae:	2b01      	cmp	r3, #1
    14b0:	d009      	beq.n	14c6 <usartDataOut+0x62>
    } else if ( id == 2) {
    14b2:	2b02      	cmp	r3, #2
    14b4:	d009      	beq.n	14ca <usartDataOut+0x66>
    } else if ( id == 3) {
    14b6:	2b03      	cmp	r3, #3
    14b8:	d009      	beq.n	14ce <usartDataOut+0x6a>
    } else if ( id == 4) {
    14ba:	2b04      	cmp	r3, #4
    14bc:	d009      	beq.n	14d2 <usartDataOut+0x6e>
    } else if ( id == 5) {
    14be:	2b05      	cmp	r3, #5
    14c0:	d0ec      	beq.n	149c <usartDataOut+0x38>
        return 0;
    14c2:	2200      	movs	r2, #0
    14c4:	e7ed      	b.n	14a2 <usartDataOut+0x3e>
        return (Sercom*) (0x40003400U);
    14c6:	4a07      	ldr	r2, [pc, #28]	; (14e4 <usartDataOut+0x80>)
    14c8:	e7eb      	b.n	14a2 <usartDataOut+0x3e>
        return (Sercom*) (0x41012000U);
    14ca:	4a07      	ldr	r2, [pc, #28]	; (14e8 <usartDataOut+0x84>)
    14cc:	e7e9      	b.n	14a2 <usartDataOut+0x3e>
        return (Sercom*) (0x41014000U);
    14ce:	4a07      	ldr	r2, [pc, #28]	; (14ec <usartDataOut+0x88>)
    14d0:	e7e7      	b.n	14a2 <usartDataOut+0x3e>
        return (Sercom*) (0x43000000U);
    14d2:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
    14d6:	e7e4      	b.n	14a2 <usartDataOut+0x3e>
}
    14d8:	4770      	bx	lr
    14da:	bf00      	nop
    14dc:	43000400 	.word	0x43000400
    14e0:	40003000 	.word	0x40003000
    14e4:	40003400 	.word	0x40003400
    14e8:	41012000 	.word	0x41012000
    14ec:	41014000 	.word	0x41014000

000014f0 <usartDataIn>:
    if ( id == 0) {
    14f0:	b168      	cbz	r0, 150e <usartDataIn+0x1e>
    } else if ( id == 1) {
    14f2:	2801      	cmp	r0, #1
    14f4:	d00f      	beq.n	1516 <usartDataIn+0x26>
    } else if ( id == 2) {
    14f6:	2802      	cmp	r0, #2
    14f8:	d00f      	beq.n	151a <usartDataIn+0x2a>
    } else if ( id == 3) {
    14fa:	2803      	cmp	r0, #3
    14fc:	d00f      	beq.n	151e <usartDataIn+0x2e>
    } else if ( id == 4) {
    14fe:	2804      	cmp	r0, #4
    1500:	d00f      	beq.n	1522 <usartDataIn+0x32>
    } else if ( id == 5) {
    1502:	2805      	cmp	r0, #5
    1504:	d001      	beq.n	150a <usartDataIn+0x1a>
        return 0;
    1506:	2300      	movs	r3, #0
    1508:	e002      	b.n	1510 <usartDataIn+0x20>
        return (Sercom*) (0x43000400U);
    150a:	4b07      	ldr	r3, [pc, #28]	; (1528 <usartDataIn+0x38>)
    150c:	e000      	b.n	1510 <usartDataIn+0x20>
        return (Sercom*) (0x40003000U);
    150e:	4b07      	ldr	r3, [pc, #28]	; (152c <usartDataIn+0x3c>)

u8_t usartDataIn(SercomId id) {
    return sercom(id)->USART.DATA.reg;
    1510:	6a98      	ldr	r0, [r3, #40]	; 0x28
    //this needs to be enabled normally!!!!!!!
    while(sercom(id)->USART.INTFLAG.bit.RXC == 0);
    1512:	b2c0      	uxtb	r0, r0
    1514:	4770      	bx	lr
        return (Sercom*) (0x40003400U);
    1516:	4b06      	ldr	r3, [pc, #24]	; (1530 <usartDataIn+0x40>)
    1518:	e7fa      	b.n	1510 <usartDataIn+0x20>
        return (Sercom*) (0x41012000U);
    151a:	4b06      	ldr	r3, [pc, #24]	; (1534 <usartDataIn+0x44>)
    151c:	e7f8      	b.n	1510 <usartDataIn+0x20>
        return (Sercom*) (0x41014000U);
    151e:	4b06      	ldr	r3, [pc, #24]	; (1538 <usartDataIn+0x48>)
    1520:	e7f6      	b.n	1510 <usartDataIn+0x20>
        return (Sercom*) (0x43000000U);
    1522:	f04f 4386 	mov.w	r3, #1124073472	; 0x43000000
    1526:	e7f3      	b.n	1510 <usartDataIn+0x20>
    1528:	43000400 	.word	0x43000400
    152c:	40003000 	.word	0x40003000
    1530:	40003400 	.word	0x40003400
    1534:	41012000 	.word	0x41012000
    1538:	41014000 	.word	0x41014000

0000153c <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
    153c:	4603      	mov	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if (heap == NULL) {
    153e:	4a06      	ldr	r2, [pc, #24]	; (1558 <_sbrk+0x1c>)
    1540:	6812      	ldr	r2, [r2, #0]
    1542:	b122      	cbz	r2, 154e <_sbrk+0x12>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    1544:	4a04      	ldr	r2, [pc, #16]	; (1558 <_sbrk+0x1c>)
    1546:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    1548:	4403      	add	r3, r0
    154a:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
    154c:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    154e:	4903      	ldr	r1, [pc, #12]	; (155c <_sbrk+0x20>)
    1550:	4a01      	ldr	r2, [pc, #4]	; (1558 <_sbrk+0x1c>)
    1552:	6011      	str	r1, [r2, #0]
    1554:	e7f6      	b.n	1544 <_sbrk+0x8>
    1556:	bf00      	nop
    1558:	20000200 	.word	0x20000200
    155c:	2000c2b8 	.word	0x2000c2b8

00001560 <init>:
#include <util.h>

void init() {
    1560:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

    init_clock_source_osculp32k();
    1562:	4bc4      	ldr	r3, [pc, #784]	; (1874 <init+0x314>)
    1564:	4798      	blx	r3
    delayInit();
    1566:	4bc4      	ldr	r3, [pc, #784]	; (1878 <init+0x318>)
    1568:	4798      	blx	r3
    rtcInit();
    156a:	4bc4      	ldr	r3, [pc, #784]	; (187c <init+0x31c>)
    156c:	4798      	blx	r3
    TC2Init();
    156e:	4bc4      	ldr	r3, [pc, #784]	; (1880 <init+0x320>)
    1570:	4798      	blx	r3
    TC0Init();
    1572:	4bc4      	ldr	r3, [pc, #784]	; (1884 <init+0x324>)
    1574:	4798      	blx	r3
    TC1Init();
    1576:	4bc4      	ldr	r3, [pc, #784]	; (1888 <init+0x328>)
    1578:	4798      	blx	r3

    SPI0init(0);
    157a:	2000      	movs	r0, #0
    157c:	4bc3      	ldr	r3, [pc, #780]	; (188c <init+0x32c>)
    157e:	4798      	blx	r3
    SPI5init(5);
    1580:	2005      	movs	r0, #5
    1582:	4bc3      	ldr	r3, [pc, #780]	; (1890 <init+0x330>)
    1584:	4798      	blx	r3

    USART3init();
    1586:	4bc3      	ldr	r3, [pc, #780]	; (1894 <init+0x334>)
    1588:	4798      	blx	r3
    USART2init();
    158a:	4bc3      	ldr	r3, [pc, #780]	; (1898 <init+0x338>)
    158c:	4798      	blx	r3
    adcInit();
    158e:	4bc3      	ldr	r3, [pc, #780]	; (189c <init+0x33c>)
    1590:	4798      	blx	r3
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    1592:	4bc3      	ldr	r3, [pc, #780]	; (18a0 <init+0x340>)
    1594:	f893 20d6 	ldrb.w	r2, [r3, #214]	; 0xd6
    1598:	f36f 0200 	bfc	r2, #0, #1
    159c:	f883 20d6 	strb.w	r2, [r3, #214]	; 0xd6
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    15a0:	f44f 0680 	mov.w	r6, #4194304	; 0x400000
    15a4:	f8c3 6088 	str.w	r6, [r3, #136]	; 0x88
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    15a8:	f893 20d7 	ldrb.w	r2, [r3, #215]	; 0xd7
    15ac:	f36f 0200 	bfc	r2, #0, #1
    15b0:	f883 20d7 	strb.w	r2, [r3, #215]	; 0xd7
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    15b4:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
    15b8:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
    15bc:	f8c3 4094 	str.w	r4, [r3, #148]	; 0x94
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    15c0:	f893 20cc 	ldrb.w	r2, [r3, #204]	; 0xcc
    15c4:	f36f 0200 	bfc	r2, #0, #1
    15c8:	f883 20cc 	strb.w	r2, [r3, #204]	; 0xcc
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    15cc:	f44f 5080 	mov.w	r0, #4096	; 0x1000
    15d0:	f8c3 0088 	str.w	r0, [r3, #136]	; 0x88
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    15d4:	f893 2046 	ldrb.w	r2, [r3, #70]	; 0x46
    15d8:	f36f 0200 	bfc	r2, #0, #1
    15dc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
    15e0:	f893 2046 	ldrb.w	r2, [r3, #70]	; 0x46
    15e4:	f042 0202 	orr.w	r2, r2, #2
    15e8:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
    15ec:	2240      	movs	r2, #64	; 0x40
    15ee:	605a      	str	r2, [r3, #4]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
    15f0:	f893 2033 	ldrb.w	r2, [r3, #51]	; 0x33
    15f4:	f04f 0e01 	mov.w	lr, #1
    15f8:	f36e 0203 	bfi	r2, lr, #0, #4
    15fc:	f883 2033 	strb.w	r2, [r3, #51]	; 0x33
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
    1600:	f893 2046 	ldrb.w	r2, [r3, #70]	; 0x46
    1604:	ea42 020e 	orr.w	r2, r2, lr
    1608:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    160c:	f893 20d0 	ldrb.w	r2, [r3, #208]	; 0xd0
    1610:	f36f 0200 	bfc	r2, #0, #1
    1614:	f883 20d0 	strb.w	r2, [r3, #208]	; 0xd0
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    1618:	f44f 3280 	mov.w	r2, #65536	; 0x10000
    161c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    1620:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
    1624:	f36f 0200 	bfc	r2, #0, #1
    1628:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    162c:	f44f 7280 	mov.w	r2, #256	; 0x100
    1630:	609a      	str	r2, [r3, #8]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
    1632:	f893 1034 	ldrb.w	r1, [r3, #52]	; 0x34
    1636:	2202      	movs	r2, #2
    1638:	f362 0103 	bfi	r1, r2, #0, #4
    163c:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
    1640:	f893 1048 	ldrb.w	r1, [r3, #72]	; 0x48
    1644:	ea41 010e 	orr.w	r1, r1, lr
    1648:	f883 1048 	strb.w	r1, [r3, #72]	; 0x48
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    164c:	f893 1049 	ldrb.w	r1, [r3, #73]	; 0x49
    1650:	f36f 0100 	bfc	r1, #0, #1
    1654:	f883 1049 	strb.w	r1, [r3, #73]	; 0x49
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    1658:	f44f 7100 	mov.w	r1, #512	; 0x200
    165c:	6099      	str	r1, [r3, #8]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
    165e:	f893 1034 	ldrb.w	r1, [r3, #52]	; 0x34
    1662:	f362 1107 	bfi	r1, r2, #4, #4
    1666:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
    166a:	f893 1049 	ldrb.w	r1, [r3, #73]	; 0x49
    166e:	ea41 010e 	orr.w	r1, r1, lr
    1672:	f883 1049 	strb.w	r1, [r3, #73]	; 0x49
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    1676:	f893 104b 	ldrb.w	r1, [r3, #75]	; 0x4b
    167a:	f36f 0100 	bfc	r1, #0, #1
    167e:	f883 104b 	strb.w	r1, [r3, #75]	; 0x4b
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    1682:	f44f 6100 	mov.w	r1, #2048	; 0x800
    1686:	6099      	str	r1, [r3, #8]
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
    1688:	6199      	str	r1, [r3, #24]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    168a:	f893 1047 	ldrb.w	r1, [r3, #71]	; 0x47
    168e:	f36f 0100 	bfc	r1, #0, #1
    1692:	f883 1047 	strb.w	r1, [r3, #71]	; 0x47
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    1696:	2180      	movs	r1, #128	; 0x80
    1698:	6099      	str	r1, [r3, #8]
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
    169a:	6199      	str	r1, [r3, #24]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    169c:	f893 104a 	ldrb.w	r1, [r3, #74]	; 0x4a
    16a0:	f36f 0100 	bfc	r1, #0, #1
    16a4:	f883 104a 	strb.w	r1, [r3, #74]	; 0x4a
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
    16a8:	f893 104a 	ldrb.w	r1, [r3, #74]	; 0x4a
    16ac:	4311      	orrs	r1, r2
    16ae:	f883 104a 	strb.w	r1, [r3, #74]	; 0x4a
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
    16b2:	f44f 6180 	mov.w	r1, #1024	; 0x400
    16b6:	6059      	str	r1, [r3, #4]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
    16b8:	f893 1035 	ldrb.w	r1, [r3, #53]	; 0x35
    16bc:	f362 0103 	bfi	r1, r2, #0, #4
    16c0:	f883 1035 	strb.w	r1, [r3, #53]	; 0x35
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
    16c4:	f893 104a 	ldrb.w	r1, [r3, #74]	; 0x4a
    16c8:	ea41 010e 	orr.w	r1, r1, lr
    16cc:	f883 104a 	strb.w	r1, [r3, #74]	; 0x4a
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    16d0:	f893 10c2 	ldrb.w	r1, [r3, #194]	; 0xc2
    16d4:	f36f 0100 	bfc	r1, #0, #1
    16d8:	f883 10c2 	strb.w	r1, [r3, #194]	; 0xc2
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    16dc:	2104      	movs	r1, #4
    16de:	f8c3 1088 	str.w	r1, [r3, #136]	; 0x88
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
    16e2:	f893 10b1 	ldrb.w	r1, [r3, #177]	; 0xb1
    16e6:	2703      	movs	r7, #3
    16e8:	f367 0103 	bfi	r1, r7, #0, #4
    16ec:	f883 10b1 	strb.w	r1, [r3, #177]	; 0xb1
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
    16f0:	f893 10c2 	ldrb.w	r1, [r3, #194]	; 0xc2
    16f4:	ea41 010e 	orr.w	r1, r1, lr
    16f8:	f883 10c2 	strb.w	r1, [r3, #194]	; 0xc2
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    16fc:	f893 10c3 	ldrb.w	r1, [r3, #195]	; 0xc3
    1700:	f36f 0100 	bfc	r1, #0, #1
    1704:	f883 10c3 	strb.w	r1, [r3, #195]	; 0xc3
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    1708:	2508      	movs	r5, #8
    170a:	f8c3 5088 	str.w	r5, [r3, #136]	; 0x88
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
    170e:	f893 10b1 	ldrb.w	r1, [r3, #177]	; 0xb1
    1712:	f367 1107 	bfi	r1, r7, #4, #4
    1716:	f883 10b1 	strb.w	r1, [r3, #177]	; 0xb1
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
    171a:	f893 10c3 	ldrb.w	r1, [r3, #195]	; 0xc3
    171e:	ea41 010e 	orr.w	r1, r1, lr
    1722:	f883 10c3 	strb.w	r1, [r3, #195]	; 0xc3
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    1726:	f893 10c0 	ldrb.w	r1, [r3, #192]	; 0xc0
    172a:	f36f 0100 	bfc	r1, #0, #1
    172e:	f883 10c0 	strb.w	r1, [r3, #192]	; 0xc0
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    1732:	f8c3 e088 	str.w	lr, [r3, #136]	; 0x88
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
    1736:	f8c3 e098 	str.w	lr, [r3, #152]	; 0x98
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    173a:	f893 10c1 	ldrb.w	r1, [r3, #193]	; 0xc1
    173e:	f36f 0100 	bfc	r1, #0, #1
    1742:	f883 10c1 	strb.w	r1, [r3, #193]	; 0xc1
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
    1746:	f893 10c1 	ldrb.w	r1, [r3, #193]	; 0xc1
    174a:	4311      	orrs	r1, r2
    174c:	f883 10c1 	strb.w	r1, [r3, #193]	; 0xc1
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
    1750:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
    1754:	f893 10b0 	ldrb.w	r1, [r3, #176]	; 0xb0
    1758:	f367 1107 	bfi	r1, r7, #4, #4
    175c:	f883 10b0 	strb.w	r1, [r3, #176]	; 0xb0
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
    1760:	f893 10c1 	ldrb.w	r1, [r3, #193]	; 0xc1
    1764:	ea41 010e 	orr.w	r1, r1, lr
    1768:	f883 10c1 	strb.w	r1, [r3, #193]	; 0xc1
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    176c:	f893 104c 	ldrb.w	r1, [r3, #76]	; 0x4c
    1770:	f36f 0100 	bfc	r1, #0, #1
    1774:	f883 104c 	strb.w	r1, [r3, #76]	; 0x4c
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    1778:	6098      	str	r0, [r3, #8]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
    177a:	f893 1036 	ldrb.w	r1, [r3, #54]	; 0x36
    177e:	f362 0103 	bfi	r1, r2, #0, #4
    1782:	f883 1036 	strb.w	r1, [r3, #54]	; 0x36
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
    1786:	f893 104c 	ldrb.w	r1, [r3, #76]	; 0x4c
    178a:	ea41 010e 	orr.w	r1, r1, lr
    178e:	f883 104c 	strb.w	r1, [r3, #76]	; 0x4c
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    1792:	f893 104d 	ldrb.w	r1, [r3, #77]	; 0x4d
    1796:	f36f 0100 	bfc	r1, #0, #1
    179a:	f883 104d 	strb.w	r1, [r3, #77]	; 0x4d
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
    179e:	f893 104d 	ldrb.w	r1, [r3, #77]	; 0x4d
    17a2:	4311      	orrs	r1, r2
    17a4:	f883 104d 	strb.w	r1, [r3, #77]	; 0x4d
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
    17a8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
    17ac:	6059      	str	r1, [r3, #4]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
    17ae:	f893 1036 	ldrb.w	r1, [r3, #54]	; 0x36
    17b2:	f362 1107 	bfi	r1, r2, #4, #4
    17b6:	f883 1036 	strb.w	r1, [r3, #54]	; 0x36
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
    17ba:	f893 104d 	ldrb.w	r1, [r3, #77]	; 0x4d
    17be:	ea41 010e 	orr.w	r1, r1, lr
    17c2:	f883 104d 	strb.w	r1, [r3, #77]	; 0x4d
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    17c6:	f893 1056 	ldrb.w	r1, [r3, #86]	; 0x56
    17ca:	f36f 0100 	bfc	r1, #0, #1
    17ce:	f883 1056 	strb.w	r1, [r3, #86]	; 0x56
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    17d2:	609e      	str	r6, [r3, #8]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
    17d4:	f893 103b 	ldrb.w	r1, [r3, #59]	; 0x3b
    17d8:	f362 0103 	bfi	r1, r2, #0, #4
    17dc:	f883 103b 	strb.w	r1, [r3, #59]	; 0x3b
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
    17e0:	f893 1056 	ldrb.w	r1, [r3, #86]	; 0x56
    17e4:	ea41 010e 	orr.w	r1, r1, lr
    17e8:	f883 1056 	strb.w	r1, [r3, #86]	; 0x56
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    17ec:	f893 1057 	ldrb.w	r1, [r3, #87]	; 0x57
    17f0:	f36f 0100 	bfc	r1, #0, #1
    17f4:	f883 1057 	strb.w	r1, [r3, #87]	; 0x57
    PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
    17f8:	f893 1057 	ldrb.w	r1, [r3, #87]	; 0x57
    17fc:	4311      	orrs	r1, r2
    17fe:	f883 1057 	strb.w	r1, [r3, #87]	; 0x57
    PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
    1802:	605c      	str	r4, [r3, #4]
        PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
    1804:	f893 103b 	ldrb.w	r1, [r3, #59]	; 0x3b
    1808:	f362 1107 	bfi	r1, r2, #4, #4
    180c:	f883 103b 	strb.w	r1, [r3, #59]	; 0x3b
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
    1810:	f893 2057 	ldrb.w	r2, [r3, #87]	; 0x57
    1814:	ea42 020e 	orr.w	r2, r2, lr
    1818:	f883 2057 	strb.w	r2, [r3, #87]	; 0x57
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    181c:	f893 204e 	ldrb.w	r2, [r3, #78]	; 0x4e
    1820:	f36f 0200 	bfc	r2, #0, #1
    1824:	f883 204e 	strb.w	r2, [r3, #78]	; 0x4e
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    1828:	f44f 4180 	mov.w	r1, #16384	; 0x4000
    182c:	6099      	str	r1, [r3, #8]
    PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
    182e:	f893 204f 	ldrb.w	r2, [r3, #79]	; 0x4f
    1832:	f36f 0200 	bfc	r2, #0, #1
    1836:	f883 204f 	strb.w	r2, [r3, #79]	; 0x4f
    PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
    183a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
    183e:	609a      	str	r2, [r3, #8]
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
    1840:	619a      	str	r2, [r3, #24]
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
    1842:	6159      	str	r1, [r3, #20]
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
    1844:	f8c3 0098 	str.w	r0, [r3, #152]	; 0x98


    enablePerif();
    //disablePerif();

    delay_ms(100);
    1848:	2064      	movs	r0, #100	; 0x64
    184a:	4b16      	ldr	r3, [pc, #88]	; (18a4 <init+0x344>)
    184c:	4798      	blx	r3
    sample.battVoltage = 3.7;
    184e:	4a16      	ldr	r2, [pc, #88]	; (18a8 <init+0x348>)
    1850:	4b16      	ldr	r3, [pc, #88]	; (18ac <init+0x34c>)
    1852:	67da      	str	r2, [r3, #124]	; 0x7c

    initMS5803Barometer();
    1854:	4b16      	ldr	r3, [pc, #88]	; (18b0 <init+0x350>)
    1856:	4798      	blx	r3

    adxlWriteByte(ADXL345_REG_POWER_CTL, 0x00);
    1858:	2100      	movs	r1, #0
    185a:	202d      	movs	r0, #45	; 0x2d
    185c:	4c15      	ldr	r4, [pc, #84]	; (18b4 <init+0x354>)
    185e:	47a0      	blx	r4
    adxlWriteByte(ADXL345_REG_DATA_FORMAT, 0x00);
    1860:	2100      	movs	r1, #0
    1862:	2031      	movs	r0, #49	; 0x31
    1864:	47a0      	blx	r4
    adxlWriteByte(ADXL345_REG_FIFO_CTL, 0x00);
    1866:	2100      	movs	r1, #0
    1868:	2038      	movs	r0, #56	; 0x38
    186a:	47a0      	blx	r4
    adxlWriteByte(ADXL345_REG_POWER_CTL, 0x08);
    186c:	4629      	mov	r1, r5
    186e:	202d      	movs	r0, #45	; 0x2d
    1870:	47a0      	blx	r4
    1872:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1874:	000004dd 	.word	0x000004dd
    1878:	000006b5 	.word	0x000006b5
    187c:	0000072d 	.word	0x0000072d
    1880:	000005d9 	.word	0x000005d9
    1884:	00000505 	.word	0x00000505
    1888:	0000057d 	.word	0x0000057d
    188c:	00000f05 	.word	0x00000f05
    1890:	000010a1 	.word	0x000010a1
    1894:	0000140d 	.word	0x0000140d
    1898:	000013b5 	.word	0x000013b5
    189c:	0000035d 	.word	0x0000035d
    18a0:	41008000 	.word	0x41008000
    18a4:	000006cd 	.word	0x000006cd
    18a8:	406ccccd 	.word	0x406ccccd
    18ac:	20000230 	.word	0x20000230
    18b0:	00000afd 	.word	0x00000afd
    18b4:	000002d1 	.word	0x000002d1

000018b8 <POST>:

}

void POST() {
    18b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    18ba:	b083      	sub	sp, #12

    bool postFailed = false;

    //Baro post first
    u8_t crc = MS5803_CRC4();
    18bc:	4b2b      	ldr	r3, [pc, #172]	; (196c <POST+0xb4>)
    18be:	4798      	blx	r3
    if (crc != coefficients_[7]) {
    18c0:	b280      	uxth	r0, r0
    18c2:	4b2b      	ldr	r3, [pc, #172]	; (1970 <POST+0xb8>)
    18c4:	89db      	ldrh	r3, [r3, #14]
    18c6:	4298      	cmp	r0, r3
    18c8:	d042      	beq.n	1950 <POST+0x98>
        postFailed = true;
    18ca:	2401      	movs	r4, #1
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
    18cc:	4e29      	ldr	r6, [pc, #164]	; (1974 <POST+0xbc>)
    18ce:	2701      	movs	r7, #1
    18d0:	f8c6 7094 	str.w	r7, [r6, #148]	; 0x94
    }

    //Memory Post
    pinLow(cs_mem);
    spiDataOut(SPI5,0x9f); // read id and mfg code
    18d4:	219f      	movs	r1, #159	; 0x9f
    18d6:	2005      	movs	r0, #5
    18d8:	4b27      	ldr	r3, [pc, #156]	; (1978 <POST+0xc0>)
    18da:	4798      	blx	r3
    volatile u8_t mfgID = spiDataIn(SPI5);
    18dc:	2005      	movs	r0, #5
    18de:	4d27      	ldr	r5, [pc, #156]	; (197c <POST+0xc4>)
    18e0:	47a8      	blx	r5
    18e2:	f88d 0007 	strb.w	r0, [sp, #7]
    volatile u8_t deviceID1 = spiDataIn(SPI5);
    18e6:	2005      	movs	r0, #5
    18e8:	47a8      	blx	r5
    18ea:	f88d 0006 	strb.w	r0, [sp, #6]
    volatile u8_t deviceID2 = spiDataIn(SPI5);
    18ee:	2005      	movs	r0, #5
    18f0:	47a8      	blx	r5
    18f2:	f88d 0005 	strb.w	r0, [sp, #5]
    PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
    18f6:	f8c6 7098 	str.w	r7, [r6, #152]	; 0x98
    pinHigh(cs_mem);

    if ( (mfgID != 0x1f) & (deviceID1 != 0x86) & (deviceID2 != 0x01)) {
    18fa:	f89d 3007 	ldrb.w	r3, [sp, #7]
    18fe:	b2db      	uxtb	r3, r3
    1900:	f89d 2006 	ldrb.w	r2, [sp, #6]
    1904:	b2d2      	uxtb	r2, r2
    1906:	2b1f      	cmp	r3, #31
    1908:	bf18      	it	ne
    190a:	2a86      	cmpne	r2, #134	; 0x86
    190c:	bf14      	ite	ne
    190e:	2301      	movne	r3, #1
    1910:	2300      	moveq	r3, #0
    1912:	f89d 2005 	ldrb.w	r2, [sp, #5]
    1916:	b2d2      	uxtb	r2, r2
    1918:	42ba      	cmp	r2, r7
    191a:	bf0c      	ite	eq
    191c:	2300      	moveq	r3, #0
    191e:	f003 0301 	andne.w	r3, r3, #1
    1922:	b903      	cbnz	r3, 1926 <POST+0x6e>
    1924:	4623      	mov	r3, r4
        postFailed = true;
    }

    if (!postFailed) {
    1926:	b1ab      	cbz	r3, 1954 <POST+0x9c>
        delay_ms(100);
        TC2_disable_interupt();


    } else {
        TC2_enable_interupt();
    1928:	4e15      	ldr	r6, [pc, #84]	; (1980 <POST+0xc8>)
    192a:	47b0      	blx	r6
        delay_ms(1000);
    192c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    1930:	4c14      	ldr	r4, [pc, #80]	; (1984 <POST+0xcc>)
    1932:	47a0      	blx	r4
        TC2_disable_interupt();
    1934:	4d14      	ldr	r5, [pc, #80]	; (1988 <POST+0xd0>)
    1936:	47a8      	blx	r5
        delay_ms(1000);
    1938:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    193c:	47a0      	blx	r4
        TC2_enable_interupt();
    193e:	47b0      	blx	r6
        delay_ms(1000);
    1940:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    1944:	47a0      	blx	r4
        TC2_disable_interupt();
    1946:	47a8      	blx	r5
    }


    //start sampling
    TC0_enable_interupt(); //sample
    1948:	4b10      	ldr	r3, [pc, #64]	; (198c <POST+0xd4>)
    194a:	4798      	blx	r3


    //TC2_enable_interupt();//buzzer

}
    194c:	b003      	add	sp, #12
    194e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bool postFailed = false;
    1950:	2400      	movs	r4, #0
    1952:	e7bb      	b.n	18cc <POST+0x14>
        TC2_setDur(50);
    1954:	2032      	movs	r0, #50	; 0x32
    1956:	4b0e      	ldr	r3, [pc, #56]	; (1990 <POST+0xd8>)
    1958:	4798      	blx	r3
        TC2_enable_interupt();
    195a:	4b09      	ldr	r3, [pc, #36]	; (1980 <POST+0xc8>)
    195c:	4798      	blx	r3
        delay_ms(100);
    195e:	2064      	movs	r0, #100	; 0x64
    1960:	4b08      	ldr	r3, [pc, #32]	; (1984 <POST+0xcc>)
    1962:	4798      	blx	r3
        TC2_disable_interupt();
    1964:	4b08      	ldr	r3, [pc, #32]	; (1988 <POST+0xd0>)
    1966:	4798      	blx	r3
    1968:	e7ee      	b.n	1948 <POST+0x90>
    196a:	bf00      	nop
    196c:	00000b2d 	.word	0x00000b2d
    1970:	2000021c 	.word	0x2000021c
    1974:	41008000 	.word	0x41008000
    1978:	00001231 	.word	0x00001231
    197c:	000012f1 	.word	0x000012f1
    1980:	00000651 	.word	0x00000651
    1984:	000006cd 	.word	0x000006cd
    1988:	0000065d 	.word	0x0000065d
    198c:	00000571 	.word	0x00000571
    1990:	00000645 	.word	0x00000645

00001994 <warmSensors>:

void warmSensors(uint32_t cycles) {
    1994:	b570      	push	{r4, r5, r6, lr}
    1996:	4605      	mov	r5, r0

    getSample();
    1998:	4b14      	ldr	r3, [pc, #80]	; (19ec <warmSensors+0x58>)
    199a:	4798      	blx	r3
    vario();
    199c:	4b14      	ldr	r3, [pc, #80]	; (19f0 <warmSensors+0x5c>)
    199e:	4798      	blx	r3

    sample.altitudeMeters = sample.sampleMeters;
    19a0:	4c14      	ldr	r4, [pc, #80]	; (19f4 <warmSensors+0x60>)
    19a2:	6b26      	ldr	r6, [r4, #48]	; 0x30
    19a4:	4630      	mov	r0, r6
    19a6:	4b14      	ldr	r3, [pc, #80]	; (19f8 <warmSensors+0x64>)
    19a8:	4798      	blx	r3
    19aa:	e9c4 0108 	strd	r0, r1, [r4, #32]
    sample.lastSampleMeters = sample.sampleMeters;
    19ae:	6366      	str	r6, [r4, #52]	; 0x34
    sample.altitudeStdDev = 0;
    19b0:	2300      	movs	r3, #0
    19b2:	62e3      	str	r3, [r4, #44]	; 0x2c
    sample.altitudeVar = 0;
    19b4:	62a3      	str	r3, [r4, #40]	; 0x28
    sample.battVoltage = 3.8;
    19b6:	4b11      	ldr	r3, [pc, #68]	; (19fc <warmSensors+0x68>)
    19b8:	67e3      	str	r3, [r4, #124]	; 0x7c
	sample.AVGdXdT = 0;
    19ba:	2200      	movs	r2, #0
    19bc:	2300      	movs	r3, #0
    19be:	e9c4 2316 	strd	r2, r3, [r4, #88]	; 0x58


    for (uint32_t i = 0 ; i < cycles ;) {
    19c2:	2400      	movs	r4, #0
    19c4:	42ac      	cmp	r4, r5
    19c6:	d20c      	bcs.n	19e2 <warmSensors+0x4e>

        if (sample.takeSample) {
    19c8:	4b0a      	ldr	r3, [pc, #40]	; (19f4 <warmSensors+0x60>)
    19ca:	7a1b      	ldrb	r3, [r3, #8]
    19cc:	2b00      	cmp	r3, #0
    19ce:	d0f9      	beq.n	19c4 <warmSensors+0x30>
            sample.takeSample = false;
    19d0:	2200      	movs	r2, #0
    19d2:	4b08      	ldr	r3, [pc, #32]	; (19f4 <warmSensors+0x60>)
    19d4:	721a      	strb	r2, [r3, #8]
            getSample();
    19d6:	4b05      	ldr	r3, [pc, #20]	; (19ec <warmSensors+0x58>)
    19d8:	4798      	blx	r3
            vario();
    19da:	4b05      	ldr	r3, [pc, #20]	; (19f0 <warmSensors+0x5c>)
    19dc:	4798      	blx	r3
            i++;
    19de:	3401      	adds	r4, #1
    19e0:	e7f0      	b.n	19c4 <warmSensors+0x30>
        }
    }

    sample.sampleCount = 0;
    19e2:	2200      	movs	r2, #0
    19e4:	4b03      	ldr	r3, [pc, #12]	; (19f4 <warmSensors+0x60>)
    19e6:	60da      	str	r2, [r3, #12]
    19e8:	bd70      	pop	{r4, r5, r6, pc}
    19ea:	bf00      	nop
    19ec:	00000e61 	.word	0x00000e61
    19f0:	00001a79 	.word	0x00001a79
    19f4:	20000230 	.word	0x20000230
    19f8:	0000313d 	.word	0x0000313d
    19fc:	40733333 	.word	0x40733333

00001a00 <EnterSleepModeOFF>:

}

void EnterSleepModeOFF() {
    1a00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

    //beee
    TC2_setDur(90);
    1a02:	205a      	movs	r0, #90	; 0x5a
    1a04:	4f15      	ldr	r7, [pc, #84]	; (1a5c <EnterSleepModeOFF+0x5c>)
    1a06:	47b8      	blx	r7
    TC2_enable_interupt();
    1a08:	4e15      	ldr	r6, [pc, #84]	; (1a60 <EnterSleepModeOFF+0x60>)
    1a0a:	47b0      	blx	r6
    delay_ms(200);
    1a0c:	20c8      	movs	r0, #200	; 0xc8
    1a0e:	4c15      	ldr	r4, [pc, #84]	; (1a64 <EnterSleepModeOFF+0x64>)
    1a10:	47a0      	blx	r4
    TC2_disable_interupt();
    1a12:	4d15      	ldr	r5, [pc, #84]	; (1a68 <EnterSleepModeOFF+0x68>)
    1a14:	47a8      	blx	r5
    delay_ms(50);
    1a16:	2032      	movs	r0, #50	; 0x32
    1a18:	47a0      	blx	r4

    //duu
    TC2_setDur(130);
    1a1a:	2082      	movs	r0, #130	; 0x82
    1a1c:	47b8      	blx	r7
    TC2_enable_interupt();
    1a1e:	47b0      	blx	r6
    delay_ms(300);
    1a20:	f44f 7096 	mov.w	r0, #300	; 0x12c
    1a24:	47a0      	blx	r4
    TC2_disable_interupt();
    1a26:	47a8      	blx	r5
    delay_ms(50);
    1a28:	2032      	movs	r0, #50	; 0x32
    1a2a:	47a0      	blx	r4

    //boop;
    TC2_setDur(230);
    1a2c:	20e6      	movs	r0, #230	; 0xe6
    1a2e:	47b8      	blx	r7
    TC2_enable_interupt();
    1a30:	47b0      	blx	r6
    delay_ms(350);
    1a32:	f44f 70af 	mov.w	r0, #350	; 0x15e
    1a36:	47a0      	blx	r4
    TC2_disable_interupt();
    1a38:	47a8      	blx	r5
    PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
    1a3a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    1a3e:	4b0b      	ldr	r3, [pc, #44]	; (1a6c <EnterSleepModeOFF+0x6c>)
    1a40:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94


    disablePerif();
    delay_ms(100);
    1a44:	2064      	movs	r0, #100	; 0x64
    1a46:	47a0      	blx	r4
    PM->SLEEPCFG.reg = PM_SLEEPCFG_SLEEPMODE_OFF;
    1a48:	2207      	movs	r2, #7
    1a4a:	4b09      	ldr	r3, [pc, #36]	; (1a70 <EnterSleepModeOFF+0x70>)
    1a4c:	705a      	strb	r2, [r3, #1]
    while(PM->SLEEPCFG.reg != PM_SLEEPCFG_SLEEPMODE_OFF);
    1a4e:	4b08      	ldr	r3, [pc, #32]	; (1a70 <EnterSleepModeOFF+0x70>)
    1a50:	785b      	ldrb	r3, [r3, #1]
    1a52:	b2db      	uxtb	r3, r3
    1a54:	2b07      	cmp	r3, #7
    1a56:	d1fa      	bne.n	1a4e <EnterSleepModeOFF+0x4e>
    __WFI();
    1a58:	bf30      	wfi
    1a5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1a5c:	00000645 	.word	0x00000645
    1a60:	00000651 	.word	0x00000651
    1a64:	000006cd 	.word	0x000006cd
    1a68:	0000065d 	.word	0x0000065d
    1a6c:	41008000 	.word	0x41008000
    1a70:	40000400 	.word	0x40000400
    1a74:	00000000 	.word	0x00000000

00001a78 <vario>:


float altSmoothing = 0.0150;
float deltaSmoothing = 0.0050;

void vario() {
    1a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1a7c:	b08b      	sub	sp, #44	; 0x2c


    sample.lastSampleTime = sample.sampleTime;
    1a7e:	4c4c      	ldr	r4, [pc, #304]	; (1bb0 <vario+0x138>)
    1a80:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    1a82:	63a3      	str	r3, [r4, #56]	; 0x38
    sample.sampleTime = millis();
    1a84:	4b4b      	ldr	r3, [pc, #300]	; (1bb4 <vario+0x13c>)
    1a86:	4798      	blx	r3
    1a88:	63e0      	str	r0, [r4, #60]	; 0x3c


    sample.lastSampleMeters = sample.sampleMeters;
    1a8a:	6b23      	ldr	r3, [r4, #48]	; 0x30
    1a8c:	6363      	str	r3, [r4, #52]	; 0x34
    sample.sampleMeters = paToFeetNOAA(sample.pressureMbar) * 0.3048;
    1a8e:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
    1a92:	4b49      	ldr	r3, [pc, #292]	; (1bb8 <vario+0x140>)
    1a94:	4798      	blx	r3
    1a96:	f8df a144 	ldr.w	sl, [pc, #324]	; 1bdc <vario+0x164>
    1a9a:	a343      	add	r3, pc, #268	; (adr r3, 1ba8 <vario+0x130>)
    1a9c:	e9d3 2300 	ldrd	r2, r3, [r3]
    1aa0:	47d0      	blx	sl
    1aa2:	f8df 913c 	ldr.w	r9, [pc, #316]	; 1be0 <vario+0x168>
    1aa6:	47c8      	blx	r9
    1aa8:	6320      	str	r0, [r4, #48]	; 0x30

    sample.dX = sample.altitudeMeters -  sample.sampleMeters;
    1aaa:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
    1aae:	4616      	mov	r6, r2
    1ab0:	461f      	mov	r7, r3
    1ab2:	4d42      	ldr	r5, [pc, #264]	; (1bbc <vario+0x144>)
    1ab4:	47a8      	blx	r5
    1ab6:	f8df 812c 	ldr.w	r8, [pc, #300]	; 1be4 <vario+0x16c>
    1aba:	e9cd 0102 	strd	r0, r1, [sp, #8]
    1abe:	4602      	mov	r2, r0
    1ac0:	460b      	mov	r3, r1
    1ac2:	e9cd 6700 	strd	r6, r7, [sp]
    1ac6:	4630      	mov	r0, r6
    1ac8:	4639      	mov	r1, r7
    1aca:	47c0      	blx	r8
    1acc:	4606      	mov	r6, r0
    1ace:	460f      	mov	r7, r1
    1ad0:	e9c4 6712 	strd	r6, r7, [r4, #72]	; 0x48
    sample.dT = sample.sampleTime - sample.lastSampleTime;
    1ad4:	6be0      	ldr	r0, [r4, #60]	; 0x3c
    1ad6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    1ad8:	1ac0      	subs	r0, r0, r3
    1ada:	4b39      	ldr	r3, [pc, #228]	; (1bc0 <vario+0x148>)
    1adc:	4798      	blx	r3
    sample.dT = sample.dT/1000;
    1ade:	4939      	ldr	r1, [pc, #228]	; (1bc4 <vario+0x14c>)
    1ae0:	4b39      	ldr	r3, [pc, #228]	; (1bc8 <vario+0x150>)
    1ae2:	4798      	blx	r3
    1ae4:	6420      	str	r0, [r4, #64]	; 0x40

    sample.dxdt = sample.dX/sample.dT;
    1ae6:	47a8      	blx	r5
    1ae8:	4602      	mov	r2, r0
    1aea:	460b      	mov	r3, r1
    1aec:	4630      	mov	r0, r6
    1aee:	4639      	mov	r1, r7
    1af0:	4e36      	ldr	r6, [pc, #216]	; (1bcc <vario+0x154>)
    1af2:	47b0      	blx	r6
    1af4:	460a      	mov	r2, r1
    1af6:	4601      	mov	r1, r0
    1af8:	e9cd 1206 	strd	r1, r2, [sp, #24]
    1afc:	e9c4 1214 	strd	r1, r2, [r4, #80]	; 0x50

    double altSigma = sample.sampleMeters - sample.altitudeMeters;
    1b00:	e9dd 2300 	ldrd	r2, r3, [sp]
    1b04:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    1b08:	47c0      	blx	r8
    1b0a:	e9cd 0102 	strd	r0, r1, [sp, #8]
    sample.altitudeMeters = sample.altitudeMeters + altSmoothing*altSigma;
    1b0e:	4f30      	ldr	r7, [pc, #192]	; (1bd0 <vario+0x158>)
    1b10:	683e      	ldr	r6, [r7, #0]
    1b12:	4630      	mov	r0, r6
    1b14:	47a8      	blx	r5
    1b16:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    1b1a:	47d0      	blx	sl
    1b1c:	4602      	mov	r2, r0
    1b1e:	460b      	mov	r3, r1
    1b20:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 1be8 <vario+0x170>
    1b24:	e9cd 2308 	strd	r2, r3, [sp, #32]
    1b28:	e9dd 0100 	ldrd	r0, r1, [sp]
    1b2c:	47d8      	blx	fp
    1b2e:	e9c4 0108 	strd	r0, r1, [r4, #32]

    sample.altitudeVar = (1 - altSmoothing)*(sample.altitudeVar + altSmoothing*altSigma*altSigma);
    1b32:	4631      	mov	r1, r6
    1b34:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
    1b38:	4b26      	ldr	r3, [pc, #152]	; (1bd4 <vario+0x15c>)
    1b3a:	4798      	blx	r3
    1b3c:	47a8      	blx	r5
    1b3e:	e9cd 0100 	strd	r0, r1, [sp]
    1b42:	6aa0      	ldr	r0, [r4, #40]	; 0x28
    1b44:	47a8      	blx	r5
    1b46:	e9cd 0104 	strd	r0, r1, [sp, #16]
    1b4a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    1b4e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    1b52:	47d0      	blx	sl
    1b54:	4602      	mov	r2, r0
    1b56:	460b      	mov	r3, r1
    1b58:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    1b5c:	47d8      	blx	fp
    1b5e:	4602      	mov	r2, r0
    1b60:	460b      	mov	r3, r1
    1b62:	e9dd 0100 	ldrd	r0, r1, [sp]
    1b66:	47d0      	blx	sl
    1b68:	47c8      	blx	r9
    1b6a:	62a0      	str	r0, [r4, #40]	; 0x28
    sample.altitudeStdDev = sqrt(sample.altitudeVar);
    1b6c:	47a8      	blx	r5
    1b6e:	4b1a      	ldr	r3, [pc, #104]	; (1bd8 <vario+0x160>)
    1b70:	4798      	blx	r3
    1b72:	47c8      	blx	r9
    1b74:	62e0      	str	r0, [r4, #44]	; 0x2c

    double deltaSigma = sample.dxdt - sample.AVGdXdT;
    1b76:	e9d4 2316 	ldrd	r2, r3, [r4, #88]	; 0x58
    1b7a:	e9cd 2300 	strd	r2, r3, [sp]
    1b7e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    1b82:	47c0      	blx	r8
    1b84:	4680      	mov	r8, r0
    1b86:	4689      	mov	r9, r1
    sample.AVGdXdT = sample.AVGdXdT + deltaSmoothing*deltaSigma;
    1b88:	6878      	ldr	r0, [r7, #4]
    1b8a:	47a8      	blx	r5
    1b8c:	4642      	mov	r2, r8
    1b8e:	464b      	mov	r3, r9
    1b90:	47d0      	blx	sl
    1b92:	4602      	mov	r2, r0
    1b94:	460b      	mov	r3, r1
    1b96:	e9dd 0100 	ldrd	r0, r1, [sp]
    1b9a:	47d8      	blx	fp
    1b9c:	e9c4 0116 	strd	r0, r1, [r4, #88]	; 0x58


}
    1ba0:	b00b      	add	sp, #44	; 0x2c
    1ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1ba6:	bf00      	nop
    1ba8:	dbf487fd 	.word	0xdbf487fd
    1bac:	3fd381d7 	.word	0x3fd381d7
    1bb0:	20000230 	.word	0x20000230
    1bb4:	000007a1 	.word	0x000007a1
    1bb8:	00000a31 	.word	0x00000a31
    1bbc:	0000313d 	.word	0x0000313d
    1bc0:	000039a1 	.word	0x000039a1
    1bc4:	3a83126f 	.word	0x3a83126f
    1bc8:	00003a51 	.word	0x00003a51
    1bcc:	00003439 	.word	0x00003439
    1bd0:	20000004 	.word	0x20000004
    1bd4:	0000383d 	.word	0x0000383d
    1bd8:	00001f6d 	.word	0x00001f6d
    1bdc:	000031e5 	.word	0x000031e5
    1be0:	00003795 	.word	0x00003795
    1be4:	00002e7d 	.word	0x00002e7d
    1be8:	00002e81 	.word	0x00002e81

00001bec <sendDebugData>:

void sendDebugData() {
    1bec:	b5f0      	push	{r4, r5, r6, r7, lr}
    1bee:	b0af      	sub	sp, #188	; 0xbc

    char debugString[150];

    sprintf(debugString, "%9.4f %9.4f %9.4f %9.4f %9.4f", sample.altitudeMeters, sample.sampleMeters, sample.dX, sample.dxdt, sample.AVGdXdT);
    1bf0:	4b19      	ldr	r3, [pc, #100]	; (1c58 <sendDebugData+0x6c>)
    1bf2:	6b18      	ldr	r0, [r3, #48]	; 0x30
    1bf4:	e9d3 4508 	ldrd	r4, r5, [r3, #32]
    1bf8:	e9d3 6716 	ldrd	r6, r7, [r3, #88]	; 0x58
    1bfc:	e9cd 6706 	strd	r6, r7, [sp, #24]
    1c00:	e9d3 6714 	ldrd	r6, r7, [r3, #80]	; 0x50
    1c04:	e9cd 6704 	strd	r6, r7, [sp, #16]
    1c08:	e9d3 2312 	ldrd	r2, r3, [r3, #72]	; 0x48
    1c0c:	e9cd 2302 	strd	r2, r3, [sp, #8]
    1c10:	4b12      	ldr	r3, [pc, #72]	; (1c5c <sendDebugData+0x70>)
    1c12:	4798      	blx	r3
    1c14:	e9cd 0100 	strd	r0, r1, [sp]
    1c18:	4622      	mov	r2, r4
    1c1a:	462b      	mov	r3, r5
    1c1c:	4910      	ldr	r1, [pc, #64]	; (1c60 <sendDebugData+0x74>)
    1c1e:	a808      	add	r0, sp, #32
    1c20:	4c10      	ldr	r4, [pc, #64]	; (1c64 <sendDebugData+0x78>)
    1c22:	47a0      	blx	r4
    //sprintf(debugString, "%9.4f %9.4f", sample.dxdt, sample.AVGdXdT);



    u8_t len2 = strlen(debugString);
    1c24:	a808      	add	r0, sp, #32
    1c26:	4b10      	ldr	r3, [pc, #64]	; (1c68 <sendDebugData+0x7c>)
    1c28:	4798      	blx	r3
    1c2a:	b2c5      	uxtb	r5, r0
    for (u8_t i = 0 ; i < len2; i++) {
    1c2c:	2400      	movs	r4, #0
    1c2e:	e008      	b.n	1c42 <sendDebugData+0x56>
        usartDataOut(3,debugString[i]);
    1c30:	ab2e      	add	r3, sp, #184	; 0xb8
    1c32:	4423      	add	r3, r4
    1c34:	f813 1c98 	ldrb.w	r1, [r3, #-152]
    1c38:	2003      	movs	r0, #3
    1c3a:	4b0c      	ldr	r3, [pc, #48]	; (1c6c <sendDebugData+0x80>)
    1c3c:	4798      	blx	r3
    for (u8_t i = 0 ; i < len2; i++) {
    1c3e:	3401      	adds	r4, #1
    1c40:	b2e4      	uxtb	r4, r4
    1c42:	42ac      	cmp	r4, r5
    1c44:	d3f4      	bcc.n	1c30 <sendDebugData+0x44>
    }
    usartDataOut(3,0x0d);
    1c46:	210d      	movs	r1, #13
    1c48:	2003      	movs	r0, #3
    1c4a:	4c08      	ldr	r4, [pc, #32]	; (1c6c <sendDebugData+0x80>)
    1c4c:	47a0      	blx	r4
    usartDataOut(3,0x0a);
    1c4e:	210a      	movs	r1, #10
    1c50:	2003      	movs	r0, #3
    1c52:	47a0      	blx	r4
    1c54:	b02f      	add	sp, #188	; 0xbc
    1c56:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1c58:	20000230 	.word	0x20000230
    1c5c:	0000313d 	.word	0x0000313d
    1c60:	00005f00 	.word	0x00005f00
    1c64:	00004615 	.word	0x00004615
    1c68:	0000465d 	.word	0x0000465d
    1c6c:	00001465 	.word	0x00001465

00001c70 <pow>:
    1c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1c74:	f8df 92f0 	ldr.w	r9, [pc, #752]	; 1f68 <pow+0x2f8>
    1c78:	b08d      	sub	sp, #52	; 0x34
    1c7a:	4606      	mov	r6, r0
    1c7c:	460f      	mov	r7, r1
    1c7e:	4614      	mov	r4, r2
    1c80:	461d      	mov	r5, r3
    1c82:	f000 f9d1 	bl	2028 <__ieee754_pow>
    1c86:	f999 8000 	ldrsb.w	r8, [r9]
    1c8a:	f1b8 3fff 	cmp.w	r8, #4294967295
    1c8e:	e9cd 0100 	strd	r0, r1, [sp]
    1c92:	d036      	beq.n	1d02 <pow+0x92>
    1c94:	4622      	mov	r2, r4
    1c96:	462b      	mov	r3, r5
    1c98:	4620      	mov	r0, r4
    1c9a:	4629      	mov	r1, r5
    1c9c:	f001 fd3c 	bl	3718 <__aeabi_dcmpun>
    1ca0:	4683      	mov	fp, r0
    1ca2:	bb70      	cbnz	r0, 1d02 <pow+0x92>
    1ca4:	4632      	mov	r2, r6
    1ca6:	463b      	mov	r3, r7
    1ca8:	4630      	mov	r0, r6
    1caa:	4639      	mov	r1, r7
    1cac:	f001 fd34 	bl	3718 <__aeabi_dcmpun>
    1cb0:	2200      	movs	r2, #0
    1cb2:	4682      	mov	sl, r0
    1cb4:	2300      	movs	r3, #0
    1cb6:	2800      	cmp	r0, #0
    1cb8:	f040 80a0 	bne.w	1dfc <pow+0x18c>
    1cbc:	4630      	mov	r0, r6
    1cbe:	4639      	mov	r1, r7
    1cc0:	f001 fcf8 	bl	36b4 <__aeabi_dcmpeq>
    1cc4:	b310      	cbz	r0, 1d0c <pow+0x9c>
    1cc6:	2200      	movs	r2, #0
    1cc8:	2300      	movs	r3, #0
    1cca:	4620      	mov	r0, r4
    1ccc:	4629      	mov	r1, r5
    1cce:	f001 fcf1 	bl	36b4 <__aeabi_dcmpeq>
    1cd2:	4683      	mov	fp, r0
    1cd4:	2800      	cmp	r0, #0
    1cd6:	d06a      	beq.n	1dae <pow+0x13e>
    1cd8:	2201      	movs	r2, #1
    1cda:	4b9c      	ldr	r3, [pc, #624]	; (1f4c <pow+0x2dc>)
    1cdc:	9202      	str	r2, [sp, #8]
    1cde:	2100      	movs	r1, #0
    1ce0:	2200      	movs	r2, #0
    1ce2:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    1ce6:	e9cd 6704 	strd	r6, r7, [sp, #16]
    1cea:	e9cd 4506 	strd	r4, r5, [sp, #24]
    1cee:	e9cd 1208 	strd	r1, r2, [sp, #32]
    1cf2:	9303      	str	r3, [sp, #12]
    1cf4:	f1b8 0f00 	cmp.w	r8, #0
    1cf8:	d045      	beq.n	1d86 <pow+0x116>
    1cfa:	4c95      	ldr	r4, [pc, #596]	; (1f50 <pow+0x2e0>)
    1cfc:	2300      	movs	r3, #0
    1cfe:	e9cd 3400 	strd	r3, r4, [sp]
    1d02:	e9dd 0100 	ldrd	r0, r1, [sp]
    1d06:	b00d      	add	sp, #52	; 0x34
    1d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1d0c:	e9dd 0100 	ldrd	r0, r1, [sp]
    1d10:	f000 ff90 	bl	2c34 <finite>
    1d14:	4680      	mov	r8, r0
    1d16:	2800      	cmp	r0, #0
    1d18:	f000 808b 	beq.w	1e32 <pow+0x1c2>
    1d1c:	f04f 0a00 	mov.w	sl, #0
    1d20:	f04f 0b00 	mov.w	fp, #0
    1d24:	4652      	mov	r2, sl
    1d26:	465b      	mov	r3, fp
    1d28:	e9dd 0100 	ldrd	r0, r1, [sp]
    1d2c:	f001 fcc2 	bl	36b4 <__aeabi_dcmpeq>
    1d30:	2800      	cmp	r0, #0
    1d32:	d0e6      	beq.n	1d02 <pow+0x92>
    1d34:	4630      	mov	r0, r6
    1d36:	4639      	mov	r1, r7
    1d38:	f000 ff7c 	bl	2c34 <finite>
    1d3c:	2800      	cmp	r0, #0
    1d3e:	d0e0      	beq.n	1d02 <pow+0x92>
    1d40:	4620      	mov	r0, r4
    1d42:	4629      	mov	r1, r5
    1d44:	f000 ff76 	bl	2c34 <finite>
    1d48:	2800      	cmp	r0, #0
    1d4a:	d0da      	beq.n	1d02 <pow+0x92>
    1d4c:	f999 3000 	ldrsb.w	r3, [r9]
    1d50:	4a7e      	ldr	r2, [pc, #504]	; (1f4c <pow+0x2dc>)
    1d52:	9203      	str	r2, [sp, #12]
    1d54:	2104      	movs	r1, #4
    1d56:	2200      	movs	r2, #0
    1d58:	2b02      	cmp	r3, #2
    1d5a:	e9cd 6704 	strd	r6, r7, [sp, #16]
    1d5e:	e9cd 4506 	strd	r4, r5, [sp, #24]
    1d62:	e9cd ab08 	strd	sl, fp, [sp, #32]
    1d66:	9102      	str	r1, [sp, #8]
    1d68:	920a      	str	r2, [sp, #40]	; 0x28
    1d6a:	d003      	beq.n	1d74 <pow+0x104>
    1d6c:	a802      	add	r0, sp, #8
    1d6e:	f000 ff67 	bl	2c40 <matherr>
    1d72:	b968      	cbnz	r0, 1d90 <pow+0x120>
    1d74:	f001 ffbc 	bl	3cf0 <__errno>
    1d78:	2322      	movs	r3, #34	; 0x22
    1d7a:	6003      	str	r3, [r0, #0]
    1d7c:	e008      	b.n	1d90 <pow+0x120>
    1d7e:	2300      	movs	r3, #0
    1d80:	2400      	movs	r4, #0
    1d82:	e9cd 3408 	strd	r3, r4, [sp, #32]
    1d86:	a802      	add	r0, sp, #8
    1d88:	f000 ff5a 	bl	2c40 <matherr>
    1d8c:	2800      	cmp	r0, #0
    1d8e:	d030      	beq.n	1df2 <pow+0x182>
    1d90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    1d92:	b11b      	cbz	r3, 1d9c <pow+0x12c>
    1d94:	f001 ffac 	bl	3cf0 <__errno>
    1d98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    1d9a:	6003      	str	r3, [r0, #0]
    1d9c:	e9dd 3408 	ldrd	r3, r4, [sp, #32]
    1da0:	e9cd 3400 	strd	r3, r4, [sp]
    1da4:	e9dd 0100 	ldrd	r0, r1, [sp]
    1da8:	b00d      	add	sp, #52	; 0x34
    1daa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1dae:	4620      	mov	r0, r4
    1db0:	4629      	mov	r1, r5
    1db2:	f000 ff3f 	bl	2c34 <finite>
    1db6:	2800      	cmp	r0, #0
    1db8:	d0a3      	beq.n	1d02 <pow+0x92>
    1dba:	2200      	movs	r2, #0
    1dbc:	2300      	movs	r3, #0
    1dbe:	4620      	mov	r0, r4
    1dc0:	4629      	mov	r1, r5
    1dc2:	f001 fc81 	bl	36c8 <__aeabi_dcmplt>
    1dc6:	2800      	cmp	r0, #0
    1dc8:	d09b      	beq.n	1d02 <pow+0x92>
    1dca:	f999 3000 	ldrsb.w	r3, [r9]
    1dce:	4a5f      	ldr	r2, [pc, #380]	; (1f4c <pow+0x2dc>)
    1dd0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
    1dd4:	2101      	movs	r1, #1
    1dd6:	e9cd 6704 	strd	r6, r7, [sp, #16]
    1dda:	e9cd 4506 	strd	r4, r5, [sp, #24]
    1dde:	9102      	str	r1, [sp, #8]
    1de0:	9203      	str	r2, [sp, #12]
    1de2:	2b00      	cmp	r3, #0
    1de4:	d0cb      	beq.n	1d7e <pow+0x10e>
    1de6:	495b      	ldr	r1, [pc, #364]	; (1f54 <pow+0x2e4>)
    1de8:	2000      	movs	r0, #0
    1dea:	2b02      	cmp	r3, #2
    1dec:	e9cd 0108 	strd	r0, r1, [sp, #32]
    1df0:	d1c9      	bne.n	1d86 <pow+0x116>
    1df2:	f001 ff7d 	bl	3cf0 <__errno>
    1df6:	2321      	movs	r3, #33	; 0x21
    1df8:	6003      	str	r3, [r0, #0]
    1dfa:	e7c9      	b.n	1d90 <pow+0x120>
    1dfc:	4620      	mov	r0, r4
    1dfe:	4629      	mov	r1, r5
    1e00:	f001 fc58 	bl	36b4 <__aeabi_dcmpeq>
    1e04:	2800      	cmp	r0, #0
    1e06:	f43f af7c 	beq.w	1d02 <pow+0x92>
    1e0a:	4b51      	ldr	r3, [pc, #324]	; (1f50 <pow+0x2e0>)
    1e0c:	494f      	ldr	r1, [pc, #316]	; (1f4c <pow+0x2dc>)
    1e0e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
    1e12:	2001      	movs	r0, #1
    1e14:	2200      	movs	r2, #0
    1e16:	f1b8 0f02 	cmp.w	r8, #2
    1e1a:	e9cd 6704 	strd	r6, r7, [sp, #16]
    1e1e:	e9cd 4506 	strd	r4, r5, [sp, #24]
    1e22:	9002      	str	r0, [sp, #8]
    1e24:	9103      	str	r1, [sp, #12]
    1e26:	e9cd 2308 	strd	r2, r3, [sp, #32]
    1e2a:	d1ac      	bne.n	1d86 <pow+0x116>
    1e2c:	e9cd 2300 	strd	r2, r3, [sp]
    1e30:	e767      	b.n	1d02 <pow+0x92>
    1e32:	4630      	mov	r0, r6
    1e34:	4639      	mov	r1, r7
    1e36:	f000 fefd 	bl	2c34 <finite>
    1e3a:	2800      	cmp	r0, #0
    1e3c:	f43f af6e 	beq.w	1d1c <pow+0xac>
    1e40:	4620      	mov	r0, r4
    1e42:	4629      	mov	r1, r5
    1e44:	f000 fef6 	bl	2c34 <finite>
    1e48:	2800      	cmp	r0, #0
    1e4a:	f43f af67 	beq.w	1d1c <pow+0xac>
    1e4e:	e9dd 2300 	ldrd	r2, r3, [sp]
    1e52:	4610      	mov	r0, r2
    1e54:	4619      	mov	r1, r3
    1e56:	f001 fc5f 	bl	3718 <__aeabi_dcmpun>
    1e5a:	2800      	cmp	r0, #0
    1e5c:	d158      	bne.n	1f10 <pow+0x2a0>
    1e5e:	2303      	movs	r3, #3
    1e60:	f999 8000 	ldrsb.w	r8, [r9]
    1e64:	9302      	str	r3, [sp, #8]
    1e66:	4b39      	ldr	r3, [pc, #228]	; (1f4c <pow+0x2dc>)
    1e68:	900a      	str	r0, [sp, #40]	; 0x28
    1e6a:	9303      	str	r3, [sp, #12]
    1e6c:	e9cd 6704 	strd	r6, r7, [sp, #16]
    1e70:	e9cd 4506 	strd	r4, r5, [sp, #24]
    1e74:	2200      	movs	r2, #0
    1e76:	2300      	movs	r3, #0
    1e78:	4630      	mov	r0, r6
    1e7a:	4639      	mov	r1, r7
    1e7c:	f1b8 0f00 	cmp.w	r8, #0
    1e80:	d126      	bne.n	1ed0 <pow+0x260>
    1e82:	4f35      	ldr	r7, [pc, #212]	; (1f58 <pow+0x2e8>)
    1e84:	f04f 4660 	mov.w	r6, #3758096384	; 0xe0000000
    1e88:	e9cd 6708 	strd	r6, r7, [sp, #32]
    1e8c:	f001 fc1c 	bl	36c8 <__aeabi_dcmplt>
    1e90:	2800      	cmp	r0, #0
    1e92:	f43f af6b 	beq.w	1d6c <pow+0xfc>
    1e96:	2200      	movs	r2, #0
    1e98:	4b30      	ldr	r3, [pc, #192]	; (1f5c <pow+0x2ec>)
    1e9a:	4620      	mov	r0, r4
    1e9c:	4629      	mov	r1, r5
    1e9e:	f001 f9a1 	bl	31e4 <__aeabi_dmul>
    1ea2:	4604      	mov	r4, r0
    1ea4:	460d      	mov	r5, r1
    1ea6:	f000 fed3 	bl	2c50 <rint>
    1eaa:	4602      	mov	r2, r0
    1eac:	460b      	mov	r3, r1
    1eae:	4620      	mov	r0, r4
    1eb0:	4629      	mov	r1, r5
    1eb2:	f001 fbff 	bl	36b4 <__aeabi_dcmpeq>
    1eb6:	bb40      	cbnz	r0, 1f0a <pow+0x29a>
    1eb8:	4b29      	ldr	r3, [pc, #164]	; (1f60 <pow+0x2f0>)
    1eba:	f999 8000 	ldrsb.w	r8, [r9]
    1ebe:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
    1ec2:	e9cd 2308 	strd	r2, r3, [sp, #32]
    1ec6:	f1b8 0f02 	cmp.w	r8, #2
    1eca:	f47f af4f 	bne.w	1d6c <pow+0xfc>
    1ece:	e751      	b.n	1d74 <pow+0x104>
    1ed0:	4f24      	ldr	r7, [pc, #144]	; (1f64 <pow+0x2f4>)
    1ed2:	2600      	movs	r6, #0
    1ed4:	e9cd 6708 	strd	r6, r7, [sp, #32]
    1ed8:	f001 fbf6 	bl	36c8 <__aeabi_dcmplt>
    1edc:	2800      	cmp	r0, #0
    1ede:	d0f2      	beq.n	1ec6 <pow+0x256>
    1ee0:	2200      	movs	r2, #0
    1ee2:	4b1e      	ldr	r3, [pc, #120]	; (1f5c <pow+0x2ec>)
    1ee4:	4620      	mov	r0, r4
    1ee6:	4629      	mov	r1, r5
    1ee8:	f001 f97c 	bl	31e4 <__aeabi_dmul>
    1eec:	4604      	mov	r4, r0
    1eee:	460d      	mov	r5, r1
    1ef0:	f000 feae 	bl	2c50 <rint>
    1ef4:	4602      	mov	r2, r0
    1ef6:	460b      	mov	r3, r1
    1ef8:	4620      	mov	r0, r4
    1efa:	4629      	mov	r1, r5
    1efc:	f001 fbda 	bl	36b4 <__aeabi_dcmpeq>
    1f00:	b918      	cbnz	r0, 1f0a <pow+0x29a>
    1f02:	4b14      	ldr	r3, [pc, #80]	; (1f54 <pow+0x2e4>)
    1f04:	2200      	movs	r2, #0
    1f06:	e9cd 2308 	strd	r2, r3, [sp, #32]
    1f0a:	f999 8000 	ldrsb.w	r8, [r9]
    1f0e:	e7da      	b.n	1ec6 <pow+0x256>
    1f10:	f999 9000 	ldrsb.w	r9, [r9]
    1f14:	4b0d      	ldr	r3, [pc, #52]	; (1f4c <pow+0x2dc>)
    1f16:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
    1f1a:	2201      	movs	r2, #1
    1f1c:	e9cd 6704 	strd	r6, r7, [sp, #16]
    1f20:	e9cd 4506 	strd	r4, r5, [sp, #24]
    1f24:	9202      	str	r2, [sp, #8]
    1f26:	9303      	str	r3, [sp, #12]
    1f28:	f1b9 0f00 	cmp.w	r9, #0
    1f2c:	f43f af27 	beq.w	1d7e <pow+0x10e>
    1f30:	2200      	movs	r2, #0
    1f32:	2300      	movs	r3, #0
    1f34:	4610      	mov	r0, r2
    1f36:	4619      	mov	r1, r3
    1f38:	f001 fa7e 	bl	3438 <__aeabi_ddiv>
    1f3c:	f1b9 0f02 	cmp.w	r9, #2
    1f40:	e9cd 0108 	strd	r0, r1, [sp, #32]
    1f44:	f43f af55 	beq.w	1df2 <pow+0x182>
    1f48:	e71d      	b.n	1d86 <pow+0x116>
    1f4a:	bf00      	nop
    1f4c:	00005f20 	.word	0x00005f20
    1f50:	3ff00000 	.word	0x3ff00000
    1f54:	fff00000 	.word	0xfff00000
    1f58:	47efffff 	.word	0x47efffff
    1f5c:	3fe00000 	.word	0x3fe00000
    1f60:	c7efffff 	.word	0xc7efffff
    1f64:	7ff00000 	.word	0x7ff00000
    1f68:	2000000c 	.word	0x2000000c

00001f6c <sqrt>:
    1f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f70:	b08b      	sub	sp, #44	; 0x2c
    1f72:	4604      	mov	r4, r0
    1f74:	460d      	mov	r5, r1
    1f76:	f000 fd9d 	bl	2ab4 <__ieee754_sqrt>
    1f7a:	4b29      	ldr	r3, [pc, #164]	; (2020 <sqrt+0xb4>)
    1f7c:	f993 a000 	ldrsb.w	sl, [r3]
    1f80:	f1ba 3fff 	cmp.w	sl, #4294967295
    1f84:	4606      	mov	r6, r0
    1f86:	460f      	mov	r7, r1
    1f88:	d012      	beq.n	1fb0 <sqrt+0x44>
    1f8a:	4622      	mov	r2, r4
    1f8c:	462b      	mov	r3, r5
    1f8e:	4620      	mov	r0, r4
    1f90:	4629      	mov	r1, r5
    1f92:	f001 fbc1 	bl	3718 <__aeabi_dcmpun>
    1f96:	4683      	mov	fp, r0
    1f98:	b950      	cbnz	r0, 1fb0 <sqrt+0x44>
    1f9a:	f04f 0800 	mov.w	r8, #0
    1f9e:	f04f 0900 	mov.w	r9, #0
    1fa2:	4642      	mov	r2, r8
    1fa4:	464b      	mov	r3, r9
    1fa6:	4620      	mov	r0, r4
    1fa8:	4629      	mov	r1, r5
    1faa:	f001 fb8d 	bl	36c8 <__aeabi_dcmplt>
    1fae:	b920      	cbnz	r0, 1fba <sqrt+0x4e>
    1fb0:	4630      	mov	r0, r6
    1fb2:	4639      	mov	r1, r7
    1fb4:	b00b      	add	sp, #44	; 0x2c
    1fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1fba:	4b1a      	ldr	r3, [pc, #104]	; (2024 <sqrt+0xb8>)
    1fbc:	f8cd b020 	str.w	fp, [sp, #32]
    1fc0:	2201      	movs	r2, #1
    1fc2:	e9cd 4504 	strd	r4, r5, [sp, #16]
    1fc6:	e9cd 4502 	strd	r4, r5, [sp, #8]
    1fca:	e88d 000c 	stmia.w	sp, {r2, r3}
    1fce:	f1ba 0f00 	cmp.w	sl, #0
    1fd2:	d017      	beq.n	2004 <sqrt+0x98>
    1fd4:	4642      	mov	r2, r8
    1fd6:	464b      	mov	r3, r9
    1fd8:	4640      	mov	r0, r8
    1fda:	4649      	mov	r1, r9
    1fdc:	f001 fa2c 	bl	3438 <__aeabi_ddiv>
    1fe0:	f1ba 0f02 	cmp.w	sl, #2
    1fe4:	e9cd 0106 	strd	r0, r1, [sp, #24]
    1fe8:	d10e      	bne.n	2008 <sqrt+0x9c>
    1fea:	f001 fe81 	bl	3cf0 <__errno>
    1fee:	2321      	movs	r3, #33	; 0x21
    1ff0:	6003      	str	r3, [r0, #0]
    1ff2:	9b08      	ldr	r3, [sp, #32]
    1ff4:	b973      	cbnz	r3, 2014 <sqrt+0xa8>
    1ff6:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
    1ffa:	4630      	mov	r0, r6
    1ffc:	4639      	mov	r1, r7
    1ffe:	b00b      	add	sp, #44	; 0x2c
    2000:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2004:	e9cd 8906 	strd	r8, r9, [sp, #24]
    2008:	4668      	mov	r0, sp
    200a:	f000 fe19 	bl	2c40 <matherr>
    200e:	2800      	cmp	r0, #0
    2010:	d1ef      	bne.n	1ff2 <sqrt+0x86>
    2012:	e7ea      	b.n	1fea <sqrt+0x7e>
    2014:	f001 fe6c 	bl	3cf0 <__errno>
    2018:	9b08      	ldr	r3, [sp, #32]
    201a:	6003      	str	r3, [r0, #0]
    201c:	e7eb      	b.n	1ff6 <sqrt+0x8a>
    201e:	bf00      	nop
    2020:	2000000c 	.word	0x2000000c
    2024:	00005f24 	.word	0x00005f24

00002028 <__ieee754_pow>:
    2028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    202c:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
    2030:	ea57 0402 	orrs.w	r4, r7, r2
    2034:	b093      	sub	sp, #76	; 0x4c
    2036:	d037      	beq.n	20a8 <__ieee754_pow+0x80>
    2038:	4c67      	ldr	r4, [pc, #412]	; (21d8 <__ieee754_pow+0x1b0>)
    203a:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
    203e:	42a6      	cmp	r6, r4
    2040:	4683      	mov	fp, r0
    2042:	460d      	mov	r5, r1
    2044:	dc29      	bgt.n	209a <__ieee754_pow+0x72>
    2046:	469a      	mov	sl, r3
    2048:	4696      	mov	lr, r2
    204a:	d025      	beq.n	2098 <__ieee754_pow+0x70>
    204c:	42a7      	cmp	r7, r4
    204e:	dc24      	bgt.n	209a <__ieee754_pow+0x72>
    2050:	4c61      	ldr	r4, [pc, #388]	; (21d8 <__ieee754_pow+0x1b0>)
    2052:	42a7      	cmp	r7, r4
    2054:	d079      	beq.n	214a <__ieee754_pow+0x122>
    2056:	2d00      	cmp	r5, #0
    2058:	4689      	mov	r9, r1
    205a:	4680      	mov	r8, r0
    205c:	e9cd 2300 	strd	r2, r3, [sp]
    2060:	db77      	blt.n	2152 <__ieee754_pow+0x12a>
    2062:	2400      	movs	r4, #0
    2064:	f1be 0f00 	cmp.w	lr, #0
    2068:	d12c      	bne.n	20c4 <__ieee754_pow+0x9c>
    206a:	4b5b      	ldr	r3, [pc, #364]	; (21d8 <__ieee754_pow+0x1b0>)
    206c:	429f      	cmp	r7, r3
    206e:	f000 808b 	beq.w	2188 <__ieee754_pow+0x160>
    2072:	4b5a      	ldr	r3, [pc, #360]	; (21dc <__ieee754_pow+0x1b4>)
    2074:	429f      	cmp	r7, r3
    2076:	d061      	beq.n	213c <__ieee754_pow+0x114>
    2078:	f1ba 4f80 	cmp.w	sl, #1073741824	; 0x40000000
    207c:	f000 83ba 	beq.w	27f4 <__ieee754_pow+0x7cc>
    2080:	4b57      	ldr	r3, [pc, #348]	; (21e0 <__ieee754_pow+0x1b8>)
    2082:	459a      	cmp	sl, r3
    2084:	d11e      	bne.n	20c4 <__ieee754_pow+0x9c>
    2086:	2d00      	cmp	r5, #0
    2088:	db1c      	blt.n	20c4 <__ieee754_pow+0x9c>
    208a:	4640      	mov	r0, r8
    208c:	4649      	mov	r1, r9
    208e:	b013      	add	sp, #76	; 0x4c
    2090:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2094:	f000 bd0e 	b.w	2ab4 <__ieee754_sqrt>
    2098:	b158      	cbz	r0, 20b2 <__ieee754_pow+0x8a>
    209a:	f106 4640 	add.w	r6, r6, #3221225472	; 0xc0000000
    209e:	f506 1680 	add.w	r6, r6, #1048576	; 0x100000
    20a2:	ea56 030b 	orrs.w	r3, r6, fp
    20a6:	d106      	bne.n	20b6 <__ieee754_pow+0x8e>
    20a8:	494c      	ldr	r1, [pc, #304]	; (21dc <__ieee754_pow+0x1b4>)
    20aa:	2000      	movs	r0, #0
    20ac:	b013      	add	sp, #76	; 0x4c
    20ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    20b2:	42b7      	cmp	r7, r6
    20b4:	ddcc      	ble.n	2050 <__ieee754_pow+0x28>
    20b6:	484b      	ldr	r0, [pc, #300]	; (21e4 <__ieee754_pow+0x1bc>)
    20b8:	b013      	add	sp, #76	; 0x4c
    20ba:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    20be:	f000 bdc1 	b.w	2c44 <nan>
    20c2:	2400      	movs	r4, #0
    20c4:	4640      	mov	r0, r8
    20c6:	4649      	mov	r1, r9
    20c8:	f000 fdb0 	bl	2c2c <fabs>
    20cc:	f1bb 0f00 	cmp.w	fp, #0
    20d0:	d119      	bne.n	2106 <__ieee754_pow+0xde>
    20d2:	b126      	cbz	r6, 20de <__ieee754_pow+0xb6>
    20d4:	4b41      	ldr	r3, [pc, #260]	; (21dc <__ieee754_pow+0x1b4>)
    20d6:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
    20da:	429a      	cmp	r2, r3
    20dc:	d113      	bne.n	2106 <__ieee754_pow+0xde>
    20de:	f1ba 0f00 	cmp.w	sl, #0
    20e2:	f2c0 83bc 	blt.w	285e <__ieee754_pow+0x836>
    20e6:	2d00      	cmp	r5, #0
    20e8:	dae0      	bge.n	20ac <__ieee754_pow+0x84>
    20ea:	f106 4640 	add.w	r6, r6, #3221225472	; 0xc0000000
    20ee:	f506 1680 	add.w	r6, r6, #1048576	; 0x100000
    20f2:	ea56 0304 	orrs.w	r3, r6, r4
    20f6:	f000 848f 	beq.w	2a18 <__ieee754_pow+0x9f0>
    20fa:	2c01      	cmp	r4, #1
    20fc:	d1d6      	bne.n	20ac <__ieee754_pow+0x84>
    20fe:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    2102:	4619      	mov	r1, r3
    2104:	e7d2      	b.n	20ac <__ieee754_pow+0x84>
    2106:	0fed      	lsrs	r5, r5, #31
    2108:	3d01      	subs	r5, #1
    210a:	ea54 0305 	orrs.w	r3, r4, r5
    210e:	d04e      	beq.n	21ae <__ieee754_pow+0x186>
    2110:	4b35      	ldr	r3, [pc, #212]	; (21e8 <__ieee754_pow+0x1c0>)
    2112:	429f      	cmp	r7, r3
    2114:	dd6e      	ble.n	21f4 <__ieee754_pow+0x1cc>
    2116:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
    211a:	429f      	cmp	r7, r3
    211c:	f340 83e8 	ble.w	28f0 <__ieee754_pow+0x8c8>
    2120:	4b32      	ldr	r3, [pc, #200]	; (21ec <__ieee754_pow+0x1c4>)
    2122:	429e      	cmp	r6, r3
    2124:	dd4e      	ble.n	21c4 <__ieee754_pow+0x19c>
    2126:	f1ba 0f00 	cmp.w	sl, #0
    212a:	dd4e      	ble.n	21ca <__ieee754_pow+0x1a2>
    212c:	a328      	add	r3, pc, #160	; (adr r3, 21d0 <__ieee754_pow+0x1a8>)
    212e:	e9d3 2300 	ldrd	r2, r3, [r3]
    2132:	4610      	mov	r0, r2
    2134:	4619      	mov	r1, r3
    2136:	f001 f855 	bl	31e4 <__aeabi_dmul>
    213a:	e7b7      	b.n	20ac <__ieee754_pow+0x84>
    213c:	f1ba 0f00 	cmp.w	sl, #0
    2140:	f2c0 843c 	blt.w	29bc <__ieee754_pow+0x994>
    2144:	4640      	mov	r0, r8
    2146:	4649      	mov	r1, r9
    2148:	e7b0      	b.n	20ac <__ieee754_pow+0x84>
    214a:	f1be 0f00 	cmp.w	lr, #0
    214e:	d082      	beq.n	2056 <__ieee754_pow+0x2e>
    2150:	e7a3      	b.n	209a <__ieee754_pow+0x72>
    2152:	4b27      	ldr	r3, [pc, #156]	; (21f0 <__ieee754_pow+0x1c8>)
    2154:	429f      	cmp	r7, r3
    2156:	dc28      	bgt.n	21aa <__ieee754_pow+0x182>
    2158:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
    215c:	429f      	cmp	r7, r3
    215e:	dd80      	ble.n	2062 <__ieee754_pow+0x3a>
    2160:	153b      	asrs	r3, r7, #20
    2162:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
    2166:	2b14      	cmp	r3, #20
    2168:	f340 843e 	ble.w	29e8 <__ieee754_pow+0x9c0>
    216c:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
    2170:	fa2e f203 	lsr.w	r2, lr, r3
    2174:	fa02 f303 	lsl.w	r3, r2, r3
    2178:	459e      	cmp	lr, r3
    217a:	f47f af72 	bne.w	2062 <__ieee754_pow+0x3a>
    217e:	f002 0201 	and.w	r2, r2, #1
    2182:	f1c2 0402 	rsb	r4, r2, #2
    2186:	e76d      	b.n	2064 <__ieee754_pow+0x3c>
    2188:	f106 4340 	add.w	r3, r6, #3221225472	; 0xc0000000
    218c:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
    2190:	ea53 030b 	orrs.w	r3, r3, fp
    2194:	d088      	beq.n	20a8 <__ieee754_pow+0x80>
    2196:	4b15      	ldr	r3, [pc, #84]	; (21ec <__ieee754_pow+0x1c4>)
    2198:	429e      	cmp	r6, r3
    219a:	f340 8332 	ble.w	2802 <__ieee754_pow+0x7da>
    219e:	f1ba 0f00 	cmp.w	sl, #0
    21a2:	db12      	blt.n	21ca <__ieee754_pow+0x1a2>
    21a4:	e9dd 0100 	ldrd	r0, r1, [sp]
    21a8:	e780      	b.n	20ac <__ieee754_pow+0x84>
    21aa:	2402      	movs	r4, #2
    21ac:	e75a      	b.n	2064 <__ieee754_pow+0x3c>
    21ae:	4642      	mov	r2, r8
    21b0:	464b      	mov	r3, r9
    21b2:	4640      	mov	r0, r8
    21b4:	4649      	mov	r1, r9
    21b6:	f000 fe61 	bl	2e7c <__aeabi_dsub>
    21ba:	4602      	mov	r2, r0
    21bc:	460b      	mov	r3, r1
    21be:	f001 f93b 	bl	3438 <__aeabi_ddiv>
    21c2:	e773      	b.n	20ac <__ieee754_pow+0x84>
    21c4:	f1ba 0f00 	cmp.w	sl, #0
    21c8:	dbb0      	blt.n	212c <__ieee754_pow+0x104>
    21ca:	2000      	movs	r0, #0
    21cc:	2100      	movs	r1, #0
    21ce:	e76d      	b.n	20ac <__ieee754_pow+0x84>
    21d0:	8800759c 	.word	0x8800759c
    21d4:	7e37e43c 	.word	0x7e37e43c
    21d8:	7ff00000 	.word	0x7ff00000
    21dc:	3ff00000 	.word	0x3ff00000
    21e0:	3fe00000 	.word	0x3fe00000
    21e4:	00005ecc 	.word	0x00005ecc
    21e8:	41e00000 	.word	0x41e00000
    21ec:	3fefffff 	.word	0x3fefffff
    21f0:	433fffff 	.word	0x433fffff
    21f4:	f5b6 1f80 	cmp.w	r6, #1048576	; 0x100000
    21f8:	f04f 0200 	mov.w	r2, #0
    21fc:	da05      	bge.n	220a <__ieee754_pow+0x1e2>
    21fe:	4bd4      	ldr	r3, [pc, #848]	; (2550 <__ieee754_pow+0x528>)
    2200:	f000 fff0 	bl	31e4 <__aeabi_dmul>
    2204:	f06f 0234 	mvn.w	r2, #52	; 0x34
    2208:	460e      	mov	r6, r1
    220a:	1533      	asrs	r3, r6, #20
    220c:	4fd1      	ldr	r7, [pc, #836]	; (2554 <__ieee754_pow+0x52c>)
    220e:	f3c6 0613 	ubfx	r6, r6, #0, #20
    2212:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
    2216:	4413      	add	r3, r2
    2218:	f046 5a7f 	orr.w	sl, r6, #1069547520	; 0x3fc00000
    221c:	42be      	cmp	r6, r7
    221e:	461a      	mov	r2, r3
    2220:	930d      	str	r3, [sp, #52]	; 0x34
    2222:	f44a 1a40 	orr.w	sl, sl, #3145728	; 0x300000
    2226:	f340 8321 	ble.w	286c <__ieee754_pow+0x844>
    222a:	4bcb      	ldr	r3, [pc, #812]	; (2558 <__ieee754_pow+0x530>)
    222c:	429e      	cmp	r6, r3
    222e:	f340 83fd 	ble.w	2a2c <__ieee754_pow+0xa04>
    2232:	4613      	mov	r3, r2
    2234:	3301      	adds	r3, #1
    2236:	930d      	str	r3, [sp, #52]	; 0x34
    2238:	4bc8      	ldr	r3, [pc, #800]	; (255c <__ieee754_pow+0x534>)
    223a:	2200      	movs	r2, #0
    223c:	e9cd 2306 	strd	r2, r3, [sp, #24]
    2240:	2700      	movs	r7, #0
    2242:	2600      	movs	r6, #0
    2244:	e9cd 6708 	strd	r6, r7, [sp, #32]
    2248:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
    224c:	f5aa 1a80 	sub.w	sl, sl, #1048576	; 0x100000
    2250:	2700      	movs	r7, #0
    2252:	4602      	mov	r2, r0
    2254:	4653      	mov	r3, sl
    2256:	4651      	mov	r1, sl
    2258:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    225c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    2260:	f000 fe0c 	bl	2e7c <__aeabi_dsub>
    2264:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    2268:	4680      	mov	r8, r0
    226a:	4689      	mov	r9, r1
    226c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    2270:	f000 fe06 	bl	2e80 <__adddf3>
    2274:	4602      	mov	r2, r0
    2276:	460b      	mov	r3, r1
    2278:	2000      	movs	r0, #0
    227a:	49b8      	ldr	r1, [pc, #736]	; (255c <__ieee754_pow+0x534>)
    227c:	f001 f8dc 	bl	3438 <__aeabi_ddiv>
    2280:	460a      	mov	r2, r1
    2282:	4601      	mov	r1, r0
    2284:	e9cd 1210 	strd	r1, r2, [sp, #64]	; 0x40
    2288:	4613      	mov	r3, r2
    228a:	4649      	mov	r1, r9
    228c:	4602      	mov	r2, r0
    228e:	4640      	mov	r0, r8
    2290:	f000 ffa8 	bl	31e4 <__aeabi_dmul>
    2294:	ea4f 036a 	mov.w	r3, sl, asr #1
    2298:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
    229c:	468c      	mov	ip, r1
    229e:	4683      	mov	fp, r0
    22a0:	f503 2300 	add.w	r3, r3, #524288	; 0x80000
    22a4:	e9cd bc04 	strd	fp, ip, [sp, #16]
    22a8:	46da      	mov	sl, fp
    22aa:	468b      	mov	fp, r1
    22ac:	19d9      	adds	r1, r3, r7
    22ae:	2300      	movs	r3, #0
    22b0:	e9cd ab02 	strd	sl, fp, [sp, #8]
    22b4:	9302      	str	r3, [sp, #8]
    22b6:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
    22ba:	2000      	movs	r0, #0
    22bc:	4606      	mov	r6, r0
    22be:	460f      	mov	r7, r1
    22c0:	4602      	mov	r2, r0
    22c2:	460b      	mov	r3, r1
    22c4:	4650      	mov	r0, sl
    22c6:	4659      	mov	r1, fp
    22c8:	f000 ff8c 	bl	31e4 <__aeabi_dmul>
    22cc:	4602      	mov	r2, r0
    22ce:	460b      	mov	r3, r1
    22d0:	4640      	mov	r0, r8
    22d2:	4649      	mov	r1, r9
    22d4:	f000 fdd2 	bl	2e7c <__aeabi_dsub>
    22d8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    22dc:	4680      	mov	r8, r0
    22de:	4689      	mov	r9, r1
    22e0:	4630      	mov	r0, r6
    22e2:	4639      	mov	r1, r7
    22e4:	f000 fdca 	bl	2e7c <__aeabi_dsub>
    22e8:	4602      	mov	r2, r0
    22ea:	460b      	mov	r3, r1
    22ec:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    22f0:	f000 fdc4 	bl	2e7c <__aeabi_dsub>
    22f4:	4652      	mov	r2, sl
    22f6:	465b      	mov	r3, fp
    22f8:	f000 ff74 	bl	31e4 <__aeabi_dmul>
    22fc:	4602      	mov	r2, r0
    22fe:	460b      	mov	r3, r1
    2300:	4640      	mov	r0, r8
    2302:	4649      	mov	r1, r9
    2304:	f000 fdba 	bl	2e7c <__aeabi_dsub>
    2308:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
    230c:	f000 ff6a 	bl	31e4 <__aeabi_dmul>
    2310:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
    2314:	e9cd 0106 	strd	r0, r1, [sp, #24]
    2318:	4632      	mov	r2, r6
    231a:	463b      	mov	r3, r7
    231c:	4630      	mov	r0, r6
    231e:	4639      	mov	r1, r7
    2320:	f000 ff60 	bl	31e4 <__aeabi_dmul>
    2324:	a378      	add	r3, pc, #480	; (adr r3, 2508 <__ieee754_pow+0x4e0>)
    2326:	e9d3 2300 	ldrd	r2, r3, [r3]
    232a:	4606      	mov	r6, r0
    232c:	460f      	mov	r7, r1
    232e:	f000 ff59 	bl	31e4 <__aeabi_dmul>
    2332:	a377      	add	r3, pc, #476	; (adr r3, 2510 <__ieee754_pow+0x4e8>)
    2334:	e9d3 2300 	ldrd	r2, r3, [r3]
    2338:	f000 fda2 	bl	2e80 <__adddf3>
    233c:	4632      	mov	r2, r6
    233e:	463b      	mov	r3, r7
    2340:	f000 ff50 	bl	31e4 <__aeabi_dmul>
    2344:	a374      	add	r3, pc, #464	; (adr r3, 2518 <__ieee754_pow+0x4f0>)
    2346:	e9d3 2300 	ldrd	r2, r3, [r3]
    234a:	f000 fd99 	bl	2e80 <__adddf3>
    234e:	4632      	mov	r2, r6
    2350:	463b      	mov	r3, r7
    2352:	f000 ff47 	bl	31e4 <__aeabi_dmul>
    2356:	a372      	add	r3, pc, #456	; (adr r3, 2520 <__ieee754_pow+0x4f8>)
    2358:	e9d3 2300 	ldrd	r2, r3, [r3]
    235c:	f000 fd90 	bl	2e80 <__adddf3>
    2360:	4632      	mov	r2, r6
    2362:	463b      	mov	r3, r7
    2364:	f000 ff3e 	bl	31e4 <__aeabi_dmul>
    2368:	a36f      	add	r3, pc, #444	; (adr r3, 2528 <__ieee754_pow+0x500>)
    236a:	e9d3 2300 	ldrd	r2, r3, [r3]
    236e:	f000 fd87 	bl	2e80 <__adddf3>
    2372:	4632      	mov	r2, r6
    2374:	463b      	mov	r3, r7
    2376:	f000 ff35 	bl	31e4 <__aeabi_dmul>
    237a:	a36d      	add	r3, pc, #436	; (adr r3, 2530 <__ieee754_pow+0x508>)
    237c:	e9d3 2300 	ldrd	r2, r3, [r3]
    2380:	f000 fd7e 	bl	2e80 <__adddf3>
    2384:	4632      	mov	r2, r6
    2386:	4680      	mov	r8, r0
    2388:	4689      	mov	r9, r1
    238a:	463b      	mov	r3, r7
    238c:	4630      	mov	r0, r6
    238e:	4639      	mov	r1, r7
    2390:	f000 ff28 	bl	31e4 <__aeabi_dmul>
    2394:	4602      	mov	r2, r0
    2396:	460b      	mov	r3, r1
    2398:	4640      	mov	r0, r8
    239a:	4649      	mov	r1, r9
    239c:	f000 ff22 	bl	31e4 <__aeabi_dmul>
    23a0:	4652      	mov	r2, sl
    23a2:	4606      	mov	r6, r0
    23a4:	460f      	mov	r7, r1
    23a6:	465b      	mov	r3, fp
    23a8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    23ac:	f000 fd68 	bl	2e80 <__adddf3>
    23b0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    23b4:	f000 ff16 	bl	31e4 <__aeabi_dmul>
    23b8:	4632      	mov	r2, r6
    23ba:	463b      	mov	r3, r7
    23bc:	f000 fd60 	bl	2e80 <__adddf3>
    23c0:	4652      	mov	r2, sl
    23c2:	4680      	mov	r8, r0
    23c4:	4689      	mov	r9, r1
    23c6:	465b      	mov	r3, fp
    23c8:	4650      	mov	r0, sl
    23ca:	4659      	mov	r1, fp
    23cc:	f000 ff0a 	bl	31e4 <__aeabi_dmul>
    23d0:	2200      	movs	r2, #0
    23d2:	4b63      	ldr	r3, [pc, #396]	; (2560 <__ieee754_pow+0x538>)
    23d4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    23d8:	f000 fd52 	bl	2e80 <__adddf3>
    23dc:	4642      	mov	r2, r8
    23de:	464b      	mov	r3, r9
    23e0:	f000 fd4e 	bl	2e80 <__adddf3>
    23e4:	9802      	ldr	r0, [sp, #8]
    23e6:	460f      	mov	r7, r1
    23e8:	4606      	mov	r6, r0
    23ea:	4632      	mov	r2, r6
    23ec:	463b      	mov	r3, r7
    23ee:	4650      	mov	r0, sl
    23f0:	4659      	mov	r1, fp
    23f2:	f000 fef7 	bl	31e4 <__aeabi_dmul>
    23f6:	2200      	movs	r2, #0
    23f8:	4682      	mov	sl, r0
    23fa:	468b      	mov	fp, r1
    23fc:	4b58      	ldr	r3, [pc, #352]	; (2560 <__ieee754_pow+0x538>)
    23fe:	4630      	mov	r0, r6
    2400:	4639      	mov	r1, r7
    2402:	f000 fd3b 	bl	2e7c <__aeabi_dsub>
    2406:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    240a:	f000 fd37 	bl	2e7c <__aeabi_dsub>
    240e:	4602      	mov	r2, r0
    2410:	460b      	mov	r3, r1
    2412:	4640      	mov	r0, r8
    2414:	4649      	mov	r1, r9
    2416:	f000 fd31 	bl	2e7c <__aeabi_dsub>
    241a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    241e:	f000 fee1 	bl	31e4 <__aeabi_dmul>
    2422:	4632      	mov	r2, r6
    2424:	4680      	mov	r8, r0
    2426:	4689      	mov	r9, r1
    2428:	463b      	mov	r3, r7
    242a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    242e:	f000 fed9 	bl	31e4 <__aeabi_dmul>
    2432:	4602      	mov	r2, r0
    2434:	460b      	mov	r3, r1
    2436:	4640      	mov	r0, r8
    2438:	4649      	mov	r1, r9
    243a:	f000 fd21 	bl	2e80 <__adddf3>
    243e:	4680      	mov	r8, r0
    2440:	4689      	mov	r9, r1
    2442:	4602      	mov	r2, r0
    2444:	460b      	mov	r3, r1
    2446:	4650      	mov	r0, sl
    2448:	4659      	mov	r1, fp
    244a:	e9cd ab04 	strd	sl, fp, [sp, #16]
    244e:	f000 fd17 	bl	2e80 <__adddf3>
    2452:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
    2456:	a338      	add	r3, pc, #224	; (adr r3, 2538 <__ieee754_pow+0x510>)
    2458:	e9d3 2300 	ldrd	r2, r3, [r3]
    245c:	4650      	mov	r0, sl
    245e:	460f      	mov	r7, r1
    2460:	f000 fec0 	bl	31e4 <__aeabi_dmul>
    2464:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    2468:	e9cd 0102 	strd	r0, r1, [sp, #8]
    246c:	4639      	mov	r1, r7
    246e:	4650      	mov	r0, sl
    2470:	f000 fd04 	bl	2e7c <__aeabi_dsub>
    2474:	4602      	mov	r2, r0
    2476:	460b      	mov	r3, r1
    2478:	4640      	mov	r0, r8
    247a:	4649      	mov	r1, r9
    247c:	f000 fcfe 	bl	2e7c <__aeabi_dsub>
    2480:	a32f      	add	r3, pc, #188	; (adr r3, 2540 <__ieee754_pow+0x518>)
    2482:	e9d3 2300 	ldrd	r2, r3, [r3]
    2486:	f000 fead 	bl	31e4 <__aeabi_dmul>
    248a:	a32f      	add	r3, pc, #188	; (adr r3, 2548 <__ieee754_pow+0x520>)
    248c:	e9d3 2300 	ldrd	r2, r3, [r3]
    2490:	4680      	mov	r8, r0
    2492:	4689      	mov	r9, r1
    2494:	4650      	mov	r0, sl
    2496:	4639      	mov	r1, r7
    2498:	f000 fea4 	bl	31e4 <__aeabi_dmul>
    249c:	4602      	mov	r2, r0
    249e:	460b      	mov	r3, r1
    24a0:	4640      	mov	r0, r8
    24a2:	4649      	mov	r1, r9
    24a4:	f000 fcec 	bl	2e80 <__adddf3>
    24a8:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    24ac:	f000 fce8 	bl	2e80 <__adddf3>
    24b0:	4680      	mov	r8, r0
    24b2:	980d      	ldr	r0, [sp, #52]	; 0x34
    24b4:	4689      	mov	r9, r1
    24b6:	f000 fe2f 	bl	3118 <__aeabi_i2d>
    24ba:	4642      	mov	r2, r8
    24bc:	4606      	mov	r6, r0
    24be:	460f      	mov	r7, r1
    24c0:	464b      	mov	r3, r9
    24c2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    24c6:	f000 fcdb 	bl	2e80 <__adddf3>
    24ca:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    24ce:	f000 fcd7 	bl	2e80 <__adddf3>
    24d2:	4632      	mov	r2, r6
    24d4:	463b      	mov	r3, r7
    24d6:	f000 fcd3 	bl	2e80 <__adddf3>
    24da:	4632      	mov	r2, r6
    24dc:	463b      	mov	r3, r7
    24de:	4650      	mov	r0, sl
    24e0:	468b      	mov	fp, r1
    24e2:	f000 fccb 	bl	2e7c <__aeabi_dsub>
    24e6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    24ea:	f000 fcc7 	bl	2e7c <__aeabi_dsub>
    24ee:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    24f2:	f000 fcc3 	bl	2e7c <__aeabi_dsub>
    24f6:	4602      	mov	r2, r0
    24f8:	460b      	mov	r3, r1
    24fa:	4640      	mov	r0, r8
    24fc:	4649      	mov	r1, r9
    24fe:	f000 fcbd 	bl	2e7c <__aeabi_dsub>
    2502:	4680      	mov	r8, r0
    2504:	e02e      	b.n	2564 <__ieee754_pow+0x53c>
    2506:	bf00      	nop
    2508:	4a454eef 	.word	0x4a454eef
    250c:	3fca7e28 	.word	0x3fca7e28
    2510:	93c9db65 	.word	0x93c9db65
    2514:	3fcd864a 	.word	0x3fcd864a
    2518:	a91d4101 	.word	0xa91d4101
    251c:	3fd17460 	.word	0x3fd17460
    2520:	518f264d 	.word	0x518f264d
    2524:	3fd55555 	.word	0x3fd55555
    2528:	db6fabff 	.word	0xdb6fabff
    252c:	3fdb6db6 	.word	0x3fdb6db6
    2530:	33333303 	.word	0x33333303
    2534:	3fe33333 	.word	0x3fe33333
    2538:	e0000000 	.word	0xe0000000
    253c:	3feec709 	.word	0x3feec709
    2540:	dc3a03fd 	.word	0xdc3a03fd
    2544:	3feec709 	.word	0x3feec709
    2548:	145b01f5 	.word	0x145b01f5
    254c:	be3e2fe0 	.word	0xbe3e2fe0
    2550:	43400000 	.word	0x43400000
    2554:	0003988e 	.word	0x0003988e
    2558:	000bb679 	.word	0x000bb679
    255c:	3ff00000 	.word	0x3ff00000
    2560:	40080000 	.word	0x40080000
    2564:	4689      	mov	r9, r1
    2566:	3c01      	subs	r4, #1
    2568:	ea54 0305 	orrs.w	r3, r4, r5
    256c:	e9dd 0100 	ldrd	r0, r1, [sp]
    2570:	bf14      	ite	ne
    2572:	4cd9      	ldrne	r4, [pc, #868]	; (28d8 <__ieee754_pow+0x8b0>)
    2574:	4cd9      	ldreq	r4, [pc, #868]	; (28dc <__ieee754_pow+0x8b4>)
    2576:	2300      	movs	r3, #0
    2578:	e9cd 3404 	strd	r3, r4, [sp, #16]
    257c:	4603      	mov	r3, r0
    257e:	460c      	mov	r4, r1
    2580:	e9cd 3402 	strd	r3, r4, [sp, #8]
    2584:	2300      	movs	r3, #0
    2586:	9302      	str	r3, [sp, #8]
    2588:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
    258c:	4622      	mov	r2, r4
    258e:	462b      	mov	r3, r5
    2590:	f000 fc74 	bl	2e7c <__aeabi_dsub>
    2594:	4652      	mov	r2, sl
    2596:	465b      	mov	r3, fp
    2598:	f000 fe24 	bl	31e4 <__aeabi_dmul>
    259c:	e9dd 2300 	ldrd	r2, r3, [sp]
    25a0:	4606      	mov	r6, r0
    25a2:	460f      	mov	r7, r1
    25a4:	4640      	mov	r0, r8
    25a6:	4649      	mov	r1, r9
    25a8:	f000 fe1c 	bl	31e4 <__aeabi_dmul>
    25ac:	4602      	mov	r2, r0
    25ae:	460b      	mov	r3, r1
    25b0:	4630      	mov	r0, r6
    25b2:	4639      	mov	r1, r7
    25b4:	f000 fc64 	bl	2e80 <__adddf3>
    25b8:	4622      	mov	r2, r4
    25ba:	4680      	mov	r8, r0
    25bc:	4689      	mov	r9, r1
    25be:	462b      	mov	r3, r5
    25c0:	4650      	mov	r0, sl
    25c2:	4659      	mov	r1, fp
    25c4:	e9cd 8900 	strd	r8, r9, [sp]
    25c8:	f000 fe0c 	bl	31e4 <__aeabi_dmul>
    25cc:	460b      	mov	r3, r1
    25ce:	4602      	mov	r2, r0
    25d0:	4606      	mov	r6, r0
    25d2:	460f      	mov	r7, r1
    25d4:	4640      	mov	r0, r8
    25d6:	4649      	mov	r1, r9
    25d8:	f000 fc52 	bl	2e80 <__adddf3>
    25dc:	4bc0      	ldr	r3, [pc, #768]	; (28e0 <__ieee754_pow+0x8b8>)
    25de:	4299      	cmp	r1, r3
    25e0:	4604      	mov	r4, r0
    25e2:	460d      	mov	r5, r1
    25e4:	468a      	mov	sl, r1
    25e6:	f340 8116 	ble.w	2816 <__ieee754_pow+0x7ee>
    25ea:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
    25ee:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
    25f2:	4303      	orrs	r3, r0
    25f4:	f040 81ea 	bne.w	29cc <__ieee754_pow+0x9a4>
    25f8:	a3a3      	add	r3, pc, #652	; (adr r3, 2888 <__ieee754_pow+0x860>)
    25fa:	e9d3 2300 	ldrd	r2, r3, [r3]
    25fe:	e9dd 0100 	ldrd	r0, r1, [sp]
    2602:	f000 fc3d 	bl	2e80 <__adddf3>
    2606:	4632      	mov	r2, r6
    2608:	4680      	mov	r8, r0
    260a:	4689      	mov	r9, r1
    260c:	463b      	mov	r3, r7
    260e:	4620      	mov	r0, r4
    2610:	4629      	mov	r1, r5
    2612:	f000 fc33 	bl	2e7c <__aeabi_dsub>
    2616:	4602      	mov	r2, r0
    2618:	460b      	mov	r3, r1
    261a:	4640      	mov	r0, r8
    261c:	4649      	mov	r1, r9
    261e:	f001 f871 	bl	3704 <__aeabi_dcmpgt>
    2622:	2800      	cmp	r0, #0
    2624:	f040 81d2 	bne.w	29cc <__ieee754_pow+0x9a4>
    2628:	46a8      	mov	r8, r5
    262a:	ea4f 5328 	mov.w	r3, r8, asr #20
    262e:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
    2632:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
    2636:	fa42 f303 	asr.w	r3, r2, r3
    263a:	4453      	add	r3, sl
    263c:	f3c3 520a 	ubfx	r2, r3, #20, #11
    2640:	4da8      	ldr	r5, [pc, #672]	; (28e4 <__ieee754_pow+0x8bc>)
    2642:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
    2646:	4115      	asrs	r5, r2
    2648:	f3c3 0413 	ubfx	r4, r3, #0, #20
    264c:	ea23 0105 	bic.w	r1, r3, r5
    2650:	2000      	movs	r0, #0
    2652:	f1c2 0b14 	rsb	fp, r2, #20
    2656:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
    265a:	f1ba 0f00 	cmp.w	sl, #0
    265e:	4602      	mov	r2, r0
    2660:	460b      	mov	r3, r1
    2662:	fa44 fb0b 	asr.w	fp, r4, fp
    2666:	4630      	mov	r0, r6
    2668:	4639      	mov	r1, r7
    266a:	bfb8      	it	lt
    266c:	f1cb 0b00 	rsblt	fp, fp, #0
    2670:	f000 fc04 	bl	2e7c <__aeabi_dsub>
    2674:	4602      	mov	r2, r0
    2676:	460b      	mov	r3, r1
    2678:	4606      	mov	r6, r0
    267a:	460f      	mov	r7, r1
    267c:	e9dd 0100 	ldrd	r0, r1, [sp]
    2680:	f000 fbfe 	bl	2e80 <__adddf3>
    2684:	ea4f 5a0b 	mov.w	sl, fp, lsl #20
    2688:	460d      	mov	r5, r1
    268a:	2400      	movs	r4, #0
    268c:	a380      	add	r3, pc, #512	; (adr r3, 2890 <__ieee754_pow+0x868>)
    268e:	e9d3 2300 	ldrd	r2, r3, [r3]
    2692:	4620      	mov	r0, r4
    2694:	4629      	mov	r1, r5
    2696:	f000 fda5 	bl	31e4 <__aeabi_dmul>
    269a:	4632      	mov	r2, r6
    269c:	4680      	mov	r8, r0
    269e:	4689      	mov	r9, r1
    26a0:	463b      	mov	r3, r7
    26a2:	4620      	mov	r0, r4
    26a4:	4629      	mov	r1, r5
    26a6:	f000 fbe9 	bl	2e7c <__aeabi_dsub>
    26aa:	4602      	mov	r2, r0
    26ac:	460b      	mov	r3, r1
    26ae:	e9dd 0100 	ldrd	r0, r1, [sp]
    26b2:	f000 fbe3 	bl	2e7c <__aeabi_dsub>
    26b6:	a378      	add	r3, pc, #480	; (adr r3, 2898 <__ieee754_pow+0x870>)
    26b8:	e9d3 2300 	ldrd	r2, r3, [r3]
    26bc:	f000 fd92 	bl	31e4 <__aeabi_dmul>
    26c0:	a377      	add	r3, pc, #476	; (adr r3, 28a0 <__ieee754_pow+0x878>)
    26c2:	e9d3 2300 	ldrd	r2, r3, [r3]
    26c6:	4606      	mov	r6, r0
    26c8:	460f      	mov	r7, r1
    26ca:	4620      	mov	r0, r4
    26cc:	4629      	mov	r1, r5
    26ce:	f000 fd89 	bl	31e4 <__aeabi_dmul>
    26d2:	4602      	mov	r2, r0
    26d4:	460b      	mov	r3, r1
    26d6:	4630      	mov	r0, r6
    26d8:	4639      	mov	r1, r7
    26da:	f000 fbd1 	bl	2e80 <__adddf3>
    26de:	4606      	mov	r6, r0
    26e0:	460f      	mov	r7, r1
    26e2:	4602      	mov	r2, r0
    26e4:	460b      	mov	r3, r1
    26e6:	4640      	mov	r0, r8
    26e8:	4649      	mov	r1, r9
    26ea:	f000 fbc9 	bl	2e80 <__adddf3>
    26ee:	4642      	mov	r2, r8
    26f0:	464b      	mov	r3, r9
    26f2:	4604      	mov	r4, r0
    26f4:	460d      	mov	r5, r1
    26f6:	f000 fbc1 	bl	2e7c <__aeabi_dsub>
    26fa:	4602      	mov	r2, r0
    26fc:	460b      	mov	r3, r1
    26fe:	4630      	mov	r0, r6
    2700:	4639      	mov	r1, r7
    2702:	f000 fbbb 	bl	2e7c <__aeabi_dsub>
    2706:	4622      	mov	r2, r4
    2708:	4680      	mov	r8, r0
    270a:	4689      	mov	r9, r1
    270c:	462b      	mov	r3, r5
    270e:	4620      	mov	r0, r4
    2710:	4629      	mov	r1, r5
    2712:	f000 fd67 	bl	31e4 <__aeabi_dmul>
    2716:	a364      	add	r3, pc, #400	; (adr r3, 28a8 <__ieee754_pow+0x880>)
    2718:	e9d3 2300 	ldrd	r2, r3, [r3]
    271c:	4606      	mov	r6, r0
    271e:	460f      	mov	r7, r1
    2720:	f000 fd60 	bl	31e4 <__aeabi_dmul>
    2724:	a362      	add	r3, pc, #392	; (adr r3, 28b0 <__ieee754_pow+0x888>)
    2726:	e9d3 2300 	ldrd	r2, r3, [r3]
    272a:	f000 fba7 	bl	2e7c <__aeabi_dsub>
    272e:	4632      	mov	r2, r6
    2730:	463b      	mov	r3, r7
    2732:	f000 fd57 	bl	31e4 <__aeabi_dmul>
    2736:	a360      	add	r3, pc, #384	; (adr r3, 28b8 <__ieee754_pow+0x890>)
    2738:	e9d3 2300 	ldrd	r2, r3, [r3]
    273c:	f000 fba0 	bl	2e80 <__adddf3>
    2740:	4632      	mov	r2, r6
    2742:	463b      	mov	r3, r7
    2744:	f000 fd4e 	bl	31e4 <__aeabi_dmul>
    2748:	a35d      	add	r3, pc, #372	; (adr r3, 28c0 <__ieee754_pow+0x898>)
    274a:	e9d3 2300 	ldrd	r2, r3, [r3]
    274e:	f000 fb95 	bl	2e7c <__aeabi_dsub>
    2752:	4632      	mov	r2, r6
    2754:	463b      	mov	r3, r7
    2756:	f000 fd45 	bl	31e4 <__aeabi_dmul>
    275a:	a35b      	add	r3, pc, #364	; (adr r3, 28c8 <__ieee754_pow+0x8a0>)
    275c:	e9d3 2300 	ldrd	r2, r3, [r3]
    2760:	f000 fb8e 	bl	2e80 <__adddf3>
    2764:	4632      	mov	r2, r6
    2766:	463b      	mov	r3, r7
    2768:	f000 fd3c 	bl	31e4 <__aeabi_dmul>
    276c:	4602      	mov	r2, r0
    276e:	460b      	mov	r3, r1
    2770:	4620      	mov	r0, r4
    2772:	4629      	mov	r1, r5
    2774:	f000 fb82 	bl	2e7c <__aeabi_dsub>
    2778:	4606      	mov	r6, r0
    277a:	460f      	mov	r7, r1
    277c:	4602      	mov	r2, r0
    277e:	460b      	mov	r3, r1
    2780:	4620      	mov	r0, r4
    2782:	4629      	mov	r1, r5
    2784:	f000 fd2e 	bl	31e4 <__aeabi_dmul>
    2788:	2200      	movs	r2, #0
    278a:	e9cd 0100 	strd	r0, r1, [sp]
    278e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    2792:	4630      	mov	r0, r6
    2794:	4639      	mov	r1, r7
    2796:	f000 fb71 	bl	2e7c <__aeabi_dsub>
    279a:	4602      	mov	r2, r0
    279c:	460b      	mov	r3, r1
    279e:	e9dd 0100 	ldrd	r0, r1, [sp]
    27a2:	f000 fe49 	bl	3438 <__aeabi_ddiv>
    27a6:	4642      	mov	r2, r8
    27a8:	4606      	mov	r6, r0
    27aa:	460f      	mov	r7, r1
    27ac:	464b      	mov	r3, r9
    27ae:	4620      	mov	r0, r4
    27b0:	4629      	mov	r1, r5
    27b2:	f000 fd17 	bl	31e4 <__aeabi_dmul>
    27b6:	4642      	mov	r2, r8
    27b8:	464b      	mov	r3, r9
    27ba:	f000 fb61 	bl	2e80 <__adddf3>
    27be:	4602      	mov	r2, r0
    27c0:	460b      	mov	r3, r1
    27c2:	4630      	mov	r0, r6
    27c4:	4639      	mov	r1, r7
    27c6:	f000 fb59 	bl	2e7c <__aeabi_dsub>
    27ca:	4622      	mov	r2, r4
    27cc:	462b      	mov	r3, r5
    27ce:	f000 fb55 	bl	2e7c <__aeabi_dsub>
    27d2:	4602      	mov	r2, r0
    27d4:	460b      	mov	r3, r1
    27d6:	2000      	movs	r0, #0
    27d8:	493f      	ldr	r1, [pc, #252]	; (28d8 <__ieee754_pow+0x8b0>)
    27da:	f000 fb4f 	bl	2e7c <__aeabi_dsub>
    27de:	448a      	add	sl, r1
    27e0:	f5ba 1f80 	cmp.w	sl, #1048576	; 0x100000
    27e4:	f2c0 8133 	blt.w	2a4e <__ieee754_pow+0xa26>
    27e8:	4651      	mov	r1, sl
    27ea:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    27ee:	f000 fcf9 	bl	31e4 <__aeabi_dmul>
    27f2:	e45b      	b.n	20ac <__ieee754_pow+0x84>
    27f4:	4642      	mov	r2, r8
    27f6:	4640      	mov	r0, r8
    27f8:	464b      	mov	r3, r9
    27fa:	4649      	mov	r1, r9
    27fc:	f000 fcf2 	bl	31e4 <__aeabi_dmul>
    2800:	e454      	b.n	20ac <__ieee754_pow+0x84>
    2802:	f1ba 0f00 	cmp.w	sl, #0
    2806:	f6bf ace0 	bge.w	21ca <__ieee754_pow+0x1a2>
    280a:	e9dd 3400 	ldrd	r3, r4, [sp]
    280e:	4618      	mov	r0, r3
    2810:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
    2814:	e44a      	b.n	20ac <__ieee754_pow+0x84>
    2816:	4b34      	ldr	r3, [pc, #208]	; (28e8 <__ieee754_pow+0x8c0>)
    2818:	f021 4800 	bic.w	r8, r1, #2147483648	; 0x80000000
    281c:	4598      	cmp	r8, r3
    281e:	f340 80f2 	ble.w	2a06 <__ieee754_pow+0x9de>
    2822:	4b32      	ldr	r3, [pc, #200]	; (28ec <__ieee754_pow+0x8c4>)
    2824:	440b      	add	r3, r1
    2826:	4303      	orrs	r3, r0
    2828:	d10c      	bne.n	2844 <__ieee754_pow+0x81c>
    282a:	4632      	mov	r2, r6
    282c:	463b      	mov	r3, r7
    282e:	f000 fb25 	bl	2e7c <__aeabi_dsub>
    2832:	4602      	mov	r2, r0
    2834:	460b      	mov	r3, r1
    2836:	e9dd 0100 	ldrd	r0, r1, [sp]
    283a:	f000 ff4f 	bl	36dc <__aeabi_dcmple>
    283e:	2800      	cmp	r0, #0
    2840:	f43f aef3 	beq.w	262a <__ieee754_pow+0x602>
    2844:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    2848:	a321      	add	r3, pc, #132	; (adr r3, 28d0 <__ieee754_pow+0x8a8>)
    284a:	e9d3 2300 	ldrd	r2, r3, [r3]
    284e:	f000 fcc9 	bl	31e4 <__aeabi_dmul>
    2852:	a31f      	add	r3, pc, #124	; (adr r3, 28d0 <__ieee754_pow+0x8a8>)
    2854:	e9d3 2300 	ldrd	r2, r3, [r3]
    2858:	f000 fcc4 	bl	31e4 <__aeabi_dmul>
    285c:	e426      	b.n	20ac <__ieee754_pow+0x84>
    285e:	4602      	mov	r2, r0
    2860:	460b      	mov	r3, r1
    2862:	2000      	movs	r0, #0
    2864:	491c      	ldr	r1, [pc, #112]	; (28d8 <__ieee754_pow+0x8b0>)
    2866:	f000 fde7 	bl	3438 <__aeabi_ddiv>
    286a:	e43c      	b.n	20e6 <__ieee754_pow+0xbe>
    286c:	2200      	movs	r2, #0
    286e:	2300      	movs	r3, #0
    2870:	e9cd 2308 	strd	r2, r3, [sp, #32]
    2874:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
    2878:	4b17      	ldr	r3, [pc, #92]	; (28d8 <__ieee754_pow+0x8b0>)
    287a:	2200      	movs	r2, #0
    287c:	2700      	movs	r7, #0
    287e:	e9cd 2306 	strd	r2, r3, [sp, #24]
    2882:	e4e6      	b.n	2252 <__ieee754_pow+0x22a>
    2884:	f3af 8000 	nop.w
    2888:	652b82fe 	.word	0x652b82fe
    288c:	3c971547 	.word	0x3c971547
    2890:	00000000 	.word	0x00000000
    2894:	3fe62e43 	.word	0x3fe62e43
    2898:	fefa39ef 	.word	0xfefa39ef
    289c:	3fe62e42 	.word	0x3fe62e42
    28a0:	0ca86c39 	.word	0x0ca86c39
    28a4:	be205c61 	.word	0xbe205c61
    28a8:	72bea4d0 	.word	0x72bea4d0
    28ac:	3e663769 	.word	0x3e663769
    28b0:	c5d26bf1 	.word	0xc5d26bf1
    28b4:	3ebbbd41 	.word	0x3ebbbd41
    28b8:	af25de2c 	.word	0xaf25de2c
    28bc:	3f11566a 	.word	0x3f11566a
    28c0:	16bebd93 	.word	0x16bebd93
    28c4:	3f66c16c 	.word	0x3f66c16c
    28c8:	5555553e 	.word	0x5555553e
    28cc:	3fc55555 	.word	0x3fc55555
    28d0:	c2f8f359 	.word	0xc2f8f359
    28d4:	01a56e1f 	.word	0x01a56e1f
    28d8:	3ff00000 	.word	0x3ff00000
    28dc:	bff00000 	.word	0xbff00000
    28e0:	408fffff 	.word	0x408fffff
    28e4:	000fffff 	.word	0x000fffff
    28e8:	4090cbff 	.word	0x4090cbff
    28ec:	3f6f3400 	.word	0x3f6f3400
    28f0:	4b6b      	ldr	r3, [pc, #428]	; (2aa0 <__ieee754_pow+0xa78>)
    28f2:	429e      	cmp	r6, r3
    28f4:	f77f ac66 	ble.w	21c4 <__ieee754_pow+0x19c>
    28f8:	4b6a      	ldr	r3, [pc, #424]	; (2aa4 <__ieee754_pow+0xa7c>)
    28fa:	429e      	cmp	r6, r3
    28fc:	f73f ac13 	bgt.w	2126 <__ieee754_pow+0xfe>
    2900:	2200      	movs	r2, #0
    2902:	4b68      	ldr	r3, [pc, #416]	; (2aa4 <__ieee754_pow+0xa7c>)
    2904:	f000 faba 	bl	2e7c <__aeabi_dsub>
    2908:	a357      	add	r3, pc, #348	; (adr r3, 2a68 <__ieee754_pow+0xa40>)
    290a:	e9d3 2300 	ldrd	r2, r3, [r3]
    290e:	4606      	mov	r6, r0
    2910:	460f      	mov	r7, r1
    2912:	f000 fc67 	bl	31e4 <__aeabi_dmul>
    2916:	a356      	add	r3, pc, #344	; (adr r3, 2a70 <__ieee754_pow+0xa48>)
    2918:	e9d3 2300 	ldrd	r2, r3, [r3]
    291c:	4680      	mov	r8, r0
    291e:	4689      	mov	r9, r1
    2920:	4630      	mov	r0, r6
    2922:	4639      	mov	r1, r7
    2924:	f000 fc5e 	bl	31e4 <__aeabi_dmul>
    2928:	2200      	movs	r2, #0
    292a:	4682      	mov	sl, r0
    292c:	468b      	mov	fp, r1
    292e:	4b5e      	ldr	r3, [pc, #376]	; (2aa8 <__ieee754_pow+0xa80>)
    2930:	4630      	mov	r0, r6
    2932:	4639      	mov	r1, r7
    2934:	f000 fc56 	bl	31e4 <__aeabi_dmul>
    2938:	4602      	mov	r2, r0
    293a:	460b      	mov	r3, r1
    293c:	a14e      	add	r1, pc, #312	; (adr r1, 2a78 <__ieee754_pow+0xa50>)
    293e:	e9d1 0100 	ldrd	r0, r1, [r1]
    2942:	f000 fa9b 	bl	2e7c <__aeabi_dsub>
    2946:	4632      	mov	r2, r6
    2948:	463b      	mov	r3, r7
    294a:	f000 fc4b 	bl	31e4 <__aeabi_dmul>
    294e:	4602      	mov	r2, r0
    2950:	460b      	mov	r3, r1
    2952:	2000      	movs	r0, #0
    2954:	4955      	ldr	r1, [pc, #340]	; (2aac <__ieee754_pow+0xa84>)
    2956:	f000 fa91 	bl	2e7c <__aeabi_dsub>
    295a:	4632      	mov	r2, r6
    295c:	e9cd 0102 	strd	r0, r1, [sp, #8]
    2960:	463b      	mov	r3, r7
    2962:	4630      	mov	r0, r6
    2964:	4639      	mov	r1, r7
    2966:	f000 fc3d 	bl	31e4 <__aeabi_dmul>
    296a:	4602      	mov	r2, r0
    296c:	460b      	mov	r3, r1
    296e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    2972:	f000 fc37 	bl	31e4 <__aeabi_dmul>
    2976:	a342      	add	r3, pc, #264	; (adr r3, 2a80 <__ieee754_pow+0xa58>)
    2978:	e9d3 2300 	ldrd	r2, r3, [r3]
    297c:	f000 fc32 	bl	31e4 <__aeabi_dmul>
    2980:	4602      	mov	r2, r0
    2982:	460b      	mov	r3, r1
    2984:	4650      	mov	r0, sl
    2986:	4659      	mov	r1, fp
    2988:	f000 fa78 	bl	2e7c <__aeabi_dsub>
    298c:	4602      	mov	r2, r0
    298e:	460b      	mov	r3, r1
    2990:	4606      	mov	r6, r0
    2992:	460f      	mov	r7, r1
    2994:	4640      	mov	r0, r8
    2996:	4649      	mov	r1, r9
    2998:	f000 fa72 	bl	2e80 <__adddf3>
    299c:	4642      	mov	r2, r8
    299e:	464b      	mov	r3, r9
    29a0:	2000      	movs	r0, #0
    29a2:	4682      	mov	sl, r0
    29a4:	468b      	mov	fp, r1
    29a6:	f000 fa69 	bl	2e7c <__aeabi_dsub>
    29aa:	4602      	mov	r2, r0
    29ac:	460b      	mov	r3, r1
    29ae:	4630      	mov	r0, r6
    29b0:	4639      	mov	r1, r7
    29b2:	f000 fa63 	bl	2e7c <__aeabi_dsub>
    29b6:	4680      	mov	r8, r0
    29b8:	4689      	mov	r9, r1
    29ba:	e5d4      	b.n	2566 <__ieee754_pow+0x53e>
    29bc:	4642      	mov	r2, r8
    29be:	464b      	mov	r3, r9
    29c0:	2000      	movs	r0, #0
    29c2:	4938      	ldr	r1, [pc, #224]	; (2aa4 <__ieee754_pow+0xa7c>)
    29c4:	f000 fd38 	bl	3438 <__aeabi_ddiv>
    29c8:	f7ff bb70 	b.w	20ac <__ieee754_pow+0x84>
    29cc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    29d0:	a32d      	add	r3, pc, #180	; (adr r3, 2a88 <__ieee754_pow+0xa60>)
    29d2:	e9d3 2300 	ldrd	r2, r3, [r3]
    29d6:	f000 fc05 	bl	31e4 <__aeabi_dmul>
    29da:	a32b      	add	r3, pc, #172	; (adr r3, 2a88 <__ieee754_pow+0xa60>)
    29dc:	e9d3 2300 	ldrd	r2, r3, [r3]
    29e0:	f000 fc00 	bl	31e4 <__aeabi_dmul>
    29e4:	f7ff bb62 	b.w	20ac <__ieee754_pow+0x84>
    29e8:	f1be 0f00 	cmp.w	lr, #0
    29ec:	f47f ab69 	bne.w	20c2 <__ieee754_pow+0x9a>
    29f0:	f1c3 0314 	rsb	r3, r3, #20
    29f4:	fa47 f203 	asr.w	r2, r7, r3
    29f8:	fa02 f303 	lsl.w	r3, r2, r3
    29fc:	429f      	cmp	r7, r3
    29fe:	d02a      	beq.n	2a56 <__ieee754_pow+0xa2e>
    2a00:	4674      	mov	r4, lr
    2a02:	f7ff bb36 	b.w	2072 <__ieee754_pow+0x4a>
    2a06:	4b29      	ldr	r3, [pc, #164]	; (2aac <__ieee754_pow+0xa84>)
    2a08:	4598      	cmp	r8, r3
    2a0a:	f73f ae0e 	bgt.w	262a <__ieee754_pow+0x602>
    2a0e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    2a12:	4692      	mov	sl, r2
    2a14:	4693      	mov	fp, r2
    2a16:	e638      	b.n	268a <__ieee754_pow+0x662>
    2a18:	4602      	mov	r2, r0
    2a1a:	460b      	mov	r3, r1
    2a1c:	f000 fa2e 	bl	2e7c <__aeabi_dsub>
    2a20:	4602      	mov	r2, r0
    2a22:	460b      	mov	r3, r1
    2a24:	f000 fd08 	bl	3438 <__aeabi_ddiv>
    2a28:	f7ff bb40 	b.w	20ac <__ieee754_pow+0x84>
    2a2c:	a318      	add	r3, pc, #96	; (adr r3, 2a90 <__ieee754_pow+0xa68>)
    2a2e:	e9d3 2300 	ldrd	r2, r3, [r3]
    2a32:	e9cd 2308 	strd	r2, r3, [sp, #32]
    2a36:	a318      	add	r3, pc, #96	; (adr r3, 2a98 <__ieee754_pow+0xa70>)
    2a38:	e9d3 2300 	ldrd	r2, r3, [r3]
    2a3c:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
    2a40:	4b1b      	ldr	r3, [pc, #108]	; (2ab0 <__ieee754_pow+0xa88>)
    2a42:	2200      	movs	r2, #0
    2a44:	f44f 2780 	mov.w	r7, #262144	; 0x40000
    2a48:	e9cd 2306 	strd	r2, r3, [sp, #24]
    2a4c:	e401      	b.n	2252 <__ieee754_pow+0x22a>
    2a4e:	465a      	mov	r2, fp
    2a50:	f000 f98a 	bl	2d68 <scalbn>
    2a54:	e6c9      	b.n	27ea <__ieee754_pow+0x7c2>
    2a56:	f002 0201 	and.w	r2, r2, #1
    2a5a:	f1c2 0402 	rsb	r4, r2, #2
    2a5e:	f7ff bb08 	b.w	2072 <__ieee754_pow+0x4a>
    2a62:	bf00      	nop
    2a64:	f3af 8000 	nop.w
    2a68:	60000000 	.word	0x60000000
    2a6c:	3ff71547 	.word	0x3ff71547
    2a70:	f85ddf44 	.word	0xf85ddf44
    2a74:	3e54ae0b 	.word	0x3e54ae0b
    2a78:	55555555 	.word	0x55555555
    2a7c:	3fd55555 	.word	0x3fd55555
    2a80:	652b82fe 	.word	0x652b82fe
    2a84:	3ff71547 	.word	0x3ff71547
    2a88:	8800759c 	.word	0x8800759c
    2a8c:	7e37e43c 	.word	0x7e37e43c
    2a90:	40000000 	.word	0x40000000
    2a94:	3fe2b803 	.word	0x3fe2b803
    2a98:	43cfd006 	.word	0x43cfd006
    2a9c:	3e4cfdeb 	.word	0x3e4cfdeb
    2aa0:	3feffffe 	.word	0x3feffffe
    2aa4:	3ff00000 	.word	0x3ff00000
    2aa8:	3fd00000 	.word	0x3fd00000
    2aac:	3fe00000 	.word	0x3fe00000
    2ab0:	3ff80000 	.word	0x3ff80000

00002ab4 <__ieee754_sqrt>:
    2ab4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    2ab8:	4f5b      	ldr	r7, [pc, #364]	; (2c28 <__ieee754_sqrt+0x174>)
    2aba:	438f      	bics	r7, r1
    2abc:	4605      	mov	r5, r0
    2abe:	460c      	mov	r4, r1
    2ac0:	f000 8092 	beq.w	2be8 <__ieee754_sqrt+0x134>
    2ac4:	2900      	cmp	r1, #0
    2ac6:	460b      	mov	r3, r1
    2ac8:	4602      	mov	r2, r0
    2aca:	dd6f      	ble.n	2bac <__ieee754_sqrt+0xf8>
    2acc:	150f      	asrs	r7, r1, #20
    2ace:	d07b      	beq.n	2bc8 <__ieee754_sqrt+0x114>
    2ad0:	f2a7 37ff 	subw	r7, r7, #1023	; 0x3ff
    2ad4:	f3c3 0313 	ubfx	r3, r3, #0, #20
    2ad8:	07f8      	lsls	r0, r7, #31
    2ada:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    2ade:	d45c      	bmi.n	2b9a <__ieee754_sqrt+0xe6>
    2ae0:	eb03 71d2 	add.w	r1, r3, r2, lsr #31
    2ae4:	2600      	movs	r6, #0
    2ae6:	440b      	add	r3, r1
    2ae8:	107f      	asrs	r7, r7, #1
    2aea:	0052      	lsls	r2, r2, #1
    2aec:	46b6      	mov	lr, r6
    2aee:	2016      	movs	r0, #22
    2af0:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
    2af4:	eb0e 0401 	add.w	r4, lr, r1
    2af8:	429c      	cmp	r4, r3
    2afa:	ea4f 75d2 	mov.w	r5, r2, lsr #31
    2afe:	ea4f 0242 	mov.w	r2, r2, lsl #1
    2b02:	dc03      	bgt.n	2b0c <__ieee754_sqrt+0x58>
    2b04:	1b1b      	subs	r3, r3, r4
    2b06:	eb04 0e01 	add.w	lr, r4, r1
    2b0a:	440e      	add	r6, r1
    2b0c:	3801      	subs	r0, #1
    2b0e:	eb05 0343 	add.w	r3, r5, r3, lsl #1
    2b12:	ea4f 0151 	mov.w	r1, r1, lsr #1
    2b16:	d1ed      	bne.n	2af4 <__ieee754_sqrt+0x40>
    2b18:	4684      	mov	ip, r0
    2b1a:	2420      	movs	r4, #32
    2b1c:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
    2b20:	e009      	b.n	2b36 <__ieee754_sqrt+0x82>
    2b22:	d020      	beq.n	2b66 <__ieee754_sqrt+0xb2>
    2b24:	eb03 75d2 	add.w	r5, r3, r2, lsr #31
    2b28:	3c01      	subs	r4, #1
    2b2a:	ea4f 0151 	mov.w	r1, r1, lsr #1
    2b2e:	442b      	add	r3, r5
    2b30:	ea4f 0242 	mov.w	r2, r2, lsl #1
    2b34:	d020      	beq.n	2b78 <__ieee754_sqrt+0xc4>
    2b36:	4573      	cmp	r3, lr
    2b38:	eb01 050c 	add.w	r5, r1, ip
    2b3c:	ddf1      	ble.n	2b22 <__ieee754_sqrt+0x6e>
    2b3e:	2d00      	cmp	r5, #0
    2b40:	eb05 0c01 	add.w	ip, r5, r1
    2b44:	db09      	blt.n	2b5a <__ieee754_sqrt+0xa6>
    2b46:	46f0      	mov	r8, lr
    2b48:	4295      	cmp	r5, r2
    2b4a:	eba3 030e 	sub.w	r3, r3, lr
    2b4e:	d900      	bls.n	2b52 <__ieee754_sqrt+0x9e>
    2b50:	3b01      	subs	r3, #1
    2b52:	1b52      	subs	r2, r2, r5
    2b54:	4408      	add	r0, r1
    2b56:	46c6      	mov	lr, r8
    2b58:	e7e4      	b.n	2b24 <__ieee754_sqrt+0x70>
    2b5a:	f1bc 0f00 	cmp.w	ip, #0
    2b5e:	dbf2      	blt.n	2b46 <__ieee754_sqrt+0x92>
    2b60:	f10e 0801 	add.w	r8, lr, #1
    2b64:	e7f0      	b.n	2b48 <__ieee754_sqrt+0x94>
    2b66:	4295      	cmp	r5, r2
    2b68:	d8dc      	bhi.n	2b24 <__ieee754_sqrt+0x70>
    2b6a:	2d00      	cmp	r5, #0
    2b6c:	eb05 0c01 	add.w	ip, r5, r1
    2b70:	db44      	blt.n	2bfc <__ieee754_sqrt+0x148>
    2b72:	4698      	mov	r8, r3
    2b74:	2300      	movs	r3, #0
    2b76:	e7ec      	b.n	2b52 <__ieee754_sqrt+0x9e>
    2b78:	4313      	orrs	r3, r2
    2b7a:	d113      	bne.n	2ba4 <__ieee754_sqrt+0xf0>
    2b7c:	0840      	lsrs	r0, r0, #1
    2b7e:	1073      	asrs	r3, r6, #1
    2b80:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
    2b84:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
    2b88:	07f2      	lsls	r2, r6, #31
    2b8a:	eb03 5907 	add.w	r9, r3, r7, lsl #20
    2b8e:	bf48      	it	mi
    2b90:	f040 4000 	orrmi.w	r0, r0, #2147483648	; 0x80000000
    2b94:	4649      	mov	r1, r9
    2b96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    2b9a:	005b      	lsls	r3, r3, #1
    2b9c:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
    2ba0:	0052      	lsls	r2, r2, #1
    2ba2:	e79d      	b.n	2ae0 <__ieee754_sqrt+0x2c>
    2ba4:	1c41      	adds	r1, r0, #1
    2ba6:	d02d      	beq.n	2c04 <__ieee754_sqrt+0x150>
    2ba8:	3001      	adds	r0, #1
    2baa:	e7e7      	b.n	2b7c <__ieee754_sqrt+0xc8>
    2bac:	4606      	mov	r6, r0
    2bae:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
    2bb2:	433e      	orrs	r6, r7
    2bb4:	d0ef      	beq.n	2b96 <__ieee754_sqrt+0xe2>
    2bb6:	bb69      	cbnz	r1, 2c14 <__ieee754_sqrt+0x160>
    2bb8:	460f      	mov	r7, r1
    2bba:	0ad3      	lsrs	r3, r2, #11
    2bbc:	3f15      	subs	r7, #21
    2bbe:	0552      	lsls	r2, r2, #21
    2bc0:	2b00      	cmp	r3, #0
    2bc2:	d0fa      	beq.n	2bba <__ieee754_sqrt+0x106>
    2bc4:	02de      	lsls	r6, r3, #11
    2bc6:	d420      	bmi.n	2c0a <__ieee754_sqrt+0x156>
    2bc8:	2400      	movs	r4, #0
    2bca:	e000      	b.n	2bce <__ieee754_sqrt+0x11a>
    2bcc:	4604      	mov	r4, r0
    2bce:	005b      	lsls	r3, r3, #1
    2bd0:	02dd      	lsls	r5, r3, #11
    2bd2:	f104 0001 	add.w	r0, r4, #1
    2bd6:	d5f9      	bpl.n	2bcc <__ieee754_sqrt+0x118>
    2bd8:	f1c0 0120 	rsb	r1, r0, #32
    2bdc:	fa22 f101 	lsr.w	r1, r2, r1
    2be0:	430b      	orrs	r3, r1
    2be2:	1b3f      	subs	r7, r7, r4
    2be4:	4082      	lsls	r2, r0
    2be6:	e773      	b.n	2ad0 <__ieee754_sqrt+0x1c>
    2be8:	4602      	mov	r2, r0
    2bea:	460b      	mov	r3, r1
    2bec:	f000 fafa 	bl	31e4 <__aeabi_dmul>
    2bf0:	462a      	mov	r2, r5
    2bf2:	4623      	mov	r3, r4
    2bf4:	f000 f944 	bl	2e80 <__adddf3>
    2bf8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    2bfc:	f1bc 0f00 	cmp.w	ip, #0
    2c00:	daae      	bge.n	2b60 <__ieee754_sqrt+0xac>
    2c02:	e7b6      	b.n	2b72 <__ieee754_sqrt+0xbe>
    2c04:	3601      	adds	r6, #1
    2c06:	4620      	mov	r0, r4
    2c08:	e7b9      	b.n	2b7e <__ieee754_sqrt+0xca>
    2c0a:	2000      	movs	r0, #0
    2c0c:	2120      	movs	r1, #32
    2c0e:	f04f 34ff 	mov.w	r4, #4294967295
    2c12:	e7e3      	b.n	2bdc <__ieee754_sqrt+0x128>
    2c14:	4602      	mov	r2, r0
    2c16:	460b      	mov	r3, r1
    2c18:	f000 f930 	bl	2e7c <__aeabi_dsub>
    2c1c:	4602      	mov	r2, r0
    2c1e:	460b      	mov	r3, r1
    2c20:	f000 fc0a 	bl	3438 <__aeabi_ddiv>
    2c24:	e7b7      	b.n	2b96 <__ieee754_sqrt+0xe2>
    2c26:	bf00      	nop
    2c28:	7ff00000 	.word	0x7ff00000

00002c2c <fabs>:
    2c2c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    2c30:	4770      	bx	lr
    2c32:	bf00      	nop

00002c34 <finite>:
    2c34:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
    2c38:	f501 1080 	add.w	r0, r1, #1048576	; 0x100000
    2c3c:	0fc0      	lsrs	r0, r0, #31
    2c3e:	4770      	bx	lr

00002c40 <matherr>:
    2c40:	2000      	movs	r0, #0
    2c42:	4770      	bx	lr

00002c44 <nan>:
    2c44:	2000      	movs	r0, #0
    2c46:	4901      	ldr	r1, [pc, #4]	; (2c4c <nan+0x8>)
    2c48:	4770      	bx	lr
    2c4a:	bf00      	nop
    2c4c:	7ff80000 	.word	0x7ff80000

00002c50 <rint>:
    2c50:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c52:	f3c1 5e0a 	ubfx	lr, r1, #20, #11
    2c56:	f2ae 36ff 	subw	r6, lr, #1023	; 0x3ff
    2c5a:	2e13      	cmp	r6, #19
    2c5c:	b083      	sub	sp, #12
    2c5e:	4602      	mov	r2, r0
    2c60:	460b      	mov	r3, r1
    2c62:	460c      	mov	r4, r1
    2c64:	ea4f 75d1 	mov.w	r5, r1, lsr #31
    2c68:	4607      	mov	r7, r0
    2c6a:	dc2e      	bgt.n	2cca <rint+0x7a>
    2c6c:	2e00      	cmp	r6, #0
    2c6e:	db49      	blt.n	2d04 <rint+0xb4>
    2c70:	493a      	ldr	r1, [pc, #232]	; (2d5c <rint+0x10c>)
    2c72:	4131      	asrs	r1, r6
    2c74:	ea03 0001 	and.w	r0, r3, r1
    2c78:	4310      	orrs	r0, r2
    2c7a:	d02b      	beq.n	2cd4 <rint+0x84>
    2c7c:	0849      	lsrs	r1, r1, #1
    2c7e:	400b      	ands	r3, r1
    2c80:	ea53 0702 	orrs.w	r7, r3, r2
    2c84:	d00c      	beq.n	2ca0 <rint+0x50>
    2c86:	f44f 2380 	mov.w	r3, #262144	; 0x40000
    2c8a:	2e13      	cmp	r6, #19
    2c8c:	ea24 0101 	bic.w	r1, r4, r1
    2c90:	fa43 f406 	asr.w	r4, r3, r6
    2c94:	ea44 0401 	orr.w	r4, r4, r1
    2c98:	bf0c      	ite	eq
    2c9a:	f04f 4700 	moveq.w	r7, #2147483648	; 0x80000000
    2c9e:	2700      	movne	r7, #0
    2ca0:	4b2f      	ldr	r3, [pc, #188]	; (2d60 <rint+0x110>)
    2ca2:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
    2ca6:	4621      	mov	r1, r4
    2ca8:	e9d5 4500 	ldrd	r4, r5, [r5]
    2cac:	4638      	mov	r0, r7
    2cae:	4622      	mov	r2, r4
    2cb0:	462b      	mov	r3, r5
    2cb2:	f000 f8e5 	bl	2e80 <__adddf3>
    2cb6:	e9cd 0100 	strd	r0, r1, [sp]
    2cba:	4622      	mov	r2, r4
    2cbc:	462b      	mov	r3, r5
    2cbe:	e9dd 0100 	ldrd	r0, r1, [sp]
    2cc2:	f000 f8db 	bl	2e7c <__aeabi_dsub>
    2cc6:	b003      	add	sp, #12
    2cc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2cca:	2e33      	cmp	r6, #51	; 0x33
    2ccc:	dd06      	ble.n	2cdc <rint+0x8c>
    2cce:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
    2cd2:	d040      	beq.n	2d56 <rint+0x106>
    2cd4:	4610      	mov	r0, r2
    2cd6:	4619      	mov	r1, r3
    2cd8:	b003      	add	sp, #12
    2cda:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2cdc:	f2ae 4e13 	subw	lr, lr, #1043	; 0x413
    2ce0:	f04f 31ff 	mov.w	r1, #4294967295
    2ce4:	fa21 f10e 	lsr.w	r1, r1, lr
    2ce8:	4208      	tst	r0, r1
    2cea:	d0f3      	beq.n	2cd4 <rint+0x84>
    2cec:	0849      	lsrs	r1, r1, #1
    2cee:	4208      	tst	r0, r1
    2cf0:	d0d6      	beq.n	2ca0 <rint+0x50>
    2cf2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    2cf6:	ea20 0101 	bic.w	r1, r0, r1
    2cfa:	fa43 fe0e 	asr.w	lr, r3, lr
    2cfe:	ea4e 0701 	orr.w	r7, lr, r1
    2d02:	e7cd      	b.n	2ca0 <rint+0x50>
    2d04:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    2d08:	4301      	orrs	r1, r0
    2d0a:	d0e3      	beq.n	2cd4 <rint+0x84>
    2d0c:	f3c3 0113 	ubfx	r1, r3, #0, #20
    2d10:	4e13      	ldr	r6, [pc, #76]	; (2d60 <rint+0x110>)
    2d12:	4301      	orrs	r1, r0
    2d14:	f1c1 0c00 	rsb	ip, r1, #0
    2d18:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
    2d1c:	e9d6 6700 	ldrd	r6, r7, [r6]
    2d20:	ea4c 0c01 	orr.w	ip, ip, r1
    2d24:	ea4f 3c1c 	mov.w	ip, ip, lsr #12
    2d28:	0c5c      	lsrs	r4, r3, #17
    2d2a:	0464      	lsls	r4, r4, #17
    2d2c:	f40c 2300 	and.w	r3, ip, #524288	; 0x80000
    2d30:	ea43 0104 	orr.w	r1, r3, r4
    2d34:	4632      	mov	r2, r6
    2d36:	463b      	mov	r3, r7
    2d38:	f000 f8a2 	bl	2e80 <__adddf3>
    2d3c:	e9cd 0100 	strd	r0, r1, [sp]
    2d40:	4632      	mov	r2, r6
    2d42:	463b      	mov	r3, r7
    2d44:	e9dd 0100 	ldrd	r0, r1, [sp]
    2d48:	f000 f898 	bl	2e7c <__aeabi_dsub>
    2d4c:	f021 4400 	bic.w	r4, r1, #2147483648	; 0x80000000
    2d50:	ea44 71c5 	orr.w	r1, r4, r5, lsl #31
    2d54:	e7c0      	b.n	2cd8 <rint+0x88>
    2d56:	f000 f893 	bl	2e80 <__adddf3>
    2d5a:	e7bd      	b.n	2cd8 <rint+0x88>
    2d5c:	000fffff 	.word	0x000fffff
    2d60:	00005f30 	.word	0x00005f30
    2d64:	00000000 	.word	0x00000000

00002d68 <scalbn>:
    2d68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2d6a:	f3c1 560a 	ubfx	r6, r1, #20, #11
    2d6e:	4604      	mov	r4, r0
    2d70:	460d      	mov	r5, r1
    2d72:	460b      	mov	r3, r1
    2d74:	4617      	mov	r7, r2
    2d76:	bb0e      	cbnz	r6, 2dbc <scalbn+0x54>
    2d78:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
    2d7c:	4303      	orrs	r3, r0
    2d7e:	4686      	mov	lr, r0
    2d80:	d025      	beq.n	2dce <scalbn+0x66>
    2d82:	2200      	movs	r2, #0
    2d84:	4b34      	ldr	r3, [pc, #208]	; (2e58 <scalbn+0xf0>)
    2d86:	f000 fa2d 	bl	31e4 <__aeabi_dmul>
    2d8a:	4a34      	ldr	r2, [pc, #208]	; (2e5c <scalbn+0xf4>)
    2d8c:	4297      	cmp	r7, r2
    2d8e:	4604      	mov	r4, r0
    2d90:	460d      	mov	r5, r1
    2d92:	460b      	mov	r3, r1
    2d94:	db2a      	blt.n	2dec <scalbn+0x84>
    2d96:	f3c1 560a 	ubfx	r6, r1, #20, #11
    2d9a:	3e36      	subs	r6, #54	; 0x36
    2d9c:	443e      	add	r6, r7
    2d9e:	f240 72fe 	movw	r2, #2046	; 0x7fe
    2da2:	4296      	cmp	r6, r2
    2da4:	dc28      	bgt.n	2df8 <scalbn+0x90>
    2da6:	2e00      	cmp	r6, #0
    2da8:	dd12      	ble.n	2dd0 <scalbn+0x68>
    2daa:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
    2dae:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
    2db2:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
    2db6:	4620      	mov	r0, r4
    2db8:	4629      	mov	r1, r5
    2dba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2dbc:	f240 72ff 	movw	r2, #2047	; 0x7ff
    2dc0:	4296      	cmp	r6, r2
    2dc2:	d1eb      	bne.n	2d9c <scalbn+0x34>
    2dc4:	4602      	mov	r2, r0
    2dc6:	460b      	mov	r3, r1
    2dc8:	f000 f85a 	bl	2e80 <__adddf3>
    2dcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2dce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2dd0:	f116 0f35 	cmn.w	r6, #53	; 0x35
    2dd4:	da1d      	bge.n	2e12 <scalbn+0xaa>
    2dd6:	f24c 3350 	movw	r3, #50000	; 0xc350
    2dda:	429f      	cmp	r7, r3
    2ddc:	4622      	mov	r2, r4
    2dde:	462b      	mov	r3, r5
    2de0:	dc25      	bgt.n	2e2e <scalbn+0xc6>
    2de2:	a119      	add	r1, pc, #100	; (adr r1, 2e48 <scalbn+0xe0>)
    2de4:	e9d1 0100 	ldrd	r0, r1, [r1]
    2de8:	f000 f83c 	bl	2e64 <copysign>
    2dec:	a316      	add	r3, pc, #88	; (adr r3, 2e48 <scalbn+0xe0>)
    2dee:	e9d3 2300 	ldrd	r2, r3, [r3]
    2df2:	f000 f9f7 	bl	31e4 <__aeabi_dmul>
    2df6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2df8:	4622      	mov	r2, r4
    2dfa:	462b      	mov	r3, r5
    2dfc:	a114      	add	r1, pc, #80	; (adr r1, 2e50 <scalbn+0xe8>)
    2dfe:	e9d1 0100 	ldrd	r0, r1, [r1]
    2e02:	f000 f82f 	bl	2e64 <copysign>
    2e06:	a312      	add	r3, pc, #72	; (adr r3, 2e50 <scalbn+0xe8>)
    2e08:	e9d3 2300 	ldrd	r2, r3, [r3]
    2e0c:	f000 f9ea 	bl	31e4 <__aeabi_dmul>
    2e10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2e12:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
    2e16:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
    2e1a:	3636      	adds	r6, #54	; 0x36
    2e1c:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
    2e20:	4620      	mov	r0, r4
    2e22:	4629      	mov	r1, r5
    2e24:	2200      	movs	r2, #0
    2e26:	4b0e      	ldr	r3, [pc, #56]	; (2e60 <scalbn+0xf8>)
    2e28:	f000 f9dc 	bl	31e4 <__aeabi_dmul>
    2e2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2e2e:	a108      	add	r1, pc, #32	; (adr r1, 2e50 <scalbn+0xe8>)
    2e30:	e9d1 0100 	ldrd	r0, r1, [r1]
    2e34:	f000 f816 	bl	2e64 <copysign>
    2e38:	a305      	add	r3, pc, #20	; (adr r3, 2e50 <scalbn+0xe8>)
    2e3a:	e9d3 2300 	ldrd	r2, r3, [r3]
    2e3e:	f000 f9d1 	bl	31e4 <__aeabi_dmul>
    2e42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2e44:	f3af 8000 	nop.w
    2e48:	c2f8f359 	.word	0xc2f8f359
    2e4c:	01a56e1f 	.word	0x01a56e1f
    2e50:	8800759c 	.word	0x8800759c
    2e54:	7e37e43c 	.word	0x7e37e43c
    2e58:	43500000 	.word	0x43500000
    2e5c:	ffff3cb0 	.word	0xffff3cb0
    2e60:	3c900000 	.word	0x3c900000

00002e64 <copysign>:
    2e64:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
    2e68:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
    2e6c:	ea42 0103 	orr.w	r1, r2, r3
    2e70:	4770      	bx	lr
    2e72:	bf00      	nop

00002e74 <__aeabi_drsub>:
    2e74:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
    2e78:	e002      	b.n	2e80 <__adddf3>
    2e7a:	bf00      	nop

00002e7c <__aeabi_dsub>:
    2e7c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00002e80 <__adddf3>:
    2e80:	b530      	push	{r4, r5, lr}
    2e82:	ea4f 0441 	mov.w	r4, r1, lsl #1
    2e86:	ea4f 0543 	mov.w	r5, r3, lsl #1
    2e8a:	ea94 0f05 	teq	r4, r5
    2e8e:	bf08      	it	eq
    2e90:	ea90 0f02 	teqeq	r0, r2
    2e94:	bf1f      	itttt	ne
    2e96:	ea54 0c00 	orrsne.w	ip, r4, r0
    2e9a:	ea55 0c02 	orrsne.w	ip, r5, r2
    2e9e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
    2ea2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    2ea6:	f000 80e2 	beq.w	306e <__adddf3+0x1ee>
    2eaa:	ea4f 5454 	mov.w	r4, r4, lsr #21
    2eae:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
    2eb2:	bfb8      	it	lt
    2eb4:	426d      	neglt	r5, r5
    2eb6:	dd0c      	ble.n	2ed2 <__adddf3+0x52>
    2eb8:	442c      	add	r4, r5
    2eba:	ea80 0202 	eor.w	r2, r0, r2
    2ebe:	ea81 0303 	eor.w	r3, r1, r3
    2ec2:	ea82 0000 	eor.w	r0, r2, r0
    2ec6:	ea83 0101 	eor.w	r1, r3, r1
    2eca:	ea80 0202 	eor.w	r2, r0, r2
    2ece:	ea81 0303 	eor.w	r3, r1, r3
    2ed2:	2d36      	cmp	r5, #54	; 0x36
    2ed4:	bf88      	it	hi
    2ed6:	bd30      	pophi	{r4, r5, pc}
    2ed8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    2edc:	ea4f 3101 	mov.w	r1, r1, lsl #12
    2ee0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
    2ee4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
    2ee8:	d002      	beq.n	2ef0 <__adddf3+0x70>
    2eea:	4240      	negs	r0, r0
    2eec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    2ef0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
    2ef4:	ea4f 3303 	mov.w	r3, r3, lsl #12
    2ef8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
    2efc:	d002      	beq.n	2f04 <__adddf3+0x84>
    2efe:	4252      	negs	r2, r2
    2f00:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
    2f04:	ea94 0f05 	teq	r4, r5
    2f08:	f000 80a7 	beq.w	305a <__adddf3+0x1da>
    2f0c:	f1a4 0401 	sub.w	r4, r4, #1
    2f10:	f1d5 0e20 	rsbs	lr, r5, #32
    2f14:	db0d      	blt.n	2f32 <__adddf3+0xb2>
    2f16:	fa02 fc0e 	lsl.w	ip, r2, lr
    2f1a:	fa22 f205 	lsr.w	r2, r2, r5
    2f1e:	1880      	adds	r0, r0, r2
    2f20:	f141 0100 	adc.w	r1, r1, #0
    2f24:	fa03 f20e 	lsl.w	r2, r3, lr
    2f28:	1880      	adds	r0, r0, r2
    2f2a:	fa43 f305 	asr.w	r3, r3, r5
    2f2e:	4159      	adcs	r1, r3
    2f30:	e00e      	b.n	2f50 <__adddf3+0xd0>
    2f32:	f1a5 0520 	sub.w	r5, r5, #32
    2f36:	f10e 0e20 	add.w	lr, lr, #32
    2f3a:	2a01      	cmp	r2, #1
    2f3c:	fa03 fc0e 	lsl.w	ip, r3, lr
    2f40:	bf28      	it	cs
    2f42:	f04c 0c02 	orrcs.w	ip, ip, #2
    2f46:	fa43 f305 	asr.w	r3, r3, r5
    2f4a:	18c0      	adds	r0, r0, r3
    2f4c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
    2f50:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    2f54:	d507      	bpl.n	2f66 <__adddf3+0xe6>
    2f56:	f04f 0e00 	mov.w	lr, #0
    2f5a:	f1dc 0c00 	rsbs	ip, ip, #0
    2f5e:	eb7e 0000 	sbcs.w	r0, lr, r0
    2f62:	eb6e 0101 	sbc.w	r1, lr, r1
    2f66:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
    2f6a:	d31b      	bcc.n	2fa4 <__adddf3+0x124>
    2f6c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
    2f70:	d30c      	bcc.n	2f8c <__adddf3+0x10c>
    2f72:	0849      	lsrs	r1, r1, #1
    2f74:	ea5f 0030 	movs.w	r0, r0, rrx
    2f78:	ea4f 0c3c 	mov.w	ip, ip, rrx
    2f7c:	f104 0401 	add.w	r4, r4, #1
    2f80:	ea4f 5244 	mov.w	r2, r4, lsl #21
    2f84:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
    2f88:	f080 809a 	bcs.w	30c0 <__adddf3+0x240>
    2f8c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    2f90:	bf08      	it	eq
    2f92:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    2f96:	f150 0000 	adcs.w	r0, r0, #0
    2f9a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    2f9e:	ea41 0105 	orr.w	r1, r1, r5
    2fa2:	bd30      	pop	{r4, r5, pc}
    2fa4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
    2fa8:	4140      	adcs	r0, r0
    2faa:	eb41 0101 	adc.w	r1, r1, r1
    2fae:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    2fb2:	f1a4 0401 	sub.w	r4, r4, #1
    2fb6:	d1e9      	bne.n	2f8c <__adddf3+0x10c>
    2fb8:	f091 0f00 	teq	r1, #0
    2fbc:	bf04      	itt	eq
    2fbe:	4601      	moveq	r1, r0
    2fc0:	2000      	moveq	r0, #0
    2fc2:	fab1 f381 	clz	r3, r1
    2fc6:	bf08      	it	eq
    2fc8:	3320      	addeq	r3, #32
    2fca:	f1a3 030b 	sub.w	r3, r3, #11
    2fce:	f1b3 0220 	subs.w	r2, r3, #32
    2fd2:	da0c      	bge.n	2fee <__adddf3+0x16e>
    2fd4:	320c      	adds	r2, #12
    2fd6:	dd08      	ble.n	2fea <__adddf3+0x16a>
    2fd8:	f102 0c14 	add.w	ip, r2, #20
    2fdc:	f1c2 020c 	rsb	r2, r2, #12
    2fe0:	fa01 f00c 	lsl.w	r0, r1, ip
    2fe4:	fa21 f102 	lsr.w	r1, r1, r2
    2fe8:	e00c      	b.n	3004 <__adddf3+0x184>
    2fea:	f102 0214 	add.w	r2, r2, #20
    2fee:	bfd8      	it	le
    2ff0:	f1c2 0c20 	rsble	ip, r2, #32
    2ff4:	fa01 f102 	lsl.w	r1, r1, r2
    2ff8:	fa20 fc0c 	lsr.w	ip, r0, ip
    2ffc:	bfdc      	itt	le
    2ffe:	ea41 010c 	orrle.w	r1, r1, ip
    3002:	4090      	lslle	r0, r2
    3004:	1ae4      	subs	r4, r4, r3
    3006:	bfa2      	ittt	ge
    3008:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
    300c:	4329      	orrge	r1, r5
    300e:	bd30      	popge	{r4, r5, pc}
    3010:	ea6f 0404 	mvn.w	r4, r4
    3014:	3c1f      	subs	r4, #31
    3016:	da1c      	bge.n	3052 <__adddf3+0x1d2>
    3018:	340c      	adds	r4, #12
    301a:	dc0e      	bgt.n	303a <__adddf3+0x1ba>
    301c:	f104 0414 	add.w	r4, r4, #20
    3020:	f1c4 0220 	rsb	r2, r4, #32
    3024:	fa20 f004 	lsr.w	r0, r0, r4
    3028:	fa01 f302 	lsl.w	r3, r1, r2
    302c:	ea40 0003 	orr.w	r0, r0, r3
    3030:	fa21 f304 	lsr.w	r3, r1, r4
    3034:	ea45 0103 	orr.w	r1, r5, r3
    3038:	bd30      	pop	{r4, r5, pc}
    303a:	f1c4 040c 	rsb	r4, r4, #12
    303e:	f1c4 0220 	rsb	r2, r4, #32
    3042:	fa20 f002 	lsr.w	r0, r0, r2
    3046:	fa01 f304 	lsl.w	r3, r1, r4
    304a:	ea40 0003 	orr.w	r0, r0, r3
    304e:	4629      	mov	r1, r5
    3050:	bd30      	pop	{r4, r5, pc}
    3052:	fa21 f004 	lsr.w	r0, r1, r4
    3056:	4629      	mov	r1, r5
    3058:	bd30      	pop	{r4, r5, pc}
    305a:	f094 0f00 	teq	r4, #0
    305e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
    3062:	bf06      	itte	eq
    3064:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
    3068:	3401      	addeq	r4, #1
    306a:	3d01      	subne	r5, #1
    306c:	e74e      	b.n	2f0c <__adddf3+0x8c>
    306e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    3072:	bf18      	it	ne
    3074:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    3078:	d029      	beq.n	30ce <__adddf3+0x24e>
    307a:	ea94 0f05 	teq	r4, r5
    307e:	bf08      	it	eq
    3080:	ea90 0f02 	teqeq	r0, r2
    3084:	d005      	beq.n	3092 <__adddf3+0x212>
    3086:	ea54 0c00 	orrs.w	ip, r4, r0
    308a:	bf04      	itt	eq
    308c:	4619      	moveq	r1, r3
    308e:	4610      	moveq	r0, r2
    3090:	bd30      	pop	{r4, r5, pc}
    3092:	ea91 0f03 	teq	r1, r3
    3096:	bf1e      	ittt	ne
    3098:	2100      	movne	r1, #0
    309a:	2000      	movne	r0, #0
    309c:	bd30      	popne	{r4, r5, pc}
    309e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
    30a2:	d105      	bne.n	30b0 <__adddf3+0x230>
    30a4:	0040      	lsls	r0, r0, #1
    30a6:	4149      	adcs	r1, r1
    30a8:	bf28      	it	cs
    30aa:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
    30ae:	bd30      	pop	{r4, r5, pc}
    30b0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
    30b4:	bf3c      	itt	cc
    30b6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
    30ba:	bd30      	popcc	{r4, r5, pc}
    30bc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    30c0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
    30c4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    30c8:	f04f 0000 	mov.w	r0, #0
    30cc:	bd30      	pop	{r4, r5, pc}
    30ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    30d2:	bf1a      	itte	ne
    30d4:	4619      	movne	r1, r3
    30d6:	4610      	movne	r0, r2
    30d8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
    30dc:	bf1c      	itt	ne
    30de:	460b      	movne	r3, r1
    30e0:	4602      	movne	r2, r0
    30e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    30e6:	bf06      	itte	eq
    30e8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
    30ec:	ea91 0f03 	teqeq	r1, r3
    30f0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
    30f4:	bd30      	pop	{r4, r5, pc}
    30f6:	bf00      	nop

000030f8 <__aeabi_ui2d>:
    30f8:	f090 0f00 	teq	r0, #0
    30fc:	bf04      	itt	eq
    30fe:	2100      	moveq	r1, #0
    3100:	4770      	bxeq	lr
    3102:	b530      	push	{r4, r5, lr}
    3104:	f44f 6480 	mov.w	r4, #1024	; 0x400
    3108:	f104 0432 	add.w	r4, r4, #50	; 0x32
    310c:	f04f 0500 	mov.w	r5, #0
    3110:	f04f 0100 	mov.w	r1, #0
    3114:	e750      	b.n	2fb8 <__adddf3+0x138>
    3116:	bf00      	nop

00003118 <__aeabi_i2d>:
    3118:	f090 0f00 	teq	r0, #0
    311c:	bf04      	itt	eq
    311e:	2100      	moveq	r1, #0
    3120:	4770      	bxeq	lr
    3122:	b530      	push	{r4, r5, lr}
    3124:	f44f 6480 	mov.w	r4, #1024	; 0x400
    3128:	f104 0432 	add.w	r4, r4, #50	; 0x32
    312c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
    3130:	bf48      	it	mi
    3132:	4240      	negmi	r0, r0
    3134:	f04f 0100 	mov.w	r1, #0
    3138:	e73e      	b.n	2fb8 <__adddf3+0x138>
    313a:	bf00      	nop

0000313c <__aeabi_f2d>:
    313c:	0042      	lsls	r2, r0, #1
    313e:	ea4f 01e2 	mov.w	r1, r2, asr #3
    3142:	ea4f 0131 	mov.w	r1, r1, rrx
    3146:	ea4f 7002 	mov.w	r0, r2, lsl #28
    314a:	bf1f      	itttt	ne
    314c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
    3150:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    3154:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
    3158:	4770      	bxne	lr
    315a:	f092 0f00 	teq	r2, #0
    315e:	bf14      	ite	ne
    3160:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    3164:	4770      	bxeq	lr
    3166:	b530      	push	{r4, r5, lr}
    3168:	f44f 7460 	mov.w	r4, #896	; 0x380
    316c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    3170:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    3174:	e720      	b.n	2fb8 <__adddf3+0x138>
    3176:	bf00      	nop

00003178 <__aeabi_ul2d>:
    3178:	ea50 0201 	orrs.w	r2, r0, r1
    317c:	bf08      	it	eq
    317e:	4770      	bxeq	lr
    3180:	b530      	push	{r4, r5, lr}
    3182:	f04f 0500 	mov.w	r5, #0
    3186:	e00a      	b.n	319e <__aeabi_l2d+0x16>

00003188 <__aeabi_l2d>:
    3188:	ea50 0201 	orrs.w	r2, r0, r1
    318c:	bf08      	it	eq
    318e:	4770      	bxeq	lr
    3190:	b530      	push	{r4, r5, lr}
    3192:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
    3196:	d502      	bpl.n	319e <__aeabi_l2d+0x16>
    3198:	4240      	negs	r0, r0
    319a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    319e:	f44f 6480 	mov.w	r4, #1024	; 0x400
    31a2:	f104 0432 	add.w	r4, r4, #50	; 0x32
    31a6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
    31aa:	f43f aedc 	beq.w	2f66 <__adddf3+0xe6>
    31ae:	f04f 0203 	mov.w	r2, #3
    31b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    31b6:	bf18      	it	ne
    31b8:	3203      	addne	r2, #3
    31ba:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    31be:	bf18      	it	ne
    31c0:	3203      	addne	r2, #3
    31c2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
    31c6:	f1c2 0320 	rsb	r3, r2, #32
    31ca:	fa00 fc03 	lsl.w	ip, r0, r3
    31ce:	fa20 f002 	lsr.w	r0, r0, r2
    31d2:	fa01 fe03 	lsl.w	lr, r1, r3
    31d6:	ea40 000e 	orr.w	r0, r0, lr
    31da:	fa21 f102 	lsr.w	r1, r1, r2
    31de:	4414      	add	r4, r2
    31e0:	e6c1      	b.n	2f66 <__adddf3+0xe6>
    31e2:	bf00      	nop

000031e4 <__aeabi_dmul>:
    31e4:	b570      	push	{r4, r5, r6, lr}
    31e6:	f04f 0cff 	mov.w	ip, #255	; 0xff
    31ea:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    31ee:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    31f2:	bf1d      	ittte	ne
    31f4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    31f8:	ea94 0f0c 	teqne	r4, ip
    31fc:	ea95 0f0c 	teqne	r5, ip
    3200:	f000 f8de 	bleq	33c0 <__aeabi_dmul+0x1dc>
    3204:	442c      	add	r4, r5
    3206:	ea81 0603 	eor.w	r6, r1, r3
    320a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
    320e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
    3212:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
    3216:	bf18      	it	ne
    3218:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
    321c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    3220:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    3224:	d038      	beq.n	3298 <__aeabi_dmul+0xb4>
    3226:	fba0 ce02 	umull	ip, lr, r0, r2
    322a:	f04f 0500 	mov.w	r5, #0
    322e:	fbe1 e502 	umlal	lr, r5, r1, r2
    3232:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
    3236:	fbe0 e503 	umlal	lr, r5, r0, r3
    323a:	f04f 0600 	mov.w	r6, #0
    323e:	fbe1 5603 	umlal	r5, r6, r1, r3
    3242:	f09c 0f00 	teq	ip, #0
    3246:	bf18      	it	ne
    3248:	f04e 0e01 	orrne.w	lr, lr, #1
    324c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
    3250:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
    3254:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
    3258:	d204      	bcs.n	3264 <__aeabi_dmul+0x80>
    325a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
    325e:	416d      	adcs	r5, r5
    3260:	eb46 0606 	adc.w	r6, r6, r6
    3264:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
    3268:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
    326c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
    3270:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
    3274:	ea4f 2ece 	mov.w	lr, lr, lsl #11
    3278:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    327c:	bf88      	it	hi
    327e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    3282:	d81e      	bhi.n	32c2 <__aeabi_dmul+0xde>
    3284:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
    3288:	bf08      	it	eq
    328a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
    328e:	f150 0000 	adcs.w	r0, r0, #0
    3292:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    3296:	bd70      	pop	{r4, r5, r6, pc}
    3298:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
    329c:	ea46 0101 	orr.w	r1, r6, r1
    32a0:	ea40 0002 	orr.w	r0, r0, r2
    32a4:	ea81 0103 	eor.w	r1, r1, r3
    32a8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
    32ac:	bfc2      	ittt	gt
    32ae:	ebd4 050c 	rsbsgt	r5, r4, ip
    32b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    32b6:	bd70      	popgt	{r4, r5, r6, pc}
    32b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    32bc:	f04f 0e00 	mov.w	lr, #0
    32c0:	3c01      	subs	r4, #1
    32c2:	f300 80ab 	bgt.w	341c <__aeabi_dmul+0x238>
    32c6:	f114 0f36 	cmn.w	r4, #54	; 0x36
    32ca:	bfde      	ittt	le
    32cc:	2000      	movle	r0, #0
    32ce:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
    32d2:	bd70      	pople	{r4, r5, r6, pc}
    32d4:	f1c4 0400 	rsb	r4, r4, #0
    32d8:	3c20      	subs	r4, #32
    32da:	da35      	bge.n	3348 <__aeabi_dmul+0x164>
    32dc:	340c      	adds	r4, #12
    32de:	dc1b      	bgt.n	3318 <__aeabi_dmul+0x134>
    32e0:	f104 0414 	add.w	r4, r4, #20
    32e4:	f1c4 0520 	rsb	r5, r4, #32
    32e8:	fa00 f305 	lsl.w	r3, r0, r5
    32ec:	fa20 f004 	lsr.w	r0, r0, r4
    32f0:	fa01 f205 	lsl.w	r2, r1, r5
    32f4:	ea40 0002 	orr.w	r0, r0, r2
    32f8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
    32fc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    3300:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    3304:	fa21 f604 	lsr.w	r6, r1, r4
    3308:	eb42 0106 	adc.w	r1, r2, r6
    330c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    3310:	bf08      	it	eq
    3312:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    3316:	bd70      	pop	{r4, r5, r6, pc}
    3318:	f1c4 040c 	rsb	r4, r4, #12
    331c:	f1c4 0520 	rsb	r5, r4, #32
    3320:	fa00 f304 	lsl.w	r3, r0, r4
    3324:	fa20 f005 	lsr.w	r0, r0, r5
    3328:	fa01 f204 	lsl.w	r2, r1, r4
    332c:	ea40 0002 	orr.w	r0, r0, r2
    3330:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    3334:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    3338:	f141 0100 	adc.w	r1, r1, #0
    333c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    3340:	bf08      	it	eq
    3342:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    3346:	bd70      	pop	{r4, r5, r6, pc}
    3348:	f1c4 0520 	rsb	r5, r4, #32
    334c:	fa00 f205 	lsl.w	r2, r0, r5
    3350:	ea4e 0e02 	orr.w	lr, lr, r2
    3354:	fa20 f304 	lsr.w	r3, r0, r4
    3358:	fa01 f205 	lsl.w	r2, r1, r5
    335c:	ea43 0302 	orr.w	r3, r3, r2
    3360:	fa21 f004 	lsr.w	r0, r1, r4
    3364:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    3368:	fa21 f204 	lsr.w	r2, r1, r4
    336c:	ea20 0002 	bic.w	r0, r0, r2
    3370:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
    3374:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    3378:	bf08      	it	eq
    337a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    337e:	bd70      	pop	{r4, r5, r6, pc}
    3380:	f094 0f00 	teq	r4, #0
    3384:	d10f      	bne.n	33a6 <__aeabi_dmul+0x1c2>
    3386:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
    338a:	0040      	lsls	r0, r0, #1
    338c:	eb41 0101 	adc.w	r1, r1, r1
    3390:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    3394:	bf08      	it	eq
    3396:	3c01      	subeq	r4, #1
    3398:	d0f7      	beq.n	338a <__aeabi_dmul+0x1a6>
    339a:	ea41 0106 	orr.w	r1, r1, r6
    339e:	f095 0f00 	teq	r5, #0
    33a2:	bf18      	it	ne
    33a4:	4770      	bxne	lr
    33a6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
    33aa:	0052      	lsls	r2, r2, #1
    33ac:	eb43 0303 	adc.w	r3, r3, r3
    33b0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
    33b4:	bf08      	it	eq
    33b6:	3d01      	subeq	r5, #1
    33b8:	d0f7      	beq.n	33aa <__aeabi_dmul+0x1c6>
    33ba:	ea43 0306 	orr.w	r3, r3, r6
    33be:	4770      	bx	lr
    33c0:	ea94 0f0c 	teq	r4, ip
    33c4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    33c8:	bf18      	it	ne
    33ca:	ea95 0f0c 	teqne	r5, ip
    33ce:	d00c      	beq.n	33ea <__aeabi_dmul+0x206>
    33d0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    33d4:	bf18      	it	ne
    33d6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    33da:	d1d1      	bne.n	3380 <__aeabi_dmul+0x19c>
    33dc:	ea81 0103 	eor.w	r1, r1, r3
    33e0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    33e4:	f04f 0000 	mov.w	r0, #0
    33e8:	bd70      	pop	{r4, r5, r6, pc}
    33ea:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    33ee:	bf06      	itte	eq
    33f0:	4610      	moveq	r0, r2
    33f2:	4619      	moveq	r1, r3
    33f4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    33f8:	d019      	beq.n	342e <__aeabi_dmul+0x24a>
    33fa:	ea94 0f0c 	teq	r4, ip
    33fe:	d102      	bne.n	3406 <__aeabi_dmul+0x222>
    3400:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
    3404:	d113      	bne.n	342e <__aeabi_dmul+0x24a>
    3406:	ea95 0f0c 	teq	r5, ip
    340a:	d105      	bne.n	3418 <__aeabi_dmul+0x234>
    340c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
    3410:	bf1c      	itt	ne
    3412:	4610      	movne	r0, r2
    3414:	4619      	movne	r1, r3
    3416:	d10a      	bne.n	342e <__aeabi_dmul+0x24a>
    3418:	ea81 0103 	eor.w	r1, r1, r3
    341c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    3420:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    3424:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    3428:	f04f 0000 	mov.w	r0, #0
    342c:	bd70      	pop	{r4, r5, r6, pc}
    342e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    3432:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
    3436:	bd70      	pop	{r4, r5, r6, pc}

00003438 <__aeabi_ddiv>:
    3438:	b570      	push	{r4, r5, r6, lr}
    343a:	f04f 0cff 	mov.w	ip, #255	; 0xff
    343e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    3442:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    3446:	bf1d      	ittte	ne
    3448:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    344c:	ea94 0f0c 	teqne	r4, ip
    3450:	ea95 0f0c 	teqne	r5, ip
    3454:	f000 f8a7 	bleq	35a6 <__aeabi_ddiv+0x16e>
    3458:	eba4 0405 	sub.w	r4, r4, r5
    345c:	ea81 0e03 	eor.w	lr, r1, r3
    3460:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    3464:	ea4f 3101 	mov.w	r1, r1, lsl #12
    3468:	f000 8088 	beq.w	357c <__aeabi_ddiv+0x144>
    346c:	ea4f 3303 	mov.w	r3, r3, lsl #12
    3470:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
    3474:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
    3478:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
    347c:	ea4f 2202 	mov.w	r2, r2, lsl #8
    3480:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
    3484:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
    3488:	ea4f 2600 	mov.w	r6, r0, lsl #8
    348c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
    3490:	429d      	cmp	r5, r3
    3492:	bf08      	it	eq
    3494:	4296      	cmpeq	r6, r2
    3496:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
    349a:	f504 7440 	add.w	r4, r4, #768	; 0x300
    349e:	d202      	bcs.n	34a6 <__aeabi_ddiv+0x6e>
    34a0:	085b      	lsrs	r3, r3, #1
    34a2:	ea4f 0232 	mov.w	r2, r2, rrx
    34a6:	1ab6      	subs	r6, r6, r2
    34a8:	eb65 0503 	sbc.w	r5, r5, r3
    34ac:	085b      	lsrs	r3, r3, #1
    34ae:	ea4f 0232 	mov.w	r2, r2, rrx
    34b2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
    34b6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
    34ba:	ebb6 0e02 	subs.w	lr, r6, r2
    34be:	eb75 0e03 	sbcs.w	lr, r5, r3
    34c2:	bf22      	ittt	cs
    34c4:	1ab6      	subcs	r6, r6, r2
    34c6:	4675      	movcs	r5, lr
    34c8:	ea40 000c 	orrcs.w	r0, r0, ip
    34cc:	085b      	lsrs	r3, r3, #1
    34ce:	ea4f 0232 	mov.w	r2, r2, rrx
    34d2:	ebb6 0e02 	subs.w	lr, r6, r2
    34d6:	eb75 0e03 	sbcs.w	lr, r5, r3
    34da:	bf22      	ittt	cs
    34dc:	1ab6      	subcs	r6, r6, r2
    34de:	4675      	movcs	r5, lr
    34e0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    34e4:	085b      	lsrs	r3, r3, #1
    34e6:	ea4f 0232 	mov.w	r2, r2, rrx
    34ea:	ebb6 0e02 	subs.w	lr, r6, r2
    34ee:	eb75 0e03 	sbcs.w	lr, r5, r3
    34f2:	bf22      	ittt	cs
    34f4:	1ab6      	subcs	r6, r6, r2
    34f6:	4675      	movcs	r5, lr
    34f8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    34fc:	085b      	lsrs	r3, r3, #1
    34fe:	ea4f 0232 	mov.w	r2, r2, rrx
    3502:	ebb6 0e02 	subs.w	lr, r6, r2
    3506:	eb75 0e03 	sbcs.w	lr, r5, r3
    350a:	bf22      	ittt	cs
    350c:	1ab6      	subcs	r6, r6, r2
    350e:	4675      	movcs	r5, lr
    3510:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    3514:	ea55 0e06 	orrs.w	lr, r5, r6
    3518:	d018      	beq.n	354c <__aeabi_ddiv+0x114>
    351a:	ea4f 1505 	mov.w	r5, r5, lsl #4
    351e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
    3522:	ea4f 1606 	mov.w	r6, r6, lsl #4
    3526:	ea4f 03c3 	mov.w	r3, r3, lsl #3
    352a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
    352e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    3532:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
    3536:	d1c0      	bne.n	34ba <__aeabi_ddiv+0x82>
    3538:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    353c:	d10b      	bne.n	3556 <__aeabi_ddiv+0x11e>
    353e:	ea41 0100 	orr.w	r1, r1, r0
    3542:	f04f 0000 	mov.w	r0, #0
    3546:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
    354a:	e7b6      	b.n	34ba <__aeabi_ddiv+0x82>
    354c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    3550:	bf04      	itt	eq
    3552:	4301      	orreq	r1, r0
    3554:	2000      	moveq	r0, #0
    3556:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    355a:	bf88      	it	hi
    355c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    3560:	f63f aeaf 	bhi.w	32c2 <__aeabi_dmul+0xde>
    3564:	ebb5 0c03 	subs.w	ip, r5, r3
    3568:	bf04      	itt	eq
    356a:	ebb6 0c02 	subseq.w	ip, r6, r2
    356e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    3572:	f150 0000 	adcs.w	r0, r0, #0
    3576:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    357a:	bd70      	pop	{r4, r5, r6, pc}
    357c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
    3580:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
    3584:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
    3588:	bfc2      	ittt	gt
    358a:	ebd4 050c 	rsbsgt	r5, r4, ip
    358e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    3592:	bd70      	popgt	{r4, r5, r6, pc}
    3594:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    3598:	f04f 0e00 	mov.w	lr, #0
    359c:	3c01      	subs	r4, #1
    359e:	e690      	b.n	32c2 <__aeabi_dmul+0xde>
    35a0:	ea45 0e06 	orr.w	lr, r5, r6
    35a4:	e68d      	b.n	32c2 <__aeabi_dmul+0xde>
    35a6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    35aa:	ea94 0f0c 	teq	r4, ip
    35ae:	bf08      	it	eq
    35b0:	ea95 0f0c 	teqeq	r5, ip
    35b4:	f43f af3b 	beq.w	342e <__aeabi_dmul+0x24a>
    35b8:	ea94 0f0c 	teq	r4, ip
    35bc:	d10a      	bne.n	35d4 <__aeabi_ddiv+0x19c>
    35be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    35c2:	f47f af34 	bne.w	342e <__aeabi_dmul+0x24a>
    35c6:	ea95 0f0c 	teq	r5, ip
    35ca:	f47f af25 	bne.w	3418 <__aeabi_dmul+0x234>
    35ce:	4610      	mov	r0, r2
    35d0:	4619      	mov	r1, r3
    35d2:	e72c      	b.n	342e <__aeabi_dmul+0x24a>
    35d4:	ea95 0f0c 	teq	r5, ip
    35d8:	d106      	bne.n	35e8 <__aeabi_ddiv+0x1b0>
    35da:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    35de:	f43f aefd 	beq.w	33dc <__aeabi_dmul+0x1f8>
    35e2:	4610      	mov	r0, r2
    35e4:	4619      	mov	r1, r3
    35e6:	e722      	b.n	342e <__aeabi_dmul+0x24a>
    35e8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    35ec:	bf18      	it	ne
    35ee:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    35f2:	f47f aec5 	bne.w	3380 <__aeabi_dmul+0x19c>
    35f6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
    35fa:	f47f af0d 	bne.w	3418 <__aeabi_dmul+0x234>
    35fe:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
    3602:	f47f aeeb 	bne.w	33dc <__aeabi_dmul+0x1f8>
    3606:	e712      	b.n	342e <__aeabi_dmul+0x24a>

00003608 <__gedf2>:
    3608:	f04f 3cff 	mov.w	ip, #4294967295
    360c:	e006      	b.n	361c <__cmpdf2+0x4>
    360e:	bf00      	nop

00003610 <__ledf2>:
    3610:	f04f 0c01 	mov.w	ip, #1
    3614:	e002      	b.n	361c <__cmpdf2+0x4>
    3616:	bf00      	nop

00003618 <__cmpdf2>:
    3618:	f04f 0c01 	mov.w	ip, #1
    361c:	f84d cd04 	str.w	ip, [sp, #-4]!
    3620:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    3624:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    3628:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    362c:	bf18      	it	ne
    362e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
    3632:	d01b      	beq.n	366c <__cmpdf2+0x54>
    3634:	b001      	add	sp, #4
    3636:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
    363a:	bf0c      	ite	eq
    363c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
    3640:	ea91 0f03 	teqne	r1, r3
    3644:	bf02      	ittt	eq
    3646:	ea90 0f02 	teqeq	r0, r2
    364a:	2000      	moveq	r0, #0
    364c:	4770      	bxeq	lr
    364e:	f110 0f00 	cmn.w	r0, #0
    3652:	ea91 0f03 	teq	r1, r3
    3656:	bf58      	it	pl
    3658:	4299      	cmppl	r1, r3
    365a:	bf08      	it	eq
    365c:	4290      	cmpeq	r0, r2
    365e:	bf2c      	ite	cs
    3660:	17d8      	asrcs	r0, r3, #31
    3662:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
    3666:	f040 0001 	orr.w	r0, r0, #1
    366a:	4770      	bx	lr
    366c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    3670:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    3674:	d102      	bne.n	367c <__cmpdf2+0x64>
    3676:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    367a:	d107      	bne.n	368c <__cmpdf2+0x74>
    367c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    3680:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    3684:	d1d6      	bne.n	3634 <__cmpdf2+0x1c>
    3686:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    368a:	d0d3      	beq.n	3634 <__cmpdf2+0x1c>
    368c:	f85d 0b04 	ldr.w	r0, [sp], #4
    3690:	4770      	bx	lr
    3692:	bf00      	nop

00003694 <__aeabi_cdrcmple>:
    3694:	4684      	mov	ip, r0
    3696:	4610      	mov	r0, r2
    3698:	4662      	mov	r2, ip
    369a:	468c      	mov	ip, r1
    369c:	4619      	mov	r1, r3
    369e:	4663      	mov	r3, ip
    36a0:	e000      	b.n	36a4 <__aeabi_cdcmpeq>
    36a2:	bf00      	nop

000036a4 <__aeabi_cdcmpeq>:
    36a4:	b501      	push	{r0, lr}
    36a6:	f7ff ffb7 	bl	3618 <__cmpdf2>
    36aa:	2800      	cmp	r0, #0
    36ac:	bf48      	it	mi
    36ae:	f110 0f00 	cmnmi.w	r0, #0
    36b2:	bd01      	pop	{r0, pc}

000036b4 <__aeabi_dcmpeq>:
    36b4:	f84d ed08 	str.w	lr, [sp, #-8]!
    36b8:	f7ff fff4 	bl	36a4 <__aeabi_cdcmpeq>
    36bc:	bf0c      	ite	eq
    36be:	2001      	moveq	r0, #1
    36c0:	2000      	movne	r0, #0
    36c2:	f85d fb08 	ldr.w	pc, [sp], #8
    36c6:	bf00      	nop

000036c8 <__aeabi_dcmplt>:
    36c8:	f84d ed08 	str.w	lr, [sp, #-8]!
    36cc:	f7ff ffea 	bl	36a4 <__aeabi_cdcmpeq>
    36d0:	bf34      	ite	cc
    36d2:	2001      	movcc	r0, #1
    36d4:	2000      	movcs	r0, #0
    36d6:	f85d fb08 	ldr.w	pc, [sp], #8
    36da:	bf00      	nop

000036dc <__aeabi_dcmple>:
    36dc:	f84d ed08 	str.w	lr, [sp, #-8]!
    36e0:	f7ff ffe0 	bl	36a4 <__aeabi_cdcmpeq>
    36e4:	bf94      	ite	ls
    36e6:	2001      	movls	r0, #1
    36e8:	2000      	movhi	r0, #0
    36ea:	f85d fb08 	ldr.w	pc, [sp], #8
    36ee:	bf00      	nop

000036f0 <__aeabi_dcmpge>:
    36f0:	f84d ed08 	str.w	lr, [sp, #-8]!
    36f4:	f7ff ffce 	bl	3694 <__aeabi_cdrcmple>
    36f8:	bf94      	ite	ls
    36fa:	2001      	movls	r0, #1
    36fc:	2000      	movhi	r0, #0
    36fe:	f85d fb08 	ldr.w	pc, [sp], #8
    3702:	bf00      	nop

00003704 <__aeabi_dcmpgt>:
    3704:	f84d ed08 	str.w	lr, [sp, #-8]!
    3708:	f7ff ffc4 	bl	3694 <__aeabi_cdrcmple>
    370c:	bf34      	ite	cc
    370e:	2001      	movcc	r0, #1
    3710:	2000      	movcs	r0, #0
    3712:	f85d fb08 	ldr.w	pc, [sp], #8
    3716:	bf00      	nop

00003718 <__aeabi_dcmpun>:
    3718:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    371c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    3720:	d102      	bne.n	3728 <__aeabi_dcmpun+0x10>
    3722:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    3726:	d10a      	bne.n	373e <__aeabi_dcmpun+0x26>
    3728:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    372c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    3730:	d102      	bne.n	3738 <__aeabi_dcmpun+0x20>
    3732:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    3736:	d102      	bne.n	373e <__aeabi_dcmpun+0x26>
    3738:	f04f 0000 	mov.w	r0, #0
    373c:	4770      	bx	lr
    373e:	f04f 0001 	mov.w	r0, #1
    3742:	4770      	bx	lr

00003744 <__aeabi_d2iz>:
    3744:	ea4f 0241 	mov.w	r2, r1, lsl #1
    3748:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    374c:	d215      	bcs.n	377a <__aeabi_d2iz+0x36>
    374e:	d511      	bpl.n	3774 <__aeabi_d2iz+0x30>
    3750:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    3754:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    3758:	d912      	bls.n	3780 <__aeabi_d2iz+0x3c>
    375a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    375e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    3762:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    3766:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    376a:	fa23 f002 	lsr.w	r0, r3, r2
    376e:	bf18      	it	ne
    3770:	4240      	negne	r0, r0
    3772:	4770      	bx	lr
    3774:	f04f 0000 	mov.w	r0, #0
    3778:	4770      	bx	lr
    377a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    377e:	d105      	bne.n	378c <__aeabi_d2iz+0x48>
    3780:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
    3784:	bf08      	it	eq
    3786:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    378a:	4770      	bx	lr
    378c:	f04f 0000 	mov.w	r0, #0
    3790:	4770      	bx	lr
    3792:	bf00      	nop

00003794 <__aeabi_d2f>:
    3794:	ea4f 0241 	mov.w	r2, r1, lsl #1
    3798:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
    379c:	bf24      	itt	cs
    379e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
    37a2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
    37a6:	d90d      	bls.n	37c4 <__aeabi_d2f+0x30>
    37a8:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    37ac:	ea4f 02c0 	mov.w	r2, r0, lsl #3
    37b0:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
    37b4:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
    37b8:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
    37bc:	bf08      	it	eq
    37be:	f020 0001 	biceq.w	r0, r0, #1
    37c2:	4770      	bx	lr
    37c4:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
    37c8:	d121      	bne.n	380e <__aeabi_d2f+0x7a>
    37ca:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
    37ce:	bfbc      	itt	lt
    37d0:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
    37d4:	4770      	bxlt	lr
    37d6:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    37da:	ea4f 5252 	mov.w	r2, r2, lsr #21
    37de:	f1c2 0218 	rsb	r2, r2, #24
    37e2:	f1c2 0c20 	rsb	ip, r2, #32
    37e6:	fa10 f30c 	lsls.w	r3, r0, ip
    37ea:	fa20 f002 	lsr.w	r0, r0, r2
    37ee:	bf18      	it	ne
    37f0:	f040 0001 	orrne.w	r0, r0, #1
    37f4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    37f8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
    37fc:	fa03 fc0c 	lsl.w	ip, r3, ip
    3800:	ea40 000c 	orr.w	r0, r0, ip
    3804:	fa23 f302 	lsr.w	r3, r3, r2
    3808:	ea4f 0343 	mov.w	r3, r3, lsl #1
    380c:	e7cc      	b.n	37a8 <__aeabi_d2f+0x14>
    380e:	ea7f 5362 	mvns.w	r3, r2, asr #21
    3812:	d107      	bne.n	3824 <__aeabi_d2f+0x90>
    3814:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
    3818:	bf1e      	ittt	ne
    381a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
    381e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
    3822:	4770      	bxne	lr
    3824:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
    3828:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    382c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    3830:	4770      	bx	lr
    3832:	bf00      	nop

00003834 <__aeabi_frsub>:
    3834:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
    3838:	e002      	b.n	3840 <__addsf3>
    383a:	bf00      	nop

0000383c <__aeabi_fsub>:
    383c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00003840 <__addsf3>:
    3840:	0042      	lsls	r2, r0, #1
    3842:	bf1f      	itttt	ne
    3844:	ea5f 0341 	movsne.w	r3, r1, lsl #1
    3848:	ea92 0f03 	teqne	r2, r3
    384c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
    3850:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
    3854:	d06a      	beq.n	392c <__addsf3+0xec>
    3856:	ea4f 6212 	mov.w	r2, r2, lsr #24
    385a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
    385e:	bfc1      	itttt	gt
    3860:	18d2      	addgt	r2, r2, r3
    3862:	4041      	eorgt	r1, r0
    3864:	4048      	eorgt	r0, r1
    3866:	4041      	eorgt	r1, r0
    3868:	bfb8      	it	lt
    386a:	425b      	neglt	r3, r3
    386c:	2b19      	cmp	r3, #25
    386e:	bf88      	it	hi
    3870:	4770      	bxhi	lr
    3872:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
    3876:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    387a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    387e:	bf18      	it	ne
    3880:	4240      	negne	r0, r0
    3882:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    3886:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
    388a:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
    388e:	bf18      	it	ne
    3890:	4249      	negne	r1, r1
    3892:	ea92 0f03 	teq	r2, r3
    3896:	d03f      	beq.n	3918 <__addsf3+0xd8>
    3898:	f1a2 0201 	sub.w	r2, r2, #1
    389c:	fa41 fc03 	asr.w	ip, r1, r3
    38a0:	eb10 000c 	adds.w	r0, r0, ip
    38a4:	f1c3 0320 	rsb	r3, r3, #32
    38a8:	fa01 f103 	lsl.w	r1, r1, r3
    38ac:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
    38b0:	d502      	bpl.n	38b8 <__addsf3+0x78>
    38b2:	4249      	negs	r1, r1
    38b4:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
    38b8:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
    38bc:	d313      	bcc.n	38e6 <__addsf3+0xa6>
    38be:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
    38c2:	d306      	bcc.n	38d2 <__addsf3+0x92>
    38c4:	0840      	lsrs	r0, r0, #1
    38c6:	ea4f 0131 	mov.w	r1, r1, rrx
    38ca:	f102 0201 	add.w	r2, r2, #1
    38ce:	2afe      	cmp	r2, #254	; 0xfe
    38d0:	d251      	bcs.n	3976 <__addsf3+0x136>
    38d2:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
    38d6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    38da:	bf08      	it	eq
    38dc:	f020 0001 	biceq.w	r0, r0, #1
    38e0:	ea40 0003 	orr.w	r0, r0, r3
    38e4:	4770      	bx	lr
    38e6:	0049      	lsls	r1, r1, #1
    38e8:	eb40 0000 	adc.w	r0, r0, r0
    38ec:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
    38f0:	f1a2 0201 	sub.w	r2, r2, #1
    38f4:	d1ed      	bne.n	38d2 <__addsf3+0x92>
    38f6:	fab0 fc80 	clz	ip, r0
    38fa:	f1ac 0c08 	sub.w	ip, ip, #8
    38fe:	ebb2 020c 	subs.w	r2, r2, ip
    3902:	fa00 f00c 	lsl.w	r0, r0, ip
    3906:	bfaa      	itet	ge
    3908:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
    390c:	4252      	neglt	r2, r2
    390e:	4318      	orrge	r0, r3
    3910:	bfbc      	itt	lt
    3912:	40d0      	lsrlt	r0, r2
    3914:	4318      	orrlt	r0, r3
    3916:	4770      	bx	lr
    3918:	f092 0f00 	teq	r2, #0
    391c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
    3920:	bf06      	itte	eq
    3922:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
    3926:	3201      	addeq	r2, #1
    3928:	3b01      	subne	r3, #1
    392a:	e7b5      	b.n	3898 <__addsf3+0x58>
    392c:	ea4f 0341 	mov.w	r3, r1, lsl #1
    3930:	ea7f 6c22 	mvns.w	ip, r2, asr #24
    3934:	bf18      	it	ne
    3936:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
    393a:	d021      	beq.n	3980 <__addsf3+0x140>
    393c:	ea92 0f03 	teq	r2, r3
    3940:	d004      	beq.n	394c <__addsf3+0x10c>
    3942:	f092 0f00 	teq	r2, #0
    3946:	bf08      	it	eq
    3948:	4608      	moveq	r0, r1
    394a:	4770      	bx	lr
    394c:	ea90 0f01 	teq	r0, r1
    3950:	bf1c      	itt	ne
    3952:	2000      	movne	r0, #0
    3954:	4770      	bxne	lr
    3956:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
    395a:	d104      	bne.n	3966 <__addsf3+0x126>
    395c:	0040      	lsls	r0, r0, #1
    395e:	bf28      	it	cs
    3960:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
    3964:	4770      	bx	lr
    3966:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
    396a:	bf3c      	itt	cc
    396c:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
    3970:	4770      	bxcc	lr
    3972:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
    3976:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
    397a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    397e:	4770      	bx	lr
    3980:	ea7f 6222 	mvns.w	r2, r2, asr #24
    3984:	bf16      	itet	ne
    3986:	4608      	movne	r0, r1
    3988:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
    398c:	4601      	movne	r1, r0
    398e:	0242      	lsls	r2, r0, #9
    3990:	bf06      	itte	eq
    3992:	ea5f 2341 	movseq.w	r3, r1, lsl #9
    3996:	ea90 0f01 	teqeq	r0, r1
    399a:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
    399e:	4770      	bx	lr

000039a0 <__aeabi_ui2f>:
    39a0:	f04f 0300 	mov.w	r3, #0
    39a4:	e004      	b.n	39b0 <__aeabi_i2f+0x8>
    39a6:	bf00      	nop

000039a8 <__aeabi_i2f>:
    39a8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
    39ac:	bf48      	it	mi
    39ae:	4240      	negmi	r0, r0
    39b0:	ea5f 0c00 	movs.w	ip, r0
    39b4:	bf08      	it	eq
    39b6:	4770      	bxeq	lr
    39b8:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
    39bc:	4601      	mov	r1, r0
    39be:	f04f 0000 	mov.w	r0, #0
    39c2:	e01c      	b.n	39fe <__aeabi_l2f+0x2a>

000039c4 <__aeabi_ul2f>:
    39c4:	ea50 0201 	orrs.w	r2, r0, r1
    39c8:	bf08      	it	eq
    39ca:	4770      	bxeq	lr
    39cc:	f04f 0300 	mov.w	r3, #0
    39d0:	e00a      	b.n	39e8 <__aeabi_l2f+0x14>
    39d2:	bf00      	nop

000039d4 <__aeabi_l2f>:
    39d4:	ea50 0201 	orrs.w	r2, r0, r1
    39d8:	bf08      	it	eq
    39da:	4770      	bxeq	lr
    39dc:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
    39e0:	d502      	bpl.n	39e8 <__aeabi_l2f+0x14>
    39e2:	4240      	negs	r0, r0
    39e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    39e8:	ea5f 0c01 	movs.w	ip, r1
    39ec:	bf02      	ittt	eq
    39ee:	4684      	moveq	ip, r0
    39f0:	4601      	moveq	r1, r0
    39f2:	2000      	moveq	r0, #0
    39f4:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
    39f8:	bf08      	it	eq
    39fa:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
    39fe:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
    3a02:	fabc f28c 	clz	r2, ip
    3a06:	3a08      	subs	r2, #8
    3a08:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
    3a0c:	db10      	blt.n	3a30 <__aeabi_l2f+0x5c>
    3a0e:	fa01 fc02 	lsl.w	ip, r1, r2
    3a12:	4463      	add	r3, ip
    3a14:	fa00 fc02 	lsl.w	ip, r0, r2
    3a18:	f1c2 0220 	rsb	r2, r2, #32
    3a1c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    3a20:	fa20 f202 	lsr.w	r2, r0, r2
    3a24:	eb43 0002 	adc.w	r0, r3, r2
    3a28:	bf08      	it	eq
    3a2a:	f020 0001 	biceq.w	r0, r0, #1
    3a2e:	4770      	bx	lr
    3a30:	f102 0220 	add.w	r2, r2, #32
    3a34:	fa01 fc02 	lsl.w	ip, r1, r2
    3a38:	f1c2 0220 	rsb	r2, r2, #32
    3a3c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
    3a40:	fa21 f202 	lsr.w	r2, r1, r2
    3a44:	eb43 0002 	adc.w	r0, r3, r2
    3a48:	bf08      	it	eq
    3a4a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
    3a4e:	4770      	bx	lr

00003a50 <__aeabi_fmul>:
    3a50:	f04f 0cff 	mov.w	ip, #255	; 0xff
    3a54:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
    3a58:	bf1e      	ittt	ne
    3a5a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
    3a5e:	ea92 0f0c 	teqne	r2, ip
    3a62:	ea93 0f0c 	teqne	r3, ip
    3a66:	d06f      	beq.n	3b48 <__aeabi_fmul+0xf8>
    3a68:	441a      	add	r2, r3
    3a6a:	ea80 0c01 	eor.w	ip, r0, r1
    3a6e:	0240      	lsls	r0, r0, #9
    3a70:	bf18      	it	ne
    3a72:	ea5f 2141 	movsne.w	r1, r1, lsl #9
    3a76:	d01e      	beq.n	3ab6 <__aeabi_fmul+0x66>
    3a78:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
    3a7c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
    3a80:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
    3a84:	fba0 3101 	umull	r3, r1, r0, r1
    3a88:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
    3a8c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
    3a90:	bf3e      	ittt	cc
    3a92:	0049      	lslcc	r1, r1, #1
    3a94:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
    3a98:	005b      	lslcc	r3, r3, #1
    3a9a:	ea40 0001 	orr.w	r0, r0, r1
    3a9e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
    3aa2:	2afd      	cmp	r2, #253	; 0xfd
    3aa4:	d81d      	bhi.n	3ae2 <__aeabi_fmul+0x92>
    3aa6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
    3aaa:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    3aae:	bf08      	it	eq
    3ab0:	f020 0001 	biceq.w	r0, r0, #1
    3ab4:	4770      	bx	lr
    3ab6:	f090 0f00 	teq	r0, #0
    3aba:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
    3abe:	bf08      	it	eq
    3ac0:	0249      	lsleq	r1, r1, #9
    3ac2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
    3ac6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
    3aca:	3a7f      	subs	r2, #127	; 0x7f
    3acc:	bfc2      	ittt	gt
    3ace:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
    3ad2:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
    3ad6:	4770      	bxgt	lr
    3ad8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    3adc:	f04f 0300 	mov.w	r3, #0
    3ae0:	3a01      	subs	r2, #1
    3ae2:	dc5d      	bgt.n	3ba0 <__aeabi_fmul+0x150>
    3ae4:	f112 0f19 	cmn.w	r2, #25
    3ae8:	bfdc      	itt	le
    3aea:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
    3aee:	4770      	bxle	lr
    3af0:	f1c2 0200 	rsb	r2, r2, #0
    3af4:	0041      	lsls	r1, r0, #1
    3af6:	fa21 f102 	lsr.w	r1, r1, r2
    3afa:	f1c2 0220 	rsb	r2, r2, #32
    3afe:	fa00 fc02 	lsl.w	ip, r0, r2
    3b02:	ea5f 0031 	movs.w	r0, r1, rrx
    3b06:	f140 0000 	adc.w	r0, r0, #0
    3b0a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
    3b0e:	bf08      	it	eq
    3b10:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
    3b14:	4770      	bx	lr
    3b16:	f092 0f00 	teq	r2, #0
    3b1a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
    3b1e:	bf02      	ittt	eq
    3b20:	0040      	lsleq	r0, r0, #1
    3b22:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
    3b26:	3a01      	subeq	r2, #1
    3b28:	d0f9      	beq.n	3b1e <__aeabi_fmul+0xce>
    3b2a:	ea40 000c 	orr.w	r0, r0, ip
    3b2e:	f093 0f00 	teq	r3, #0
    3b32:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    3b36:	bf02      	ittt	eq
    3b38:	0049      	lsleq	r1, r1, #1
    3b3a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
    3b3e:	3b01      	subeq	r3, #1
    3b40:	d0f9      	beq.n	3b36 <__aeabi_fmul+0xe6>
    3b42:	ea41 010c 	orr.w	r1, r1, ip
    3b46:	e78f      	b.n	3a68 <__aeabi_fmul+0x18>
    3b48:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
    3b4c:	ea92 0f0c 	teq	r2, ip
    3b50:	bf18      	it	ne
    3b52:	ea93 0f0c 	teqne	r3, ip
    3b56:	d00a      	beq.n	3b6e <__aeabi_fmul+0x11e>
    3b58:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
    3b5c:	bf18      	it	ne
    3b5e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
    3b62:	d1d8      	bne.n	3b16 <__aeabi_fmul+0xc6>
    3b64:	ea80 0001 	eor.w	r0, r0, r1
    3b68:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    3b6c:	4770      	bx	lr
    3b6e:	f090 0f00 	teq	r0, #0
    3b72:	bf17      	itett	ne
    3b74:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
    3b78:	4608      	moveq	r0, r1
    3b7a:	f091 0f00 	teqne	r1, #0
    3b7e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
    3b82:	d014      	beq.n	3bae <__aeabi_fmul+0x15e>
    3b84:	ea92 0f0c 	teq	r2, ip
    3b88:	d101      	bne.n	3b8e <__aeabi_fmul+0x13e>
    3b8a:	0242      	lsls	r2, r0, #9
    3b8c:	d10f      	bne.n	3bae <__aeabi_fmul+0x15e>
    3b8e:	ea93 0f0c 	teq	r3, ip
    3b92:	d103      	bne.n	3b9c <__aeabi_fmul+0x14c>
    3b94:	024b      	lsls	r3, r1, #9
    3b96:	bf18      	it	ne
    3b98:	4608      	movne	r0, r1
    3b9a:	d108      	bne.n	3bae <__aeabi_fmul+0x15e>
    3b9c:	ea80 0001 	eor.w	r0, r0, r1
    3ba0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
    3ba4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    3ba8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    3bac:	4770      	bx	lr
    3bae:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    3bb2:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
    3bb6:	4770      	bx	lr

00003bb8 <__aeabi_fdiv>:
    3bb8:	f04f 0cff 	mov.w	ip, #255	; 0xff
    3bbc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
    3bc0:	bf1e      	ittt	ne
    3bc2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
    3bc6:	ea92 0f0c 	teqne	r2, ip
    3bca:	ea93 0f0c 	teqne	r3, ip
    3bce:	d069      	beq.n	3ca4 <__aeabi_fdiv+0xec>
    3bd0:	eba2 0203 	sub.w	r2, r2, r3
    3bd4:	ea80 0c01 	eor.w	ip, r0, r1
    3bd8:	0249      	lsls	r1, r1, #9
    3bda:	ea4f 2040 	mov.w	r0, r0, lsl #9
    3bde:	d037      	beq.n	3c50 <__aeabi_fdiv+0x98>
    3be0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    3be4:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
    3be8:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
    3bec:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
    3bf0:	428b      	cmp	r3, r1
    3bf2:	bf38      	it	cc
    3bf4:	005b      	lslcc	r3, r3, #1
    3bf6:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
    3bfa:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
    3bfe:	428b      	cmp	r3, r1
    3c00:	bf24      	itt	cs
    3c02:	1a5b      	subcs	r3, r3, r1
    3c04:	ea40 000c 	orrcs.w	r0, r0, ip
    3c08:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
    3c0c:	bf24      	itt	cs
    3c0e:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
    3c12:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    3c16:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
    3c1a:	bf24      	itt	cs
    3c1c:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
    3c20:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    3c24:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
    3c28:	bf24      	itt	cs
    3c2a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
    3c2e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    3c32:	011b      	lsls	r3, r3, #4
    3c34:	bf18      	it	ne
    3c36:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
    3c3a:	d1e0      	bne.n	3bfe <__aeabi_fdiv+0x46>
    3c3c:	2afd      	cmp	r2, #253	; 0xfd
    3c3e:	f63f af50 	bhi.w	3ae2 <__aeabi_fmul+0x92>
    3c42:	428b      	cmp	r3, r1
    3c44:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
    3c48:	bf08      	it	eq
    3c4a:	f020 0001 	biceq.w	r0, r0, #1
    3c4e:	4770      	bx	lr
    3c50:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
    3c54:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
    3c58:	327f      	adds	r2, #127	; 0x7f
    3c5a:	bfc2      	ittt	gt
    3c5c:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
    3c60:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
    3c64:	4770      	bxgt	lr
    3c66:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    3c6a:	f04f 0300 	mov.w	r3, #0
    3c6e:	3a01      	subs	r2, #1
    3c70:	e737      	b.n	3ae2 <__aeabi_fmul+0x92>
    3c72:	f092 0f00 	teq	r2, #0
    3c76:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
    3c7a:	bf02      	ittt	eq
    3c7c:	0040      	lsleq	r0, r0, #1
    3c7e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
    3c82:	3a01      	subeq	r2, #1
    3c84:	d0f9      	beq.n	3c7a <__aeabi_fdiv+0xc2>
    3c86:	ea40 000c 	orr.w	r0, r0, ip
    3c8a:	f093 0f00 	teq	r3, #0
    3c8e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    3c92:	bf02      	ittt	eq
    3c94:	0049      	lsleq	r1, r1, #1
    3c96:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
    3c9a:	3b01      	subeq	r3, #1
    3c9c:	d0f9      	beq.n	3c92 <__aeabi_fdiv+0xda>
    3c9e:	ea41 010c 	orr.w	r1, r1, ip
    3ca2:	e795      	b.n	3bd0 <__aeabi_fdiv+0x18>
    3ca4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
    3ca8:	ea92 0f0c 	teq	r2, ip
    3cac:	d108      	bne.n	3cc0 <__aeabi_fdiv+0x108>
    3cae:	0242      	lsls	r2, r0, #9
    3cb0:	f47f af7d 	bne.w	3bae <__aeabi_fmul+0x15e>
    3cb4:	ea93 0f0c 	teq	r3, ip
    3cb8:	f47f af70 	bne.w	3b9c <__aeabi_fmul+0x14c>
    3cbc:	4608      	mov	r0, r1
    3cbe:	e776      	b.n	3bae <__aeabi_fmul+0x15e>
    3cc0:	ea93 0f0c 	teq	r3, ip
    3cc4:	d104      	bne.n	3cd0 <__aeabi_fdiv+0x118>
    3cc6:	024b      	lsls	r3, r1, #9
    3cc8:	f43f af4c 	beq.w	3b64 <__aeabi_fmul+0x114>
    3ccc:	4608      	mov	r0, r1
    3cce:	e76e      	b.n	3bae <__aeabi_fmul+0x15e>
    3cd0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
    3cd4:	bf18      	it	ne
    3cd6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
    3cda:	d1ca      	bne.n	3c72 <__aeabi_fdiv+0xba>
    3cdc:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
    3ce0:	f47f af5c 	bne.w	3b9c <__aeabi_fmul+0x14c>
    3ce4:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
    3ce8:	f47f af3c 	bne.w	3b64 <__aeabi_fmul+0x114>
    3cec:	e75f      	b.n	3bae <__aeabi_fmul+0x15e>
    3cee:	bf00      	nop

00003cf0 <__errno>:
    3cf0:	4b01      	ldr	r3, [pc, #4]	; (3cf8 <__errno+0x8>)
    3cf2:	6818      	ldr	r0, [r3, #0]
    3cf4:	4770      	bx	lr
    3cf6:	bf00      	nop
    3cf8:	20000010 	.word	0x20000010

00003cfc <__libc_init_array>:
    3cfc:	b570      	push	{r4, r5, r6, lr}
    3cfe:	4e0d      	ldr	r6, [pc, #52]	; (3d34 <__libc_init_array+0x38>)
    3d00:	4c0d      	ldr	r4, [pc, #52]	; (3d38 <__libc_init_array+0x3c>)
    3d02:	1ba4      	subs	r4, r4, r6
    3d04:	10a4      	asrs	r4, r4, #2
    3d06:	2500      	movs	r5, #0
    3d08:	42a5      	cmp	r5, r4
    3d0a:	d109      	bne.n	3d20 <__libc_init_array+0x24>
    3d0c:	4e0b      	ldr	r6, [pc, #44]	; (3d3c <__libc_init_array+0x40>)
    3d0e:	4c0c      	ldr	r4, [pc, #48]	; (3d40 <__libc_init_array+0x44>)
    3d10:	f002 fa46 	bl	61a0 <_init>
    3d14:	1ba4      	subs	r4, r4, r6
    3d16:	10a4      	asrs	r4, r4, #2
    3d18:	2500      	movs	r5, #0
    3d1a:	42a5      	cmp	r5, r4
    3d1c:	d105      	bne.n	3d2a <__libc_init_array+0x2e>
    3d1e:	bd70      	pop	{r4, r5, r6, pc}
    3d20:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
    3d24:	4798      	blx	r3
    3d26:	3501      	adds	r5, #1
    3d28:	e7ee      	b.n	3d08 <__libc_init_array+0xc>
    3d2a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
    3d2e:	4798      	blx	r3
    3d30:	3501      	adds	r5, #1
    3d32:	e7f2      	b.n	3d1a <__libc_init_array+0x1e>
    3d34:	000061ac 	.word	0x000061ac
    3d38:	000061ac 	.word	0x000061ac
    3d3c:	000061ac 	.word	0x000061ac
    3d40:	000061b0 	.word	0x000061b0

00003d44 <memset>:
    3d44:	4402      	add	r2, r0
    3d46:	4603      	mov	r3, r0
    3d48:	4293      	cmp	r3, r2
    3d4a:	d100      	bne.n	3d4e <memset+0xa>
    3d4c:	4770      	bx	lr
    3d4e:	f803 1b01 	strb.w	r1, [r3], #1
    3d52:	e7f9      	b.n	3d48 <memset+0x4>

00003d54 <__cvt>:
    3d54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    3d58:	b088      	sub	sp, #32
    3d5a:	2b00      	cmp	r3, #0
    3d5c:	9f14      	ldr	r7, [sp, #80]	; 0x50
    3d5e:	9912      	ldr	r1, [sp, #72]	; 0x48
    3d60:	9d10      	ldr	r5, [sp, #64]	; 0x40
    3d62:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
    3d66:	461e      	mov	r6, r3
    3d68:	f027 0720 	bic.w	r7, r7, #32
    3d6c:	bfbb      	ittet	lt
    3d6e:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
    3d72:	461e      	movlt	r6, r3
    3d74:	2300      	movge	r3, #0
    3d76:	232d      	movlt	r3, #45	; 0x2d
    3d78:	2f46      	cmp	r7, #70	; 0x46
    3d7a:	4614      	mov	r4, r2
    3d7c:	700b      	strb	r3, [r1, #0]
    3d7e:	d004      	beq.n	3d8a <__cvt+0x36>
    3d80:	2f45      	cmp	r7, #69	; 0x45
    3d82:	d100      	bne.n	3d86 <__cvt+0x32>
    3d84:	3501      	adds	r5, #1
    3d86:	2302      	movs	r3, #2
    3d88:	e000      	b.n	3d8c <__cvt+0x38>
    3d8a:	2303      	movs	r3, #3
    3d8c:	aa07      	add	r2, sp, #28
    3d8e:	9204      	str	r2, [sp, #16]
    3d90:	aa06      	add	r2, sp, #24
    3d92:	9203      	str	r2, [sp, #12]
    3d94:	e88d 0428 	stmia.w	sp, {r3, r5, sl}
    3d98:	4622      	mov	r2, r4
    3d9a:	4633      	mov	r3, r6
    3d9c:	f000 fcf4 	bl	4788 <_dtoa_r>
    3da0:	2f47      	cmp	r7, #71	; 0x47
    3da2:	4680      	mov	r8, r0
    3da4:	d102      	bne.n	3dac <__cvt+0x58>
    3da6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3da8:	07db      	lsls	r3, r3, #31
    3daa:	d526      	bpl.n	3dfa <__cvt+0xa6>
    3dac:	2f46      	cmp	r7, #70	; 0x46
    3dae:	eb08 0905 	add.w	r9, r8, r5
    3db2:	d111      	bne.n	3dd8 <__cvt+0x84>
    3db4:	f898 3000 	ldrb.w	r3, [r8]
    3db8:	2b30      	cmp	r3, #48	; 0x30
    3dba:	d10a      	bne.n	3dd2 <__cvt+0x7e>
    3dbc:	2200      	movs	r2, #0
    3dbe:	2300      	movs	r3, #0
    3dc0:	4620      	mov	r0, r4
    3dc2:	4631      	mov	r1, r6
    3dc4:	f7ff fc76 	bl	36b4 <__aeabi_dcmpeq>
    3dc8:	b918      	cbnz	r0, 3dd2 <__cvt+0x7e>
    3dca:	f1c5 0501 	rsb	r5, r5, #1
    3dce:	f8ca 5000 	str.w	r5, [sl]
    3dd2:	f8da 3000 	ldr.w	r3, [sl]
    3dd6:	4499      	add	r9, r3
    3dd8:	2200      	movs	r2, #0
    3dda:	2300      	movs	r3, #0
    3ddc:	4620      	mov	r0, r4
    3dde:	4631      	mov	r1, r6
    3de0:	f7ff fc68 	bl	36b4 <__aeabi_dcmpeq>
    3de4:	b938      	cbnz	r0, 3df6 <__cvt+0xa2>
    3de6:	2230      	movs	r2, #48	; 0x30
    3de8:	9b07      	ldr	r3, [sp, #28]
    3dea:	4599      	cmp	r9, r3
    3dec:	d905      	bls.n	3dfa <__cvt+0xa6>
    3dee:	1c59      	adds	r1, r3, #1
    3df0:	9107      	str	r1, [sp, #28]
    3df2:	701a      	strb	r2, [r3, #0]
    3df4:	e7f8      	b.n	3de8 <__cvt+0x94>
    3df6:	f8cd 901c 	str.w	r9, [sp, #28]
    3dfa:	9b07      	ldr	r3, [sp, #28]
    3dfc:	9a15      	ldr	r2, [sp, #84]	; 0x54
    3dfe:	eba3 0308 	sub.w	r3, r3, r8
    3e02:	4640      	mov	r0, r8
    3e04:	6013      	str	r3, [r2, #0]
    3e06:	b008      	add	sp, #32
    3e08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00003e0c <__exponent>:
    3e0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3e0e:	4603      	mov	r3, r0
    3e10:	2900      	cmp	r1, #0
    3e12:	bfb8      	it	lt
    3e14:	4249      	neglt	r1, r1
    3e16:	f803 2b02 	strb.w	r2, [r3], #2
    3e1a:	bfb4      	ite	lt
    3e1c:	222d      	movlt	r2, #45	; 0x2d
    3e1e:	222b      	movge	r2, #43	; 0x2b
    3e20:	2909      	cmp	r1, #9
    3e22:	7042      	strb	r2, [r0, #1]
    3e24:	dd20      	ble.n	3e68 <__exponent+0x5c>
    3e26:	f10d 0207 	add.w	r2, sp, #7
    3e2a:	4617      	mov	r7, r2
    3e2c:	260a      	movs	r6, #10
    3e2e:	fb91 f5f6 	sdiv	r5, r1, r6
    3e32:	fb06 1115 	mls	r1, r6, r5, r1
    3e36:	3130      	adds	r1, #48	; 0x30
    3e38:	2d09      	cmp	r5, #9
    3e3a:	f802 1c01 	strb.w	r1, [r2, #-1]
    3e3e:	f102 34ff 	add.w	r4, r2, #4294967295
    3e42:	4629      	mov	r1, r5
    3e44:	dc09      	bgt.n	3e5a <__exponent+0x4e>
    3e46:	3130      	adds	r1, #48	; 0x30
    3e48:	3a02      	subs	r2, #2
    3e4a:	f804 1c01 	strb.w	r1, [r4, #-1]
    3e4e:	42ba      	cmp	r2, r7
    3e50:	461c      	mov	r4, r3
    3e52:	d304      	bcc.n	3e5e <__exponent+0x52>
    3e54:	1a20      	subs	r0, r4, r0
    3e56:	b003      	add	sp, #12
    3e58:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3e5a:	4622      	mov	r2, r4
    3e5c:	e7e7      	b.n	3e2e <__exponent+0x22>
    3e5e:	f812 1b01 	ldrb.w	r1, [r2], #1
    3e62:	f803 1b01 	strb.w	r1, [r3], #1
    3e66:	e7f2      	b.n	3e4e <__exponent+0x42>
    3e68:	2230      	movs	r2, #48	; 0x30
    3e6a:	461c      	mov	r4, r3
    3e6c:	4411      	add	r1, r2
    3e6e:	f804 2b02 	strb.w	r2, [r4], #2
    3e72:	7059      	strb	r1, [r3, #1]
    3e74:	e7ee      	b.n	3e54 <__exponent+0x48>
	...

00003e78 <_printf_float>:
    3e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3e7c:	b091      	sub	sp, #68	; 0x44
    3e7e:	460c      	mov	r4, r1
    3e80:	9f1a      	ldr	r7, [sp, #104]	; 0x68
    3e82:	4693      	mov	fp, r2
    3e84:	461e      	mov	r6, r3
    3e86:	4605      	mov	r5, r0
    3e88:	f001 fa50 	bl	532c <_localeconv_r>
    3e8c:	6803      	ldr	r3, [r0, #0]
    3e8e:	9309      	str	r3, [sp, #36]	; 0x24
    3e90:	4618      	mov	r0, r3
    3e92:	f000 fbe3 	bl	465c <strlen>
    3e96:	2300      	movs	r3, #0
    3e98:	930e      	str	r3, [sp, #56]	; 0x38
    3e9a:	683b      	ldr	r3, [r7, #0]
    3e9c:	900a      	str	r0, [sp, #40]	; 0x28
    3e9e:	3307      	adds	r3, #7
    3ea0:	f023 0307 	bic.w	r3, r3, #7
    3ea4:	f103 0208 	add.w	r2, r3, #8
    3ea8:	f894 8018 	ldrb.w	r8, [r4, #24]
    3eac:	f8d4 a000 	ldr.w	sl, [r4]
    3eb0:	603a      	str	r2, [r7, #0]
    3eb2:	e9d3 2300 	ldrd	r2, r3, [r3]
    3eb6:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
    3eba:	f8d4 904c 	ldr.w	r9, [r4, #76]	; 0x4c
    3ebe:	6ca7      	ldr	r7, [r4, #72]	; 0x48
    3ec0:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
    3ec4:	930b      	str	r3, [sp, #44]	; 0x2c
    3ec6:	f04f 32ff 	mov.w	r2, #4294967295
    3eca:	4ba6      	ldr	r3, [pc, #664]	; (4164 <_printf_float+0x2ec>)
    3ecc:	990b      	ldr	r1, [sp, #44]	; 0x2c
    3ece:	4638      	mov	r0, r7
    3ed0:	f7ff fc22 	bl	3718 <__aeabi_dcmpun>
    3ed4:	2800      	cmp	r0, #0
    3ed6:	f040 81f7 	bne.w	42c8 <_printf_float+0x450>
    3eda:	f04f 32ff 	mov.w	r2, #4294967295
    3ede:	4ba1      	ldr	r3, [pc, #644]	; (4164 <_printf_float+0x2ec>)
    3ee0:	990b      	ldr	r1, [sp, #44]	; 0x2c
    3ee2:	4638      	mov	r0, r7
    3ee4:	f7ff fbfa 	bl	36dc <__aeabi_dcmple>
    3ee8:	2800      	cmp	r0, #0
    3eea:	f040 81ed 	bne.w	42c8 <_printf_float+0x450>
    3eee:	2200      	movs	r2, #0
    3ef0:	2300      	movs	r3, #0
    3ef2:	4638      	mov	r0, r7
    3ef4:	4649      	mov	r1, r9
    3ef6:	f7ff fbe7 	bl	36c8 <__aeabi_dcmplt>
    3efa:	b110      	cbz	r0, 3f02 <_printf_float+0x8a>
    3efc:	232d      	movs	r3, #45	; 0x2d
    3efe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    3f02:	4b99      	ldr	r3, [pc, #612]	; (4168 <_printf_float+0x2f0>)
    3f04:	4f99      	ldr	r7, [pc, #612]	; (416c <_printf_float+0x2f4>)
    3f06:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
    3f0a:	bf98      	it	ls
    3f0c:	461f      	movls	r7, r3
    3f0e:	2303      	movs	r3, #3
    3f10:	6123      	str	r3, [r4, #16]
    3f12:	f02a 0304 	bic.w	r3, sl, #4
    3f16:	6023      	str	r3, [r4, #0]
    3f18:	f04f 0900 	mov.w	r9, #0
    3f1c:	9600      	str	r6, [sp, #0]
    3f1e:	465b      	mov	r3, fp
    3f20:	aa0f      	add	r2, sp, #60	; 0x3c
    3f22:	4621      	mov	r1, r4
    3f24:	4628      	mov	r0, r5
    3f26:	f000 f9df 	bl	42e8 <_printf_common>
    3f2a:	3001      	adds	r0, #1
    3f2c:	f040 809a 	bne.w	4064 <_printf_float+0x1ec>
    3f30:	f04f 30ff 	mov.w	r0, #4294967295
    3f34:	b011      	add	sp, #68	; 0x44
    3f36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3f3a:	6862      	ldr	r2, [r4, #4]
    3f3c:	1c53      	adds	r3, r2, #1
    3f3e:	a80e      	add	r0, sp, #56	; 0x38
    3f40:	f44a 6380 	orr.w	r3, sl, #1024	; 0x400
    3f44:	f10d 0e34 	add.w	lr, sp, #52	; 0x34
    3f48:	d141      	bne.n	3fce <_printf_float+0x156>
    3f4a:	2206      	movs	r2, #6
    3f4c:	6062      	str	r2, [r4, #4]
    3f4e:	6023      	str	r3, [r4, #0]
    3f50:	2100      	movs	r1, #0
    3f52:	f10d 0233 	add.w	r2, sp, #51	; 0x33
    3f56:	9301      	str	r3, [sp, #4]
    3f58:	6863      	ldr	r3, [r4, #4]
    3f5a:	9005      	str	r0, [sp, #20]
    3f5c:	9202      	str	r2, [sp, #8]
    3f5e:	9300      	str	r3, [sp, #0]
    3f60:	463a      	mov	r2, r7
    3f62:	464b      	mov	r3, r9
    3f64:	9106      	str	r1, [sp, #24]
    3f66:	f8cd 8010 	str.w	r8, [sp, #16]
    3f6a:	f8cd e00c 	str.w	lr, [sp, #12]
    3f6e:	4628      	mov	r0, r5
    3f70:	f7ff fef0 	bl	3d54 <__cvt>
    3f74:	f008 03df 	and.w	r3, r8, #223	; 0xdf
    3f78:	2b47      	cmp	r3, #71	; 0x47
    3f7a:	4607      	mov	r7, r0
    3f7c:	d109      	bne.n	3f92 <_printf_float+0x11a>
    3f7e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3f80:	1cd8      	adds	r0, r3, #3
    3f82:	db02      	blt.n	3f8a <_printf_float+0x112>
    3f84:	6862      	ldr	r2, [r4, #4]
    3f86:	4293      	cmp	r3, r2
    3f88:	dd59      	ble.n	403e <_printf_float+0x1c6>
    3f8a:	f1a8 0802 	sub.w	r8, r8, #2
    3f8e:	fa5f f888 	uxtb.w	r8, r8
    3f92:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
    3f96:	990d      	ldr	r1, [sp, #52]	; 0x34
    3f98:	d836      	bhi.n	4008 <_printf_float+0x190>
    3f9a:	3901      	subs	r1, #1
    3f9c:	4642      	mov	r2, r8
    3f9e:	f104 0050 	add.w	r0, r4, #80	; 0x50
    3fa2:	910d      	str	r1, [sp, #52]	; 0x34
    3fa4:	f7ff ff32 	bl	3e0c <__exponent>
    3fa8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    3faa:	1883      	adds	r3, r0, r2
    3fac:	2a01      	cmp	r2, #1
    3fae:	4681      	mov	r9, r0
    3fb0:	6123      	str	r3, [r4, #16]
    3fb2:	dc02      	bgt.n	3fba <_printf_float+0x142>
    3fb4:	6822      	ldr	r2, [r4, #0]
    3fb6:	07d1      	lsls	r1, r2, #31
    3fb8:	d501      	bpl.n	3fbe <_printf_float+0x146>
    3fba:	3301      	adds	r3, #1
    3fbc:	6123      	str	r3, [r4, #16]
    3fbe:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
    3fc2:	2b00      	cmp	r3, #0
    3fc4:	d0aa      	beq.n	3f1c <_printf_float+0xa4>
    3fc6:	232d      	movs	r3, #45	; 0x2d
    3fc8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    3fcc:	e7a6      	b.n	3f1c <_printf_float+0xa4>
    3fce:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
    3fd2:	d002      	beq.n	3fda <_printf_float+0x162>
    3fd4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
    3fd8:	d1b9      	bne.n	3f4e <_printf_float+0xd6>
    3fda:	b19a      	cbz	r2, 4004 <_printf_float+0x18c>
    3fdc:	2100      	movs	r1, #0
    3fde:	9106      	str	r1, [sp, #24]
    3fe0:	f10d 0133 	add.w	r1, sp, #51	; 0x33
    3fe4:	e88d 000c 	stmia.w	sp, {r2, r3}
    3fe8:	6023      	str	r3, [r4, #0]
    3fea:	9005      	str	r0, [sp, #20]
    3fec:	463a      	mov	r2, r7
    3fee:	f8cd 8010 	str.w	r8, [sp, #16]
    3ff2:	f8cd e00c 	str.w	lr, [sp, #12]
    3ff6:	9102      	str	r1, [sp, #8]
    3ff8:	464b      	mov	r3, r9
    3ffa:	4628      	mov	r0, r5
    3ffc:	f7ff feaa 	bl	3d54 <__cvt>
    4000:	4607      	mov	r7, r0
    4002:	e7bc      	b.n	3f7e <_printf_float+0x106>
    4004:	2201      	movs	r2, #1
    4006:	e7a1      	b.n	3f4c <_printf_float+0xd4>
    4008:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
    400c:	d119      	bne.n	4042 <_printf_float+0x1ca>
    400e:	2900      	cmp	r1, #0
    4010:	6863      	ldr	r3, [r4, #4]
    4012:	dd0c      	ble.n	402e <_printf_float+0x1b6>
    4014:	6121      	str	r1, [r4, #16]
    4016:	b913      	cbnz	r3, 401e <_printf_float+0x1a6>
    4018:	6822      	ldr	r2, [r4, #0]
    401a:	07d2      	lsls	r2, r2, #31
    401c:	d502      	bpl.n	4024 <_printf_float+0x1ac>
    401e:	3301      	adds	r3, #1
    4020:	440b      	add	r3, r1
    4022:	6123      	str	r3, [r4, #16]
    4024:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4026:	65a3      	str	r3, [r4, #88]	; 0x58
    4028:	f04f 0900 	mov.w	r9, #0
    402c:	e7c7      	b.n	3fbe <_printf_float+0x146>
    402e:	b913      	cbnz	r3, 4036 <_printf_float+0x1be>
    4030:	6822      	ldr	r2, [r4, #0]
    4032:	07d0      	lsls	r0, r2, #31
    4034:	d501      	bpl.n	403a <_printf_float+0x1c2>
    4036:	3302      	adds	r3, #2
    4038:	e7f3      	b.n	4022 <_printf_float+0x1aa>
    403a:	2301      	movs	r3, #1
    403c:	e7f1      	b.n	4022 <_printf_float+0x1aa>
    403e:	f04f 0867 	mov.w	r8, #103	; 0x67
    4042:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4044:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    4046:	4293      	cmp	r3, r2
    4048:	db05      	blt.n	4056 <_printf_float+0x1de>
    404a:	6822      	ldr	r2, [r4, #0]
    404c:	6123      	str	r3, [r4, #16]
    404e:	07d1      	lsls	r1, r2, #31
    4050:	d5e8      	bpl.n	4024 <_printf_float+0x1ac>
    4052:	3301      	adds	r3, #1
    4054:	e7e5      	b.n	4022 <_printf_float+0x1aa>
    4056:	2b00      	cmp	r3, #0
    4058:	bfd4      	ite	le
    405a:	f1c3 0302 	rsble	r3, r3, #2
    405e:	2301      	movgt	r3, #1
    4060:	4413      	add	r3, r2
    4062:	e7de      	b.n	4022 <_printf_float+0x1aa>
    4064:	6823      	ldr	r3, [r4, #0]
    4066:	055a      	lsls	r2, r3, #21
    4068:	d407      	bmi.n	407a <_printf_float+0x202>
    406a:	6923      	ldr	r3, [r4, #16]
    406c:	463a      	mov	r2, r7
    406e:	4659      	mov	r1, fp
    4070:	4628      	mov	r0, r5
    4072:	47b0      	blx	r6
    4074:	3001      	adds	r0, #1
    4076:	d12a      	bne.n	40ce <_printf_float+0x256>
    4078:	e75a      	b.n	3f30 <_printf_float+0xb8>
    407a:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
    407e:	f240 80dc 	bls.w	423a <_printf_float+0x3c2>
    4082:	2200      	movs	r2, #0
    4084:	2300      	movs	r3, #0
    4086:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    408a:	f7ff fb13 	bl	36b4 <__aeabi_dcmpeq>
    408e:	2800      	cmp	r0, #0
    4090:	d039      	beq.n	4106 <_printf_float+0x28e>
    4092:	2301      	movs	r3, #1
    4094:	4a36      	ldr	r2, [pc, #216]	; (4170 <_printf_float+0x2f8>)
    4096:	4659      	mov	r1, fp
    4098:	4628      	mov	r0, r5
    409a:	47b0      	blx	r6
    409c:	3001      	adds	r0, #1
    409e:	f43f af47 	beq.w	3f30 <_printf_float+0xb8>
    40a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    40a4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    40a6:	429a      	cmp	r2, r3
    40a8:	db02      	blt.n	40b0 <_printf_float+0x238>
    40aa:	6823      	ldr	r3, [r4, #0]
    40ac:	07d8      	lsls	r0, r3, #31
    40ae:	d50e      	bpl.n	40ce <_printf_float+0x256>
    40b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    40b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
    40b4:	4659      	mov	r1, fp
    40b6:	4628      	mov	r0, r5
    40b8:	47b0      	blx	r6
    40ba:	3001      	adds	r0, #1
    40bc:	f43f af38 	beq.w	3f30 <_printf_float+0xb8>
    40c0:	2700      	movs	r7, #0
    40c2:	f104 081a 	add.w	r8, r4, #26
    40c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    40c8:	3b01      	subs	r3, #1
    40ca:	429f      	cmp	r7, r3
    40cc:	db11      	blt.n	40f2 <_printf_float+0x27a>
    40ce:	6823      	ldr	r3, [r4, #0]
    40d0:	079f      	lsls	r7, r3, #30
    40d2:	d508      	bpl.n	40e6 <_printf_float+0x26e>
    40d4:	2700      	movs	r7, #0
    40d6:	f104 0819 	add.w	r8, r4, #25
    40da:	68e3      	ldr	r3, [r4, #12]
    40dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    40de:	1a9b      	subs	r3, r3, r2
    40e0:	429f      	cmp	r7, r3
    40e2:	f2c0 80e7 	blt.w	42b4 <_printf_float+0x43c>
    40e6:	68e0      	ldr	r0, [r4, #12]
    40e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    40ea:	4298      	cmp	r0, r3
    40ec:	bfb8      	it	lt
    40ee:	4618      	movlt	r0, r3
    40f0:	e720      	b.n	3f34 <_printf_float+0xbc>
    40f2:	2301      	movs	r3, #1
    40f4:	4642      	mov	r2, r8
    40f6:	4659      	mov	r1, fp
    40f8:	4628      	mov	r0, r5
    40fa:	47b0      	blx	r6
    40fc:	3001      	adds	r0, #1
    40fe:	f43f af17 	beq.w	3f30 <_printf_float+0xb8>
    4102:	3701      	adds	r7, #1
    4104:	e7df      	b.n	40c6 <_printf_float+0x24e>
    4106:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4108:	2b00      	cmp	r3, #0
    410a:	dc33      	bgt.n	4174 <_printf_float+0x2fc>
    410c:	2301      	movs	r3, #1
    410e:	4a18      	ldr	r2, [pc, #96]	; (4170 <_printf_float+0x2f8>)
    4110:	4659      	mov	r1, fp
    4112:	4628      	mov	r0, r5
    4114:	47b0      	blx	r6
    4116:	3001      	adds	r0, #1
    4118:	f43f af0a 	beq.w	3f30 <_printf_float+0xb8>
    411c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    411e:	b923      	cbnz	r3, 412a <_printf_float+0x2b2>
    4120:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    4122:	b913      	cbnz	r3, 412a <_printf_float+0x2b2>
    4124:	6823      	ldr	r3, [r4, #0]
    4126:	07d9      	lsls	r1, r3, #31
    4128:	d5d1      	bpl.n	40ce <_printf_float+0x256>
    412a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    412c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    412e:	4659      	mov	r1, fp
    4130:	4628      	mov	r0, r5
    4132:	47b0      	blx	r6
    4134:	3001      	adds	r0, #1
    4136:	f43f aefb 	beq.w	3f30 <_printf_float+0xb8>
    413a:	f04f 0800 	mov.w	r8, #0
    413e:	f104 091a 	add.w	r9, r4, #26
    4142:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4144:	425b      	negs	r3, r3
    4146:	4598      	cmp	r8, r3
    4148:	db01      	blt.n	414e <_printf_float+0x2d6>
    414a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    414c:	e78e      	b.n	406c <_printf_float+0x1f4>
    414e:	2301      	movs	r3, #1
    4150:	464a      	mov	r2, r9
    4152:	4659      	mov	r1, fp
    4154:	4628      	mov	r0, r5
    4156:	47b0      	blx	r6
    4158:	3001      	adds	r0, #1
    415a:	f43f aee9 	beq.w	3f30 <_printf_float+0xb8>
    415e:	f108 0801 	add.w	r8, r8, #1
    4162:	e7ee      	b.n	4142 <_printf_float+0x2ca>
    4164:	7fefffff 	.word	0x7fefffff
    4168:	00005f40 	.word	0x00005f40
    416c:	00005f44 	.word	0x00005f44
    4170:	00005f50 	.word	0x00005f50
    4174:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    4176:	6da3      	ldr	r3, [r4, #88]	; 0x58
    4178:	429a      	cmp	r2, r3
    417a:	bfa8      	it	ge
    417c:	461a      	movge	r2, r3
    417e:	2a00      	cmp	r2, #0
    4180:	4690      	mov	r8, r2
    4182:	dc36      	bgt.n	41f2 <_printf_float+0x37a>
    4184:	f104 031a 	add.w	r3, r4, #26
    4188:	f04f 0a00 	mov.w	sl, #0
    418c:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
    4190:	930b      	str	r3, [sp, #44]	; 0x2c
    4192:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
    4196:	eba9 0308 	sub.w	r3, r9, r8
    419a:	459a      	cmp	sl, r3
    419c:	db31      	blt.n	4202 <_printf_float+0x38a>
    419e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    41a0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    41a2:	429a      	cmp	r2, r3
    41a4:	db38      	blt.n	4218 <_printf_float+0x3a0>
    41a6:	6823      	ldr	r3, [r4, #0]
    41a8:	07da      	lsls	r2, r3, #31
    41aa:	d435      	bmi.n	4218 <_printf_float+0x3a0>
    41ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    41ae:	990d      	ldr	r1, [sp, #52]	; 0x34
    41b0:	eba3 0209 	sub.w	r2, r3, r9
    41b4:	eba3 0801 	sub.w	r8, r3, r1
    41b8:	4590      	cmp	r8, r2
    41ba:	bfa8      	it	ge
    41bc:	4690      	movge	r8, r2
    41be:	f1b8 0f00 	cmp.w	r8, #0
    41c2:	dc31      	bgt.n	4228 <_printf_float+0x3b0>
    41c4:	2700      	movs	r7, #0
    41c6:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
    41ca:	f104 091a 	add.w	r9, r4, #26
    41ce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    41d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    41d2:	1a9b      	subs	r3, r3, r2
    41d4:	eba3 0308 	sub.w	r3, r3, r8
    41d8:	429f      	cmp	r7, r3
    41da:	f6bf af78 	bge.w	40ce <_printf_float+0x256>
    41de:	2301      	movs	r3, #1
    41e0:	464a      	mov	r2, r9
    41e2:	4659      	mov	r1, fp
    41e4:	4628      	mov	r0, r5
    41e6:	47b0      	blx	r6
    41e8:	3001      	adds	r0, #1
    41ea:	f43f aea1 	beq.w	3f30 <_printf_float+0xb8>
    41ee:	3701      	adds	r7, #1
    41f0:	e7ed      	b.n	41ce <_printf_float+0x356>
    41f2:	4613      	mov	r3, r2
    41f4:	4659      	mov	r1, fp
    41f6:	463a      	mov	r2, r7
    41f8:	4628      	mov	r0, r5
    41fa:	47b0      	blx	r6
    41fc:	3001      	adds	r0, #1
    41fe:	d1c1      	bne.n	4184 <_printf_float+0x30c>
    4200:	e696      	b.n	3f30 <_printf_float+0xb8>
    4202:	2301      	movs	r3, #1
    4204:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    4206:	4659      	mov	r1, fp
    4208:	4628      	mov	r0, r5
    420a:	47b0      	blx	r6
    420c:	3001      	adds	r0, #1
    420e:	f43f ae8f 	beq.w	3f30 <_printf_float+0xb8>
    4212:	f10a 0a01 	add.w	sl, sl, #1
    4216:	e7bc      	b.n	4192 <_printf_float+0x31a>
    4218:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    421a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    421c:	4659      	mov	r1, fp
    421e:	4628      	mov	r0, r5
    4220:	47b0      	blx	r6
    4222:	3001      	adds	r0, #1
    4224:	d1c2      	bne.n	41ac <_printf_float+0x334>
    4226:	e683      	b.n	3f30 <_printf_float+0xb8>
    4228:	4643      	mov	r3, r8
    422a:	eb07 0209 	add.w	r2, r7, r9
    422e:	4659      	mov	r1, fp
    4230:	4628      	mov	r0, r5
    4232:	47b0      	blx	r6
    4234:	3001      	adds	r0, #1
    4236:	d1c5      	bne.n	41c4 <_printf_float+0x34c>
    4238:	e67a      	b.n	3f30 <_printf_float+0xb8>
    423a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    423c:	2a01      	cmp	r2, #1
    423e:	dc01      	bgt.n	4244 <_printf_float+0x3cc>
    4240:	07db      	lsls	r3, r3, #31
    4242:	d534      	bpl.n	42ae <_printf_float+0x436>
    4244:	2301      	movs	r3, #1
    4246:	463a      	mov	r2, r7
    4248:	4659      	mov	r1, fp
    424a:	4628      	mov	r0, r5
    424c:	47b0      	blx	r6
    424e:	3001      	adds	r0, #1
    4250:	f43f ae6e 	beq.w	3f30 <_printf_float+0xb8>
    4254:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4256:	9a09      	ldr	r2, [sp, #36]	; 0x24
    4258:	4659      	mov	r1, fp
    425a:	4628      	mov	r0, r5
    425c:	47b0      	blx	r6
    425e:	3001      	adds	r0, #1
    4260:	f43f ae66 	beq.w	3f30 <_printf_float+0xb8>
    4264:	2200      	movs	r2, #0
    4266:	2300      	movs	r3, #0
    4268:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    426c:	f7ff fa22 	bl	36b4 <__aeabi_dcmpeq>
    4270:	b150      	cbz	r0, 4288 <_printf_float+0x410>
    4272:	2700      	movs	r7, #0
    4274:	f104 081a 	add.w	r8, r4, #26
    4278:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    427a:	3b01      	subs	r3, #1
    427c:	429f      	cmp	r7, r3
    427e:	db0c      	blt.n	429a <_printf_float+0x422>
    4280:	464b      	mov	r3, r9
    4282:	f104 0250 	add.w	r2, r4, #80	; 0x50
    4286:	e6f2      	b.n	406e <_printf_float+0x1f6>
    4288:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    428a:	1c7a      	adds	r2, r7, #1
    428c:	3b01      	subs	r3, #1
    428e:	4659      	mov	r1, fp
    4290:	4628      	mov	r0, r5
    4292:	47b0      	blx	r6
    4294:	3001      	adds	r0, #1
    4296:	d1f3      	bne.n	4280 <_printf_float+0x408>
    4298:	e64a      	b.n	3f30 <_printf_float+0xb8>
    429a:	2301      	movs	r3, #1
    429c:	4642      	mov	r2, r8
    429e:	4659      	mov	r1, fp
    42a0:	4628      	mov	r0, r5
    42a2:	47b0      	blx	r6
    42a4:	3001      	adds	r0, #1
    42a6:	f43f ae43 	beq.w	3f30 <_printf_float+0xb8>
    42aa:	3701      	adds	r7, #1
    42ac:	e7e4      	b.n	4278 <_printf_float+0x400>
    42ae:	2301      	movs	r3, #1
    42b0:	463a      	mov	r2, r7
    42b2:	e7ec      	b.n	428e <_printf_float+0x416>
    42b4:	2301      	movs	r3, #1
    42b6:	4642      	mov	r2, r8
    42b8:	4659      	mov	r1, fp
    42ba:	4628      	mov	r0, r5
    42bc:	47b0      	blx	r6
    42be:	3001      	adds	r0, #1
    42c0:	f43f ae36 	beq.w	3f30 <_printf_float+0xb8>
    42c4:	3701      	adds	r7, #1
    42c6:	e708      	b.n	40da <_printf_float+0x262>
    42c8:	463a      	mov	r2, r7
    42ca:	464b      	mov	r3, r9
    42cc:	4638      	mov	r0, r7
    42ce:	4649      	mov	r1, r9
    42d0:	f7ff fa22 	bl	3718 <__aeabi_dcmpun>
    42d4:	2800      	cmp	r0, #0
    42d6:	f43f ae30 	beq.w	3f3a <_printf_float+0xc2>
    42da:	4b01      	ldr	r3, [pc, #4]	; (42e0 <_printf_float+0x468>)
    42dc:	4f01      	ldr	r7, [pc, #4]	; (42e4 <_printf_float+0x46c>)
    42de:	e612      	b.n	3f06 <_printf_float+0x8e>
    42e0:	00005f48 	.word	0x00005f48
    42e4:	00005f4c 	.word	0x00005f4c

000042e8 <_printf_common>:
    42e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    42ec:	4691      	mov	r9, r2
    42ee:	461f      	mov	r7, r3
    42f0:	688a      	ldr	r2, [r1, #8]
    42f2:	690b      	ldr	r3, [r1, #16]
    42f4:	f8dd 8020 	ldr.w	r8, [sp, #32]
    42f8:	4293      	cmp	r3, r2
    42fa:	bfb8      	it	lt
    42fc:	4613      	movlt	r3, r2
    42fe:	f8c9 3000 	str.w	r3, [r9]
    4302:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
    4306:	4606      	mov	r6, r0
    4308:	460c      	mov	r4, r1
    430a:	b112      	cbz	r2, 4312 <_printf_common+0x2a>
    430c:	3301      	adds	r3, #1
    430e:	f8c9 3000 	str.w	r3, [r9]
    4312:	6823      	ldr	r3, [r4, #0]
    4314:	0699      	lsls	r1, r3, #26
    4316:	bf42      	ittt	mi
    4318:	f8d9 3000 	ldrmi.w	r3, [r9]
    431c:	3302      	addmi	r3, #2
    431e:	f8c9 3000 	strmi.w	r3, [r9]
    4322:	6825      	ldr	r5, [r4, #0]
    4324:	f015 0506 	ands.w	r5, r5, #6
    4328:	d107      	bne.n	433a <_printf_common+0x52>
    432a:	f104 0a19 	add.w	sl, r4, #25
    432e:	68e3      	ldr	r3, [r4, #12]
    4330:	f8d9 2000 	ldr.w	r2, [r9]
    4334:	1a9b      	subs	r3, r3, r2
    4336:	429d      	cmp	r5, r3
    4338:	db29      	blt.n	438e <_printf_common+0xa6>
    433a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
    433e:	6822      	ldr	r2, [r4, #0]
    4340:	3300      	adds	r3, #0
    4342:	bf18      	it	ne
    4344:	2301      	movne	r3, #1
    4346:	0692      	lsls	r2, r2, #26
    4348:	d42e      	bmi.n	43a8 <_printf_common+0xc0>
    434a:	f104 0243 	add.w	r2, r4, #67	; 0x43
    434e:	4639      	mov	r1, r7
    4350:	4630      	mov	r0, r6
    4352:	47c0      	blx	r8
    4354:	3001      	adds	r0, #1
    4356:	d021      	beq.n	439c <_printf_common+0xb4>
    4358:	6823      	ldr	r3, [r4, #0]
    435a:	68e5      	ldr	r5, [r4, #12]
    435c:	f8d9 2000 	ldr.w	r2, [r9]
    4360:	f003 0306 	and.w	r3, r3, #6
    4364:	2b04      	cmp	r3, #4
    4366:	bf08      	it	eq
    4368:	1aad      	subeq	r5, r5, r2
    436a:	68a3      	ldr	r3, [r4, #8]
    436c:	6922      	ldr	r2, [r4, #16]
    436e:	bf0c      	ite	eq
    4370:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
    4374:	2500      	movne	r5, #0
    4376:	4293      	cmp	r3, r2
    4378:	bfc4      	itt	gt
    437a:	1a9b      	subgt	r3, r3, r2
    437c:	18ed      	addgt	r5, r5, r3
    437e:	f04f 0900 	mov.w	r9, #0
    4382:	341a      	adds	r4, #26
    4384:	454d      	cmp	r5, r9
    4386:	d11b      	bne.n	43c0 <_printf_common+0xd8>
    4388:	2000      	movs	r0, #0
    438a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    438e:	2301      	movs	r3, #1
    4390:	4652      	mov	r2, sl
    4392:	4639      	mov	r1, r7
    4394:	4630      	mov	r0, r6
    4396:	47c0      	blx	r8
    4398:	3001      	adds	r0, #1
    439a:	d103      	bne.n	43a4 <_printf_common+0xbc>
    439c:	f04f 30ff 	mov.w	r0, #4294967295
    43a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    43a4:	3501      	adds	r5, #1
    43a6:	e7c2      	b.n	432e <_printf_common+0x46>
    43a8:	18e1      	adds	r1, r4, r3
    43aa:	1c5a      	adds	r2, r3, #1
    43ac:	2030      	movs	r0, #48	; 0x30
    43ae:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
    43b2:	4422      	add	r2, r4
    43b4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
    43b8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
    43bc:	3302      	adds	r3, #2
    43be:	e7c4      	b.n	434a <_printf_common+0x62>
    43c0:	2301      	movs	r3, #1
    43c2:	4622      	mov	r2, r4
    43c4:	4639      	mov	r1, r7
    43c6:	4630      	mov	r0, r6
    43c8:	47c0      	blx	r8
    43ca:	3001      	adds	r0, #1
    43cc:	d0e6      	beq.n	439c <_printf_common+0xb4>
    43ce:	f109 0901 	add.w	r9, r9, #1
    43d2:	e7d7      	b.n	4384 <_printf_common+0x9c>

000043d4 <_printf_i>:
    43d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    43d8:	4617      	mov	r7, r2
    43da:	7e0a      	ldrb	r2, [r1, #24]
    43dc:	b085      	sub	sp, #20
    43de:	2a6e      	cmp	r2, #110	; 0x6e
    43e0:	4698      	mov	r8, r3
    43e2:	4606      	mov	r6, r0
    43e4:	460c      	mov	r4, r1
    43e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    43e8:	f101 0e43 	add.w	lr, r1, #67	; 0x43
    43ec:	f000 80bc 	beq.w	4568 <_printf_i+0x194>
    43f0:	d81a      	bhi.n	4428 <_printf_i+0x54>
    43f2:	2a63      	cmp	r2, #99	; 0x63
    43f4:	d02e      	beq.n	4454 <_printf_i+0x80>
    43f6:	d80a      	bhi.n	440e <_printf_i+0x3a>
    43f8:	2a00      	cmp	r2, #0
    43fa:	f000 80c8 	beq.w	458e <_printf_i+0x1ba>
    43fe:	2a58      	cmp	r2, #88	; 0x58
    4400:	f000 808a 	beq.w	4518 <_printf_i+0x144>
    4404:	f104 0542 	add.w	r5, r4, #66	; 0x42
    4408:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    440c:	e02a      	b.n	4464 <_printf_i+0x90>
    440e:	2a64      	cmp	r2, #100	; 0x64
    4410:	d001      	beq.n	4416 <_printf_i+0x42>
    4412:	2a69      	cmp	r2, #105	; 0x69
    4414:	d1f6      	bne.n	4404 <_printf_i+0x30>
    4416:	6821      	ldr	r1, [r4, #0]
    4418:	681a      	ldr	r2, [r3, #0]
    441a:	f011 0f80 	tst.w	r1, #128	; 0x80
    441e:	d023      	beq.n	4468 <_printf_i+0x94>
    4420:	1d11      	adds	r1, r2, #4
    4422:	6019      	str	r1, [r3, #0]
    4424:	6813      	ldr	r3, [r2, #0]
    4426:	e027      	b.n	4478 <_printf_i+0xa4>
    4428:	2a73      	cmp	r2, #115	; 0x73
    442a:	f000 80b4 	beq.w	4596 <_printf_i+0x1c2>
    442e:	d808      	bhi.n	4442 <_printf_i+0x6e>
    4430:	2a6f      	cmp	r2, #111	; 0x6f
    4432:	d02a      	beq.n	448a <_printf_i+0xb6>
    4434:	2a70      	cmp	r2, #112	; 0x70
    4436:	d1e5      	bne.n	4404 <_printf_i+0x30>
    4438:	680a      	ldr	r2, [r1, #0]
    443a:	f042 0220 	orr.w	r2, r2, #32
    443e:	600a      	str	r2, [r1, #0]
    4440:	e003      	b.n	444a <_printf_i+0x76>
    4442:	2a75      	cmp	r2, #117	; 0x75
    4444:	d021      	beq.n	448a <_printf_i+0xb6>
    4446:	2a78      	cmp	r2, #120	; 0x78
    4448:	d1dc      	bne.n	4404 <_printf_i+0x30>
    444a:	2278      	movs	r2, #120	; 0x78
    444c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
    4450:	496e      	ldr	r1, [pc, #440]	; (460c <_printf_i+0x238>)
    4452:	e064      	b.n	451e <_printf_i+0x14a>
    4454:	681a      	ldr	r2, [r3, #0]
    4456:	f101 0542 	add.w	r5, r1, #66	; 0x42
    445a:	1d11      	adds	r1, r2, #4
    445c:	6019      	str	r1, [r3, #0]
    445e:	6813      	ldr	r3, [r2, #0]
    4460:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    4464:	2301      	movs	r3, #1
    4466:	e0a3      	b.n	45b0 <_printf_i+0x1dc>
    4468:	f011 0f40 	tst.w	r1, #64	; 0x40
    446c:	f102 0104 	add.w	r1, r2, #4
    4470:	6019      	str	r1, [r3, #0]
    4472:	d0d7      	beq.n	4424 <_printf_i+0x50>
    4474:	f9b2 3000 	ldrsh.w	r3, [r2]
    4478:	2b00      	cmp	r3, #0
    447a:	da03      	bge.n	4484 <_printf_i+0xb0>
    447c:	222d      	movs	r2, #45	; 0x2d
    447e:	425b      	negs	r3, r3
    4480:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
    4484:	4962      	ldr	r1, [pc, #392]	; (4610 <_printf_i+0x23c>)
    4486:	220a      	movs	r2, #10
    4488:	e017      	b.n	44ba <_printf_i+0xe6>
    448a:	6820      	ldr	r0, [r4, #0]
    448c:	6819      	ldr	r1, [r3, #0]
    448e:	f010 0f80 	tst.w	r0, #128	; 0x80
    4492:	d003      	beq.n	449c <_printf_i+0xc8>
    4494:	1d08      	adds	r0, r1, #4
    4496:	6018      	str	r0, [r3, #0]
    4498:	680b      	ldr	r3, [r1, #0]
    449a:	e006      	b.n	44aa <_printf_i+0xd6>
    449c:	f010 0f40 	tst.w	r0, #64	; 0x40
    44a0:	f101 0004 	add.w	r0, r1, #4
    44a4:	6018      	str	r0, [r3, #0]
    44a6:	d0f7      	beq.n	4498 <_printf_i+0xc4>
    44a8:	880b      	ldrh	r3, [r1, #0]
    44aa:	4959      	ldr	r1, [pc, #356]	; (4610 <_printf_i+0x23c>)
    44ac:	2a6f      	cmp	r2, #111	; 0x6f
    44ae:	bf14      	ite	ne
    44b0:	220a      	movne	r2, #10
    44b2:	2208      	moveq	r2, #8
    44b4:	2000      	movs	r0, #0
    44b6:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
    44ba:	6865      	ldr	r5, [r4, #4]
    44bc:	60a5      	str	r5, [r4, #8]
    44be:	2d00      	cmp	r5, #0
    44c0:	f2c0 809c 	blt.w	45fc <_printf_i+0x228>
    44c4:	6820      	ldr	r0, [r4, #0]
    44c6:	f020 0004 	bic.w	r0, r0, #4
    44ca:	6020      	str	r0, [r4, #0]
    44cc:	2b00      	cmp	r3, #0
    44ce:	d13f      	bne.n	4550 <_printf_i+0x17c>
    44d0:	2d00      	cmp	r5, #0
    44d2:	f040 8095 	bne.w	4600 <_printf_i+0x22c>
    44d6:	4675      	mov	r5, lr
    44d8:	2a08      	cmp	r2, #8
    44da:	d10b      	bne.n	44f4 <_printf_i+0x120>
    44dc:	6823      	ldr	r3, [r4, #0]
    44de:	07da      	lsls	r2, r3, #31
    44e0:	d508      	bpl.n	44f4 <_printf_i+0x120>
    44e2:	6923      	ldr	r3, [r4, #16]
    44e4:	6862      	ldr	r2, [r4, #4]
    44e6:	429a      	cmp	r2, r3
    44e8:	bfde      	ittt	le
    44ea:	2330      	movle	r3, #48	; 0x30
    44ec:	f805 3c01 	strble.w	r3, [r5, #-1]
    44f0:	f105 35ff 	addle.w	r5, r5, #4294967295
    44f4:	ebae 0305 	sub.w	r3, lr, r5
    44f8:	6123      	str	r3, [r4, #16]
    44fa:	f8cd 8000 	str.w	r8, [sp]
    44fe:	463b      	mov	r3, r7
    4500:	aa03      	add	r2, sp, #12
    4502:	4621      	mov	r1, r4
    4504:	4630      	mov	r0, r6
    4506:	f7ff feef 	bl	42e8 <_printf_common>
    450a:	3001      	adds	r0, #1
    450c:	d155      	bne.n	45ba <_printf_i+0x1e6>
    450e:	f04f 30ff 	mov.w	r0, #4294967295
    4512:	b005      	add	sp, #20
    4514:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    4518:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
    451c:	493c      	ldr	r1, [pc, #240]	; (4610 <_printf_i+0x23c>)
    451e:	6822      	ldr	r2, [r4, #0]
    4520:	6818      	ldr	r0, [r3, #0]
    4522:	f012 0f80 	tst.w	r2, #128	; 0x80
    4526:	f100 0504 	add.w	r5, r0, #4
    452a:	601d      	str	r5, [r3, #0]
    452c:	d001      	beq.n	4532 <_printf_i+0x15e>
    452e:	6803      	ldr	r3, [r0, #0]
    4530:	e002      	b.n	4538 <_printf_i+0x164>
    4532:	0655      	lsls	r5, r2, #25
    4534:	d5fb      	bpl.n	452e <_printf_i+0x15a>
    4536:	8803      	ldrh	r3, [r0, #0]
    4538:	07d0      	lsls	r0, r2, #31
    453a:	bf44      	itt	mi
    453c:	f042 0220 	orrmi.w	r2, r2, #32
    4540:	6022      	strmi	r2, [r4, #0]
    4542:	b91b      	cbnz	r3, 454c <_printf_i+0x178>
    4544:	6822      	ldr	r2, [r4, #0]
    4546:	f022 0220 	bic.w	r2, r2, #32
    454a:	6022      	str	r2, [r4, #0]
    454c:	2210      	movs	r2, #16
    454e:	e7b1      	b.n	44b4 <_printf_i+0xe0>
    4550:	4675      	mov	r5, lr
    4552:	fbb3 f0f2 	udiv	r0, r3, r2
    4556:	fb02 3310 	mls	r3, r2, r0, r3
    455a:	5ccb      	ldrb	r3, [r1, r3]
    455c:	f805 3d01 	strb.w	r3, [r5, #-1]!
    4560:	4603      	mov	r3, r0
    4562:	2800      	cmp	r0, #0
    4564:	d1f5      	bne.n	4552 <_printf_i+0x17e>
    4566:	e7b7      	b.n	44d8 <_printf_i+0x104>
    4568:	6808      	ldr	r0, [r1, #0]
    456a:	681a      	ldr	r2, [r3, #0]
    456c:	6949      	ldr	r1, [r1, #20]
    456e:	f010 0f80 	tst.w	r0, #128	; 0x80
    4572:	d004      	beq.n	457e <_printf_i+0x1aa>
    4574:	1d10      	adds	r0, r2, #4
    4576:	6018      	str	r0, [r3, #0]
    4578:	6813      	ldr	r3, [r2, #0]
    457a:	6019      	str	r1, [r3, #0]
    457c:	e007      	b.n	458e <_printf_i+0x1ba>
    457e:	f010 0f40 	tst.w	r0, #64	; 0x40
    4582:	f102 0004 	add.w	r0, r2, #4
    4586:	6018      	str	r0, [r3, #0]
    4588:	6813      	ldr	r3, [r2, #0]
    458a:	d0f6      	beq.n	457a <_printf_i+0x1a6>
    458c:	8019      	strh	r1, [r3, #0]
    458e:	2300      	movs	r3, #0
    4590:	6123      	str	r3, [r4, #16]
    4592:	4675      	mov	r5, lr
    4594:	e7b1      	b.n	44fa <_printf_i+0x126>
    4596:	681a      	ldr	r2, [r3, #0]
    4598:	1d11      	adds	r1, r2, #4
    459a:	6019      	str	r1, [r3, #0]
    459c:	6815      	ldr	r5, [r2, #0]
    459e:	6862      	ldr	r2, [r4, #4]
    45a0:	2100      	movs	r1, #0
    45a2:	4628      	mov	r0, r5
    45a4:	f000 fedc 	bl	5360 <memchr>
    45a8:	b108      	cbz	r0, 45ae <_printf_i+0x1da>
    45aa:	1b40      	subs	r0, r0, r5
    45ac:	6060      	str	r0, [r4, #4]
    45ae:	6863      	ldr	r3, [r4, #4]
    45b0:	6123      	str	r3, [r4, #16]
    45b2:	2300      	movs	r3, #0
    45b4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    45b8:	e79f      	b.n	44fa <_printf_i+0x126>
    45ba:	6923      	ldr	r3, [r4, #16]
    45bc:	462a      	mov	r2, r5
    45be:	4639      	mov	r1, r7
    45c0:	4630      	mov	r0, r6
    45c2:	47c0      	blx	r8
    45c4:	3001      	adds	r0, #1
    45c6:	d0a2      	beq.n	450e <_printf_i+0x13a>
    45c8:	6823      	ldr	r3, [r4, #0]
    45ca:	079b      	lsls	r3, r3, #30
    45cc:	d507      	bpl.n	45de <_printf_i+0x20a>
    45ce:	2500      	movs	r5, #0
    45d0:	f104 0919 	add.w	r9, r4, #25
    45d4:	68e3      	ldr	r3, [r4, #12]
    45d6:	9a03      	ldr	r2, [sp, #12]
    45d8:	1a9b      	subs	r3, r3, r2
    45da:	429d      	cmp	r5, r3
    45dc:	db05      	blt.n	45ea <_printf_i+0x216>
    45de:	68e0      	ldr	r0, [r4, #12]
    45e0:	9b03      	ldr	r3, [sp, #12]
    45e2:	4298      	cmp	r0, r3
    45e4:	bfb8      	it	lt
    45e6:	4618      	movlt	r0, r3
    45e8:	e793      	b.n	4512 <_printf_i+0x13e>
    45ea:	2301      	movs	r3, #1
    45ec:	464a      	mov	r2, r9
    45ee:	4639      	mov	r1, r7
    45f0:	4630      	mov	r0, r6
    45f2:	47c0      	blx	r8
    45f4:	3001      	adds	r0, #1
    45f6:	d08a      	beq.n	450e <_printf_i+0x13a>
    45f8:	3501      	adds	r5, #1
    45fa:	e7eb      	b.n	45d4 <_printf_i+0x200>
    45fc:	2b00      	cmp	r3, #0
    45fe:	d1a7      	bne.n	4550 <_printf_i+0x17c>
    4600:	780b      	ldrb	r3, [r1, #0]
    4602:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    4606:	f104 0542 	add.w	r5, r4, #66	; 0x42
    460a:	e765      	b.n	44d8 <_printf_i+0x104>
    460c:	00005f63 	.word	0x00005f63
    4610:	00005f52 	.word	0x00005f52

00004614 <siprintf>:
    4614:	b40e      	push	{r1, r2, r3}
    4616:	b500      	push	{lr}
    4618:	b09c      	sub	sp, #112	; 0x70
    461a:	f44f 7102 	mov.w	r1, #520	; 0x208
    461e:	ab1d      	add	r3, sp, #116	; 0x74
    4620:	f8ad 1014 	strh.w	r1, [sp, #20]
    4624:	9002      	str	r0, [sp, #8]
    4626:	9006      	str	r0, [sp, #24]
    4628:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    462c:	480a      	ldr	r0, [pc, #40]	; (4658 <siprintf+0x44>)
    462e:	9104      	str	r1, [sp, #16]
    4630:	9107      	str	r1, [sp, #28]
    4632:	f64f 71ff 	movw	r1, #65535	; 0xffff
    4636:	f853 2b04 	ldr.w	r2, [r3], #4
    463a:	f8ad 1016 	strh.w	r1, [sp, #22]
    463e:	6800      	ldr	r0, [r0, #0]
    4640:	9301      	str	r3, [sp, #4]
    4642:	a902      	add	r1, sp, #8
    4644:	f001 face 	bl	5be4 <_svfiprintf_r>
    4648:	9b02      	ldr	r3, [sp, #8]
    464a:	2200      	movs	r2, #0
    464c:	701a      	strb	r2, [r3, #0]
    464e:	b01c      	add	sp, #112	; 0x70
    4650:	f85d eb04 	ldr.w	lr, [sp], #4
    4654:	b003      	add	sp, #12
    4656:	4770      	bx	lr
    4658:	20000010 	.word	0x20000010

0000465c <strlen>:
    465c:	4603      	mov	r3, r0
    465e:	f813 2b01 	ldrb.w	r2, [r3], #1
    4662:	2a00      	cmp	r2, #0
    4664:	d1fb      	bne.n	465e <strlen+0x2>
    4666:	1a18      	subs	r0, r3, r0
    4668:	3801      	subs	r0, #1
    466a:	4770      	bx	lr

0000466c <quorem>:
    466c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4670:	6903      	ldr	r3, [r0, #16]
    4672:	690c      	ldr	r4, [r1, #16]
    4674:	429c      	cmp	r4, r3
    4676:	4680      	mov	r8, r0
    4678:	f300 8082 	bgt.w	4780 <quorem+0x114>
    467c:	3c01      	subs	r4, #1
    467e:	f101 0714 	add.w	r7, r1, #20
    4682:	ea4f 0e84 	mov.w	lr, r4, lsl #2
    4686:	f100 0614 	add.w	r6, r0, #20
    468a:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
    468e:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
    4692:	eb06 030e 	add.w	r3, r6, lr
    4696:	3501      	adds	r5, #1
    4698:	eb07 090e 	add.w	r9, r7, lr
    469c:	9301      	str	r3, [sp, #4]
    469e:	fbb0 f5f5 	udiv	r5, r0, r5
    46a2:	b395      	cbz	r5, 470a <quorem+0x9e>
    46a4:	f04f 0a00 	mov.w	sl, #0
    46a8:	4638      	mov	r0, r7
    46aa:	46b4      	mov	ip, r6
    46ac:	46d3      	mov	fp, sl
    46ae:	f850 2b04 	ldr.w	r2, [r0], #4
    46b2:	b293      	uxth	r3, r2
    46b4:	fb05 a303 	mla	r3, r5, r3, sl
    46b8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    46bc:	b29b      	uxth	r3, r3
    46be:	ebab 0303 	sub.w	r3, fp, r3
    46c2:	0c12      	lsrs	r2, r2, #16
    46c4:	f8bc b000 	ldrh.w	fp, [ip]
    46c8:	fb05 a202 	mla	r2, r5, r2, sl
    46cc:	fa13 f38b 	uxtah	r3, r3, fp
    46d0:	ea4f 4a12 	mov.w	sl, r2, lsr #16
    46d4:	fa1f fb82 	uxth.w	fp, r2
    46d8:	f8dc 2000 	ldr.w	r2, [ip]
    46dc:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
    46e0:	eb02 4223 	add.w	r2, r2, r3, asr #16
    46e4:	b29b      	uxth	r3, r3
    46e6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    46ea:	4581      	cmp	r9, r0
    46ec:	ea4f 4b22 	mov.w	fp, r2, asr #16
    46f0:	f84c 3b04 	str.w	r3, [ip], #4
    46f4:	d2db      	bcs.n	46ae <quorem+0x42>
    46f6:	f856 300e 	ldr.w	r3, [r6, lr]
    46fa:	b933      	cbnz	r3, 470a <quorem+0x9e>
    46fc:	9b01      	ldr	r3, [sp, #4]
    46fe:	3b04      	subs	r3, #4
    4700:	429e      	cmp	r6, r3
    4702:	461a      	mov	r2, r3
    4704:	d330      	bcc.n	4768 <quorem+0xfc>
    4706:	f8c8 4010 	str.w	r4, [r8, #16]
    470a:	4640      	mov	r0, r8
    470c:	f001 f88d 	bl	582a <__mcmp>
    4710:	2800      	cmp	r0, #0
    4712:	db25      	blt.n	4760 <quorem+0xf4>
    4714:	3501      	adds	r5, #1
    4716:	4630      	mov	r0, r6
    4718:	f04f 0e00 	mov.w	lr, #0
    471c:	f857 2b04 	ldr.w	r2, [r7], #4
    4720:	f8d0 c000 	ldr.w	ip, [r0]
    4724:	b293      	uxth	r3, r2
    4726:	ebae 0303 	sub.w	r3, lr, r3
    472a:	0c12      	lsrs	r2, r2, #16
    472c:	fa13 f38c 	uxtah	r3, r3, ip
    4730:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
    4734:	eb02 4223 	add.w	r2, r2, r3, asr #16
    4738:	b29b      	uxth	r3, r3
    473a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    473e:	45b9      	cmp	r9, r7
    4740:	ea4f 4e22 	mov.w	lr, r2, asr #16
    4744:	f840 3b04 	str.w	r3, [r0], #4
    4748:	d2e8      	bcs.n	471c <quorem+0xb0>
    474a:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
    474e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
    4752:	b92a      	cbnz	r2, 4760 <quorem+0xf4>
    4754:	3b04      	subs	r3, #4
    4756:	429e      	cmp	r6, r3
    4758:	461a      	mov	r2, r3
    475a:	d30b      	bcc.n	4774 <quorem+0x108>
    475c:	f8c8 4010 	str.w	r4, [r8, #16]
    4760:	4628      	mov	r0, r5
    4762:	b003      	add	sp, #12
    4764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4768:	6812      	ldr	r2, [r2, #0]
    476a:	3b04      	subs	r3, #4
    476c:	2a00      	cmp	r2, #0
    476e:	d1ca      	bne.n	4706 <quorem+0x9a>
    4770:	3c01      	subs	r4, #1
    4772:	e7c5      	b.n	4700 <quorem+0x94>
    4774:	6812      	ldr	r2, [r2, #0]
    4776:	3b04      	subs	r3, #4
    4778:	2a00      	cmp	r2, #0
    477a:	d1ef      	bne.n	475c <quorem+0xf0>
    477c:	3c01      	subs	r4, #1
    477e:	e7ea      	b.n	4756 <quorem+0xea>
    4780:	2000      	movs	r0, #0
    4782:	e7ee      	b.n	4762 <quorem+0xf6>
    4784:	0000      	movs	r0, r0
	...

00004788 <_dtoa_r>:
    4788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    478c:	6a46      	ldr	r6, [r0, #36]	; 0x24
    478e:	b095      	sub	sp, #84	; 0x54
    4790:	4604      	mov	r4, r0
    4792:	9d21      	ldr	r5, [sp, #132]	; 0x84
    4794:	e9cd 2302 	strd	r2, r3, [sp, #8]
    4798:	b93e      	cbnz	r6, 47aa <_dtoa_r+0x22>
    479a:	2010      	movs	r0, #16
    479c:	f000 fdd4 	bl	5348 <malloc>
    47a0:	6260      	str	r0, [r4, #36]	; 0x24
    47a2:	6046      	str	r6, [r0, #4]
    47a4:	6086      	str	r6, [r0, #8]
    47a6:	6006      	str	r6, [r0, #0]
    47a8:	60c6      	str	r6, [r0, #12]
    47aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
    47ac:	6819      	ldr	r1, [r3, #0]
    47ae:	b151      	cbz	r1, 47c6 <_dtoa_r+0x3e>
    47b0:	685a      	ldr	r2, [r3, #4]
    47b2:	604a      	str	r2, [r1, #4]
    47b4:	2301      	movs	r3, #1
    47b6:	4093      	lsls	r3, r2
    47b8:	608b      	str	r3, [r1, #8]
    47ba:	4620      	mov	r0, r4
    47bc:	f000 fe5f 	bl	547e <_Bfree>
    47c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
    47c2:	2200      	movs	r2, #0
    47c4:	601a      	str	r2, [r3, #0]
    47c6:	9b03      	ldr	r3, [sp, #12]
    47c8:	2b00      	cmp	r3, #0
    47ca:	bfbf      	itttt	lt
    47cc:	2301      	movlt	r3, #1
    47ce:	602b      	strlt	r3, [r5, #0]
    47d0:	9b03      	ldrlt	r3, [sp, #12]
    47d2:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
    47d6:	bfb2      	itee	lt
    47d8:	9303      	strlt	r3, [sp, #12]
    47da:	2300      	movge	r3, #0
    47dc:	602b      	strge	r3, [r5, #0]
    47de:	f8dd 900c 	ldr.w	r9, [sp, #12]
    47e2:	4ba9      	ldr	r3, [pc, #676]	; (4a88 <_dtoa_r+0x300>)
    47e4:	ea33 0309 	bics.w	r3, r3, r9
    47e8:	d11b      	bne.n	4822 <_dtoa_r+0x9a>
    47ea:	9a20      	ldr	r2, [sp, #128]	; 0x80
    47ec:	f242 730f 	movw	r3, #9999	; 0x270f
    47f0:	6013      	str	r3, [r2, #0]
    47f2:	9b02      	ldr	r3, [sp, #8]
    47f4:	b923      	cbnz	r3, 4800 <_dtoa_r+0x78>
    47f6:	f3c9 0013 	ubfx	r0, r9, #0, #20
    47fa:	2800      	cmp	r0, #0
    47fc:	f000 8581 	beq.w	5302 <_dtoa_r+0xb7a>
    4800:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4802:	b953      	cbnz	r3, 481a <_dtoa_r+0x92>
    4804:	4ba1      	ldr	r3, [pc, #644]	; (4a8c <_dtoa_r+0x304>)
    4806:	e021      	b.n	484c <_dtoa_r+0xc4>
    4808:	4ba1      	ldr	r3, [pc, #644]	; (4a90 <_dtoa_r+0x308>)
    480a:	9306      	str	r3, [sp, #24]
    480c:	3308      	adds	r3, #8
    480e:	9a22      	ldr	r2, [sp, #136]	; 0x88
    4810:	6013      	str	r3, [r2, #0]
    4812:	9806      	ldr	r0, [sp, #24]
    4814:	b015      	add	sp, #84	; 0x54
    4816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    481a:	4b9c      	ldr	r3, [pc, #624]	; (4a8c <_dtoa_r+0x304>)
    481c:	9306      	str	r3, [sp, #24]
    481e:	3303      	adds	r3, #3
    4820:	e7f5      	b.n	480e <_dtoa_r+0x86>
    4822:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
    4826:	2200      	movs	r2, #0
    4828:	2300      	movs	r3, #0
    482a:	4630      	mov	r0, r6
    482c:	4639      	mov	r1, r7
    482e:	f7fe ff41 	bl	36b4 <__aeabi_dcmpeq>
    4832:	4680      	mov	r8, r0
    4834:	b160      	cbz	r0, 4850 <_dtoa_r+0xc8>
    4836:	9a20      	ldr	r2, [sp, #128]	; 0x80
    4838:	2301      	movs	r3, #1
    483a:	6013      	str	r3, [r2, #0]
    483c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    483e:	2b00      	cmp	r3, #0
    4840:	f000 855c 	beq.w	52fc <_dtoa_r+0xb74>
    4844:	4b93      	ldr	r3, [pc, #588]	; (4a94 <_dtoa_r+0x30c>)
    4846:	9a22      	ldr	r2, [sp, #136]	; 0x88
    4848:	6013      	str	r3, [r2, #0]
    484a:	3b01      	subs	r3, #1
    484c:	9306      	str	r3, [sp, #24]
    484e:	e7e0      	b.n	4812 <_dtoa_r+0x8a>
    4850:	ab12      	add	r3, sp, #72	; 0x48
    4852:	9301      	str	r3, [sp, #4]
    4854:	ab13      	add	r3, sp, #76	; 0x4c
    4856:	9300      	str	r3, [sp, #0]
    4858:	4632      	mov	r2, r6
    485a:	463b      	mov	r3, r7
    485c:	4620      	mov	r0, r4
    485e:	f001 f85c 	bl	591a <__d2b>
    4862:	f3c9 550a 	ubfx	r5, r9, #20, #11
    4866:	4682      	mov	sl, r0
    4868:	2d00      	cmp	r5, #0
    486a:	d07c      	beq.n	4966 <_dtoa_r+0x1de>
    486c:	f3c7 0313 	ubfx	r3, r7, #0, #20
    4870:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
    4874:	4630      	mov	r0, r6
    4876:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
    487a:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
    487e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
    4882:	2200      	movs	r2, #0
    4884:	4b84      	ldr	r3, [pc, #528]	; (4a98 <_dtoa_r+0x310>)
    4886:	f7fe faf9 	bl	2e7c <__aeabi_dsub>
    488a:	a379      	add	r3, pc, #484	; (adr r3, 4a70 <_dtoa_r+0x2e8>)
    488c:	e9d3 2300 	ldrd	r2, r3, [r3]
    4890:	f7fe fca8 	bl	31e4 <__aeabi_dmul>
    4894:	a378      	add	r3, pc, #480	; (adr r3, 4a78 <_dtoa_r+0x2f0>)
    4896:	e9d3 2300 	ldrd	r2, r3, [r3]
    489a:	f7fe faf1 	bl	2e80 <__adddf3>
    489e:	4606      	mov	r6, r0
    48a0:	4628      	mov	r0, r5
    48a2:	460f      	mov	r7, r1
    48a4:	f7fe fc38 	bl	3118 <__aeabi_i2d>
    48a8:	a375      	add	r3, pc, #468	; (adr r3, 4a80 <_dtoa_r+0x2f8>)
    48aa:	e9d3 2300 	ldrd	r2, r3, [r3]
    48ae:	f7fe fc99 	bl	31e4 <__aeabi_dmul>
    48b2:	4602      	mov	r2, r0
    48b4:	460b      	mov	r3, r1
    48b6:	4630      	mov	r0, r6
    48b8:	4639      	mov	r1, r7
    48ba:	f7fe fae1 	bl	2e80 <__adddf3>
    48be:	4606      	mov	r6, r0
    48c0:	460f      	mov	r7, r1
    48c2:	f7fe ff3f 	bl	3744 <__aeabi_d2iz>
    48c6:	2200      	movs	r2, #0
    48c8:	4683      	mov	fp, r0
    48ca:	2300      	movs	r3, #0
    48cc:	4630      	mov	r0, r6
    48ce:	4639      	mov	r1, r7
    48d0:	f7fe fefa 	bl	36c8 <__aeabi_dcmplt>
    48d4:	b158      	cbz	r0, 48ee <_dtoa_r+0x166>
    48d6:	4658      	mov	r0, fp
    48d8:	f7fe fc1e 	bl	3118 <__aeabi_i2d>
    48dc:	4602      	mov	r2, r0
    48de:	460b      	mov	r3, r1
    48e0:	4630      	mov	r0, r6
    48e2:	4639      	mov	r1, r7
    48e4:	f7fe fee6 	bl	36b4 <__aeabi_dcmpeq>
    48e8:	b908      	cbnz	r0, 48ee <_dtoa_r+0x166>
    48ea:	f10b 3bff 	add.w	fp, fp, #4294967295
    48ee:	f1bb 0f16 	cmp.w	fp, #22
    48f2:	d857      	bhi.n	49a4 <_dtoa_r+0x21c>
    48f4:	4969      	ldr	r1, [pc, #420]	; (4a9c <_dtoa_r+0x314>)
    48f6:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
    48fa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    48fe:	e9d1 0100 	ldrd	r0, r1, [r1]
    4902:	f7fe feff 	bl	3704 <__aeabi_dcmpgt>
    4906:	2800      	cmp	r0, #0
    4908:	d04e      	beq.n	49a8 <_dtoa_r+0x220>
    490a:	f10b 3bff 	add.w	fp, fp, #4294967295
    490e:	2300      	movs	r3, #0
    4910:	930d      	str	r3, [sp, #52]	; 0x34
    4912:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4914:	1b5d      	subs	r5, r3, r5
    4916:	1e6b      	subs	r3, r5, #1
    4918:	9307      	str	r3, [sp, #28]
    491a:	bf43      	ittte	mi
    491c:	2300      	movmi	r3, #0
    491e:	f1c5 0801 	rsbmi	r8, r5, #1
    4922:	9307      	strmi	r3, [sp, #28]
    4924:	f04f 0800 	movpl.w	r8, #0
    4928:	f1bb 0f00 	cmp.w	fp, #0
    492c:	db3e      	blt.n	49ac <_dtoa_r+0x224>
    492e:	9b07      	ldr	r3, [sp, #28]
    4930:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
    4934:	445b      	add	r3, fp
    4936:	9307      	str	r3, [sp, #28]
    4938:	2300      	movs	r3, #0
    493a:	9308      	str	r3, [sp, #32]
    493c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    493e:	2b09      	cmp	r3, #9
    4940:	f200 80b0 	bhi.w	4aa4 <_dtoa_r+0x31c>
    4944:	2b05      	cmp	r3, #5
    4946:	bfc4      	itt	gt
    4948:	3b04      	subgt	r3, #4
    494a:	931e      	strgt	r3, [sp, #120]	; 0x78
    494c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    494e:	f1a3 0302 	sub.w	r3, r3, #2
    4952:	bfcc      	ite	gt
    4954:	2600      	movgt	r6, #0
    4956:	2601      	movle	r6, #1
    4958:	2b03      	cmp	r3, #3
    495a:	f200 80af 	bhi.w	4abc <_dtoa_r+0x334>
    495e:	e8df f003 	tbb	[pc, r3]
    4962:	8583      	.short	0x8583
    4964:	772d      	.short	0x772d
    4966:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    4968:	9d12      	ldr	r5, [sp, #72]	; 0x48
    496a:	441d      	add	r5, r3
    496c:	f205 4332 	addw	r3, r5, #1074	; 0x432
    4970:	2b20      	cmp	r3, #32
    4972:	dd11      	ble.n	4998 <_dtoa_r+0x210>
    4974:	9a02      	ldr	r2, [sp, #8]
    4976:	f205 4012 	addw	r0, r5, #1042	; 0x412
    497a:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
    497e:	fa22 f000 	lsr.w	r0, r2, r0
    4982:	fa09 f303 	lsl.w	r3, r9, r3
    4986:	4318      	orrs	r0, r3
    4988:	f7fe fbb6 	bl	30f8 <__aeabi_ui2d>
    498c:	2301      	movs	r3, #1
    498e:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
    4992:	3d01      	subs	r5, #1
    4994:	9310      	str	r3, [sp, #64]	; 0x40
    4996:	e774      	b.n	4882 <_dtoa_r+0xfa>
    4998:	f1c3 0020 	rsb	r0, r3, #32
    499c:	9b02      	ldr	r3, [sp, #8]
    499e:	fa03 f000 	lsl.w	r0, r3, r0
    49a2:	e7f1      	b.n	4988 <_dtoa_r+0x200>
    49a4:	2301      	movs	r3, #1
    49a6:	e7b3      	b.n	4910 <_dtoa_r+0x188>
    49a8:	900d      	str	r0, [sp, #52]	; 0x34
    49aa:	e7b2      	b.n	4912 <_dtoa_r+0x18a>
    49ac:	f1cb 0300 	rsb	r3, fp, #0
    49b0:	9308      	str	r3, [sp, #32]
    49b2:	2300      	movs	r3, #0
    49b4:	eba8 080b 	sub.w	r8, r8, fp
    49b8:	930c      	str	r3, [sp, #48]	; 0x30
    49ba:	e7bf      	b.n	493c <_dtoa_r+0x1b4>
    49bc:	2301      	movs	r3, #1
    49be:	9309      	str	r3, [sp, #36]	; 0x24
    49c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    49c2:	2b00      	cmp	r3, #0
    49c4:	dd7d      	ble.n	4ac2 <_dtoa_r+0x33a>
    49c6:	9304      	str	r3, [sp, #16]
    49c8:	4699      	mov	r9, r3
    49ca:	6a65      	ldr	r5, [r4, #36]	; 0x24
    49cc:	2200      	movs	r2, #0
    49ce:	606a      	str	r2, [r5, #4]
    49d0:	2104      	movs	r1, #4
    49d2:	f101 0214 	add.w	r2, r1, #20
    49d6:	429a      	cmp	r2, r3
    49d8:	d978      	bls.n	4acc <_dtoa_r+0x344>
    49da:	6869      	ldr	r1, [r5, #4]
    49dc:	4620      	mov	r0, r4
    49de:	f000 fd1a 	bl	5416 <_Balloc>
    49e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
    49e4:	6028      	str	r0, [r5, #0]
    49e6:	681b      	ldr	r3, [r3, #0]
    49e8:	9306      	str	r3, [sp, #24]
    49ea:	f1b9 0f0e 	cmp.w	r9, #14
    49ee:	f200 80ee 	bhi.w	4bce <_dtoa_r+0x446>
    49f2:	2e00      	cmp	r6, #0
    49f4:	f000 80eb 	beq.w	4bce <_dtoa_r+0x446>
    49f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    49fc:	f1bb 0f00 	cmp.w	fp, #0
    4a00:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
    4a04:	dd77      	ble.n	4af6 <_dtoa_r+0x36e>
    4a06:	4a25      	ldr	r2, [pc, #148]	; (4a9c <_dtoa_r+0x314>)
    4a08:	f00b 030f 	and.w	r3, fp, #15
    4a0c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
    4a10:	e9d3 2300 	ldrd	r2, r3, [r3]
    4a14:	ea4f 162b 	mov.w	r6, fp, asr #4
    4a18:	06f0      	lsls	r0, r6, #27
    4a1a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    4a1e:	d55a      	bpl.n	4ad6 <_dtoa_r+0x34e>
    4a20:	4b1f      	ldr	r3, [pc, #124]	; (4aa0 <_dtoa_r+0x318>)
    4a22:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    4a26:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
    4a2a:	f7fe fd05 	bl	3438 <__aeabi_ddiv>
    4a2e:	e9cd 0102 	strd	r0, r1, [sp, #8]
    4a32:	f006 060f 	and.w	r6, r6, #15
    4a36:	2503      	movs	r5, #3
    4a38:	4f19      	ldr	r7, [pc, #100]	; (4aa0 <_dtoa_r+0x318>)
    4a3a:	2e00      	cmp	r6, #0
    4a3c:	d14d      	bne.n	4ada <_dtoa_r+0x352>
    4a3e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    4a42:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    4a46:	f7fe fcf7 	bl	3438 <__aeabi_ddiv>
    4a4a:	e9cd 0102 	strd	r0, r1, [sp, #8]
    4a4e:	e06c      	b.n	4b2a <_dtoa_r+0x3a2>
    4a50:	2301      	movs	r3, #1
    4a52:	9309      	str	r3, [sp, #36]	; 0x24
    4a54:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    4a56:	445b      	add	r3, fp
    4a58:	f103 0901 	add.w	r9, r3, #1
    4a5c:	9304      	str	r3, [sp, #16]
    4a5e:	464b      	mov	r3, r9
    4a60:	2b01      	cmp	r3, #1
    4a62:	bfb8      	it	lt
    4a64:	2301      	movlt	r3, #1
    4a66:	e7b0      	b.n	49ca <_dtoa_r+0x242>
    4a68:	2300      	movs	r3, #0
    4a6a:	e7a8      	b.n	49be <_dtoa_r+0x236>
    4a6c:	2300      	movs	r3, #0
    4a6e:	e7f0      	b.n	4a52 <_dtoa_r+0x2ca>
    4a70:	636f4361 	.word	0x636f4361
    4a74:	3fd287a7 	.word	0x3fd287a7
    4a78:	8b60c8b3 	.word	0x8b60c8b3
    4a7c:	3fc68a28 	.word	0x3fc68a28
    4a80:	509f79fb 	.word	0x509f79fb
    4a84:	3fd34413 	.word	0x3fd34413
    4a88:	7ff00000 	.word	0x7ff00000
    4a8c:	00005f7d 	.word	0x00005f7d
    4a90:	00005f74 	.word	0x00005f74
    4a94:	00005f51 	.word	0x00005f51
    4a98:	3ff80000 	.word	0x3ff80000
    4a9c:	00005fb0 	.word	0x00005fb0
    4aa0:	00005f88 	.word	0x00005f88
    4aa4:	2601      	movs	r6, #1
    4aa6:	2300      	movs	r3, #0
    4aa8:	931e      	str	r3, [sp, #120]	; 0x78
    4aaa:	9609      	str	r6, [sp, #36]	; 0x24
    4aac:	f04f 33ff 	mov.w	r3, #4294967295
    4ab0:	9304      	str	r3, [sp, #16]
    4ab2:	4699      	mov	r9, r3
    4ab4:	2200      	movs	r2, #0
    4ab6:	2312      	movs	r3, #18
    4ab8:	921f      	str	r2, [sp, #124]	; 0x7c
    4aba:	e786      	b.n	49ca <_dtoa_r+0x242>
    4abc:	2301      	movs	r3, #1
    4abe:	9309      	str	r3, [sp, #36]	; 0x24
    4ac0:	e7f4      	b.n	4aac <_dtoa_r+0x324>
    4ac2:	2301      	movs	r3, #1
    4ac4:	9304      	str	r3, [sp, #16]
    4ac6:	4699      	mov	r9, r3
    4ac8:	461a      	mov	r2, r3
    4aca:	e7f5      	b.n	4ab8 <_dtoa_r+0x330>
    4acc:	686a      	ldr	r2, [r5, #4]
    4ace:	3201      	adds	r2, #1
    4ad0:	606a      	str	r2, [r5, #4]
    4ad2:	0049      	lsls	r1, r1, #1
    4ad4:	e77d      	b.n	49d2 <_dtoa_r+0x24a>
    4ad6:	2502      	movs	r5, #2
    4ad8:	e7ae      	b.n	4a38 <_dtoa_r+0x2b0>
    4ada:	07f1      	lsls	r1, r6, #31
    4adc:	d508      	bpl.n	4af0 <_dtoa_r+0x368>
    4ade:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    4ae2:	e9d7 2300 	ldrd	r2, r3, [r7]
    4ae6:	f7fe fb7d 	bl	31e4 <__aeabi_dmul>
    4aea:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    4aee:	3501      	adds	r5, #1
    4af0:	1076      	asrs	r6, r6, #1
    4af2:	3708      	adds	r7, #8
    4af4:	e7a1      	b.n	4a3a <_dtoa_r+0x2b2>
    4af6:	f000 80a5 	beq.w	4c44 <_dtoa_r+0x4bc>
    4afa:	f1cb 0600 	rsb	r6, fp, #0
    4afe:	4ba3      	ldr	r3, [pc, #652]	; (4d8c <_dtoa_r+0x604>)
    4b00:	4fa3      	ldr	r7, [pc, #652]	; (4d90 <_dtoa_r+0x608>)
    4b02:	f006 020f 	and.w	r2, r6, #15
    4b06:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    4b0a:	e9d3 2300 	ldrd	r2, r3, [r3]
    4b0e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    4b12:	f7fe fb67 	bl	31e4 <__aeabi_dmul>
    4b16:	e9cd 0102 	strd	r0, r1, [sp, #8]
    4b1a:	1136      	asrs	r6, r6, #4
    4b1c:	2300      	movs	r3, #0
    4b1e:	2502      	movs	r5, #2
    4b20:	2e00      	cmp	r6, #0
    4b22:	f040 8084 	bne.w	4c2e <_dtoa_r+0x4a6>
    4b26:	2b00      	cmp	r3, #0
    4b28:	d18f      	bne.n	4a4a <_dtoa_r+0x2c2>
    4b2a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4b2c:	2b00      	cmp	r3, #0
    4b2e:	f000 808b 	beq.w	4c48 <_dtoa_r+0x4c0>
    4b32:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    4b36:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    4b3a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    4b3e:	2200      	movs	r2, #0
    4b40:	4b94      	ldr	r3, [pc, #592]	; (4d94 <_dtoa_r+0x60c>)
    4b42:	f7fe fdc1 	bl	36c8 <__aeabi_dcmplt>
    4b46:	2800      	cmp	r0, #0
    4b48:	d07e      	beq.n	4c48 <_dtoa_r+0x4c0>
    4b4a:	f1b9 0f00 	cmp.w	r9, #0
    4b4e:	d07b      	beq.n	4c48 <_dtoa_r+0x4c0>
    4b50:	9b04      	ldr	r3, [sp, #16]
    4b52:	2b00      	cmp	r3, #0
    4b54:	dd37      	ble.n	4bc6 <_dtoa_r+0x43e>
    4b56:	2200      	movs	r2, #0
    4b58:	4b8f      	ldr	r3, [pc, #572]	; (4d98 <_dtoa_r+0x610>)
    4b5a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    4b5e:	f7fe fb41 	bl	31e4 <__aeabi_dmul>
    4b62:	e9cd 0102 	strd	r0, r1, [sp, #8]
    4b66:	9e04      	ldr	r6, [sp, #16]
    4b68:	f10b 37ff 	add.w	r7, fp, #4294967295
    4b6c:	3501      	adds	r5, #1
    4b6e:	4628      	mov	r0, r5
    4b70:	f7fe fad2 	bl	3118 <__aeabi_i2d>
    4b74:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    4b78:	f7fe fb34 	bl	31e4 <__aeabi_dmul>
    4b7c:	4b87      	ldr	r3, [pc, #540]	; (4d9c <_dtoa_r+0x614>)
    4b7e:	2200      	movs	r2, #0
    4b80:	f7fe f97e 	bl	2e80 <__adddf3>
    4b84:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    4b88:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4b8a:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
    4b8e:	950b      	str	r5, [sp, #44]	; 0x2c
    4b90:	2e00      	cmp	r6, #0
    4b92:	d15c      	bne.n	4c4e <_dtoa_r+0x4c6>
    4b94:	2200      	movs	r2, #0
    4b96:	4b82      	ldr	r3, [pc, #520]	; (4da0 <_dtoa_r+0x618>)
    4b98:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    4b9c:	f7fe f96e 	bl	2e7c <__aeabi_dsub>
    4ba0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4ba2:	462b      	mov	r3, r5
    4ba4:	e9cd 0102 	strd	r0, r1, [sp, #8]
    4ba8:	f7fe fdac 	bl	3704 <__aeabi_dcmpgt>
    4bac:	2800      	cmp	r0, #0
    4bae:	f040 82f7 	bne.w	51a0 <_dtoa_r+0xa18>
    4bb2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4bb4:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
    4bb8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    4bbc:	f7fe fd84 	bl	36c8 <__aeabi_dcmplt>
    4bc0:	2800      	cmp	r0, #0
    4bc2:	f040 82eb 	bne.w	519c <_dtoa_r+0xa14>
    4bc6:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    4bca:	e9cd 2302 	strd	r2, r3, [sp, #8]
    4bce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    4bd0:	2b00      	cmp	r3, #0
    4bd2:	f2c0 8151 	blt.w	4e78 <_dtoa_r+0x6f0>
    4bd6:	f1bb 0f0e 	cmp.w	fp, #14
    4bda:	f300 814d 	bgt.w	4e78 <_dtoa_r+0x6f0>
    4bde:	4b6b      	ldr	r3, [pc, #428]	; (4d8c <_dtoa_r+0x604>)
    4be0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
    4be4:	e9d3 2300 	ldrd	r2, r3, [r3]
    4be8:	e9cd 2304 	strd	r2, r3, [sp, #16]
    4bec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    4bee:	2b00      	cmp	r3, #0
    4bf0:	f280 80da 	bge.w	4da8 <_dtoa_r+0x620>
    4bf4:	f1b9 0f00 	cmp.w	r9, #0
    4bf8:	f300 80d6 	bgt.w	4da8 <_dtoa_r+0x620>
    4bfc:	f040 82cd 	bne.w	519a <_dtoa_r+0xa12>
    4c00:	2200      	movs	r2, #0
    4c02:	4b67      	ldr	r3, [pc, #412]	; (4da0 <_dtoa_r+0x618>)
    4c04:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    4c08:	f7fe faec 	bl	31e4 <__aeabi_dmul>
    4c0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    4c10:	f7fe fd6e 	bl	36f0 <__aeabi_dcmpge>
    4c14:	464e      	mov	r6, r9
    4c16:	464f      	mov	r7, r9
    4c18:	2800      	cmp	r0, #0
    4c1a:	f040 82a4 	bne.w	5166 <_dtoa_r+0x9de>
    4c1e:	9b06      	ldr	r3, [sp, #24]
    4c20:	9a06      	ldr	r2, [sp, #24]
    4c22:	1c5d      	adds	r5, r3, #1
    4c24:	2331      	movs	r3, #49	; 0x31
    4c26:	7013      	strb	r3, [r2, #0]
    4c28:	f10b 0b01 	add.w	fp, fp, #1
    4c2c:	e29f      	b.n	516e <_dtoa_r+0x9e6>
    4c2e:	07f2      	lsls	r2, r6, #31
    4c30:	d505      	bpl.n	4c3e <_dtoa_r+0x4b6>
    4c32:	e9d7 2300 	ldrd	r2, r3, [r7]
    4c36:	f7fe fad5 	bl	31e4 <__aeabi_dmul>
    4c3a:	3501      	adds	r5, #1
    4c3c:	2301      	movs	r3, #1
    4c3e:	1076      	asrs	r6, r6, #1
    4c40:	3708      	adds	r7, #8
    4c42:	e76d      	b.n	4b20 <_dtoa_r+0x398>
    4c44:	2502      	movs	r5, #2
    4c46:	e770      	b.n	4b2a <_dtoa_r+0x3a2>
    4c48:	465f      	mov	r7, fp
    4c4a:	464e      	mov	r6, r9
    4c4c:	e78f      	b.n	4b6e <_dtoa_r+0x3e6>
    4c4e:	9a06      	ldr	r2, [sp, #24]
    4c50:	4b4e      	ldr	r3, [pc, #312]	; (4d8c <_dtoa_r+0x604>)
    4c52:	4432      	add	r2, r6
    4c54:	9211      	str	r2, [sp, #68]	; 0x44
    4c56:	9a09      	ldr	r2, [sp, #36]	; 0x24
    4c58:	1e71      	subs	r1, r6, #1
    4c5a:	2a00      	cmp	r2, #0
    4c5c:	d048      	beq.n	4cf0 <_dtoa_r+0x568>
    4c5e:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
    4c62:	e9d3 2300 	ldrd	r2, r3, [r3]
    4c66:	2000      	movs	r0, #0
    4c68:	494e      	ldr	r1, [pc, #312]	; (4da4 <_dtoa_r+0x61c>)
    4c6a:	f7fe fbe5 	bl	3438 <__aeabi_ddiv>
    4c6e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    4c72:	f7fe f903 	bl	2e7c <__aeabi_dsub>
    4c76:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    4c7a:	9d06      	ldr	r5, [sp, #24]
    4c7c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    4c80:	f7fe fd60 	bl	3744 <__aeabi_d2iz>
    4c84:	4606      	mov	r6, r0
    4c86:	f7fe fa47 	bl	3118 <__aeabi_i2d>
    4c8a:	4602      	mov	r2, r0
    4c8c:	460b      	mov	r3, r1
    4c8e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    4c92:	f7fe f8f3 	bl	2e7c <__aeabi_dsub>
    4c96:	3630      	adds	r6, #48	; 0x30
    4c98:	f805 6b01 	strb.w	r6, [r5], #1
    4c9c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    4ca0:	e9cd 0102 	strd	r0, r1, [sp, #8]
    4ca4:	f7fe fd10 	bl	36c8 <__aeabi_dcmplt>
    4ca8:	2800      	cmp	r0, #0
    4caa:	d165      	bne.n	4d78 <_dtoa_r+0x5f0>
    4cac:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    4cb0:	2000      	movs	r0, #0
    4cb2:	4938      	ldr	r1, [pc, #224]	; (4d94 <_dtoa_r+0x60c>)
    4cb4:	f7fe f8e2 	bl	2e7c <__aeabi_dsub>
    4cb8:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    4cbc:	f7fe fd04 	bl	36c8 <__aeabi_dcmplt>
    4cc0:	2800      	cmp	r0, #0
    4cc2:	f040 80b9 	bne.w	4e38 <_dtoa_r+0x6b0>
    4cc6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4cc8:	429d      	cmp	r5, r3
    4cca:	f43f af7c 	beq.w	4bc6 <_dtoa_r+0x43e>
    4cce:	2200      	movs	r2, #0
    4cd0:	4b31      	ldr	r3, [pc, #196]	; (4d98 <_dtoa_r+0x610>)
    4cd2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    4cd6:	f7fe fa85 	bl	31e4 <__aeabi_dmul>
    4cda:	2200      	movs	r2, #0
    4cdc:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    4ce0:	4b2d      	ldr	r3, [pc, #180]	; (4d98 <_dtoa_r+0x610>)
    4ce2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    4ce6:	f7fe fa7d 	bl	31e4 <__aeabi_dmul>
    4cea:	e9cd 0102 	strd	r0, r1, [sp, #8]
    4cee:	e7c5      	b.n	4c7c <_dtoa_r+0x4f4>
    4cf0:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
    4cf4:	e9d1 0100 	ldrd	r0, r1, [r1]
    4cf8:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    4cfc:	f7fe fa72 	bl	31e4 <__aeabi_dmul>
    4d00:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    4d04:	9d06      	ldr	r5, [sp, #24]
    4d06:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    4d0a:	f7fe fd1b 	bl	3744 <__aeabi_d2iz>
    4d0e:	4606      	mov	r6, r0
    4d10:	f7fe fa02 	bl	3118 <__aeabi_i2d>
    4d14:	3630      	adds	r6, #48	; 0x30
    4d16:	4602      	mov	r2, r0
    4d18:	460b      	mov	r3, r1
    4d1a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    4d1e:	f7fe f8ad 	bl	2e7c <__aeabi_dsub>
    4d22:	f805 6b01 	strb.w	r6, [r5], #1
    4d26:	9b11      	ldr	r3, [sp, #68]	; 0x44
    4d28:	42ab      	cmp	r3, r5
    4d2a:	e9cd 0102 	strd	r0, r1, [sp, #8]
    4d2e:	f04f 0200 	mov.w	r2, #0
    4d32:	d125      	bne.n	4d80 <_dtoa_r+0x5f8>
    4d34:	4b1b      	ldr	r3, [pc, #108]	; (4da4 <_dtoa_r+0x61c>)
    4d36:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    4d3a:	f7fe f8a1 	bl	2e80 <__adddf3>
    4d3e:	4602      	mov	r2, r0
    4d40:	460b      	mov	r3, r1
    4d42:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    4d46:	f7fe fcdd 	bl	3704 <__aeabi_dcmpgt>
    4d4a:	2800      	cmp	r0, #0
    4d4c:	d174      	bne.n	4e38 <_dtoa_r+0x6b0>
    4d4e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    4d52:	2000      	movs	r0, #0
    4d54:	4913      	ldr	r1, [pc, #76]	; (4da4 <_dtoa_r+0x61c>)
    4d56:	f7fe f891 	bl	2e7c <__aeabi_dsub>
    4d5a:	4602      	mov	r2, r0
    4d5c:	460b      	mov	r3, r1
    4d5e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    4d62:	f7fe fcb1 	bl	36c8 <__aeabi_dcmplt>
    4d66:	2800      	cmp	r0, #0
    4d68:	f43f af2d 	beq.w	4bc6 <_dtoa_r+0x43e>
    4d6c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    4d70:	2b30      	cmp	r3, #48	; 0x30
    4d72:	f105 32ff 	add.w	r2, r5, #4294967295
    4d76:	d001      	beq.n	4d7c <_dtoa_r+0x5f4>
    4d78:	46bb      	mov	fp, r7
    4d7a:	e04c      	b.n	4e16 <_dtoa_r+0x68e>
    4d7c:	4615      	mov	r5, r2
    4d7e:	e7f5      	b.n	4d6c <_dtoa_r+0x5e4>
    4d80:	4b05      	ldr	r3, [pc, #20]	; (4d98 <_dtoa_r+0x610>)
    4d82:	f7fe fa2f 	bl	31e4 <__aeabi_dmul>
    4d86:	e9cd 0102 	strd	r0, r1, [sp, #8]
    4d8a:	e7bc      	b.n	4d06 <_dtoa_r+0x57e>
    4d8c:	00005fb0 	.word	0x00005fb0
    4d90:	00005f88 	.word	0x00005f88
    4d94:	3ff00000 	.word	0x3ff00000
    4d98:	40240000 	.word	0x40240000
    4d9c:	401c0000 	.word	0x401c0000
    4da0:	40140000 	.word	0x40140000
    4da4:	3fe00000 	.word	0x3fe00000
    4da8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
    4dac:	9d06      	ldr	r5, [sp, #24]
    4dae:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    4db2:	4630      	mov	r0, r6
    4db4:	4639      	mov	r1, r7
    4db6:	f7fe fb3f 	bl	3438 <__aeabi_ddiv>
    4dba:	f7fe fcc3 	bl	3744 <__aeabi_d2iz>
    4dbe:	4680      	mov	r8, r0
    4dc0:	f7fe f9aa 	bl	3118 <__aeabi_i2d>
    4dc4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    4dc8:	f7fe fa0c 	bl	31e4 <__aeabi_dmul>
    4dcc:	4602      	mov	r2, r0
    4dce:	460b      	mov	r3, r1
    4dd0:	4630      	mov	r0, r6
    4dd2:	4639      	mov	r1, r7
    4dd4:	f108 0630 	add.w	r6, r8, #48	; 0x30
    4dd8:	f7fe f850 	bl	2e7c <__aeabi_dsub>
    4ddc:	f805 6b01 	strb.w	r6, [r5], #1
    4de0:	9e06      	ldr	r6, [sp, #24]
    4de2:	1bae      	subs	r6, r5, r6
    4de4:	45b1      	cmp	r9, r6
    4de6:	4602      	mov	r2, r0
    4de8:	460b      	mov	r3, r1
    4dea:	d138      	bne.n	4e5e <_dtoa_r+0x6d6>
    4dec:	f7fe f848 	bl	2e80 <__adddf3>
    4df0:	4606      	mov	r6, r0
    4df2:	460f      	mov	r7, r1
    4df4:	4602      	mov	r2, r0
    4df6:	460b      	mov	r3, r1
    4df8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    4dfc:	f7fe fc64 	bl	36c8 <__aeabi_dcmplt>
    4e00:	b9c8      	cbnz	r0, 4e36 <_dtoa_r+0x6ae>
    4e02:	4632      	mov	r2, r6
    4e04:	463b      	mov	r3, r7
    4e06:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    4e0a:	f7fe fc53 	bl	36b4 <__aeabi_dcmpeq>
    4e0e:	b110      	cbz	r0, 4e16 <_dtoa_r+0x68e>
    4e10:	f018 0f01 	tst.w	r8, #1
    4e14:	d10f      	bne.n	4e36 <_dtoa_r+0x6ae>
    4e16:	4651      	mov	r1, sl
    4e18:	4620      	mov	r0, r4
    4e1a:	f000 fb30 	bl	547e <_Bfree>
    4e1e:	2300      	movs	r3, #0
    4e20:	9a20      	ldr	r2, [sp, #128]	; 0x80
    4e22:	702b      	strb	r3, [r5, #0]
    4e24:	f10b 0301 	add.w	r3, fp, #1
    4e28:	6013      	str	r3, [r2, #0]
    4e2a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4e2c:	2b00      	cmp	r3, #0
    4e2e:	f43f acf0 	beq.w	4812 <_dtoa_r+0x8a>
    4e32:	601d      	str	r5, [r3, #0]
    4e34:	e4ed      	b.n	4812 <_dtoa_r+0x8a>
    4e36:	465f      	mov	r7, fp
    4e38:	f815 2c01 	ldrb.w	r2, [r5, #-1]
    4e3c:	2a39      	cmp	r2, #57	; 0x39
    4e3e:	f105 33ff 	add.w	r3, r5, #4294967295
    4e42:	d106      	bne.n	4e52 <_dtoa_r+0x6ca>
    4e44:	9a06      	ldr	r2, [sp, #24]
    4e46:	429a      	cmp	r2, r3
    4e48:	d107      	bne.n	4e5a <_dtoa_r+0x6d2>
    4e4a:	2330      	movs	r3, #48	; 0x30
    4e4c:	7013      	strb	r3, [r2, #0]
    4e4e:	3701      	adds	r7, #1
    4e50:	4613      	mov	r3, r2
    4e52:	781a      	ldrb	r2, [r3, #0]
    4e54:	3201      	adds	r2, #1
    4e56:	701a      	strb	r2, [r3, #0]
    4e58:	e78e      	b.n	4d78 <_dtoa_r+0x5f0>
    4e5a:	461d      	mov	r5, r3
    4e5c:	e7ec      	b.n	4e38 <_dtoa_r+0x6b0>
    4e5e:	2200      	movs	r2, #0
    4e60:	4bb4      	ldr	r3, [pc, #720]	; (5134 <_dtoa_r+0x9ac>)
    4e62:	f7fe f9bf 	bl	31e4 <__aeabi_dmul>
    4e66:	2200      	movs	r2, #0
    4e68:	2300      	movs	r3, #0
    4e6a:	4606      	mov	r6, r0
    4e6c:	460f      	mov	r7, r1
    4e6e:	f7fe fc21 	bl	36b4 <__aeabi_dcmpeq>
    4e72:	2800      	cmp	r0, #0
    4e74:	d09b      	beq.n	4dae <_dtoa_r+0x626>
    4e76:	e7ce      	b.n	4e16 <_dtoa_r+0x68e>
    4e78:	9a09      	ldr	r2, [sp, #36]	; 0x24
    4e7a:	2a00      	cmp	r2, #0
    4e7c:	f000 8129 	beq.w	50d2 <_dtoa_r+0x94a>
    4e80:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    4e82:	2a01      	cmp	r2, #1
    4e84:	f300 810e 	bgt.w	50a4 <_dtoa_r+0x91c>
    4e88:	9a10      	ldr	r2, [sp, #64]	; 0x40
    4e8a:	2a00      	cmp	r2, #0
    4e8c:	f000 8106 	beq.w	509c <_dtoa_r+0x914>
    4e90:	f203 4333 	addw	r3, r3, #1075	; 0x433
    4e94:	9e08      	ldr	r6, [sp, #32]
    4e96:	4645      	mov	r5, r8
    4e98:	9a07      	ldr	r2, [sp, #28]
    4e9a:	2101      	movs	r1, #1
    4e9c:	441a      	add	r2, r3
    4e9e:	4620      	mov	r0, r4
    4ea0:	4498      	add	r8, r3
    4ea2:	9207      	str	r2, [sp, #28]
    4ea4:	f000 fb8b 	bl	55be <__i2b>
    4ea8:	4607      	mov	r7, r0
    4eaa:	2d00      	cmp	r5, #0
    4eac:	dd0b      	ble.n	4ec6 <_dtoa_r+0x73e>
    4eae:	9b07      	ldr	r3, [sp, #28]
    4eb0:	2b00      	cmp	r3, #0
    4eb2:	dd08      	ble.n	4ec6 <_dtoa_r+0x73e>
    4eb4:	42ab      	cmp	r3, r5
    4eb6:	9a07      	ldr	r2, [sp, #28]
    4eb8:	bfa8      	it	ge
    4eba:	462b      	movge	r3, r5
    4ebc:	eba8 0803 	sub.w	r8, r8, r3
    4ec0:	1aed      	subs	r5, r5, r3
    4ec2:	1ad3      	subs	r3, r2, r3
    4ec4:	9307      	str	r3, [sp, #28]
    4ec6:	9b08      	ldr	r3, [sp, #32]
    4ec8:	b1fb      	cbz	r3, 4f0a <_dtoa_r+0x782>
    4eca:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4ecc:	2b00      	cmp	r3, #0
    4ece:	f000 8104 	beq.w	50da <_dtoa_r+0x952>
    4ed2:	2e00      	cmp	r6, #0
    4ed4:	dd11      	ble.n	4efa <_dtoa_r+0x772>
    4ed6:	4639      	mov	r1, r7
    4ed8:	4632      	mov	r2, r6
    4eda:	4620      	mov	r0, r4
    4edc:	f000 fc06 	bl	56ec <__pow5mult>
    4ee0:	4652      	mov	r2, sl
    4ee2:	4601      	mov	r1, r0
    4ee4:	4607      	mov	r7, r0
    4ee6:	4620      	mov	r0, r4
    4ee8:	f000 fb72 	bl	55d0 <__multiply>
    4eec:	4651      	mov	r1, sl
    4eee:	900a      	str	r0, [sp, #40]	; 0x28
    4ef0:	4620      	mov	r0, r4
    4ef2:	f000 fac4 	bl	547e <_Bfree>
    4ef6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4ef8:	469a      	mov	sl, r3
    4efa:	9b08      	ldr	r3, [sp, #32]
    4efc:	1b9a      	subs	r2, r3, r6
    4efe:	d004      	beq.n	4f0a <_dtoa_r+0x782>
    4f00:	4651      	mov	r1, sl
    4f02:	4620      	mov	r0, r4
    4f04:	f000 fbf2 	bl	56ec <__pow5mult>
    4f08:	4682      	mov	sl, r0
    4f0a:	2101      	movs	r1, #1
    4f0c:	4620      	mov	r0, r4
    4f0e:	f000 fb56 	bl	55be <__i2b>
    4f12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4f14:	2b00      	cmp	r3, #0
    4f16:	4606      	mov	r6, r0
    4f18:	f340 80e1 	ble.w	50de <_dtoa_r+0x956>
    4f1c:	461a      	mov	r2, r3
    4f1e:	4601      	mov	r1, r0
    4f20:	4620      	mov	r0, r4
    4f22:	f000 fbe3 	bl	56ec <__pow5mult>
    4f26:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    4f28:	2b01      	cmp	r3, #1
    4f2a:	4606      	mov	r6, r0
    4f2c:	f340 80da 	ble.w	50e4 <_dtoa_r+0x95c>
    4f30:	2300      	movs	r3, #0
    4f32:	9308      	str	r3, [sp, #32]
    4f34:	6933      	ldr	r3, [r6, #16]
    4f36:	eb06 0383 	add.w	r3, r6, r3, lsl #2
    4f3a:	6918      	ldr	r0, [r3, #16]
    4f3c:	f000 faf1 	bl	5522 <__hi0bits>
    4f40:	f1c0 0020 	rsb	r0, r0, #32
    4f44:	9b07      	ldr	r3, [sp, #28]
    4f46:	4418      	add	r0, r3
    4f48:	f010 001f 	ands.w	r0, r0, #31
    4f4c:	f000 80f0 	beq.w	5130 <_dtoa_r+0x9a8>
    4f50:	f1c0 0320 	rsb	r3, r0, #32
    4f54:	2b04      	cmp	r3, #4
    4f56:	f340 80e2 	ble.w	511e <_dtoa_r+0x996>
    4f5a:	9b07      	ldr	r3, [sp, #28]
    4f5c:	f1c0 001c 	rsb	r0, r0, #28
    4f60:	4480      	add	r8, r0
    4f62:	4405      	add	r5, r0
    4f64:	4403      	add	r3, r0
    4f66:	9307      	str	r3, [sp, #28]
    4f68:	f1b8 0f00 	cmp.w	r8, #0
    4f6c:	dd05      	ble.n	4f7a <_dtoa_r+0x7f2>
    4f6e:	4651      	mov	r1, sl
    4f70:	4642      	mov	r2, r8
    4f72:	4620      	mov	r0, r4
    4f74:	f000 fc08 	bl	5788 <__lshift>
    4f78:	4682      	mov	sl, r0
    4f7a:	9b07      	ldr	r3, [sp, #28]
    4f7c:	2b00      	cmp	r3, #0
    4f7e:	dd05      	ble.n	4f8c <_dtoa_r+0x804>
    4f80:	4631      	mov	r1, r6
    4f82:	461a      	mov	r2, r3
    4f84:	4620      	mov	r0, r4
    4f86:	f000 fbff 	bl	5788 <__lshift>
    4f8a:	4606      	mov	r6, r0
    4f8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4f8e:	2b00      	cmp	r3, #0
    4f90:	f000 80d2 	beq.w	5138 <_dtoa_r+0x9b0>
    4f94:	4631      	mov	r1, r6
    4f96:	4650      	mov	r0, sl
    4f98:	f000 fc47 	bl	582a <__mcmp>
    4f9c:	2800      	cmp	r0, #0
    4f9e:	f280 80cb 	bge.w	5138 <_dtoa_r+0x9b0>
    4fa2:	2300      	movs	r3, #0
    4fa4:	4651      	mov	r1, sl
    4fa6:	220a      	movs	r2, #10
    4fa8:	4620      	mov	r0, r4
    4faa:	f000 fa7f 	bl	54ac <__multadd>
    4fae:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4fb0:	f10b 3bff 	add.w	fp, fp, #4294967295
    4fb4:	4682      	mov	sl, r0
    4fb6:	2b00      	cmp	r3, #0
    4fb8:	f000 81aa 	beq.w	5310 <_dtoa_r+0xb88>
    4fbc:	2300      	movs	r3, #0
    4fbe:	4639      	mov	r1, r7
    4fc0:	220a      	movs	r2, #10
    4fc2:	4620      	mov	r0, r4
    4fc4:	f000 fa72 	bl	54ac <__multadd>
    4fc8:	9b04      	ldr	r3, [sp, #16]
    4fca:	2b00      	cmp	r3, #0
    4fcc:	4607      	mov	r7, r0
    4fce:	dc03      	bgt.n	4fd8 <_dtoa_r+0x850>
    4fd0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    4fd2:	2b02      	cmp	r3, #2
    4fd4:	f300 80b8 	bgt.w	5148 <_dtoa_r+0x9c0>
    4fd8:	2d00      	cmp	r5, #0
    4fda:	dd05      	ble.n	4fe8 <_dtoa_r+0x860>
    4fdc:	4639      	mov	r1, r7
    4fde:	462a      	mov	r2, r5
    4fe0:	4620      	mov	r0, r4
    4fe2:	f000 fbd1 	bl	5788 <__lshift>
    4fe6:	4607      	mov	r7, r0
    4fe8:	9b08      	ldr	r3, [sp, #32]
    4fea:	2b00      	cmp	r3, #0
    4fec:	f000 8110 	beq.w	5210 <_dtoa_r+0xa88>
    4ff0:	6879      	ldr	r1, [r7, #4]
    4ff2:	4620      	mov	r0, r4
    4ff4:	f000 fa0f 	bl	5416 <_Balloc>
    4ff8:	693a      	ldr	r2, [r7, #16]
    4ffa:	3202      	adds	r2, #2
    4ffc:	4605      	mov	r5, r0
    4ffe:	0092      	lsls	r2, r2, #2
    5000:	f107 010c 	add.w	r1, r7, #12
    5004:	300c      	adds	r0, #12
    5006:	f000 f9fb 	bl	5400 <memcpy>
    500a:	2201      	movs	r2, #1
    500c:	4629      	mov	r1, r5
    500e:	4620      	mov	r0, r4
    5010:	f000 fbba 	bl	5788 <__lshift>
    5014:	9b02      	ldr	r3, [sp, #8]
    5016:	f8dd 8018 	ldr.w	r8, [sp, #24]
    501a:	9707      	str	r7, [sp, #28]
    501c:	f003 0301 	and.w	r3, r3, #1
    5020:	4607      	mov	r7, r0
    5022:	9308      	str	r3, [sp, #32]
    5024:	4631      	mov	r1, r6
    5026:	4650      	mov	r0, sl
    5028:	f7ff fb20 	bl	466c <quorem>
    502c:	9907      	ldr	r1, [sp, #28]
    502e:	4605      	mov	r5, r0
    5030:	f100 0930 	add.w	r9, r0, #48	; 0x30
    5034:	4650      	mov	r0, sl
    5036:	f000 fbf8 	bl	582a <__mcmp>
    503a:	463a      	mov	r2, r7
    503c:	9002      	str	r0, [sp, #8]
    503e:	4631      	mov	r1, r6
    5040:	4620      	mov	r0, r4
    5042:	f000 fc0c 	bl	585e <__mdiff>
    5046:	68c3      	ldr	r3, [r0, #12]
    5048:	4602      	mov	r2, r0
    504a:	2b00      	cmp	r3, #0
    504c:	f040 80e2 	bne.w	5214 <_dtoa_r+0xa8c>
    5050:	4601      	mov	r1, r0
    5052:	9009      	str	r0, [sp, #36]	; 0x24
    5054:	4650      	mov	r0, sl
    5056:	f000 fbe8 	bl	582a <__mcmp>
    505a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    505c:	4603      	mov	r3, r0
    505e:	4611      	mov	r1, r2
    5060:	4620      	mov	r0, r4
    5062:	9309      	str	r3, [sp, #36]	; 0x24
    5064:	f000 fa0b 	bl	547e <_Bfree>
    5068:	9b09      	ldr	r3, [sp, #36]	; 0x24
    506a:	2b00      	cmp	r3, #0
    506c:	f040 80d4 	bne.w	5218 <_dtoa_r+0xa90>
    5070:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    5072:	2a00      	cmp	r2, #0
    5074:	f040 80d0 	bne.w	5218 <_dtoa_r+0xa90>
    5078:	9a08      	ldr	r2, [sp, #32]
    507a:	2a00      	cmp	r2, #0
    507c:	f040 80cc 	bne.w	5218 <_dtoa_r+0xa90>
    5080:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
    5084:	f000 80e8 	beq.w	5258 <_dtoa_r+0xad0>
    5088:	9b02      	ldr	r3, [sp, #8]
    508a:	2b00      	cmp	r3, #0
    508c:	dd01      	ble.n	5092 <_dtoa_r+0x90a>
    508e:	f105 0931 	add.w	r9, r5, #49	; 0x31
    5092:	f108 0501 	add.w	r5, r8, #1
    5096:	f888 9000 	strb.w	r9, [r8]
    509a:	e06a      	b.n	5172 <_dtoa_r+0x9ea>
    509c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    509e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
    50a2:	e6f7      	b.n	4e94 <_dtoa_r+0x70c>
    50a4:	9b08      	ldr	r3, [sp, #32]
    50a6:	f109 36ff 	add.w	r6, r9, #4294967295
    50aa:	42b3      	cmp	r3, r6
    50ac:	bfbf      	itttt	lt
    50ae:	9b08      	ldrlt	r3, [sp, #32]
    50b0:	9608      	strlt	r6, [sp, #32]
    50b2:	1af2      	sublt	r2, r6, r3
    50b4:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
    50b6:	bfb7      	itett	lt
    50b8:	189b      	addlt	r3, r3, r2
    50ba:	1b9e      	subge	r6, r3, r6
    50bc:	930c      	strlt	r3, [sp, #48]	; 0x30
    50be:	2600      	movlt	r6, #0
    50c0:	f1b9 0f00 	cmp.w	r9, #0
    50c4:	bfb9      	ittee	lt
    50c6:	eba8 0509 	sublt.w	r5, r8, r9
    50ca:	2300      	movlt	r3, #0
    50cc:	4645      	movge	r5, r8
    50ce:	464b      	movge	r3, r9
    50d0:	e6e2      	b.n	4e98 <_dtoa_r+0x710>
    50d2:	9e08      	ldr	r6, [sp, #32]
    50d4:	9f09      	ldr	r7, [sp, #36]	; 0x24
    50d6:	4645      	mov	r5, r8
    50d8:	e6e7      	b.n	4eaa <_dtoa_r+0x722>
    50da:	9a08      	ldr	r2, [sp, #32]
    50dc:	e710      	b.n	4f00 <_dtoa_r+0x778>
    50de:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    50e0:	2b01      	cmp	r3, #1
    50e2:	dc18      	bgt.n	5116 <_dtoa_r+0x98e>
    50e4:	9b02      	ldr	r3, [sp, #8]
    50e6:	b9b3      	cbnz	r3, 5116 <_dtoa_r+0x98e>
    50e8:	9b03      	ldr	r3, [sp, #12]
    50ea:	f3c3 0313 	ubfx	r3, r3, #0, #20
    50ee:	b9a3      	cbnz	r3, 511a <_dtoa_r+0x992>
    50f0:	9b03      	ldr	r3, [sp, #12]
    50f2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
    50f6:	0d1b      	lsrs	r3, r3, #20
    50f8:	051b      	lsls	r3, r3, #20
    50fa:	b12b      	cbz	r3, 5108 <_dtoa_r+0x980>
    50fc:	9b07      	ldr	r3, [sp, #28]
    50fe:	3301      	adds	r3, #1
    5100:	9307      	str	r3, [sp, #28]
    5102:	f108 0801 	add.w	r8, r8, #1
    5106:	2301      	movs	r3, #1
    5108:	9308      	str	r3, [sp, #32]
    510a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    510c:	2b00      	cmp	r3, #0
    510e:	f47f af11 	bne.w	4f34 <_dtoa_r+0x7ac>
    5112:	2001      	movs	r0, #1
    5114:	e716      	b.n	4f44 <_dtoa_r+0x7bc>
    5116:	2300      	movs	r3, #0
    5118:	e7f6      	b.n	5108 <_dtoa_r+0x980>
    511a:	9b02      	ldr	r3, [sp, #8]
    511c:	e7f4      	b.n	5108 <_dtoa_r+0x980>
    511e:	f43f af23 	beq.w	4f68 <_dtoa_r+0x7e0>
    5122:	9a07      	ldr	r2, [sp, #28]
    5124:	331c      	adds	r3, #28
    5126:	441a      	add	r2, r3
    5128:	4498      	add	r8, r3
    512a:	441d      	add	r5, r3
    512c:	4613      	mov	r3, r2
    512e:	e71a      	b.n	4f66 <_dtoa_r+0x7de>
    5130:	4603      	mov	r3, r0
    5132:	e7f6      	b.n	5122 <_dtoa_r+0x99a>
    5134:	40240000 	.word	0x40240000
    5138:	f1b9 0f00 	cmp.w	r9, #0
    513c:	dc33      	bgt.n	51a6 <_dtoa_r+0xa1e>
    513e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    5140:	2b02      	cmp	r3, #2
    5142:	dd30      	ble.n	51a6 <_dtoa_r+0xa1e>
    5144:	f8cd 9010 	str.w	r9, [sp, #16]
    5148:	9b04      	ldr	r3, [sp, #16]
    514a:	b963      	cbnz	r3, 5166 <_dtoa_r+0x9de>
    514c:	4631      	mov	r1, r6
    514e:	2205      	movs	r2, #5
    5150:	4620      	mov	r0, r4
    5152:	f000 f9ab 	bl	54ac <__multadd>
    5156:	4601      	mov	r1, r0
    5158:	4606      	mov	r6, r0
    515a:	4650      	mov	r0, sl
    515c:	f000 fb65 	bl	582a <__mcmp>
    5160:	2800      	cmp	r0, #0
    5162:	f73f ad5c 	bgt.w	4c1e <_dtoa_r+0x496>
    5166:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5168:	9d06      	ldr	r5, [sp, #24]
    516a:	ea6f 0b03 	mvn.w	fp, r3
    516e:	2300      	movs	r3, #0
    5170:	9307      	str	r3, [sp, #28]
    5172:	4631      	mov	r1, r6
    5174:	4620      	mov	r0, r4
    5176:	f000 f982 	bl	547e <_Bfree>
    517a:	2f00      	cmp	r7, #0
    517c:	f43f ae4b 	beq.w	4e16 <_dtoa_r+0x68e>
    5180:	9b07      	ldr	r3, [sp, #28]
    5182:	b12b      	cbz	r3, 5190 <_dtoa_r+0xa08>
    5184:	42bb      	cmp	r3, r7
    5186:	d003      	beq.n	5190 <_dtoa_r+0xa08>
    5188:	4619      	mov	r1, r3
    518a:	4620      	mov	r0, r4
    518c:	f000 f977 	bl	547e <_Bfree>
    5190:	4639      	mov	r1, r7
    5192:	4620      	mov	r0, r4
    5194:	f000 f973 	bl	547e <_Bfree>
    5198:	e63d      	b.n	4e16 <_dtoa_r+0x68e>
    519a:	2600      	movs	r6, #0
    519c:	4637      	mov	r7, r6
    519e:	e7e2      	b.n	5166 <_dtoa_r+0x9de>
    51a0:	46bb      	mov	fp, r7
    51a2:	4637      	mov	r7, r6
    51a4:	e53b      	b.n	4c1e <_dtoa_r+0x496>
    51a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    51a8:	f8cd 9010 	str.w	r9, [sp, #16]
    51ac:	2b00      	cmp	r3, #0
    51ae:	f47f af13 	bne.w	4fd8 <_dtoa_r+0x850>
    51b2:	9d06      	ldr	r5, [sp, #24]
    51b4:	4631      	mov	r1, r6
    51b6:	4650      	mov	r0, sl
    51b8:	f7ff fa58 	bl	466c <quorem>
    51bc:	f100 0930 	add.w	r9, r0, #48	; 0x30
    51c0:	f805 9b01 	strb.w	r9, [r5], #1
    51c4:	9b06      	ldr	r3, [sp, #24]
    51c6:	9a04      	ldr	r2, [sp, #16]
    51c8:	1aeb      	subs	r3, r5, r3
    51ca:	429a      	cmp	r2, r3
    51cc:	f300 8083 	bgt.w	52d6 <_dtoa_r+0xb4e>
    51d0:	9b06      	ldr	r3, [sp, #24]
    51d2:	2a01      	cmp	r2, #1
    51d4:	bfac      	ite	ge
    51d6:	189b      	addge	r3, r3, r2
    51d8:	3301      	addlt	r3, #1
    51da:	4698      	mov	r8, r3
    51dc:	2300      	movs	r3, #0
    51de:	9307      	str	r3, [sp, #28]
    51e0:	4651      	mov	r1, sl
    51e2:	2201      	movs	r2, #1
    51e4:	4620      	mov	r0, r4
    51e6:	f000 facf 	bl	5788 <__lshift>
    51ea:	4631      	mov	r1, r6
    51ec:	4682      	mov	sl, r0
    51ee:	f000 fb1c 	bl	582a <__mcmp>
    51f2:	2800      	cmp	r0, #0
    51f4:	dc35      	bgt.n	5262 <_dtoa_r+0xada>
    51f6:	d102      	bne.n	51fe <_dtoa_r+0xa76>
    51f8:	f019 0f01 	tst.w	r9, #1
    51fc:	d131      	bne.n	5262 <_dtoa_r+0xada>
    51fe:	4645      	mov	r5, r8
    5200:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    5204:	2b30      	cmp	r3, #48	; 0x30
    5206:	f105 32ff 	add.w	r2, r5, #4294967295
    520a:	d1b2      	bne.n	5172 <_dtoa_r+0x9ea>
    520c:	4615      	mov	r5, r2
    520e:	e7f7      	b.n	5200 <_dtoa_r+0xa78>
    5210:	4638      	mov	r0, r7
    5212:	e6ff      	b.n	5014 <_dtoa_r+0x88c>
    5214:	2301      	movs	r3, #1
    5216:	e722      	b.n	505e <_dtoa_r+0x8d6>
    5218:	9a02      	ldr	r2, [sp, #8]
    521a:	2a00      	cmp	r2, #0
    521c:	db04      	blt.n	5228 <_dtoa_r+0xaa0>
    521e:	d129      	bne.n	5274 <_dtoa_r+0xaec>
    5220:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    5222:	bb3a      	cbnz	r2, 5274 <_dtoa_r+0xaec>
    5224:	9a08      	ldr	r2, [sp, #32]
    5226:	bb2a      	cbnz	r2, 5274 <_dtoa_r+0xaec>
    5228:	2b00      	cmp	r3, #0
    522a:	f77f af32 	ble.w	5092 <_dtoa_r+0x90a>
    522e:	4651      	mov	r1, sl
    5230:	2201      	movs	r2, #1
    5232:	4620      	mov	r0, r4
    5234:	f000 faa8 	bl	5788 <__lshift>
    5238:	4631      	mov	r1, r6
    523a:	4682      	mov	sl, r0
    523c:	f000 faf5 	bl	582a <__mcmp>
    5240:	2800      	cmp	r0, #0
    5242:	dc05      	bgt.n	5250 <_dtoa_r+0xac8>
    5244:	f47f af25 	bne.w	5092 <_dtoa_r+0x90a>
    5248:	f019 0f01 	tst.w	r9, #1
    524c:	f43f af21 	beq.w	5092 <_dtoa_r+0x90a>
    5250:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
    5254:	f47f af1b 	bne.w	508e <_dtoa_r+0x906>
    5258:	2339      	movs	r3, #57	; 0x39
    525a:	f888 3000 	strb.w	r3, [r8]
    525e:	f108 0801 	add.w	r8, r8, #1
    5262:	4645      	mov	r5, r8
    5264:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    5268:	2b39      	cmp	r3, #57	; 0x39
    526a:	f105 32ff 	add.w	r2, r5, #4294967295
    526e:	d03a      	beq.n	52e6 <_dtoa_r+0xb5e>
    5270:	3301      	adds	r3, #1
    5272:	e03f      	b.n	52f4 <_dtoa_r+0xb6c>
    5274:	2b00      	cmp	r3, #0
    5276:	f108 0501 	add.w	r5, r8, #1
    527a:	dd05      	ble.n	5288 <_dtoa_r+0xb00>
    527c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
    5280:	d0ea      	beq.n	5258 <_dtoa_r+0xad0>
    5282:	f109 0901 	add.w	r9, r9, #1
    5286:	e706      	b.n	5096 <_dtoa_r+0x90e>
    5288:	9b06      	ldr	r3, [sp, #24]
    528a:	9a04      	ldr	r2, [sp, #16]
    528c:	f805 9c01 	strb.w	r9, [r5, #-1]
    5290:	1aeb      	subs	r3, r5, r3
    5292:	4293      	cmp	r3, r2
    5294:	46a8      	mov	r8, r5
    5296:	d0a3      	beq.n	51e0 <_dtoa_r+0xa58>
    5298:	4651      	mov	r1, sl
    529a:	2300      	movs	r3, #0
    529c:	220a      	movs	r2, #10
    529e:	4620      	mov	r0, r4
    52a0:	f000 f904 	bl	54ac <__multadd>
    52a4:	9b07      	ldr	r3, [sp, #28]
    52a6:	9907      	ldr	r1, [sp, #28]
    52a8:	42bb      	cmp	r3, r7
    52aa:	4682      	mov	sl, r0
    52ac:	f04f 0300 	mov.w	r3, #0
    52b0:	f04f 020a 	mov.w	r2, #10
    52b4:	4620      	mov	r0, r4
    52b6:	d104      	bne.n	52c2 <_dtoa_r+0xb3a>
    52b8:	f000 f8f8 	bl	54ac <__multadd>
    52bc:	9007      	str	r0, [sp, #28]
    52be:	4607      	mov	r7, r0
    52c0:	e6b0      	b.n	5024 <_dtoa_r+0x89c>
    52c2:	f000 f8f3 	bl	54ac <__multadd>
    52c6:	2300      	movs	r3, #0
    52c8:	9007      	str	r0, [sp, #28]
    52ca:	220a      	movs	r2, #10
    52cc:	4639      	mov	r1, r7
    52ce:	4620      	mov	r0, r4
    52d0:	f000 f8ec 	bl	54ac <__multadd>
    52d4:	e7f3      	b.n	52be <_dtoa_r+0xb36>
    52d6:	4651      	mov	r1, sl
    52d8:	2300      	movs	r3, #0
    52da:	220a      	movs	r2, #10
    52dc:	4620      	mov	r0, r4
    52de:	f000 f8e5 	bl	54ac <__multadd>
    52e2:	4682      	mov	sl, r0
    52e4:	e766      	b.n	51b4 <_dtoa_r+0xa2c>
    52e6:	9b06      	ldr	r3, [sp, #24]
    52e8:	4293      	cmp	r3, r2
    52ea:	d105      	bne.n	52f8 <_dtoa_r+0xb70>
    52ec:	9a06      	ldr	r2, [sp, #24]
    52ee:	f10b 0b01 	add.w	fp, fp, #1
    52f2:	2331      	movs	r3, #49	; 0x31
    52f4:	7013      	strb	r3, [r2, #0]
    52f6:	e73c      	b.n	5172 <_dtoa_r+0x9ea>
    52f8:	4615      	mov	r5, r2
    52fa:	e7b3      	b.n	5264 <_dtoa_r+0xadc>
    52fc:	4b09      	ldr	r3, [pc, #36]	; (5324 <_dtoa_r+0xb9c>)
    52fe:	f7ff baa5 	b.w	484c <_dtoa_r+0xc4>
    5302:	9b22      	ldr	r3, [sp, #136]	; 0x88
    5304:	2b00      	cmp	r3, #0
    5306:	f47f aa7f 	bne.w	4808 <_dtoa_r+0x80>
    530a:	4b07      	ldr	r3, [pc, #28]	; (5328 <_dtoa_r+0xba0>)
    530c:	f7ff ba9e 	b.w	484c <_dtoa_r+0xc4>
    5310:	9b04      	ldr	r3, [sp, #16]
    5312:	2b00      	cmp	r3, #0
    5314:	f73f af4d 	bgt.w	51b2 <_dtoa_r+0xa2a>
    5318:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    531a:	2b02      	cmp	r3, #2
    531c:	f77f af49 	ble.w	51b2 <_dtoa_r+0xa2a>
    5320:	e712      	b.n	5148 <_dtoa_r+0x9c0>
    5322:	bf00      	nop
    5324:	00005f50 	.word	0x00005f50
    5328:	00005f74 	.word	0x00005f74

0000532c <_localeconv_r>:
    532c:	4b04      	ldr	r3, [pc, #16]	; (5340 <_localeconv_r+0x14>)
    532e:	681b      	ldr	r3, [r3, #0]
    5330:	6a18      	ldr	r0, [r3, #32]
    5332:	4b04      	ldr	r3, [pc, #16]	; (5344 <_localeconv_r+0x18>)
    5334:	2800      	cmp	r0, #0
    5336:	bf08      	it	eq
    5338:	4618      	moveq	r0, r3
    533a:	30f0      	adds	r0, #240	; 0xf0
    533c:	4770      	bx	lr
    533e:	bf00      	nop
    5340:	20000010 	.word	0x20000010
    5344:	20000074 	.word	0x20000074

00005348 <malloc>:
    5348:	4b02      	ldr	r3, [pc, #8]	; (5354 <malloc+0xc>)
    534a:	4601      	mov	r1, r0
    534c:	6818      	ldr	r0, [r3, #0]
    534e:	f000 bb8f 	b.w	5a70 <_malloc_r>
    5352:	bf00      	nop
    5354:	20000010 	.word	0x20000010
	...

00005360 <memchr>:
    5360:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    5364:	2a10      	cmp	r2, #16
    5366:	db2b      	blt.n	53c0 <memchr+0x60>
    5368:	f010 0f07 	tst.w	r0, #7
    536c:	d008      	beq.n	5380 <memchr+0x20>
    536e:	f810 3b01 	ldrb.w	r3, [r0], #1
    5372:	3a01      	subs	r2, #1
    5374:	428b      	cmp	r3, r1
    5376:	d02d      	beq.n	53d4 <memchr+0x74>
    5378:	f010 0f07 	tst.w	r0, #7
    537c:	b342      	cbz	r2, 53d0 <memchr+0x70>
    537e:	d1f6      	bne.n	536e <memchr+0xe>
    5380:	b4f0      	push	{r4, r5, r6, r7}
    5382:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    5386:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    538a:	f022 0407 	bic.w	r4, r2, #7
    538e:	f07f 0700 	mvns.w	r7, #0
    5392:	2300      	movs	r3, #0
    5394:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    5398:	3c08      	subs	r4, #8
    539a:	ea85 0501 	eor.w	r5, r5, r1
    539e:	ea86 0601 	eor.w	r6, r6, r1
    53a2:	fa85 f547 	uadd8	r5, r5, r7
    53a6:	faa3 f587 	sel	r5, r3, r7
    53aa:	fa86 f647 	uadd8	r6, r6, r7
    53ae:	faa5 f687 	sel	r6, r5, r7
    53b2:	b98e      	cbnz	r6, 53d8 <memchr+0x78>
    53b4:	d1ee      	bne.n	5394 <memchr+0x34>
    53b6:	bcf0      	pop	{r4, r5, r6, r7}
    53b8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    53bc:	f002 0207 	and.w	r2, r2, #7
    53c0:	b132      	cbz	r2, 53d0 <memchr+0x70>
    53c2:	f810 3b01 	ldrb.w	r3, [r0], #1
    53c6:	3a01      	subs	r2, #1
    53c8:	ea83 0301 	eor.w	r3, r3, r1
    53cc:	b113      	cbz	r3, 53d4 <memchr+0x74>
    53ce:	d1f8      	bne.n	53c2 <memchr+0x62>
    53d0:	2000      	movs	r0, #0
    53d2:	4770      	bx	lr
    53d4:	3801      	subs	r0, #1
    53d6:	4770      	bx	lr
    53d8:	2d00      	cmp	r5, #0
    53da:	bf06      	itte	eq
    53dc:	4635      	moveq	r5, r6
    53de:	3803      	subeq	r0, #3
    53e0:	3807      	subne	r0, #7
    53e2:	f015 0f01 	tst.w	r5, #1
    53e6:	d107      	bne.n	53f8 <memchr+0x98>
    53e8:	3001      	adds	r0, #1
    53ea:	f415 7f80 	tst.w	r5, #256	; 0x100
    53ee:	bf02      	ittt	eq
    53f0:	3001      	addeq	r0, #1
    53f2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    53f6:	3001      	addeq	r0, #1
    53f8:	bcf0      	pop	{r4, r5, r6, r7}
    53fa:	3801      	subs	r0, #1
    53fc:	4770      	bx	lr
    53fe:	bf00      	nop

00005400 <memcpy>:
    5400:	b510      	push	{r4, lr}
    5402:	1e43      	subs	r3, r0, #1
    5404:	440a      	add	r2, r1
    5406:	4291      	cmp	r1, r2
    5408:	d100      	bne.n	540c <memcpy+0xc>
    540a:	bd10      	pop	{r4, pc}
    540c:	f811 4b01 	ldrb.w	r4, [r1], #1
    5410:	f803 4f01 	strb.w	r4, [r3, #1]!
    5414:	e7f7      	b.n	5406 <memcpy+0x6>

00005416 <_Balloc>:
    5416:	b570      	push	{r4, r5, r6, lr}
    5418:	6a45      	ldr	r5, [r0, #36]	; 0x24
    541a:	4604      	mov	r4, r0
    541c:	460e      	mov	r6, r1
    541e:	b93d      	cbnz	r5, 5430 <_Balloc+0x1a>
    5420:	2010      	movs	r0, #16
    5422:	f7ff ff91 	bl	5348 <malloc>
    5426:	6260      	str	r0, [r4, #36]	; 0x24
    5428:	6045      	str	r5, [r0, #4]
    542a:	6085      	str	r5, [r0, #8]
    542c:	6005      	str	r5, [r0, #0]
    542e:	60c5      	str	r5, [r0, #12]
    5430:	6a65      	ldr	r5, [r4, #36]	; 0x24
    5432:	68eb      	ldr	r3, [r5, #12]
    5434:	b183      	cbz	r3, 5458 <_Balloc+0x42>
    5436:	6a63      	ldr	r3, [r4, #36]	; 0x24
    5438:	68db      	ldr	r3, [r3, #12]
    543a:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
    543e:	b9b8      	cbnz	r0, 5470 <_Balloc+0x5a>
    5440:	2101      	movs	r1, #1
    5442:	fa01 f506 	lsl.w	r5, r1, r6
    5446:	1d6a      	adds	r2, r5, #5
    5448:	0092      	lsls	r2, r2, #2
    544a:	4620      	mov	r0, r4
    544c:	f000 fab4 	bl	59b8 <_calloc_r>
    5450:	b160      	cbz	r0, 546c <_Balloc+0x56>
    5452:	6046      	str	r6, [r0, #4]
    5454:	6085      	str	r5, [r0, #8]
    5456:	e00e      	b.n	5476 <_Balloc+0x60>
    5458:	2221      	movs	r2, #33	; 0x21
    545a:	2104      	movs	r1, #4
    545c:	4620      	mov	r0, r4
    545e:	f000 faab 	bl	59b8 <_calloc_r>
    5462:	6a63      	ldr	r3, [r4, #36]	; 0x24
    5464:	60e8      	str	r0, [r5, #12]
    5466:	68db      	ldr	r3, [r3, #12]
    5468:	2b00      	cmp	r3, #0
    546a:	d1e4      	bne.n	5436 <_Balloc+0x20>
    546c:	2000      	movs	r0, #0
    546e:	bd70      	pop	{r4, r5, r6, pc}
    5470:	6802      	ldr	r2, [r0, #0]
    5472:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
    5476:	2300      	movs	r3, #0
    5478:	6103      	str	r3, [r0, #16]
    547a:	60c3      	str	r3, [r0, #12]
    547c:	bd70      	pop	{r4, r5, r6, pc}

0000547e <_Bfree>:
    547e:	b570      	push	{r4, r5, r6, lr}
    5480:	6a44      	ldr	r4, [r0, #36]	; 0x24
    5482:	4606      	mov	r6, r0
    5484:	460d      	mov	r5, r1
    5486:	b93c      	cbnz	r4, 5498 <_Bfree+0x1a>
    5488:	2010      	movs	r0, #16
    548a:	f7ff ff5d 	bl	5348 <malloc>
    548e:	6270      	str	r0, [r6, #36]	; 0x24
    5490:	6044      	str	r4, [r0, #4]
    5492:	6084      	str	r4, [r0, #8]
    5494:	6004      	str	r4, [r0, #0]
    5496:	60c4      	str	r4, [r0, #12]
    5498:	b13d      	cbz	r5, 54aa <_Bfree+0x2c>
    549a:	6a73      	ldr	r3, [r6, #36]	; 0x24
    549c:	686a      	ldr	r2, [r5, #4]
    549e:	68db      	ldr	r3, [r3, #12]
    54a0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    54a4:	6029      	str	r1, [r5, #0]
    54a6:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
    54aa:	bd70      	pop	{r4, r5, r6, pc}

000054ac <__multadd>:
    54ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    54b0:	690d      	ldr	r5, [r1, #16]
    54b2:	461f      	mov	r7, r3
    54b4:	4606      	mov	r6, r0
    54b6:	460c      	mov	r4, r1
    54b8:	f101 0e14 	add.w	lr, r1, #20
    54bc:	2300      	movs	r3, #0
    54be:	f8de 0000 	ldr.w	r0, [lr]
    54c2:	b281      	uxth	r1, r0
    54c4:	fb02 7101 	mla	r1, r2, r1, r7
    54c8:	0c0f      	lsrs	r7, r1, #16
    54ca:	0c00      	lsrs	r0, r0, #16
    54cc:	fb02 7000 	mla	r0, r2, r0, r7
    54d0:	b289      	uxth	r1, r1
    54d2:	3301      	adds	r3, #1
    54d4:	eb01 4100 	add.w	r1, r1, r0, lsl #16
    54d8:	429d      	cmp	r5, r3
    54da:	ea4f 4710 	mov.w	r7, r0, lsr #16
    54de:	f84e 1b04 	str.w	r1, [lr], #4
    54e2:	dcec      	bgt.n	54be <__multadd+0x12>
    54e4:	b1d7      	cbz	r7, 551c <__multadd+0x70>
    54e6:	68a3      	ldr	r3, [r4, #8]
    54e8:	429d      	cmp	r5, r3
    54ea:	db12      	blt.n	5512 <__multadd+0x66>
    54ec:	6861      	ldr	r1, [r4, #4]
    54ee:	4630      	mov	r0, r6
    54f0:	3101      	adds	r1, #1
    54f2:	f7ff ff90 	bl	5416 <_Balloc>
    54f6:	6922      	ldr	r2, [r4, #16]
    54f8:	3202      	adds	r2, #2
    54fa:	f104 010c 	add.w	r1, r4, #12
    54fe:	4680      	mov	r8, r0
    5500:	0092      	lsls	r2, r2, #2
    5502:	300c      	adds	r0, #12
    5504:	f7ff ff7c 	bl	5400 <memcpy>
    5508:	4621      	mov	r1, r4
    550a:	4630      	mov	r0, r6
    550c:	f7ff ffb7 	bl	547e <_Bfree>
    5510:	4644      	mov	r4, r8
    5512:	eb04 0385 	add.w	r3, r4, r5, lsl #2
    5516:	3501      	adds	r5, #1
    5518:	615f      	str	r7, [r3, #20]
    551a:	6125      	str	r5, [r4, #16]
    551c:	4620      	mov	r0, r4
    551e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00005522 <__hi0bits>:
    5522:	0c02      	lsrs	r2, r0, #16
    5524:	0412      	lsls	r2, r2, #16
    5526:	4603      	mov	r3, r0
    5528:	b9b2      	cbnz	r2, 5558 <__hi0bits+0x36>
    552a:	0403      	lsls	r3, r0, #16
    552c:	2010      	movs	r0, #16
    552e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
    5532:	bf04      	itt	eq
    5534:	021b      	lsleq	r3, r3, #8
    5536:	3008      	addeq	r0, #8
    5538:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
    553c:	bf04      	itt	eq
    553e:	011b      	lsleq	r3, r3, #4
    5540:	3004      	addeq	r0, #4
    5542:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
    5546:	bf04      	itt	eq
    5548:	009b      	lsleq	r3, r3, #2
    554a:	3002      	addeq	r0, #2
    554c:	2b00      	cmp	r3, #0
    554e:	db06      	blt.n	555e <__hi0bits+0x3c>
    5550:	005b      	lsls	r3, r3, #1
    5552:	d503      	bpl.n	555c <__hi0bits+0x3a>
    5554:	3001      	adds	r0, #1
    5556:	4770      	bx	lr
    5558:	2000      	movs	r0, #0
    555a:	e7e8      	b.n	552e <__hi0bits+0xc>
    555c:	2020      	movs	r0, #32
    555e:	4770      	bx	lr

00005560 <__lo0bits>:
    5560:	6803      	ldr	r3, [r0, #0]
    5562:	f013 0207 	ands.w	r2, r3, #7
    5566:	4601      	mov	r1, r0
    5568:	d00b      	beq.n	5582 <__lo0bits+0x22>
    556a:	07da      	lsls	r2, r3, #31
    556c:	d423      	bmi.n	55b6 <__lo0bits+0x56>
    556e:	0798      	lsls	r0, r3, #30
    5570:	bf49      	itett	mi
    5572:	085b      	lsrmi	r3, r3, #1
    5574:	089b      	lsrpl	r3, r3, #2
    5576:	2001      	movmi	r0, #1
    5578:	600b      	strmi	r3, [r1, #0]
    557a:	bf5c      	itt	pl
    557c:	600b      	strpl	r3, [r1, #0]
    557e:	2002      	movpl	r0, #2
    5580:	4770      	bx	lr
    5582:	b298      	uxth	r0, r3
    5584:	b9a8      	cbnz	r0, 55b2 <__lo0bits+0x52>
    5586:	0c1b      	lsrs	r3, r3, #16
    5588:	2010      	movs	r0, #16
    558a:	f013 0fff 	tst.w	r3, #255	; 0xff
    558e:	bf04      	itt	eq
    5590:	0a1b      	lsreq	r3, r3, #8
    5592:	3008      	addeq	r0, #8
    5594:	071a      	lsls	r2, r3, #28
    5596:	bf04      	itt	eq
    5598:	091b      	lsreq	r3, r3, #4
    559a:	3004      	addeq	r0, #4
    559c:	079a      	lsls	r2, r3, #30
    559e:	bf04      	itt	eq
    55a0:	089b      	lsreq	r3, r3, #2
    55a2:	3002      	addeq	r0, #2
    55a4:	07da      	lsls	r2, r3, #31
    55a6:	d402      	bmi.n	55ae <__lo0bits+0x4e>
    55a8:	085b      	lsrs	r3, r3, #1
    55aa:	d006      	beq.n	55ba <__lo0bits+0x5a>
    55ac:	3001      	adds	r0, #1
    55ae:	600b      	str	r3, [r1, #0]
    55b0:	4770      	bx	lr
    55b2:	4610      	mov	r0, r2
    55b4:	e7e9      	b.n	558a <__lo0bits+0x2a>
    55b6:	2000      	movs	r0, #0
    55b8:	4770      	bx	lr
    55ba:	2020      	movs	r0, #32
    55bc:	4770      	bx	lr

000055be <__i2b>:
    55be:	b510      	push	{r4, lr}
    55c0:	460c      	mov	r4, r1
    55c2:	2101      	movs	r1, #1
    55c4:	f7ff ff27 	bl	5416 <_Balloc>
    55c8:	2201      	movs	r2, #1
    55ca:	6144      	str	r4, [r0, #20]
    55cc:	6102      	str	r2, [r0, #16]
    55ce:	bd10      	pop	{r4, pc}

000055d0 <__multiply>:
    55d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    55d4:	4614      	mov	r4, r2
    55d6:	690a      	ldr	r2, [r1, #16]
    55d8:	6923      	ldr	r3, [r4, #16]
    55da:	429a      	cmp	r2, r3
    55dc:	bfb8      	it	lt
    55de:	460b      	movlt	r3, r1
    55e0:	4689      	mov	r9, r1
    55e2:	bfbc      	itt	lt
    55e4:	46a1      	movlt	r9, r4
    55e6:	461c      	movlt	r4, r3
    55e8:	f8d9 7010 	ldr.w	r7, [r9, #16]
    55ec:	f8d4 a010 	ldr.w	sl, [r4, #16]
    55f0:	f8d9 3008 	ldr.w	r3, [r9, #8]
    55f4:	f8d9 1004 	ldr.w	r1, [r9, #4]
    55f8:	eb07 060a 	add.w	r6, r7, sl
    55fc:	429e      	cmp	r6, r3
    55fe:	bfc8      	it	gt
    5600:	3101      	addgt	r1, #1
    5602:	f7ff ff08 	bl	5416 <_Balloc>
    5606:	f100 0514 	add.w	r5, r0, #20
    560a:	eb05 0886 	add.w	r8, r5, r6, lsl #2
    560e:	462b      	mov	r3, r5
    5610:	2200      	movs	r2, #0
    5612:	4543      	cmp	r3, r8
    5614:	d316      	bcc.n	5644 <__multiply+0x74>
    5616:	f104 0214 	add.w	r2, r4, #20
    561a:	f109 0114 	add.w	r1, r9, #20
    561e:	eb02 038a 	add.w	r3, r2, sl, lsl #2
    5622:	eb01 0787 	add.w	r7, r1, r7, lsl #2
    5626:	9301      	str	r3, [sp, #4]
    5628:	9c01      	ldr	r4, [sp, #4]
    562a:	4294      	cmp	r4, r2
    562c:	4613      	mov	r3, r2
    562e:	d80c      	bhi.n	564a <__multiply+0x7a>
    5630:	2e00      	cmp	r6, #0
    5632:	dd03      	ble.n	563c <__multiply+0x6c>
    5634:	f858 3d04 	ldr.w	r3, [r8, #-4]!
    5638:	2b00      	cmp	r3, #0
    563a:	d054      	beq.n	56e6 <__multiply+0x116>
    563c:	6106      	str	r6, [r0, #16]
    563e:	b003      	add	sp, #12
    5640:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5644:	f843 2b04 	str.w	r2, [r3], #4
    5648:	e7e3      	b.n	5612 <__multiply+0x42>
    564a:	f8b3 a000 	ldrh.w	sl, [r3]
    564e:	3204      	adds	r2, #4
    5650:	f1ba 0f00 	cmp.w	sl, #0
    5654:	d020      	beq.n	5698 <__multiply+0xc8>
    5656:	46ae      	mov	lr, r5
    5658:	4689      	mov	r9, r1
    565a:	f04f 0c00 	mov.w	ip, #0
    565e:	f859 4b04 	ldr.w	r4, [r9], #4
    5662:	f8be b000 	ldrh.w	fp, [lr]
    5666:	b2a3      	uxth	r3, r4
    5668:	fb0a b303 	mla	r3, sl, r3, fp
    566c:	ea4f 4b14 	mov.w	fp, r4, lsr #16
    5670:	f8de 4000 	ldr.w	r4, [lr]
    5674:	4463      	add	r3, ip
    5676:	ea4f 4c14 	mov.w	ip, r4, lsr #16
    567a:	fb0a c40b 	mla	r4, sl, fp, ip
    567e:	eb04 4413 	add.w	r4, r4, r3, lsr #16
    5682:	b29b      	uxth	r3, r3
    5684:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
    5688:	454f      	cmp	r7, r9
    568a:	ea4f 4c14 	mov.w	ip, r4, lsr #16
    568e:	f84e 3b04 	str.w	r3, [lr], #4
    5692:	d8e4      	bhi.n	565e <__multiply+0x8e>
    5694:	f8ce c000 	str.w	ip, [lr]
    5698:	f832 9c02 	ldrh.w	r9, [r2, #-2]
    569c:	f1b9 0f00 	cmp.w	r9, #0
    56a0:	d01f      	beq.n	56e2 <__multiply+0x112>
    56a2:	682b      	ldr	r3, [r5, #0]
    56a4:	46ae      	mov	lr, r5
    56a6:	468c      	mov	ip, r1
    56a8:	f04f 0a00 	mov.w	sl, #0
    56ac:	f8bc 4000 	ldrh.w	r4, [ip]
    56b0:	f8be b002 	ldrh.w	fp, [lr, #2]
    56b4:	fb09 b404 	mla	r4, r9, r4, fp
    56b8:	44a2      	add	sl, r4
    56ba:	b29b      	uxth	r3, r3
    56bc:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
    56c0:	f84e 3b04 	str.w	r3, [lr], #4
    56c4:	f85c 3b04 	ldr.w	r3, [ip], #4
    56c8:	f8be 4000 	ldrh.w	r4, [lr]
    56cc:	0c1b      	lsrs	r3, r3, #16
    56ce:	fb09 4303 	mla	r3, r9, r3, r4
    56d2:	eb03 431a 	add.w	r3, r3, sl, lsr #16
    56d6:	4567      	cmp	r7, ip
    56d8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    56dc:	d8e6      	bhi.n	56ac <__multiply+0xdc>
    56de:	f8ce 3000 	str.w	r3, [lr]
    56e2:	3504      	adds	r5, #4
    56e4:	e7a0      	b.n	5628 <__multiply+0x58>
    56e6:	3e01      	subs	r6, #1
    56e8:	e7a2      	b.n	5630 <__multiply+0x60>
	...

000056ec <__pow5mult>:
    56ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    56f0:	4615      	mov	r5, r2
    56f2:	f012 0203 	ands.w	r2, r2, #3
    56f6:	4606      	mov	r6, r0
    56f8:	460f      	mov	r7, r1
    56fa:	d007      	beq.n	570c <__pow5mult+0x20>
    56fc:	3a01      	subs	r2, #1
    56fe:	4c21      	ldr	r4, [pc, #132]	; (5784 <__pow5mult+0x98>)
    5700:	2300      	movs	r3, #0
    5702:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
    5706:	f7ff fed1 	bl	54ac <__multadd>
    570a:	4607      	mov	r7, r0
    570c:	10ad      	asrs	r5, r5, #2
    570e:	d035      	beq.n	577c <__pow5mult+0x90>
    5710:	6a74      	ldr	r4, [r6, #36]	; 0x24
    5712:	b93c      	cbnz	r4, 5724 <__pow5mult+0x38>
    5714:	2010      	movs	r0, #16
    5716:	f7ff fe17 	bl	5348 <malloc>
    571a:	6270      	str	r0, [r6, #36]	; 0x24
    571c:	6044      	str	r4, [r0, #4]
    571e:	6084      	str	r4, [r0, #8]
    5720:	6004      	str	r4, [r0, #0]
    5722:	60c4      	str	r4, [r0, #12]
    5724:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
    5728:	f8d8 4008 	ldr.w	r4, [r8, #8]
    572c:	b94c      	cbnz	r4, 5742 <__pow5mult+0x56>
    572e:	f240 2171 	movw	r1, #625	; 0x271
    5732:	4630      	mov	r0, r6
    5734:	f7ff ff43 	bl	55be <__i2b>
    5738:	2300      	movs	r3, #0
    573a:	f8c8 0008 	str.w	r0, [r8, #8]
    573e:	4604      	mov	r4, r0
    5740:	6003      	str	r3, [r0, #0]
    5742:	f04f 0800 	mov.w	r8, #0
    5746:	07eb      	lsls	r3, r5, #31
    5748:	d50a      	bpl.n	5760 <__pow5mult+0x74>
    574a:	4639      	mov	r1, r7
    574c:	4622      	mov	r2, r4
    574e:	4630      	mov	r0, r6
    5750:	f7ff ff3e 	bl	55d0 <__multiply>
    5754:	4639      	mov	r1, r7
    5756:	4681      	mov	r9, r0
    5758:	4630      	mov	r0, r6
    575a:	f7ff fe90 	bl	547e <_Bfree>
    575e:	464f      	mov	r7, r9
    5760:	106d      	asrs	r5, r5, #1
    5762:	d00b      	beq.n	577c <__pow5mult+0x90>
    5764:	6820      	ldr	r0, [r4, #0]
    5766:	b938      	cbnz	r0, 5778 <__pow5mult+0x8c>
    5768:	4622      	mov	r2, r4
    576a:	4621      	mov	r1, r4
    576c:	4630      	mov	r0, r6
    576e:	f7ff ff2f 	bl	55d0 <__multiply>
    5772:	6020      	str	r0, [r4, #0]
    5774:	f8c0 8000 	str.w	r8, [r0]
    5778:	4604      	mov	r4, r0
    577a:	e7e4      	b.n	5746 <__pow5mult+0x5a>
    577c:	4638      	mov	r0, r7
    577e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    5782:	bf00      	nop
    5784:	00006078 	.word	0x00006078

00005788 <__lshift>:
    5788:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    578c:	460c      	mov	r4, r1
    578e:	ea4f 1a62 	mov.w	sl, r2, asr #5
    5792:	6923      	ldr	r3, [r4, #16]
    5794:	6849      	ldr	r1, [r1, #4]
    5796:	eb0a 0903 	add.w	r9, sl, r3
    579a:	68a3      	ldr	r3, [r4, #8]
    579c:	4607      	mov	r7, r0
    579e:	4616      	mov	r6, r2
    57a0:	f109 0501 	add.w	r5, r9, #1
    57a4:	42ab      	cmp	r3, r5
    57a6:	db31      	blt.n	580c <__lshift+0x84>
    57a8:	4638      	mov	r0, r7
    57aa:	f7ff fe34 	bl	5416 <_Balloc>
    57ae:	2200      	movs	r2, #0
    57b0:	4680      	mov	r8, r0
    57b2:	f100 0314 	add.w	r3, r0, #20
    57b6:	4611      	mov	r1, r2
    57b8:	4552      	cmp	r2, sl
    57ba:	db2a      	blt.n	5812 <__lshift+0x8a>
    57bc:	6920      	ldr	r0, [r4, #16]
    57be:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
    57c2:	f104 0114 	add.w	r1, r4, #20
    57c6:	f016 021f 	ands.w	r2, r6, #31
    57ca:	eb03 038a 	add.w	r3, r3, sl, lsl #2
    57ce:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
    57d2:	d022      	beq.n	581a <__lshift+0x92>
    57d4:	f1c2 0c20 	rsb	ip, r2, #32
    57d8:	2000      	movs	r0, #0
    57da:	680e      	ldr	r6, [r1, #0]
    57dc:	4096      	lsls	r6, r2
    57de:	4330      	orrs	r0, r6
    57e0:	f843 0b04 	str.w	r0, [r3], #4
    57e4:	f851 0b04 	ldr.w	r0, [r1], #4
    57e8:	458e      	cmp	lr, r1
    57ea:	fa20 f00c 	lsr.w	r0, r0, ip
    57ee:	d8f4      	bhi.n	57da <__lshift+0x52>
    57f0:	6018      	str	r0, [r3, #0]
    57f2:	b108      	cbz	r0, 57f8 <__lshift+0x70>
    57f4:	f109 0502 	add.w	r5, r9, #2
    57f8:	3d01      	subs	r5, #1
    57fa:	4638      	mov	r0, r7
    57fc:	f8c8 5010 	str.w	r5, [r8, #16]
    5800:	4621      	mov	r1, r4
    5802:	f7ff fe3c 	bl	547e <_Bfree>
    5806:	4640      	mov	r0, r8
    5808:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    580c:	3101      	adds	r1, #1
    580e:	005b      	lsls	r3, r3, #1
    5810:	e7c8      	b.n	57a4 <__lshift+0x1c>
    5812:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    5816:	3201      	adds	r2, #1
    5818:	e7ce      	b.n	57b8 <__lshift+0x30>
    581a:	3b04      	subs	r3, #4
    581c:	f851 2b04 	ldr.w	r2, [r1], #4
    5820:	f843 2f04 	str.w	r2, [r3, #4]!
    5824:	458e      	cmp	lr, r1
    5826:	d8f9      	bhi.n	581c <__lshift+0x94>
    5828:	e7e6      	b.n	57f8 <__lshift+0x70>

0000582a <__mcmp>:
    582a:	6903      	ldr	r3, [r0, #16]
    582c:	690a      	ldr	r2, [r1, #16]
    582e:	1a9b      	subs	r3, r3, r2
    5830:	b530      	push	{r4, r5, lr}
    5832:	d10c      	bne.n	584e <__mcmp+0x24>
    5834:	0092      	lsls	r2, r2, #2
    5836:	3014      	adds	r0, #20
    5838:	3114      	adds	r1, #20
    583a:	1884      	adds	r4, r0, r2
    583c:	4411      	add	r1, r2
    583e:	f854 5d04 	ldr.w	r5, [r4, #-4]!
    5842:	f851 2d04 	ldr.w	r2, [r1, #-4]!
    5846:	4295      	cmp	r5, r2
    5848:	d003      	beq.n	5852 <__mcmp+0x28>
    584a:	d305      	bcc.n	5858 <__mcmp+0x2e>
    584c:	2301      	movs	r3, #1
    584e:	4618      	mov	r0, r3
    5850:	bd30      	pop	{r4, r5, pc}
    5852:	42a0      	cmp	r0, r4
    5854:	d3f3      	bcc.n	583e <__mcmp+0x14>
    5856:	e7fa      	b.n	584e <__mcmp+0x24>
    5858:	f04f 33ff 	mov.w	r3, #4294967295
    585c:	e7f7      	b.n	584e <__mcmp+0x24>

0000585e <__mdiff>:
    585e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    5862:	460d      	mov	r5, r1
    5864:	4607      	mov	r7, r0
    5866:	4611      	mov	r1, r2
    5868:	4628      	mov	r0, r5
    586a:	4614      	mov	r4, r2
    586c:	f7ff ffdd 	bl	582a <__mcmp>
    5870:	1e06      	subs	r6, r0, #0
    5872:	d108      	bne.n	5886 <__mdiff+0x28>
    5874:	4631      	mov	r1, r6
    5876:	4638      	mov	r0, r7
    5878:	f7ff fdcd 	bl	5416 <_Balloc>
    587c:	2301      	movs	r3, #1
    587e:	6103      	str	r3, [r0, #16]
    5880:	6146      	str	r6, [r0, #20]
    5882:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    5886:	bfa4      	itt	ge
    5888:	4623      	movge	r3, r4
    588a:	462c      	movge	r4, r5
    588c:	4638      	mov	r0, r7
    588e:	6861      	ldr	r1, [r4, #4]
    5890:	bfa6      	itte	ge
    5892:	461d      	movge	r5, r3
    5894:	2600      	movge	r6, #0
    5896:	2601      	movlt	r6, #1
    5898:	f7ff fdbd 	bl	5416 <_Balloc>
    589c:	692b      	ldr	r3, [r5, #16]
    589e:	60c6      	str	r6, [r0, #12]
    58a0:	6926      	ldr	r6, [r4, #16]
    58a2:	f105 0914 	add.w	r9, r5, #20
    58a6:	f104 0214 	add.w	r2, r4, #20
    58aa:	eb02 0786 	add.w	r7, r2, r6, lsl #2
    58ae:	eb09 0883 	add.w	r8, r9, r3, lsl #2
    58b2:	f100 0514 	add.w	r5, r0, #20
    58b6:	f04f 0c00 	mov.w	ip, #0
    58ba:	f852 ab04 	ldr.w	sl, [r2], #4
    58be:	f859 4b04 	ldr.w	r4, [r9], #4
    58c2:	fa1c f18a 	uxtah	r1, ip, sl
    58c6:	b2a3      	uxth	r3, r4
    58c8:	1ac9      	subs	r1, r1, r3
    58ca:	0c23      	lsrs	r3, r4, #16
    58cc:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
    58d0:	eb03 4321 	add.w	r3, r3, r1, asr #16
    58d4:	b289      	uxth	r1, r1
    58d6:	ea4f 4c23 	mov.w	ip, r3, asr #16
    58da:	45c8      	cmp	r8, r9
    58dc:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    58e0:	4696      	mov	lr, r2
    58e2:	f845 3b04 	str.w	r3, [r5], #4
    58e6:	d8e8      	bhi.n	58ba <__mdiff+0x5c>
    58e8:	45be      	cmp	lr, r7
    58ea:	d305      	bcc.n	58f8 <__mdiff+0x9a>
    58ec:	f855 3d04 	ldr.w	r3, [r5, #-4]!
    58f0:	b18b      	cbz	r3, 5916 <__mdiff+0xb8>
    58f2:	6106      	str	r6, [r0, #16]
    58f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    58f8:	f85e 1b04 	ldr.w	r1, [lr], #4
    58fc:	fa1c f381 	uxtah	r3, ip, r1
    5900:	141a      	asrs	r2, r3, #16
    5902:	eb02 4211 	add.w	r2, r2, r1, lsr #16
    5906:	b29b      	uxth	r3, r3
    5908:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    590c:	ea4f 4c22 	mov.w	ip, r2, asr #16
    5910:	f845 3b04 	str.w	r3, [r5], #4
    5914:	e7e8      	b.n	58e8 <__mdiff+0x8a>
    5916:	3e01      	subs	r6, #1
    5918:	e7e8      	b.n	58ec <__mdiff+0x8e>

0000591a <__d2b>:
    591a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    591e:	2101      	movs	r1, #1
    5920:	461c      	mov	r4, r3
    5922:	4690      	mov	r8, r2
    5924:	9e08      	ldr	r6, [sp, #32]
    5926:	9d09      	ldr	r5, [sp, #36]	; 0x24
    5928:	f7ff fd75 	bl	5416 <_Balloc>
    592c:	f3c4 0213 	ubfx	r2, r4, #0, #20
    5930:	f3c4 540a 	ubfx	r4, r4, #20, #11
    5934:	4607      	mov	r7, r0
    5936:	bb34      	cbnz	r4, 5986 <__d2b+0x6c>
    5938:	9201      	str	r2, [sp, #4]
    593a:	f1b8 0f00 	cmp.w	r8, #0
    593e:	d027      	beq.n	5990 <__d2b+0x76>
    5940:	a802      	add	r0, sp, #8
    5942:	f840 8d08 	str.w	r8, [r0, #-8]!
    5946:	f7ff fe0b 	bl	5560 <__lo0bits>
    594a:	9900      	ldr	r1, [sp, #0]
    594c:	b1f0      	cbz	r0, 598c <__d2b+0x72>
    594e:	9a01      	ldr	r2, [sp, #4]
    5950:	f1c0 0320 	rsb	r3, r0, #32
    5954:	fa02 f303 	lsl.w	r3, r2, r3
    5958:	430b      	orrs	r3, r1
    595a:	40c2      	lsrs	r2, r0
    595c:	617b      	str	r3, [r7, #20]
    595e:	9201      	str	r2, [sp, #4]
    5960:	9b01      	ldr	r3, [sp, #4]
    5962:	61bb      	str	r3, [r7, #24]
    5964:	2b00      	cmp	r3, #0
    5966:	bf14      	ite	ne
    5968:	2102      	movne	r1, #2
    596a:	2101      	moveq	r1, #1
    596c:	6139      	str	r1, [r7, #16]
    596e:	b1c4      	cbz	r4, 59a2 <__d2b+0x88>
    5970:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
    5974:	4404      	add	r4, r0
    5976:	6034      	str	r4, [r6, #0]
    5978:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
    597c:	6028      	str	r0, [r5, #0]
    597e:	4638      	mov	r0, r7
    5980:	b002      	add	sp, #8
    5982:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    5986:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
    598a:	e7d5      	b.n	5938 <__d2b+0x1e>
    598c:	6179      	str	r1, [r7, #20]
    598e:	e7e7      	b.n	5960 <__d2b+0x46>
    5990:	a801      	add	r0, sp, #4
    5992:	f7ff fde5 	bl	5560 <__lo0bits>
    5996:	9b01      	ldr	r3, [sp, #4]
    5998:	617b      	str	r3, [r7, #20]
    599a:	2101      	movs	r1, #1
    599c:	6139      	str	r1, [r7, #16]
    599e:	3020      	adds	r0, #32
    59a0:	e7e5      	b.n	596e <__d2b+0x54>
    59a2:	eb07 0381 	add.w	r3, r7, r1, lsl #2
    59a6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
    59aa:	6030      	str	r0, [r6, #0]
    59ac:	6918      	ldr	r0, [r3, #16]
    59ae:	f7ff fdb8 	bl	5522 <__hi0bits>
    59b2:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
    59b6:	e7e1      	b.n	597c <__d2b+0x62>

000059b8 <_calloc_r>:
    59b8:	b538      	push	{r3, r4, r5, lr}
    59ba:	fb02 f401 	mul.w	r4, r2, r1
    59be:	4621      	mov	r1, r4
    59c0:	f000 f856 	bl	5a70 <_malloc_r>
    59c4:	4605      	mov	r5, r0
    59c6:	b118      	cbz	r0, 59d0 <_calloc_r+0x18>
    59c8:	4622      	mov	r2, r4
    59ca:	2100      	movs	r1, #0
    59cc:	f7fe f9ba 	bl	3d44 <memset>
    59d0:	4628      	mov	r0, r5
    59d2:	bd38      	pop	{r3, r4, r5, pc}

000059d4 <_free_r>:
    59d4:	b538      	push	{r3, r4, r5, lr}
    59d6:	4605      	mov	r5, r0
    59d8:	2900      	cmp	r1, #0
    59da:	d045      	beq.n	5a68 <_free_r+0x94>
    59dc:	f851 3c04 	ldr.w	r3, [r1, #-4]
    59e0:	1f0c      	subs	r4, r1, #4
    59e2:	2b00      	cmp	r3, #0
    59e4:	bfb8      	it	lt
    59e6:	18e4      	addlt	r4, r4, r3
    59e8:	f000 fa2c 	bl	5e44 <__malloc_lock>
    59ec:	4a1f      	ldr	r2, [pc, #124]	; (5a6c <_free_r+0x98>)
    59ee:	6813      	ldr	r3, [r2, #0]
    59f0:	4610      	mov	r0, r2
    59f2:	b933      	cbnz	r3, 5a02 <_free_r+0x2e>
    59f4:	6063      	str	r3, [r4, #4]
    59f6:	6014      	str	r4, [r2, #0]
    59f8:	4628      	mov	r0, r5
    59fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    59fe:	f000 ba22 	b.w	5e46 <__malloc_unlock>
    5a02:	42a3      	cmp	r3, r4
    5a04:	d90c      	bls.n	5a20 <_free_r+0x4c>
    5a06:	6821      	ldr	r1, [r4, #0]
    5a08:	1862      	adds	r2, r4, r1
    5a0a:	4293      	cmp	r3, r2
    5a0c:	bf04      	itt	eq
    5a0e:	681a      	ldreq	r2, [r3, #0]
    5a10:	685b      	ldreq	r3, [r3, #4]
    5a12:	6063      	str	r3, [r4, #4]
    5a14:	bf04      	itt	eq
    5a16:	1852      	addeq	r2, r2, r1
    5a18:	6022      	streq	r2, [r4, #0]
    5a1a:	6004      	str	r4, [r0, #0]
    5a1c:	e7ec      	b.n	59f8 <_free_r+0x24>
    5a1e:	4613      	mov	r3, r2
    5a20:	685a      	ldr	r2, [r3, #4]
    5a22:	b10a      	cbz	r2, 5a28 <_free_r+0x54>
    5a24:	42a2      	cmp	r2, r4
    5a26:	d9fa      	bls.n	5a1e <_free_r+0x4a>
    5a28:	6819      	ldr	r1, [r3, #0]
    5a2a:	1858      	adds	r0, r3, r1
    5a2c:	42a0      	cmp	r0, r4
    5a2e:	d10b      	bne.n	5a48 <_free_r+0x74>
    5a30:	6820      	ldr	r0, [r4, #0]
    5a32:	4401      	add	r1, r0
    5a34:	1858      	adds	r0, r3, r1
    5a36:	4282      	cmp	r2, r0
    5a38:	6019      	str	r1, [r3, #0]
    5a3a:	d1dd      	bne.n	59f8 <_free_r+0x24>
    5a3c:	6810      	ldr	r0, [r2, #0]
    5a3e:	6852      	ldr	r2, [r2, #4]
    5a40:	605a      	str	r2, [r3, #4]
    5a42:	4401      	add	r1, r0
    5a44:	6019      	str	r1, [r3, #0]
    5a46:	e7d7      	b.n	59f8 <_free_r+0x24>
    5a48:	d902      	bls.n	5a50 <_free_r+0x7c>
    5a4a:	230c      	movs	r3, #12
    5a4c:	602b      	str	r3, [r5, #0]
    5a4e:	e7d3      	b.n	59f8 <_free_r+0x24>
    5a50:	6820      	ldr	r0, [r4, #0]
    5a52:	1821      	adds	r1, r4, r0
    5a54:	428a      	cmp	r2, r1
    5a56:	bf04      	itt	eq
    5a58:	6811      	ldreq	r1, [r2, #0]
    5a5a:	6852      	ldreq	r2, [r2, #4]
    5a5c:	6062      	str	r2, [r4, #4]
    5a5e:	bf04      	itt	eq
    5a60:	1809      	addeq	r1, r1, r0
    5a62:	6021      	streq	r1, [r4, #0]
    5a64:	605c      	str	r4, [r3, #4]
    5a66:	e7c7      	b.n	59f8 <_free_r+0x24>
    5a68:	bd38      	pop	{r3, r4, r5, pc}
    5a6a:	bf00      	nop
    5a6c:	20000204 	.word	0x20000204

00005a70 <_malloc_r>:
    5a70:	b570      	push	{r4, r5, r6, lr}
    5a72:	1ccd      	adds	r5, r1, #3
    5a74:	f025 0503 	bic.w	r5, r5, #3
    5a78:	3508      	adds	r5, #8
    5a7a:	2d0c      	cmp	r5, #12
    5a7c:	bf38      	it	cc
    5a7e:	250c      	movcc	r5, #12
    5a80:	2d00      	cmp	r5, #0
    5a82:	4606      	mov	r6, r0
    5a84:	db01      	blt.n	5a8a <_malloc_r+0x1a>
    5a86:	42a9      	cmp	r1, r5
    5a88:	d903      	bls.n	5a92 <_malloc_r+0x22>
    5a8a:	230c      	movs	r3, #12
    5a8c:	6033      	str	r3, [r6, #0]
    5a8e:	2000      	movs	r0, #0
    5a90:	bd70      	pop	{r4, r5, r6, pc}
    5a92:	f000 f9d7 	bl	5e44 <__malloc_lock>
    5a96:	4a23      	ldr	r2, [pc, #140]	; (5b24 <_malloc_r+0xb4>)
    5a98:	6814      	ldr	r4, [r2, #0]
    5a9a:	4621      	mov	r1, r4
    5a9c:	b991      	cbnz	r1, 5ac4 <_malloc_r+0x54>
    5a9e:	4c22      	ldr	r4, [pc, #136]	; (5b28 <_malloc_r+0xb8>)
    5aa0:	6823      	ldr	r3, [r4, #0]
    5aa2:	b91b      	cbnz	r3, 5aac <_malloc_r+0x3c>
    5aa4:	4630      	mov	r0, r6
    5aa6:	f000 f991 	bl	5dcc <_sbrk_r>
    5aaa:	6020      	str	r0, [r4, #0]
    5aac:	4629      	mov	r1, r5
    5aae:	4630      	mov	r0, r6
    5ab0:	f000 f98c 	bl	5dcc <_sbrk_r>
    5ab4:	1c43      	adds	r3, r0, #1
    5ab6:	d126      	bne.n	5b06 <_malloc_r+0x96>
    5ab8:	230c      	movs	r3, #12
    5aba:	6033      	str	r3, [r6, #0]
    5abc:	4630      	mov	r0, r6
    5abe:	f000 f9c2 	bl	5e46 <__malloc_unlock>
    5ac2:	e7e4      	b.n	5a8e <_malloc_r+0x1e>
    5ac4:	680b      	ldr	r3, [r1, #0]
    5ac6:	1b5b      	subs	r3, r3, r5
    5ac8:	d41a      	bmi.n	5b00 <_malloc_r+0x90>
    5aca:	2b0b      	cmp	r3, #11
    5acc:	d90f      	bls.n	5aee <_malloc_r+0x7e>
    5ace:	600b      	str	r3, [r1, #0]
    5ad0:	50cd      	str	r5, [r1, r3]
    5ad2:	18cc      	adds	r4, r1, r3
    5ad4:	4630      	mov	r0, r6
    5ad6:	f000 f9b6 	bl	5e46 <__malloc_unlock>
    5ada:	f104 000b 	add.w	r0, r4, #11
    5ade:	1d23      	adds	r3, r4, #4
    5ae0:	f020 0007 	bic.w	r0, r0, #7
    5ae4:	1ac3      	subs	r3, r0, r3
    5ae6:	d01b      	beq.n	5b20 <_malloc_r+0xb0>
    5ae8:	425a      	negs	r2, r3
    5aea:	50e2      	str	r2, [r4, r3]
    5aec:	bd70      	pop	{r4, r5, r6, pc}
    5aee:	428c      	cmp	r4, r1
    5af0:	bf0d      	iteet	eq
    5af2:	6863      	ldreq	r3, [r4, #4]
    5af4:	684b      	ldrne	r3, [r1, #4]
    5af6:	6063      	strne	r3, [r4, #4]
    5af8:	6013      	streq	r3, [r2, #0]
    5afa:	bf18      	it	ne
    5afc:	460c      	movne	r4, r1
    5afe:	e7e9      	b.n	5ad4 <_malloc_r+0x64>
    5b00:	460c      	mov	r4, r1
    5b02:	6849      	ldr	r1, [r1, #4]
    5b04:	e7ca      	b.n	5a9c <_malloc_r+0x2c>
    5b06:	1cc4      	adds	r4, r0, #3
    5b08:	f024 0403 	bic.w	r4, r4, #3
    5b0c:	42a0      	cmp	r0, r4
    5b0e:	d005      	beq.n	5b1c <_malloc_r+0xac>
    5b10:	1a21      	subs	r1, r4, r0
    5b12:	4630      	mov	r0, r6
    5b14:	f000 f95a 	bl	5dcc <_sbrk_r>
    5b18:	3001      	adds	r0, #1
    5b1a:	d0cd      	beq.n	5ab8 <_malloc_r+0x48>
    5b1c:	6025      	str	r5, [r4, #0]
    5b1e:	e7d9      	b.n	5ad4 <_malloc_r+0x64>
    5b20:	bd70      	pop	{r4, r5, r6, pc}
    5b22:	bf00      	nop
    5b24:	20000204 	.word	0x20000204
    5b28:	20000208 	.word	0x20000208

00005b2c <__ssputs_r>:
    5b2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    5b30:	688e      	ldr	r6, [r1, #8]
    5b32:	429e      	cmp	r6, r3
    5b34:	4682      	mov	sl, r0
    5b36:	460c      	mov	r4, r1
    5b38:	4691      	mov	r9, r2
    5b3a:	4698      	mov	r8, r3
    5b3c:	d835      	bhi.n	5baa <__ssputs_r+0x7e>
    5b3e:	898a      	ldrh	r2, [r1, #12]
    5b40:	f412 6f90 	tst.w	r2, #1152	; 0x480
    5b44:	d031      	beq.n	5baa <__ssputs_r+0x7e>
    5b46:	6825      	ldr	r5, [r4, #0]
    5b48:	6909      	ldr	r1, [r1, #16]
    5b4a:	1a6f      	subs	r7, r5, r1
    5b4c:	6965      	ldr	r5, [r4, #20]
    5b4e:	2302      	movs	r3, #2
    5b50:	eb05 0545 	add.w	r5, r5, r5, lsl #1
    5b54:	fb95 f5f3 	sdiv	r5, r5, r3
    5b58:	f108 0301 	add.w	r3, r8, #1
    5b5c:	443b      	add	r3, r7
    5b5e:	429d      	cmp	r5, r3
    5b60:	bf38      	it	cc
    5b62:	461d      	movcc	r5, r3
    5b64:	0553      	lsls	r3, r2, #21
    5b66:	d531      	bpl.n	5bcc <__ssputs_r+0xa0>
    5b68:	4629      	mov	r1, r5
    5b6a:	f7ff ff81 	bl	5a70 <_malloc_r>
    5b6e:	4606      	mov	r6, r0
    5b70:	b950      	cbnz	r0, 5b88 <__ssputs_r+0x5c>
    5b72:	230c      	movs	r3, #12
    5b74:	f8ca 3000 	str.w	r3, [sl]
    5b78:	89a3      	ldrh	r3, [r4, #12]
    5b7a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    5b7e:	81a3      	strh	r3, [r4, #12]
    5b80:	f04f 30ff 	mov.w	r0, #4294967295
    5b84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    5b88:	463a      	mov	r2, r7
    5b8a:	6921      	ldr	r1, [r4, #16]
    5b8c:	f7ff fc38 	bl	5400 <memcpy>
    5b90:	89a3      	ldrh	r3, [r4, #12]
    5b92:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
    5b96:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    5b9a:	81a3      	strh	r3, [r4, #12]
    5b9c:	6126      	str	r6, [r4, #16]
    5b9e:	6165      	str	r5, [r4, #20]
    5ba0:	443e      	add	r6, r7
    5ba2:	1bed      	subs	r5, r5, r7
    5ba4:	6026      	str	r6, [r4, #0]
    5ba6:	60a5      	str	r5, [r4, #8]
    5ba8:	4646      	mov	r6, r8
    5baa:	4546      	cmp	r6, r8
    5bac:	bf28      	it	cs
    5bae:	4646      	movcs	r6, r8
    5bb0:	4632      	mov	r2, r6
    5bb2:	4649      	mov	r1, r9
    5bb4:	6820      	ldr	r0, [r4, #0]
    5bb6:	f000 f92b 	bl	5e10 <memmove>
    5bba:	68a3      	ldr	r3, [r4, #8]
    5bbc:	1b9b      	subs	r3, r3, r6
    5bbe:	60a3      	str	r3, [r4, #8]
    5bc0:	6823      	ldr	r3, [r4, #0]
    5bc2:	441e      	add	r6, r3
    5bc4:	6026      	str	r6, [r4, #0]
    5bc6:	2000      	movs	r0, #0
    5bc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    5bcc:	462a      	mov	r2, r5
    5bce:	f000 f93b 	bl	5e48 <_realloc_r>
    5bd2:	4606      	mov	r6, r0
    5bd4:	2800      	cmp	r0, #0
    5bd6:	d1e1      	bne.n	5b9c <__ssputs_r+0x70>
    5bd8:	6921      	ldr	r1, [r4, #16]
    5bda:	4650      	mov	r0, sl
    5bdc:	f7ff fefa 	bl	59d4 <_free_r>
    5be0:	e7c7      	b.n	5b72 <__ssputs_r+0x46>
	...

00005be4 <_svfiprintf_r>:
    5be4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5be8:	b09d      	sub	sp, #116	; 0x74
    5bea:	4680      	mov	r8, r0
    5bec:	9303      	str	r3, [sp, #12]
    5bee:	898b      	ldrh	r3, [r1, #12]
    5bf0:	061c      	lsls	r4, r3, #24
    5bf2:	460d      	mov	r5, r1
    5bf4:	4616      	mov	r6, r2
    5bf6:	d50f      	bpl.n	5c18 <_svfiprintf_r+0x34>
    5bf8:	690b      	ldr	r3, [r1, #16]
    5bfa:	b96b      	cbnz	r3, 5c18 <_svfiprintf_r+0x34>
    5bfc:	2140      	movs	r1, #64	; 0x40
    5bfe:	f7ff ff37 	bl	5a70 <_malloc_r>
    5c02:	6028      	str	r0, [r5, #0]
    5c04:	6128      	str	r0, [r5, #16]
    5c06:	b928      	cbnz	r0, 5c14 <_svfiprintf_r+0x30>
    5c08:	230c      	movs	r3, #12
    5c0a:	f8c8 3000 	str.w	r3, [r8]
    5c0e:	f04f 30ff 	mov.w	r0, #4294967295
    5c12:	e0c5      	b.n	5da0 <_svfiprintf_r+0x1bc>
    5c14:	2340      	movs	r3, #64	; 0x40
    5c16:	616b      	str	r3, [r5, #20]
    5c18:	2300      	movs	r3, #0
    5c1a:	9309      	str	r3, [sp, #36]	; 0x24
    5c1c:	2320      	movs	r3, #32
    5c1e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    5c22:	2330      	movs	r3, #48	; 0x30
    5c24:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    5c28:	f04f 0b01 	mov.w	fp, #1
    5c2c:	4637      	mov	r7, r6
    5c2e:	463c      	mov	r4, r7
    5c30:	f814 3b01 	ldrb.w	r3, [r4], #1
    5c34:	2b00      	cmp	r3, #0
    5c36:	d13c      	bne.n	5cb2 <_svfiprintf_r+0xce>
    5c38:	ebb7 0a06 	subs.w	sl, r7, r6
    5c3c:	d00b      	beq.n	5c56 <_svfiprintf_r+0x72>
    5c3e:	4653      	mov	r3, sl
    5c40:	4632      	mov	r2, r6
    5c42:	4629      	mov	r1, r5
    5c44:	4640      	mov	r0, r8
    5c46:	f7ff ff71 	bl	5b2c <__ssputs_r>
    5c4a:	3001      	adds	r0, #1
    5c4c:	f000 80a3 	beq.w	5d96 <_svfiprintf_r+0x1b2>
    5c50:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5c52:	4453      	add	r3, sl
    5c54:	9309      	str	r3, [sp, #36]	; 0x24
    5c56:	783b      	ldrb	r3, [r7, #0]
    5c58:	2b00      	cmp	r3, #0
    5c5a:	f000 809c 	beq.w	5d96 <_svfiprintf_r+0x1b2>
    5c5e:	2300      	movs	r3, #0
    5c60:	f04f 32ff 	mov.w	r2, #4294967295
    5c64:	9304      	str	r3, [sp, #16]
    5c66:	9307      	str	r3, [sp, #28]
    5c68:	9205      	str	r2, [sp, #20]
    5c6a:	9306      	str	r3, [sp, #24]
    5c6c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    5c70:	931a      	str	r3, [sp, #104]	; 0x68
    5c72:	2205      	movs	r2, #5
    5c74:	7821      	ldrb	r1, [r4, #0]
    5c76:	4850      	ldr	r0, [pc, #320]	; (5db8 <_svfiprintf_r+0x1d4>)
    5c78:	f7ff fb72 	bl	5360 <memchr>
    5c7c:	1c67      	adds	r7, r4, #1
    5c7e:	9b04      	ldr	r3, [sp, #16]
    5c80:	b9d8      	cbnz	r0, 5cba <_svfiprintf_r+0xd6>
    5c82:	06d9      	lsls	r1, r3, #27
    5c84:	bf44      	itt	mi
    5c86:	2220      	movmi	r2, #32
    5c88:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    5c8c:	071a      	lsls	r2, r3, #28
    5c8e:	bf44      	itt	mi
    5c90:	222b      	movmi	r2, #43	; 0x2b
    5c92:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    5c96:	7822      	ldrb	r2, [r4, #0]
    5c98:	2a2a      	cmp	r2, #42	; 0x2a
    5c9a:	d016      	beq.n	5cca <_svfiprintf_r+0xe6>
    5c9c:	9a07      	ldr	r2, [sp, #28]
    5c9e:	2100      	movs	r1, #0
    5ca0:	200a      	movs	r0, #10
    5ca2:	4627      	mov	r7, r4
    5ca4:	3401      	adds	r4, #1
    5ca6:	783b      	ldrb	r3, [r7, #0]
    5ca8:	3b30      	subs	r3, #48	; 0x30
    5caa:	2b09      	cmp	r3, #9
    5cac:	d951      	bls.n	5d52 <_svfiprintf_r+0x16e>
    5cae:	b1c9      	cbz	r1, 5ce4 <_svfiprintf_r+0x100>
    5cb0:	e011      	b.n	5cd6 <_svfiprintf_r+0xf2>
    5cb2:	2b25      	cmp	r3, #37	; 0x25
    5cb4:	d0c0      	beq.n	5c38 <_svfiprintf_r+0x54>
    5cb6:	4627      	mov	r7, r4
    5cb8:	e7b9      	b.n	5c2e <_svfiprintf_r+0x4a>
    5cba:	4a3f      	ldr	r2, [pc, #252]	; (5db8 <_svfiprintf_r+0x1d4>)
    5cbc:	1a80      	subs	r0, r0, r2
    5cbe:	fa0b f000 	lsl.w	r0, fp, r0
    5cc2:	4318      	orrs	r0, r3
    5cc4:	9004      	str	r0, [sp, #16]
    5cc6:	463c      	mov	r4, r7
    5cc8:	e7d3      	b.n	5c72 <_svfiprintf_r+0x8e>
    5cca:	9a03      	ldr	r2, [sp, #12]
    5ccc:	1d11      	adds	r1, r2, #4
    5cce:	6812      	ldr	r2, [r2, #0]
    5cd0:	9103      	str	r1, [sp, #12]
    5cd2:	2a00      	cmp	r2, #0
    5cd4:	db01      	blt.n	5cda <_svfiprintf_r+0xf6>
    5cd6:	9207      	str	r2, [sp, #28]
    5cd8:	e004      	b.n	5ce4 <_svfiprintf_r+0x100>
    5cda:	4252      	negs	r2, r2
    5cdc:	f043 0302 	orr.w	r3, r3, #2
    5ce0:	9207      	str	r2, [sp, #28]
    5ce2:	9304      	str	r3, [sp, #16]
    5ce4:	783b      	ldrb	r3, [r7, #0]
    5ce6:	2b2e      	cmp	r3, #46	; 0x2e
    5ce8:	d10e      	bne.n	5d08 <_svfiprintf_r+0x124>
    5cea:	787b      	ldrb	r3, [r7, #1]
    5cec:	2b2a      	cmp	r3, #42	; 0x2a
    5cee:	f107 0101 	add.w	r1, r7, #1
    5cf2:	d132      	bne.n	5d5a <_svfiprintf_r+0x176>
    5cf4:	9b03      	ldr	r3, [sp, #12]
    5cf6:	1d1a      	adds	r2, r3, #4
    5cf8:	681b      	ldr	r3, [r3, #0]
    5cfa:	9203      	str	r2, [sp, #12]
    5cfc:	2b00      	cmp	r3, #0
    5cfe:	bfb8      	it	lt
    5d00:	f04f 33ff 	movlt.w	r3, #4294967295
    5d04:	3702      	adds	r7, #2
    5d06:	9305      	str	r3, [sp, #20]
    5d08:	4c2c      	ldr	r4, [pc, #176]	; (5dbc <_svfiprintf_r+0x1d8>)
    5d0a:	7839      	ldrb	r1, [r7, #0]
    5d0c:	2203      	movs	r2, #3
    5d0e:	4620      	mov	r0, r4
    5d10:	f7ff fb26 	bl	5360 <memchr>
    5d14:	b138      	cbz	r0, 5d26 <_svfiprintf_r+0x142>
    5d16:	2340      	movs	r3, #64	; 0x40
    5d18:	1b00      	subs	r0, r0, r4
    5d1a:	fa03 f000 	lsl.w	r0, r3, r0
    5d1e:	9b04      	ldr	r3, [sp, #16]
    5d20:	4303      	orrs	r3, r0
    5d22:	9304      	str	r3, [sp, #16]
    5d24:	3701      	adds	r7, #1
    5d26:	7839      	ldrb	r1, [r7, #0]
    5d28:	4825      	ldr	r0, [pc, #148]	; (5dc0 <_svfiprintf_r+0x1dc>)
    5d2a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    5d2e:	2206      	movs	r2, #6
    5d30:	1c7e      	adds	r6, r7, #1
    5d32:	f7ff fb15 	bl	5360 <memchr>
    5d36:	2800      	cmp	r0, #0
    5d38:	d035      	beq.n	5da6 <_svfiprintf_r+0x1c2>
    5d3a:	4b22      	ldr	r3, [pc, #136]	; (5dc4 <_svfiprintf_r+0x1e0>)
    5d3c:	b9fb      	cbnz	r3, 5d7e <_svfiprintf_r+0x19a>
    5d3e:	9b03      	ldr	r3, [sp, #12]
    5d40:	3307      	adds	r3, #7
    5d42:	f023 0307 	bic.w	r3, r3, #7
    5d46:	3308      	adds	r3, #8
    5d48:	9303      	str	r3, [sp, #12]
    5d4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5d4c:	444b      	add	r3, r9
    5d4e:	9309      	str	r3, [sp, #36]	; 0x24
    5d50:	e76c      	b.n	5c2c <_svfiprintf_r+0x48>
    5d52:	fb00 3202 	mla	r2, r0, r2, r3
    5d56:	2101      	movs	r1, #1
    5d58:	e7a3      	b.n	5ca2 <_svfiprintf_r+0xbe>
    5d5a:	2300      	movs	r3, #0
    5d5c:	9305      	str	r3, [sp, #20]
    5d5e:	4618      	mov	r0, r3
    5d60:	240a      	movs	r4, #10
    5d62:	460f      	mov	r7, r1
    5d64:	3101      	adds	r1, #1
    5d66:	783a      	ldrb	r2, [r7, #0]
    5d68:	3a30      	subs	r2, #48	; 0x30
    5d6a:	2a09      	cmp	r2, #9
    5d6c:	d903      	bls.n	5d76 <_svfiprintf_r+0x192>
    5d6e:	2b00      	cmp	r3, #0
    5d70:	d0ca      	beq.n	5d08 <_svfiprintf_r+0x124>
    5d72:	9005      	str	r0, [sp, #20]
    5d74:	e7c8      	b.n	5d08 <_svfiprintf_r+0x124>
    5d76:	fb04 2000 	mla	r0, r4, r0, r2
    5d7a:	2301      	movs	r3, #1
    5d7c:	e7f1      	b.n	5d62 <_svfiprintf_r+0x17e>
    5d7e:	ab03      	add	r3, sp, #12
    5d80:	9300      	str	r3, [sp, #0]
    5d82:	462a      	mov	r2, r5
    5d84:	4b10      	ldr	r3, [pc, #64]	; (5dc8 <_svfiprintf_r+0x1e4>)
    5d86:	a904      	add	r1, sp, #16
    5d88:	4640      	mov	r0, r8
    5d8a:	f7fe f875 	bl	3e78 <_printf_float>
    5d8e:	f1b0 3fff 	cmp.w	r0, #4294967295
    5d92:	4681      	mov	r9, r0
    5d94:	d1d9      	bne.n	5d4a <_svfiprintf_r+0x166>
    5d96:	89ab      	ldrh	r3, [r5, #12]
    5d98:	065b      	lsls	r3, r3, #25
    5d9a:	f53f af38 	bmi.w	5c0e <_svfiprintf_r+0x2a>
    5d9e:	9809      	ldr	r0, [sp, #36]	; 0x24
    5da0:	b01d      	add	sp, #116	; 0x74
    5da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5da6:	ab03      	add	r3, sp, #12
    5da8:	9300      	str	r3, [sp, #0]
    5daa:	462a      	mov	r2, r5
    5dac:	4b06      	ldr	r3, [pc, #24]	; (5dc8 <_svfiprintf_r+0x1e4>)
    5dae:	a904      	add	r1, sp, #16
    5db0:	4640      	mov	r0, r8
    5db2:	f7fe fb0f 	bl	43d4 <_printf_i>
    5db6:	e7ea      	b.n	5d8e <_svfiprintf_r+0x1aa>
    5db8:	00006084 	.word	0x00006084
    5dbc:	0000608a 	.word	0x0000608a
    5dc0:	0000608e 	.word	0x0000608e
    5dc4:	00003e79 	.word	0x00003e79
    5dc8:	00005b2d 	.word	0x00005b2d

00005dcc <_sbrk_r>:
    5dcc:	b538      	push	{r3, r4, r5, lr}
    5dce:	4c06      	ldr	r4, [pc, #24]	; (5de8 <_sbrk_r+0x1c>)
    5dd0:	2300      	movs	r3, #0
    5dd2:	4605      	mov	r5, r0
    5dd4:	4608      	mov	r0, r1
    5dd6:	6023      	str	r3, [r4, #0]
    5dd8:	f7fb fbb0 	bl	153c <_sbrk>
    5ddc:	1c43      	adds	r3, r0, #1
    5dde:	d102      	bne.n	5de6 <_sbrk_r+0x1a>
    5de0:	6823      	ldr	r3, [r4, #0]
    5de2:	b103      	cbz	r3, 5de6 <_sbrk_r+0x1a>
    5de4:	602b      	str	r3, [r5, #0]
    5de6:	bd38      	pop	{r3, r4, r5, pc}
    5de8:	200002b0 	.word	0x200002b0

00005dec <__ascii_mbtowc>:
    5dec:	b082      	sub	sp, #8
    5dee:	b901      	cbnz	r1, 5df2 <__ascii_mbtowc+0x6>
    5df0:	a901      	add	r1, sp, #4
    5df2:	b142      	cbz	r2, 5e06 <__ascii_mbtowc+0x1a>
    5df4:	b14b      	cbz	r3, 5e0a <__ascii_mbtowc+0x1e>
    5df6:	7813      	ldrb	r3, [r2, #0]
    5df8:	600b      	str	r3, [r1, #0]
    5dfa:	7812      	ldrb	r2, [r2, #0]
    5dfc:	1c10      	adds	r0, r2, #0
    5dfe:	bf18      	it	ne
    5e00:	2001      	movne	r0, #1
    5e02:	b002      	add	sp, #8
    5e04:	4770      	bx	lr
    5e06:	4610      	mov	r0, r2
    5e08:	e7fb      	b.n	5e02 <__ascii_mbtowc+0x16>
    5e0a:	f06f 0001 	mvn.w	r0, #1
    5e0e:	e7f8      	b.n	5e02 <__ascii_mbtowc+0x16>

00005e10 <memmove>:
    5e10:	4288      	cmp	r0, r1
    5e12:	b510      	push	{r4, lr}
    5e14:	eb01 0302 	add.w	r3, r1, r2
    5e18:	d803      	bhi.n	5e22 <memmove+0x12>
    5e1a:	1e42      	subs	r2, r0, #1
    5e1c:	4299      	cmp	r1, r3
    5e1e:	d10c      	bne.n	5e3a <memmove+0x2a>
    5e20:	bd10      	pop	{r4, pc}
    5e22:	4298      	cmp	r0, r3
    5e24:	d2f9      	bcs.n	5e1a <memmove+0xa>
    5e26:	1881      	adds	r1, r0, r2
    5e28:	1ad2      	subs	r2, r2, r3
    5e2a:	42d3      	cmn	r3, r2
    5e2c:	d100      	bne.n	5e30 <memmove+0x20>
    5e2e:	bd10      	pop	{r4, pc}
    5e30:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
    5e34:	f801 4d01 	strb.w	r4, [r1, #-1]!
    5e38:	e7f7      	b.n	5e2a <memmove+0x1a>
    5e3a:	f811 4b01 	ldrb.w	r4, [r1], #1
    5e3e:	f802 4f01 	strb.w	r4, [r2, #1]!
    5e42:	e7eb      	b.n	5e1c <memmove+0xc>

00005e44 <__malloc_lock>:
    5e44:	4770      	bx	lr

00005e46 <__malloc_unlock>:
    5e46:	4770      	bx	lr

00005e48 <_realloc_r>:
    5e48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5e4a:	4607      	mov	r7, r0
    5e4c:	4614      	mov	r4, r2
    5e4e:	460e      	mov	r6, r1
    5e50:	b921      	cbnz	r1, 5e5c <_realloc_r+0x14>
    5e52:	4611      	mov	r1, r2
    5e54:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    5e58:	f7ff be0a 	b.w	5a70 <_malloc_r>
    5e5c:	b922      	cbnz	r2, 5e68 <_realloc_r+0x20>
    5e5e:	f7ff fdb9 	bl	59d4 <_free_r>
    5e62:	4625      	mov	r5, r4
    5e64:	4628      	mov	r0, r5
    5e66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5e68:	f000 f821 	bl	5eae <_malloc_usable_size_r>
    5e6c:	4284      	cmp	r4, r0
    5e6e:	d90f      	bls.n	5e90 <_realloc_r+0x48>
    5e70:	4621      	mov	r1, r4
    5e72:	4638      	mov	r0, r7
    5e74:	f7ff fdfc 	bl	5a70 <_malloc_r>
    5e78:	4605      	mov	r5, r0
    5e7a:	2800      	cmp	r0, #0
    5e7c:	d0f2      	beq.n	5e64 <_realloc_r+0x1c>
    5e7e:	4631      	mov	r1, r6
    5e80:	4622      	mov	r2, r4
    5e82:	f7ff fabd 	bl	5400 <memcpy>
    5e86:	4631      	mov	r1, r6
    5e88:	4638      	mov	r0, r7
    5e8a:	f7ff fda3 	bl	59d4 <_free_r>
    5e8e:	e7e9      	b.n	5e64 <_realloc_r+0x1c>
    5e90:	4635      	mov	r5, r6
    5e92:	e7e7      	b.n	5e64 <_realloc_r+0x1c>

00005e94 <__ascii_wctomb>:
    5e94:	b149      	cbz	r1, 5eaa <__ascii_wctomb+0x16>
    5e96:	2aff      	cmp	r2, #255	; 0xff
    5e98:	bf85      	ittet	hi
    5e9a:	238a      	movhi	r3, #138	; 0x8a
    5e9c:	6003      	strhi	r3, [r0, #0]
    5e9e:	700a      	strbls	r2, [r1, #0]
    5ea0:	f04f 30ff 	movhi.w	r0, #4294967295
    5ea4:	bf98      	it	ls
    5ea6:	2001      	movls	r0, #1
    5ea8:	4770      	bx	lr
    5eaa:	4608      	mov	r0, r1
    5eac:	4770      	bx	lr

00005eae <_malloc_usable_size_r>:
    5eae:	f851 0c04 	ldr.w	r0, [r1, #-4]
    5eb2:	2800      	cmp	r0, #0
    5eb4:	f1a0 0004 	sub.w	r0, r0, #4
    5eb8:	bfbc      	itt	lt
    5eba:	580b      	ldrlt	r3, [r1, r0]
    5ebc:	18c0      	addlt	r0, r0, r3
    5ebe:	4770      	bx	lr
    5ec0:	502c2d53 	.word	0x502c2d53
    5ec4:	42617261 	.word	0x42617261
    5ec8:	5f706565 	.word	0x5f706565
    5ecc:	00000000 	.word	0x00000000
    5ed0:	45384b4c 	.word	0x45384b4c
    5ed4:	252c3158 	.word	0x252c3158
    5ed8:	39392c64 	.word	0x39392c64
    5edc:	2c393939 	.word	0x2c393939
    5ee0:	39393939 	.word	0x39393939
    5ee4:	2c64252c 	.word	0x2c64252c
    5ee8:	322e3425 	.word	0x322e3425
    5eec:	00002c66 	.word	0x00002c66
    5ef0:	252a7325 	.word	0x252a7325
    5ef4:	00000078 	.word	0x00000078

00005ef8 <senseBat>:
    5ef8:	06000001 00000000 342e3925 39252066     ........%9.4f %9
    5f08:	2066342e 342e3925 39252066 2066342e     .4f %9.4f %9.4f 
    5f18:	342e3925 00000066 00776f70 74727173     %9.4f...pow.sqrt
	...

00005f30 <TWO52>:
    5f30:	00000000 43300000 00000000 c3300000     ......0C......0.
    5f40:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
    5f50:	31300030 35343332 39383736 44434241     0.0123456789ABCD
    5f60:	30004645 34333231 38373635 63626139     EF.0123456789abc
    5f70:	00666564 69666e49 7974696e 4e614e00     def.Infinity.NaN
	...

00005f88 <__mprec_bigtens>:
    5f88:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    5f98:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    5fa8:	7f73bf3c 75154fdd                       <.s..O.u

00005fb0 <__mprec_tens>:
    5fb0:	00000000 3ff00000 00000000 40240000     .......?......$@
    5fc0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    5fd0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    5fe0:	00000000 412e8480 00000000 416312d0     .......A......cA
    5ff0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    6000:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    6010:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    6020:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    6030:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    6040:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    6050:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    6060:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    6070:	79d99db4 44ea7843                       ...yCx.D

00006078 <p05.6047>:
    6078:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
    6088:	6c680020 6665004c 47464567 50004300      .hlL.efgEFG.C.P
    6098:	5849534f 00002e00                                OSIX...

0000609f <_ctype_>:
    609f:	20202000 20202020 28282020 20282828     .         ((((( 
    60af:	20202020 20202020 20202020 20202020                     
    60bf:	10108820 10101010 10101010 10101010      ...............
    60cf:	04040410 04040404 10040404 10101010     ................
    60df:	41411010 41414141 01010101 01010101     ..AAAAAA........
    60ef:	01010101 01010101 01010101 10101010     ................
    60ff:	42421010 42424242 02020202 02020202     ..BBBBBB........
    610f:	02020202 02020202 02020202 10101010     ................
    611f:	00000020 00000000 00000000 00000000      ...............
	...

000061a0 <_init>:
    61a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    61a2:	bf00      	nop
    61a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    61a6:	bc08      	pop	{r3}
    61a8:	469e      	mov	lr, r3
    61aa:	4770      	bx	lr

000061ac <__init_array_start>:
    61ac:	00000289 	.word	0x00000289

000061b0 <_fini>:
    61b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    61b2:	bf00      	nop
    61b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    61b6:	bc08      	pop	{r3}
    61b8:	469e      	mov	lr, r3
    61ba:	4770      	bx	lr

000061bc <__fini_array_start>:
    61bc:	00000265 	.word	0x00000265
