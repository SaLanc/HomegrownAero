
Parabeep V0.2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002c60  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00002c60  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bkupram      00000000  47000000  47000000  00020434  2**0
                  CONTENTS
  3 .qspi         00000000  04000000  04000000  00020434  2**0
                  CONTENTS
  4 .bss          000000ac  20000438  00003098  00020434  2**3
                  ALLOC
  5 .stack        0000c004  200004e4  00003144  00020434  2**0
                  ALLOC
  6 .ARM.attributes 0000002a  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  0002045e  2**0
                  CONTENTS, READONLY
  8 .debug_info   000109b6  00000000  00000000  000204b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000012ab  00000000  00000000  00030e6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000da4  00000000  00000000  00032118  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000001b8  00000000  00000000  00032ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003c0  00000000  00000000  00033074  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0002171f  00000000  00000000  00033434  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00003fea  00000000  00000000  00054b53  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000ce262  00000000  00000000  00058b3d  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00000994  00000000  00000000  00126da0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	e8 c4 00 20 ad 05 00 00 a9 05 00 00 a9 05 00 00     ... ............
      10:	a9 05 00 00 a9 05 00 00 a9 05 00 00 00 00 00 00     ................
	...
      2c:	a9 05 00 00 a9 05 00 00 00 00 00 00 a9 05 00 00     ................
      3c:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
      4c:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
      5c:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
      6c:	55 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     U...............
      7c:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
      8c:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
      9c:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
      ac:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
      bc:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
      cc:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
      dc:	a9 05 00 00 a9 05 00 00 a9 05 00 00 00 00 00 00     ................
	...
      f4:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     104:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     114:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     124:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     134:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     144:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     154:	a9 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     180:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     190:	00 00 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     1a0:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     1b0:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     1c0:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     1d0:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     1e0:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     1f0:	a9 05 00 00 61 04 00 00 a9 05 00 00 a9 05 00 00     ....a...........
     200:	a9 05 00 00 00 00 00 00 00 00 00 00 a9 05 00 00     ................
     210:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     220:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     230:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     240:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     250:	a9 05 00 00 a9 05 00 00 a9 05 00 00 a9 05 00 00     ................
     260:	00 00 00 00                                         ....

00000264 <__do_global_dtors_aux>:
     264:	b510      	push	{r4, lr}
     266:	4c05      	ldr	r4, [pc, #20]	; (27c <__do_global_dtors_aux+0x18>)
     268:	7823      	ldrb	r3, [r4, #0]
     26a:	b933      	cbnz	r3, 27a <__do_global_dtors_aux+0x16>
     26c:	4b04      	ldr	r3, [pc, #16]	; (280 <__do_global_dtors_aux+0x1c>)
     26e:	b113      	cbz	r3, 276 <__do_global_dtors_aux+0x12>
     270:	4804      	ldr	r0, [pc, #16]	; (284 <__do_global_dtors_aux+0x20>)
     272:	f3af 8000 	nop.w
     276:	2301      	movs	r3, #1
     278:	7023      	strb	r3, [r4, #0]
     27a:	bd10      	pop	{r4, pc}
     27c:	20000438 	.word	0x20000438
     280:	00000000 	.word	0x00000000
     284:	00002c60 	.word	0x00002c60

00000288 <frame_dummy>:
     288:	4b0c      	ldr	r3, [pc, #48]	; (2bc <frame_dummy+0x34>)
     28a:	b143      	cbz	r3, 29e <frame_dummy+0x16>
     28c:	480c      	ldr	r0, [pc, #48]	; (2c0 <frame_dummy+0x38>)
     28e:	490d      	ldr	r1, [pc, #52]	; (2c4 <frame_dummy+0x3c>)
     290:	b510      	push	{r4, lr}
     292:	f3af 8000 	nop.w
     296:	480c      	ldr	r0, [pc, #48]	; (2c8 <frame_dummy+0x40>)
     298:	6803      	ldr	r3, [r0, #0]
     29a:	b923      	cbnz	r3, 2a6 <frame_dummy+0x1e>
     29c:	bd10      	pop	{r4, pc}
     29e:	480a      	ldr	r0, [pc, #40]	; (2c8 <frame_dummy+0x40>)
     2a0:	6803      	ldr	r3, [r0, #0]
     2a2:	b933      	cbnz	r3, 2b2 <frame_dummy+0x2a>
     2a4:	4770      	bx	lr
     2a6:	4b09      	ldr	r3, [pc, #36]	; (2cc <frame_dummy+0x44>)
     2a8:	2b00      	cmp	r3, #0
     2aa:	d0f7      	beq.n	29c <frame_dummy+0x14>
     2ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     2b0:	4718      	bx	r3
     2b2:	4b06      	ldr	r3, [pc, #24]	; (2cc <frame_dummy+0x44>)
     2b4:	2b00      	cmp	r3, #0
     2b6:	d0f5      	beq.n	2a4 <frame_dummy+0x1c>
     2b8:	4718      	bx	r3
     2ba:	bf00      	nop
     2bc:	00000000 	.word	0x00000000
     2c0:	00002c60 	.word	0x00002c60
     2c4:	2000043c 	.word	0x2000043c
     2c8:	00002c60 	.word	0x00002c60
     2cc:	00000000 	.word	0x00000000

000002d0 <adxlReadByte>:
#include "util.h"

u8_t adxlReadByte(u8_t address) {
     2d0:	b530      	push	{r4, r5, lr}
     2d2:	b083      	sub	sp, #12
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
}


inline static void pinLow(Pin p) {
	PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     2d4:	4c0a      	ldr	r4, [pc, #40]	; (300 <adxlReadByte+0x30>)
     2d6:	f44f 6500 	mov.w	r5, #2048	; 0x800
     2da:	6165      	str	r5, [r4, #20]
    pinLow(cs_accel);
    spiDataOut(SPI0, address | READ_BIT);
     2dc:	f040 0180 	orr.w	r1, r0, #128	; 0x80
     2e0:	2000      	movs	r0, #0
     2e2:	4b08      	ldr	r3, [pc, #32]	; (304 <adxlReadByte+0x34>)
     2e4:	4798      	blx	r3
    delay_us(1);
     2e6:	2001      	movs	r0, #1
     2e8:	4b07      	ldr	r3, [pc, #28]	; (308 <adxlReadByte+0x38>)
     2ea:	4798      	blx	r3
    volatile u8_t rx = spiDataIn(SPI0);
     2ec:	2000      	movs	r0, #0
     2ee:	4b07      	ldr	r3, [pc, #28]	; (30c <adxlReadByte+0x3c>)
     2f0:	4798      	blx	r3
     2f2:	f88d 0007 	strb.w	r0, [sp, #7]
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     2f6:	61a5      	str	r5, [r4, #24]
    pinHigh(cs_accel);
    return rx;
     2f8:	f89d 0007 	ldrb.w	r0, [sp, #7]
}
     2fc:	b003      	add	sp, #12
     2fe:	bd30      	pop	{r4, r5, pc}
     300:	41008000 	.word	0x41008000
     304:	00000f19 	.word	0x00000f19
     308:	000004cd 	.word	0x000004cd
     30c:	00000fd1 	.word	0x00000fd1

00000310 <adxlWriteByte>:

void adxlWriteByte(u8_t address, u8_t data) {
     310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     312:	460f      	mov	r7, r1
	PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     314:	4c07      	ldr	r4, [pc, #28]	; (334 <adxlWriteByte+0x24>)
     316:	f44f 6500 	mov.w	r5, #2048	; 0x800
     31a:	6165      	str	r5, [r4, #20]
    pinLow(cs_accel);
    spiDataOut(SPI0, address);
     31c:	4601      	mov	r1, r0
     31e:	2000      	movs	r0, #0
     320:	4e05      	ldr	r6, [pc, #20]	; (338 <adxlWriteByte+0x28>)
     322:	47b0      	blx	r6
    delay_us(1);
     324:	2001      	movs	r0, #1
     326:	4b05      	ldr	r3, [pc, #20]	; (33c <adxlWriteByte+0x2c>)
     328:	4798      	blx	r3

    spiDataOut(SPI0, data);
     32a:	4639      	mov	r1, r7
     32c:	2000      	movs	r0, #0
     32e:	47b0      	blx	r6
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     330:	61a5      	str	r5, [r4, #24]
     332:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     334:	41008000 	.word	0x41008000
     338:	00000f19 	.word	0x00000f19
     33c:	000004cd 	.word	0x000004cd

00000340 <enable_clock_generator_sync>:

void disconnect_gclk_from_peripheral(uint8_t gclk, uint8_t peripheral) {
    GCLK->PCHCTRL[peripheral].reg = 0;
}

static void enable_clock_generator_sync(uint8_t gclk, uint32_t source, uint16_t divisor, bool sync) {
     340:	b430      	push	{r4, r5}
    uint32_t divsel = 0;
    // The datasheet says 8 bits and max value of 512, how is that possible?
    if (divisor > 255) { // Generator 1 has 16 bits
     342:	2aff      	cmp	r2, #255	; 0xff
     344:	d81d      	bhi.n	382 <enable_clock_generator_sync+0x42>
    uint32_t divsel = 0;
     346:	2500      	movs	r5, #0
                break;
            }
        }
    }

    GCLK->GENCTRL[gclk].reg = GCLK_GENCTRL_SRC(source) | GCLK_GENCTRL_DIV(divisor) | divsel | GCLK_GENCTRL_OE | GCLK_GENCTRL_GENEN;
     348:	4604      	mov	r4, r0
     34a:	f001 010f 	and.w	r1, r1, #15
     34e:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
     352:	432a      	orrs	r2, r5
     354:	f442 6210 	orr.w	r2, r2, #2304	; 0x900
     358:	3008      	adds	r0, #8
     35a:	4910      	ldr	r1, [pc, #64]	; (39c <enable_clock_generator_sync+0x5c>)
     35c:	f841 2020 	str.w	r2, [r1, r0, lsl #2]
    if (sync)
     360:	b13b      	cbz	r3, 372 <enable_clock_generator_sync+0x32>
        while ((GCLK->SYNCBUSY.vec.GENCTRL & (1 << gclk)) != 0) {}
     362:	4b0e      	ldr	r3, [pc, #56]	; (39c <enable_clock_generator_sync+0x5c>)
     364:	685b      	ldr	r3, [r3, #4]
     366:	f3c3 038b 	ubfx	r3, r3, #2, #12
     36a:	4123      	asrs	r3, r4
     36c:	f013 0f01 	tst.w	r3, #1
     370:	d1f7      	bne.n	362 <enable_clock_generator_sync+0x22>
}
     372:	bc30      	pop	{r4, r5}
     374:	4770      	bx	lr
                divisor = i - 1;
     376:	b2a2      	uxth	r2, r4
     378:	3a01      	subs	r2, #1
     37a:	b292      	uxth	r2, r2
        divsel = GCLK_GENCTRL_DIVSEL;
     37c:	f44f 5580 	mov.w	r5, #4096	; 0x1000
                break;
     380:	e7e2      	b.n	348 <enable_clock_generator_sync+0x8>
     382:	240f      	movs	r4, #15
        for (int i = 15; i > 0; i--) {
     384:	2c00      	cmp	r4, #0
     386:	dd06      	ble.n	396 <enable_clock_generator_sync+0x56>
            if (divisor & (1 << i)) {
     388:	fa42 f504 	asr.w	r5, r2, r4
     38c:	f015 0f01 	tst.w	r5, #1
     390:	d1f1      	bne.n	376 <enable_clock_generator_sync+0x36>
        for (int i = 15; i > 0; i--) {
     392:	3c01      	subs	r4, #1
     394:	e7f6      	b.n	384 <enable_clock_generator_sync+0x44>
        divsel = GCLK_GENCTRL_DIVSEL;
     396:	f44f 5580 	mov.w	r5, #4096	; 0x1000
     39a:	e7d5      	b.n	348 <enable_clock_generator_sync+0x8>
     39c:	40001c00 	.word	0x40001c00

000003a0 <init_clock_source_osculp32k>:

static void init_clock_source_osculp32k(void) {
    // Calibration value is loaded at startup
    OSC32KCTRL->OSCULP32K.bit.EN1K = 0;
     3a0:	4b04      	ldr	r3, [pc, #16]	; (3b4 <init_clock_source_osculp32k+0x14>)
     3a2:	69da      	ldr	r2, [r3, #28]
     3a4:	f36f 0282 	bfc	r2, #2, #1
     3a8:	61da      	str	r2, [r3, #28]
    OSC32KCTRL->OSCULP32K.bit.EN32K = 1;
     3aa:	69da      	ldr	r2, [r3, #28]
     3ac:	f042 0202 	orr.w	r2, r2, #2
     3b0:	61da      	str	r2, [r3, #28]
     3b2:	4770      	bx	lr
     3b4:	40001400 	.word	0x40001400

000003b8 <connect_gclk_to_peripheral>:
    GCLK->PCHCTRL[peripheral].reg = GCLK_PCHCTRL_CHEN | GCLK_PCHCTRL_GEN(gclk);
     3b8:	f000 000f 	and.w	r0, r0, #15
     3bc:	f040 0040 	orr.w	r0, r0, #64	; 0x40
     3c0:	3120      	adds	r1, #32
     3c2:	4b04      	ldr	r3, [pc, #16]	; (3d4 <connect_gclk_to_peripheral+0x1c>)
     3c4:	f843 0021 	str.w	r0, [r3, r1, lsl #2]
    while(GCLK->SYNCBUSY.reg != 0) {}
     3c8:	4b02      	ldr	r3, [pc, #8]	; (3d4 <connect_gclk_to_peripheral+0x1c>)
     3ca:	685b      	ldr	r3, [r3, #4]
     3cc:	2b00      	cmp	r3, #0
     3ce:	d1fb      	bne.n	3c8 <connect_gclk_to_peripheral+0x10>
}
     3d0:	4770      	bx	lr
     3d2:	bf00      	nop
     3d4:	40001c00 	.word	0x40001c00

000003d8 <enable_clock_generator>:
}

void enable_clock_generator(uint8_t gclk, uint32_t source, uint16_t divisor) {
     3d8:	b510      	push	{r4, lr}
    enable_clock_generator_sync(gclk, source, divisor, true);
     3da:	2301      	movs	r3, #1
     3dc:	4c01      	ldr	r4, [pc, #4]	; (3e4 <enable_clock_generator+0xc>)
     3de:	47a0      	blx	r4
     3e0:	bd10      	pop	{r4, pc}
     3e2:	bf00      	nop
     3e4:	00000341 	.word	0x00000341

000003e8 <TC2Init>:



volatile u8_t TC2Dur = 30;

void TC2Init() {
     3e8:	b508      	push	{r3, lr}

    init_clock_source_osculp32k();
     3ea:	4b16      	ldr	r3, [pc, #88]	; (444 <TC2Init+0x5c>)
     3ec:	4798      	blx	r3


    //OSC32KCTRL->RTCCTRL.bit.RTCSEL = OSC32KCTRL_RTCCTRL_RTCSEL_ULP32K_Val;


    enable_clock_generator(3, GCLK_GENCTRL_SRC_DFLL, 32);
     3ee:	2220      	movs	r2, #32
     3f0:	2106      	movs	r1, #6
     3f2:	2003      	movs	r0, #3
     3f4:	4b14      	ldr	r3, [pc, #80]	; (448 <TC2Init+0x60>)
     3f6:	4798      	blx	r3

    connect_gclk_to_peripheral(3, 26);
     3f8:	211a      	movs	r1, #26
     3fa:	2003      	movs	r0, #3
     3fc:	4b13      	ldr	r3, [pc, #76]	; (44c <TC2Init+0x64>)
     3fe:	4798      	blx	r3

    MCLK->APBBMASK.reg |= MCLK_APBBMASK_TC2;
     400:	4a13      	ldr	r2, [pc, #76]	; (450 <TC2Init+0x68>)
     402:	6993      	ldr	r3, [r2, #24]
     404:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
     408:	6193      	str	r3, [r2, #24]

    TC2->COUNT8.CTRLA.reg = TC_CTRLA_SWRST;
     40a:	2201      	movs	r2, #1
     40c:	4b11      	ldr	r3, [pc, #68]	; (454 <TC2Init+0x6c>)
     40e:	601a      	str	r2, [r3, #0]
    while(TC2->COUNT8.SYNCBUSY.bit.SWRST);
     410:	4b10      	ldr	r3, [pc, #64]	; (454 <TC2Init+0x6c>)
     412:	691b      	ldr	r3, [r3, #16]
     414:	f013 0f01 	tst.w	r3, #1
     418:	d1fa      	bne.n	410 <TC2Init+0x28>
    //TC0->COUNT16.CTRLBSET.reg = TC_CTRLBSET_ONESHOT;
    TC2->COUNT8.INTENSET.reg = TC_INTENSET_OVF;
     41a:	4b0e      	ldr	r3, [pc, #56]	; (454 <TC2Init+0x6c>)
     41c:	2201      	movs	r2, #1
     41e:	725a      	strb	r2, [r3, #9]
    TC2->COUNT8.CTRLA.reg = TC_CTRLA_MODE_COUNT8 |
     420:	f240 2206 	movw	r2, #518	; 0x206
     424:	601a      	str	r2, [r3, #0]
                            TC_CTRLA_PRESCALER_DIV4 |
                            TC_CTRLA_ENABLE;
    TC2->COUNT8.PERBUF.reg = TC2Dur;
     426:	4a0c      	ldr	r2, [pc, #48]	; (458 <TC2Init+0x70>)
     428:	7812      	ldrb	r2, [r2, #0]
     42a:	b2d2      	uxtb	r2, r2
     42c:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f

    while(TC2->COUNT8.SYNCBUSY.bit.ENABLE);
     430:	4b08      	ldr	r3, [pc, #32]	; (454 <TC2Init+0x6c>)
     432:	691b      	ldr	r3, [r3, #16]
     434:	f013 0f02 	tst.w	r3, #2
     438:	d1fa      	bne.n	430 <TC2Init+0x48>
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     43a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
     43e:	4b07      	ldr	r3, [pc, #28]	; (45c <TC2Init+0x74>)
     440:	60da      	str	r2, [r3, #12]
     442:	bd08      	pop	{r3, pc}
     444:	000003a1 	.word	0x000003a1
     448:	000003d9 	.word	0x000003d9
     44c:	000003b9 	.word	0x000003b9
     450:	40000800 	.word	0x40000800
     454:	4101a000 	.word	0x4101a000
     458:	20000000 	.word	0x20000000
     45c:	e000e100 	.word	0xe000e100

00000460 <TC2_Handler>:
    NVIC_EnableIRQ(TC2_IRQn);
}

void TC2_Handler(void) {
    TC2->COUNT8.INTFLAG.reg = TC_INTFLAG_OVF;
     460:	2201      	movs	r2, #1
     462:	4b05      	ldr	r3, [pc, #20]	; (478 <TC2_Handler+0x18>)
     464:	729a      	strb	r2, [r3, #10]
    if (buzzing) {
     466:	4b05      	ldr	r3, [pc, #20]	; (47c <TC2_Handler+0x1c>)
     468:	781b      	ldrb	r3, [r3, #0]
     46a:	b11b      	cbz	r3, 474 <TC2_Handler+0x14>
}


inline static void pinToggle(Pin p) {
	PORT->Group[p.group].OUTTGL.reg = (1<<p.pin);
     46c:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
     470:	4b03      	ldr	r3, [pc, #12]	; (480 <TC2_Handler+0x20>)
     472:	61da      	str	r2, [r3, #28]
     474:	4770      	bx	lr
     476:	bf00      	nop
     478:	4101a000 	.word	0x4101a000
     47c:	20000468 	.word	0x20000468
     480:	41008000 	.word	0x41008000

00000484 <delayInit>:
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
     484:	2200      	movs	r2, #0
     486:	4b04      	ldr	r3, [pc, #16]	; (498 <delayInit+0x14>)
     488:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23


void delayInit(void) {
    NVIC_SetPriority(SysTick_IRQn, 0x0);

    SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk |
     48c:	2205      	movs	r2, #5
     48e:	f5a3 634f 	sub.w	r3, r3, #3312	; 0xcf0
     492:	601a      	str	r2, [r3, #0]
     494:	4770      	bx	lr
     496:	bf00      	nop
     498:	e000ed00 	.word	0xe000ed00

0000049c <delay_ms>:

    }
}

void delay_ms(uint32_t n) {
    while (n--) {
     49c:	e003      	b.n	4a6 <delay_ms+0xa>
        SysTick->CTRL = 0;
     49e:	2100      	movs	r1, #0
     4a0:	4b09      	ldr	r3, [pc, #36]	; (4c8 <delay_ms+0x2c>)
     4a2:	6019      	str	r1, [r3, #0]
     4a4:	4610      	mov	r0, r2
    while (n--) {
     4a6:	1e42      	subs	r2, r0, #1
     4a8:	b168      	cbz	r0, 4c6 <delay_ms+0x2a>
        SysTick->LOAD = n;
     4aa:	4b07      	ldr	r3, [pc, #28]	; (4c8 <delay_ms+0x2c>)
     4ac:	f64b 3180 	movw	r1, #48000	; 0xbb80
     4b0:	6059      	str	r1, [r3, #4]
        SysTick->VAL = 0;
     4b2:	2100      	movs	r1, #0
     4b4:	6099      	str	r1, [r3, #8]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk;
     4b6:	2101      	movs	r1, #1
     4b8:	6019      	str	r1, [r3, #0]
        while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {};
     4ba:	4b03      	ldr	r3, [pc, #12]	; (4c8 <delay_ms+0x2c>)
     4bc:	681b      	ldr	r3, [r3, #0]
     4be:	f413 3f80 	tst.w	r3, #65536	; 0x10000
     4c2:	d0fa      	beq.n	4ba <delay_ms+0x1e>
     4c4:	e7eb      	b.n	49e <delay_ms+0x2>
        /* divide up to blocks of 1ms */
        delay_cycles(cycles_per_ms);
    }
}
     4c6:	4770      	bx	lr
     4c8:	e000e010 	.word	0xe000e010

000004cc <delay_us>:

void delay_us(uint32_t n) {
    while (n--) {
     4cc:	e003      	b.n	4d6 <delay_us+0xa>
        SysTick->CTRL = 0;
     4ce:	2100      	movs	r1, #0
     4d0:	4b09      	ldr	r3, [pc, #36]	; (4f8 <delay_us+0x2c>)
     4d2:	6019      	str	r1, [r3, #0]
     4d4:	4610      	mov	r0, r2
    while (n--) {
     4d6:	1e42      	subs	r2, r0, #1
     4d8:	b160      	cbz	r0, 4f4 <delay_us+0x28>
        SysTick->LOAD = n;
     4da:	4b07      	ldr	r3, [pc, #28]	; (4f8 <delay_us+0x2c>)
     4dc:	2130      	movs	r1, #48	; 0x30
     4de:	6059      	str	r1, [r3, #4]
        SysTick->VAL = 0;
     4e0:	2100      	movs	r1, #0
     4e2:	6099      	str	r1, [r3, #8]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk;
     4e4:	2101      	movs	r1, #1
     4e6:	6019      	str	r1, [r3, #0]
        while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk)) {};
     4e8:	4b03      	ldr	r3, [pc, #12]	; (4f8 <delay_us+0x2c>)
     4ea:	681b      	ldr	r3, [r3, #0]
     4ec:	f413 3f80 	tst.w	r3, #65536	; 0x10000
     4f0:	d0fa      	beq.n	4e8 <delay_us+0x1c>
     4f2:	e7ec      	b.n	4ce <delay_us+0x2>
        /* divide up to blocks of 10u */
        delay_cycles(cycles_per_us);
    }
}
     4f4:	4770      	bx	lr
     4f6:	bf00      	nop
     4f8:	e000e010 	.word	0xe000e010

000004fc <rtcInit>:


void rtcInit() {
    RTC->MODE1.CTRLA.reg = RTC_MODE1_CTRLA_SWRST;
     4fc:	2201      	movs	r2, #1
     4fe:	4b12      	ldr	r3, [pc, #72]	; (548 <rtcInit+0x4c>)
     500:	801a      	strh	r2, [r3, #0]
    while (RTC->MODE1.SYNCBUSY.bit.SWRST);
     502:	4b11      	ldr	r3, [pc, #68]	; (548 <rtcInit+0x4c>)
     504:	691b      	ldr	r3, [r3, #16]
     506:	f013 0f01 	tst.w	r3, #1
     50a:	d1fa      	bne.n	502 <rtcInit+0x6>

    OSC32KCTRL->RTCCTRL.reg = OSC32KCTRL_RTCCTRL_RTCSEL_ULP32K;
     50c:	2201      	movs	r2, #1
     50e:	4b0f      	ldr	r3, [pc, #60]	; (54c <rtcInit+0x50>)
     510:	741a      	strb	r2, [r3, #16]

    RTC->MODE1.INTENSET.reg = RTC_MODE1_INTENSET_OVF;
     512:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
     516:	f44f 4200 	mov.w	r2, #32768	; 0x8000
     51a:	815a      	strh	r2, [r3, #10]

    RTC->MODE1.CTRLA.reg = RTC_MODE1_CTRLA_MODE_COUNT16 |
     51c:	f248 6204 	movw	r2, #34308	; 0x8604
     520:	801a      	strh	r2, [r3, #0]
                           RTC_MODE1_CTRLA_PRESCALER_DIV32 |
                           RTC_MODE1_CTRLA_COUNTSYNC;
    RTC->MODE1.PER.reg = RTC_MODE1_PER_PER(998);
     522:	f240 32e6 	movw	r2, #998	; 0x3e6
     526:	839a      	strh	r2, [r3, #28]
    RTC->MODE1.CTRLA.reg |= RTC_MODE1_CTRLA_ENABLE;
     528:	881a      	ldrh	r2, [r3, #0]
     52a:	b292      	uxth	r2, r2
     52c:	f042 0202 	orr.w	r2, r2, #2
     530:	801a      	strh	r2, [r3, #0]
    while (RTC->MODE1.SYNCBUSY.bit.ENABLE);
     532:	4b05      	ldr	r3, [pc, #20]	; (548 <rtcInit+0x4c>)
     534:	691b      	ldr	r3, [r3, #16]
     536:	f013 0f02 	tst.w	r3, #2
     53a:	d1fa      	bne.n	532 <rtcInit+0x36>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     53c:	f44f 6200 	mov.w	r2, #2048	; 0x800
     540:	4b03      	ldr	r3, [pc, #12]	; (550 <rtcInit+0x54>)
     542:	601a      	str	r2, [r3, #0]
     544:	4770      	bx	lr
     546:	bf00      	nop
     548:	40002400 	.word	0x40002400
     54c:	40001400 	.word	0x40001400
     550:	e000e100 	.word	0xe000e100

00000554 <RTC_Handler>:
}

volatile uint32_t time_ms = 0;

void RTC_Handler(void) {
    RTC->MODE1.INTFLAG.reg = RTC_MODE1_INTFLAG_OVF;
     554:	f44f 4200 	mov.w	r2, #32768	; 0x8000
     558:	4b03      	ldr	r3, [pc, #12]	; (568 <RTC_Handler+0x14>)
     55a:	819a      	strh	r2, [r3, #12]
    time_ms += 1000;
     55c:	4a03      	ldr	r2, [pc, #12]	; (56c <RTC_Handler+0x18>)
     55e:	6813      	ldr	r3, [r2, #0]
     560:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
     564:	6013      	str	r3, [r2, #0]
     566:	4770      	bx	lr
     568:	40002400 	.word	0x40002400
     56c:	20000454 	.word	0x20000454

00000570 <millis>:
}

uint32_t millis(void) {
    uint32_t ms;
    ATOMIC_SECTION_ENTER
     570:	f3ef 8210 	mrs	r2, PRIMASK
     574:	b672      	cpsid	i
    ms = time_ms + RTC->MODE1.COUNT.reg;
     576:	4b0a      	ldr	r3, [pc, #40]	; (5a0 <millis+0x30>)
     578:	8b18      	ldrh	r0, [r3, #24]
     57a:	490a      	ldr	r1, [pc, #40]	; (5a4 <millis+0x34>)
     57c:	6809      	ldr	r1, [r1, #0]
     57e:	fa11 f080 	uxtah	r0, r1, r0
    if (RTC->MODE1.INTFLAG.bit.OVF) {
     582:	899b      	ldrh	r3, [r3, #12]
     584:	f413 4f00 	tst.w	r3, #32768	; 0x8000
     588:	d007      	beq.n	59a <millis+0x2a>
        ms = time_ms + RTC->MODE1.COUNT.reg + 1000;
     58a:	4b05      	ldr	r3, [pc, #20]	; (5a0 <millis+0x30>)
     58c:	8b18      	ldrh	r0, [r3, #24]
     58e:	4b05      	ldr	r3, [pc, #20]	; (5a4 <millis+0x34>)
     590:	681b      	ldr	r3, [r3, #0]
     592:	fa13 f080 	uxtah	r0, r3, r0
     596:	f500 707a 	add.w	r0, r0, #1000	; 0x3e8
    }
    ATOMIC_SECTION_LEAVE
     59a:	f382 8810 	msr	PRIMASK, r2
    return ms;
     59e:	4770      	bx	lr
     5a0:	40002400 	.word	0x40002400
     5a4:	20000454 	.word	0x20000454

000005a8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     5a8:	e7fe      	b.n	5a8 <Dummy_Handler>
	...

000005ac <Reset_Handler>:
{
     5ac:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
     5ae:	4b10      	ldr	r3, [pc, #64]	; (5f0 <Reset_Handler+0x44>)
     5b0:	4a10      	ldr	r2, [pc, #64]	; (5f4 <Reset_Handler+0x48>)
     5b2:	429a      	cmp	r2, r3
     5b4:	d009      	beq.n	5ca <Reset_Handler+0x1e>
     5b6:	4b0e      	ldr	r3, [pc, #56]	; (5f0 <Reset_Handler+0x44>)
     5b8:	4a0e      	ldr	r2, [pc, #56]	; (5f4 <Reset_Handler+0x48>)
     5ba:	e003      	b.n	5c4 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     5bc:	6811      	ldr	r1, [r2, #0]
     5be:	6019      	str	r1, [r3, #0]
     5c0:	3304      	adds	r3, #4
     5c2:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     5c4:	490c      	ldr	r1, [pc, #48]	; (5f8 <Reset_Handler+0x4c>)
     5c6:	428b      	cmp	r3, r1
     5c8:	d3f8      	bcc.n	5bc <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     5ca:	4b0c      	ldr	r3, [pc, #48]	; (5fc <Reset_Handler+0x50>)
     5cc:	e002      	b.n	5d4 <Reset_Handler+0x28>
                *pDest++ = 0;
     5ce:	2200      	movs	r2, #0
     5d0:	601a      	str	r2, [r3, #0]
     5d2:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     5d4:	4a0a      	ldr	r2, [pc, #40]	; (600 <Reset_Handler+0x54>)
     5d6:	4293      	cmp	r3, r2
     5d8:	d3f9      	bcc.n	5ce <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     5da:	4a0a      	ldr	r2, [pc, #40]	; (604 <Reset_Handler+0x58>)
     5dc:	4b0a      	ldr	r3, [pc, #40]	; (608 <Reset_Handler+0x5c>)
     5de:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
     5e2:	6093      	str	r3, [r2, #8]
        __libc_init_array();
     5e4:	4b09      	ldr	r3, [pc, #36]	; (60c <Reset_Handler+0x60>)
     5e6:	4798      	blx	r3
        main();
     5e8:	4b09      	ldr	r3, [pc, #36]	; (610 <Reset_Handler+0x64>)
     5ea:	4798      	blx	r3
     5ec:	e7fe      	b.n	5ec <Reset_Handler+0x40>
     5ee:	bf00      	nop
     5f0:	20000000 	.word	0x20000000
     5f4:	00002c60 	.word	0x00002c60
     5f8:	20000434 	.word	0x20000434
     5fc:	20000438 	.word	0x20000438
     600:	200004e4 	.word	0x200004e4
     604:	e000ed00 	.word	0xe000ed00
     608:	00000000 	.word	0x00000000
     60c:	00002ab1 	.word	0x00002ab1
     610:	0000085d 	.word	0x0000085d

00000614 <init>:


#include "sam.h"
#include "util.h"

void init() {
     614:	b508      	push	{r3, lr}
    delayInit();
     616:	4b6c      	ldr	r3, [pc, #432]	; (7c8 <init+0x1b4>)
     618:	4798      	blx	r3
    rtcInit();
     61a:	4b6c      	ldr	r3, [pc, #432]	; (7cc <init+0x1b8>)
     61c:	4798      	blx	r3
    TC2Init();
     61e:	4b6c      	ldr	r3, [pc, #432]	; (7d0 <init+0x1bc>)
     620:	4798      	blx	r3
    SPI0init(0);
     622:	2000      	movs	r0, #0
     624:	4b6b      	ldr	r3, [pc, #428]	; (7d4 <init+0x1c0>)
     626:	4798      	blx	r3
    SPI5init(5);
     628:	2005      	movs	r0, #5
     62a:	4b6b      	ldr	r3, [pc, #428]	; (7d8 <init+0x1c4>)
     62c:	4798      	blx	r3
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     62e:	4b6b      	ldr	r3, [pc, #428]	; (7dc <init+0x1c8>)
     630:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
     634:	f36f 0200 	bfc	r2, #0, #1
     638:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
	PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     63c:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
     640:	609a      	str	r2, [r3, #8]
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     642:	f893 20cc 	ldrb.w	r2, [r3, #204]	; 0xcc
     646:	f36f 0200 	bfc	r2, #0, #1
     64a:	f883 20cc 	strb.w	r2, [r3, #204]	; 0xcc
	PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     64e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
     652:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     656:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     65a:	f893 20d0 	ldrb.w	r2, [r3, #208]	; 0xd0
     65e:	f36f 0200 	bfc	r2, #0, #1
     662:	f883 20d0 	strb.w	r2, [r3, #208]	; 0xd0
	PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     666:	f44f 3280 	mov.w	r2, #65536	; 0x10000
     66a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     66e:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     672:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
     676:	f36f 0200 	bfc	r2, #0, #1
     67a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
	PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     67e:	f44f 7280 	mov.w	r2, #256	; 0x100
     682:	609a      	str	r2, [r3, #8]
		PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     684:	f893 1034 	ldrb.w	r1, [r3, #52]	; 0x34
     688:	2202      	movs	r2, #2
     68a:	f362 0103 	bfi	r1, r2, #0, #4
     68e:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     692:	f893 1048 	ldrb.w	r1, [r3, #72]	; 0x48
     696:	f041 0101 	orr.w	r1, r1, #1
     69a:	f883 1048 	strb.w	r1, [r3, #72]	; 0x48
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     69e:	f893 1049 	ldrb.w	r1, [r3, #73]	; 0x49
     6a2:	f36f 0100 	bfc	r1, #0, #1
     6a6:	f883 1049 	strb.w	r1, [r3, #73]	; 0x49
	PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     6aa:	f44f 7100 	mov.w	r1, #512	; 0x200
     6ae:	6099      	str	r1, [r3, #8]
		PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     6b0:	f893 1034 	ldrb.w	r1, [r3, #52]	; 0x34
     6b4:	f362 1107 	bfi	r1, r2, #4, #4
     6b8:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     6bc:	f893 1049 	ldrb.w	r1, [r3, #73]	; 0x49
     6c0:	f041 0101 	orr.w	r1, r1, #1
     6c4:	f883 1049 	strb.w	r1, [r3, #73]	; 0x49
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     6c8:	f893 104b 	ldrb.w	r1, [r3, #75]	; 0x4b
     6cc:	f36f 0100 	bfc	r1, #0, #1
     6d0:	f883 104b 	strb.w	r1, [r3, #75]	; 0x4b
	PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     6d4:	f44f 6100 	mov.w	r1, #2048	; 0x800
     6d8:	6099      	str	r1, [r3, #8]
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     6da:	6199      	str	r1, [r3, #24]
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     6dc:	f893 1047 	ldrb.w	r1, [r3, #71]	; 0x47
     6e0:	f36f 0100 	bfc	r1, #0, #1
     6e4:	f883 1047 	strb.w	r1, [r3, #71]	; 0x47
	PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     6e8:	2180      	movs	r1, #128	; 0x80
     6ea:	6099      	str	r1, [r3, #8]
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     6ec:	6199      	str	r1, [r3, #24]
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     6ee:	f893 104a 	ldrb.w	r1, [r3, #74]	; 0x4a
     6f2:	f36f 0100 	bfc	r1, #0, #1
     6f6:	f883 104a 	strb.w	r1, [r3, #74]	; 0x4a
	PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     6fa:	f893 104a 	ldrb.w	r1, [r3, #74]	; 0x4a
     6fe:	4311      	orrs	r1, r2
     700:	f883 104a 	strb.w	r1, [r3, #74]	; 0x4a
	PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
     704:	f44f 6180 	mov.w	r1, #1024	; 0x400
     708:	6059      	str	r1, [r3, #4]
		PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     70a:	f893 1035 	ldrb.w	r1, [r3, #53]	; 0x35
     70e:	f362 0103 	bfi	r1, r2, #0, #4
     712:	f883 1035 	strb.w	r1, [r3, #53]	; 0x35
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     716:	f893 104a 	ldrb.w	r1, [r3, #74]	; 0x4a
     71a:	f041 0101 	orr.w	r1, r1, #1
     71e:	f883 104a 	strb.w	r1, [r3, #74]	; 0x4a
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     722:	f893 10c2 	ldrb.w	r1, [r3, #194]	; 0xc2
     726:	f36f 0100 	bfc	r1, #0, #1
     72a:	f883 10c2 	strb.w	r1, [r3, #194]	; 0xc2
	PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     72e:	2104      	movs	r1, #4
     730:	f8c3 1088 	str.w	r1, [r3, #136]	; 0x88
		PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXE = p.mux;
     734:	f893 10b1 	ldrb.w	r1, [r3, #177]	; 0xb1
     738:	2003      	movs	r0, #3
     73a:	f360 0103 	bfi	r1, r0, #0, #4
     73e:	f883 10b1 	strb.w	r1, [r3, #177]	; 0xb1
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     742:	f893 10c2 	ldrb.w	r1, [r3, #194]	; 0xc2
     746:	f041 0101 	orr.w	r1, r1, #1
     74a:	f883 10c2 	strb.w	r1, [r3, #194]	; 0xc2
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     74e:	f893 10c3 	ldrb.w	r1, [r3, #195]	; 0xc3
     752:	f36f 0100 	bfc	r1, #0, #1
     756:	f883 10c3 	strb.w	r1, [r3, #195]	; 0xc3
	PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     75a:	2108      	movs	r1, #8
     75c:	f8c3 1088 	str.w	r1, [r3, #136]	; 0x88
		PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     760:	f893 10b1 	ldrb.w	r1, [r3, #177]	; 0xb1
     764:	f360 1107 	bfi	r1, r0, #4, #4
     768:	f883 10b1 	strb.w	r1, [r3, #177]	; 0xb1
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     76c:	f893 10c3 	ldrb.w	r1, [r3, #195]	; 0xc3
     770:	f041 0101 	orr.w	r1, r1, #1
     774:	f883 10c3 	strb.w	r1, [r3, #195]	; 0xc3
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     778:	f893 10c0 	ldrb.w	r1, [r3, #192]	; 0xc0
     77c:	f36f 0100 	bfc	r1, #0, #1
     780:	f883 10c0 	strb.w	r1, [r3, #192]	; 0xc0
	PORT->Group[p.group].DIRSET.reg = (1<<p.pin);
     784:	2101      	movs	r1, #1
     786:	f8c3 1088 	str.w	r1, [r3, #136]	; 0x88
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     78a:	f8c3 1098 	str.w	r1, [r3, #152]	; 0x98
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 0;
     78e:	f893 10c1 	ldrb.w	r1, [r3, #193]	; 0xc1
     792:	f36f 0100 	bfc	r1, #0, #1
     796:	f883 10c1 	strb.w	r1, [r3, #193]	; 0xc1
	PORT->Group[p.group].PINCFG[p.pin].bit.INEN = 1;
     79a:	f893 10c1 	ldrb.w	r1, [r3, #193]	; 0xc1
     79e:	4311      	orrs	r1, r2
     7a0:	f883 10c1 	strb.w	r1, [r3, #193]	; 0xc1
	PORT->Group[p.group].DIRCLR.reg = (1<<p.pin);
     7a4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		PORT->Group[p.group].PMUX[p.pin/2].bit.PMUXO = p.mux;
     7a8:	f893 20b0 	ldrb.w	r2, [r3, #176]	; 0xb0
     7ac:	f360 1207 	bfi	r2, r0, #4, #4
     7b0:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
	PORT->Group[p.group].PINCFG[p.pin].bit.PMUXEN = 1;
     7b4:	f893 20c1 	ldrb.w	r2, [r3, #193]	; 0xc1
     7b8:	f042 0201 	orr.w	r2, r2, #1
     7bc:	f883 20c1 	strb.w	r2, [r3, #193]	; 0xc1
    pinIn(spi5MISO);
    pinMux(spi5MISO);



    initMS5803Barometer();
     7c0:	4b07      	ldr	r3, [pc, #28]	; (7e0 <init+0x1cc>)
     7c2:	4798      	blx	r3
     7c4:	bd08      	pop	{r3, pc}
     7c6:	bf00      	nop
     7c8:	00000485 	.word	0x00000485
     7cc:	000004fd 	.word	0x000004fd
     7d0:	000003e9 	.word	0x000003e9
     7d4:	00000bcd 	.word	0x00000bcd
     7d8:	00000d79 	.word	0x00000d79
     7dc:	41008000 	.word	0x41008000
     7e0:	00000b9d 	.word	0x00000b9d

000007e4 <getAlt>:

}

void getAlt() {
     7e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     7e8:	b082      	sub	sp, #8
	PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     7ea:	4c15      	ldr	r4, [pc, #84]	; (840 <getAlt+0x5c>)
     7ec:	2580      	movs	r5, #128	; 0x80
     7ee:	6165      	str	r5, [r4, #20]

    pinLow(cs_baro);
    spiDataOut(SPI0, cmdAdcD2_4096_);
     7f0:	2158      	movs	r1, #88	; 0x58
     7f2:	2000      	movs	r0, #0
     7f4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 858 <getAlt+0x74>
     7f8:	47c0      	blx	r8
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     7fa:	61a5      	str	r5, [r4, #24]
    pinHigh(cs_baro);
    delay_us(9040);
     7fc:	f242 3050 	movw	r0, #9040	; 0x2350
     800:	4f10      	ldr	r7, [pc, #64]	; (844 <getAlt+0x60>)
     802:	47b8      	blx	r7
    volatile uint32_t tempRaw = readMS5803AdcResults();
     804:	4e10      	ldr	r6, [pc, #64]	; (848 <getAlt+0x64>)
     806:	47b0      	blx	r6
     808:	9001      	str	r0, [sp, #4]
	PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     80a:	6165      	str	r5, [r4, #20]

    pinLow(cs_baro);
    spiDataOut(SPI0, cmdAdcD1_4096_);
     80c:	2148      	movs	r1, #72	; 0x48
     80e:	2000      	movs	r0, #0
     810:	47c0      	blx	r8
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     812:	61a5      	str	r5, [r4, #24]
    pinHigh(cs_baro);

    delay_us(9040);
     814:	f242 3050 	movw	r0, #9040	; 0x2350
     818:	47b8      	blx	r7

    volatile u32_t PressureRaw = readMS5803AdcResults();
     81a:	47b0      	blx	r6
     81c:	9000      	str	r0, [sp, #0]
    ConvertPressureTemperature(PressureRaw, tempRaw, &sample.temperatureCelcus, &sample.pressureMbar);
     81e:	9800      	ldr	r0, [sp, #0]
     820:	9901      	ldr	r1, [sp, #4]
     822:	4c0a      	ldr	r4, [pc, #40]	; (84c <getAlt+0x68>)
     824:	4623      	mov	r3, r4
     826:	f104 0208 	add.w	r2, r4, #8
     82a:	4d09      	ldr	r5, [pc, #36]	; (850 <getAlt+0x6c>)
     82c:	47a8      	blx	r5

    sample.pressureAltitude = paToFeetNOAA(sample.pressureMbar);
     82e:	e874 0102 	ldrd	r0, r1, [r4], #-8
     832:	4b08      	ldr	r3, [pc, #32]	; (854 <getAlt+0x70>)
     834:	4798      	blx	r3
     836:	e9c4 0106 	strd	r0, r1, [r4, #24]

}
     83a:	b002      	add	sp, #8
     83c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
     840:	41008000 	.word	0x41008000
     844:	000004cd 	.word	0x000004cd
     848:	000009a9 	.word	0x000009a9
     84c:	20000478 	.word	0x20000478
     850:	000009e9 	.word	0x000009e9
     854:	00000ad1 	.word	0x00000ad1
     858:	00000f19 	.word	0x00000f19

0000085c <main>:


int main(void) {
     85c:	b500      	push	{lr}
     85e:	b089      	sub	sp, #36	; 0x24

    init();
     860:	4b48      	ldr	r3, [pc, #288]	; (984 <main+0x128>)
     862:	4798      	blx	r3

    adxlWriteByte(ADXL345_REG_POWER_CTL, 0x00);
     864:	2100      	movs	r1, #0
     866:	202d      	movs	r0, #45	; 0x2d
     868:	4d47      	ldr	r5, [pc, #284]	; (988 <main+0x12c>)
     86a:	47a8      	blx	r5
    volatile u8_t pwr = adxlReadByte(ADXL345_REG_POWER_CTL);
     86c:	202d      	movs	r0, #45	; 0x2d
     86e:	4c47      	ldr	r4, [pc, #284]	; (98c <main+0x130>)
     870:	47a0      	blx	r4
     872:	f88d 001f 	strb.w	r0, [sp, #31]

    adxlWriteByte(ADXL345_REG_DATA_FORMAT, 0x03);
     876:	2103      	movs	r1, #3
     878:	2031      	movs	r0, #49	; 0x31
     87a:	47a8      	blx	r5
    volatile u8_t data = adxlReadByte(ADXL345_REG_DATA_FORMAT);
     87c:	2031      	movs	r0, #49	; 0x31
     87e:	47a0      	blx	r4
     880:	f88d 001e 	strb.w	r0, [sp, #30]

    adxlWriteByte(ADXL345_REG_FIFO_CTL, 0x00);
     884:	2100      	movs	r1, #0
     886:	2038      	movs	r0, #56	; 0x38
     888:	47a8      	blx	r5
    volatile u8_t fifo = adxlReadByte(ADXL345_REG_FIFO_CTL);
     88a:	2038      	movs	r0, #56	; 0x38
     88c:	47a0      	blx	r4
     88e:	f88d 001d 	strb.w	r0, [sp, #29]

    //adxlWriteByte(ADXL345_REG_BW_RATE, 0x0F);
    volatile u8_t rate = adxlReadByte(ADXL345_REG_BW_RATE);
     892:	202c      	movs	r0, #44	; 0x2c
     894:	47a0      	blx	r4
     896:	f88d 001c 	strb.w	r0, [sp, #28]

    adxlWriteByte(ADXL345_REG_POWER_CTL, 0x08);
     89a:	2108      	movs	r1, #8
     89c:	202d      	movs	r0, #45	; 0x2d
     89e:	47a8      	blx	r5
    volatile u8_t pwr2 = adxlReadByte(ADXL345_REG_POWER_CTL);
     8a0:	202d      	movs	r0, #45	; 0x2d
     8a2:	47a0      	blx	r4
     8a4:	f88d 001b 	strb.w	r0, [sp, #27]

    volatile u8_t divid = adxlReadByte(ADXL345_REG_DEVID);
     8a8:	2000      	movs	r0, #0
     8aa:	47a0      	blx	r4
     8ac:	f88d 001a 	strb.w	r0, [sp, #26]
    volatile u8_t pwr4 = adxlReadByte(ADXL345_REG_POWER_CTL);
     8b0:	202d      	movs	r0, #45	; 0x2d
     8b2:	47a0      	blx	r4
     8b4:	f88d 0019 	strb.w	r0, [sp, #25]
    volatile u8_t data2 = adxlReadByte(ADXL345_REG_DATA_FORMAT);
     8b8:	2031      	movs	r0, #49	; 0x31
     8ba:	47a0      	blx	r4
     8bc:	f88d 0018 	strb.w	r0, [sp, #24]

    volatile u8_t fifo1 = adxlReadByte(ADXL345_REG_FIFO_STATUS);
     8c0:	2039      	movs	r0, #57	; 0x39
     8c2:	47a0      	blx	r4
     8c4:	f88d 0017 	strb.w	r0, [sp, #23]
	PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     8c8:	4c31      	ldr	r4, [pc, #196]	; (990 <main+0x134>)
     8ca:	2501      	movs	r5, #1
     8cc:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94


    pinLow(cs_mem);
    spiDataOut(SPI5, 0x9f);
     8d0:	219f      	movs	r1, #159	; 0x9f
     8d2:	2005      	movs	r0, #5
     8d4:	4b2f      	ldr	r3, [pc, #188]	; (994 <main+0x138>)
     8d6:	4798      	blx	r3
    volatile u8_t MEMID0 = spiDataIn(SPI5);
     8d8:	2005      	movs	r0, #5
     8da:	4e2f      	ldr	r6, [pc, #188]	; (998 <main+0x13c>)
     8dc:	47b0      	blx	r6
     8de:	f88d 0016 	strb.w	r0, [sp, #22]
    volatile u8_t MEMID1 = spiDataIn(SPI5);
     8e2:	2005      	movs	r0, #5
     8e4:	47b0      	blx	r6
     8e6:	f88d 0015 	strb.w	r0, [sp, #21]
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     8ea:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98

    pinHigh(cs_mem);
    delay_ms(10);
     8ee:	200a      	movs	r0, #10
     8f0:	4b2a      	ldr	r3, [pc, #168]	; (99c <main+0x140>)
     8f2:	4798      	blx	r3

    //buzzing = true;


    volatile u32_t lastTime = millis();
     8f4:	4b2a      	ldr	r3, [pc, #168]	; (9a0 <main+0x144>)
     8f6:	4798      	blx	r3
     8f8:	9004      	str	r0, [sp, #16]
     8fa:	e032      	b.n	962 <main+0x106>
            //buzzing = !buzzing;

        }


        getAlt();
     8fc:	4b29      	ldr	r3, [pc, #164]	; (9a4 <main+0x148>)
     8fe:	4798      	blx	r3
        adxlWriteByte(ADXL345_REG_POWER_CTL, 0x08);
     900:	2108      	movs	r1, #8
     902:	202d      	movs	r0, #45	; 0x2d
     904:	4b20      	ldr	r3, [pc, #128]	; (988 <main+0x12c>)
     906:	4798      	blx	r3

        volatile u8_t junk = spiDataIn(SPI0);
     908:	2000      	movs	r0, #0
     90a:	4b23      	ldr	r3, [pc, #140]	; (998 <main+0x13c>)
     90c:	4798      	blx	r3
     90e:	f88d 0006 	strb.w	r0, [sp, #6]

        delay_ms(50);
     912:	2032      	movs	r0, #50	; 0x32
     914:	4b21      	ldr	r3, [pc, #132]	; (99c <main+0x140>)
     916:	4798      	blx	r3

        volatile u8_t divid2 = adxlReadByte(ADXL345_REG_DEVID);
     918:	2000      	movs	r0, #0
     91a:	4c1c      	ldr	r4, [pc, #112]	; (98c <main+0x130>)
     91c:	47a0      	blx	r4
     91e:	f88d 0007 	strb.w	r0, [sp, #7]


        volatile u8_t x0 = adxlReadByte(ADXL345_REG_DATAX0);
     922:	2032      	movs	r0, #50	; 0x32
     924:	47a0      	blx	r4
     926:	f88d 0008 	strb.w	r0, [sp, #8]
        volatile u8_t x1 = adxlReadByte(ADXL345_REG_DATAX1);
     92a:	2033      	movs	r0, #51	; 0x33
     92c:	47a0      	blx	r4
     92e:	f88d 0009 	strb.w	r0, [sp, #9]
        volatile u8_t y0 = adxlReadByte(ADXL345_REG_DATAY0);
     932:	2034      	movs	r0, #52	; 0x34
     934:	47a0      	blx	r4
     936:	f88d 000a 	strb.w	r0, [sp, #10]
        volatile u8_t y1 = adxlReadByte(ADXL345_REG_DATAY1);
     93a:	2035      	movs	r0, #53	; 0x35
     93c:	47a0      	blx	r4
     93e:	f88d 000b 	strb.w	r0, [sp, #11]
         volatile u8_t z0 = adxlReadByte(ADXL345_REG_DATAZ0);
     942:	2036      	movs	r0, #54	; 0x36
     944:	47a0      	blx	r4
     946:	f88d 000c 	strb.w	r0, [sp, #12]
         volatile u8_t z1 = adxlReadByte(ADXL345_REG_DATAZ1);
     94a:	2037      	movs	r0, #55	; 0x37
     94c:	47a0      	blx	r4
     94e:	f88d 000d 	strb.w	r0, [sp, #13]
//         delay_ms(10);
//         volatile u8_t junk2 = spiDataIn(SPI0);
//
        volatile u8_t pwr3 = adxlReadByte(ADXL345_REG_POWER_CTL);
     952:	202d      	movs	r0, #45	; 0x2d
     954:	47a0      	blx	r4
     956:	f88d 000e 	strb.w	r0, [sp, #14]
        volatile u8_t pwr4 = adxlReadByte(ADXL345_REG_POWER_CTL);
     95a:	202d      	movs	r0, #45	; 0x2d
     95c:	47a0      	blx	r4
     95e:	f88d 000f 	strb.w	r0, [sp, #15]
        if (millis() - lastTime > 500) {
     962:	4b0f      	ldr	r3, [pc, #60]	; (9a0 <main+0x144>)
     964:	4798      	blx	r3
     966:	9b04      	ldr	r3, [sp, #16]
     968:	1ac0      	subs	r0, r0, r3
     96a:	f5b0 7ffa 	cmp.w	r0, #500	; 0x1f4
     96e:	d9c5      	bls.n	8fc <main+0xa0>
            lastTime = millis();
     970:	4b0b      	ldr	r3, [pc, #44]	; (9a0 <main+0x144>)
     972:	4798      	blx	r3
     974:	9004      	str	r0, [sp, #16]
	PORT->Group[p.group].OUTTGL.reg = (1<<p.pin);
     976:	f44f 3280 	mov.w	r2, #65536	; 0x10000
     97a:	4b05      	ldr	r3, [pc, #20]	; (990 <main+0x134>)
     97c:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
     980:	e7bc      	b.n	8fc <main+0xa0>
     982:	bf00      	nop
     984:	00000615 	.word	0x00000615
     988:	00000311 	.word	0x00000311
     98c:	000002d1 	.word	0x000002d1
     990:	41008000 	.word	0x41008000
     994:	00000f19 	.word	0x00000f19
     998:	00000fd1 	.word	0x00000fd1
     99c:	0000049d 	.word	0x0000049d
     9a0:	00000571 	.word	0x00000571
     9a4:	000007e5 	.word	0x000007e5

000009a8 <readMS5803AdcResults>:
#include <MS5803.h>
#include <math.h>

u32_t readMS5803AdcResults() {
     9a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     9ac:	4e0b      	ldr	r6, [pc, #44]	; (9dc <readMS5803AdcResults+0x34>)
     9ae:	2780      	movs	r7, #128	; 0x80
     9b0:	6177      	str	r7, [r6, #20]

	pinLow(cs_baro);
	spiDataOut(SPI0, cmdAdcRead_);
     9b2:	2100      	movs	r1, #0
     9b4:	4608      	mov	r0, r1
     9b6:	4b0a      	ldr	r3, [pc, #40]	; (9e0 <readMS5803AdcResults+0x38>)
     9b8:	4798      	blx	r3
	u8_t _byte1 = spiDataIn(SPI0);
     9ba:	2000      	movs	r0, #0
     9bc:	4d09      	ldr	r5, [pc, #36]	; (9e4 <readMS5803AdcResults+0x3c>)
     9be:	47a8      	blx	r5
     9c0:	4680      	mov	r8, r0
	u8_t _byte2 = spiDataIn(SPI0);
     9c2:	2000      	movs	r0, #0
     9c4:	47a8      	blx	r5
     9c6:	4604      	mov	r4, r0
	u8_t _byte3 = spiDataIn(SPI0);
     9c8:	2000      	movs	r0, #0
     9ca:	47a8      	blx	r5
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     9cc:	61b7      	str	r7, [r6, #24]
	pinHigh(cs_baro);

	u32_t _receive = (_byte1 << 16) | (_byte2 << 8) | (_byte3);
     9ce:	0224      	lsls	r4, r4, #8
     9d0:	ea44 4408 	orr.w	r4, r4, r8, lsl #16
	return _receive;
}
     9d4:	4320      	orrs	r0, r4
     9d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
     9da:	bf00      	nop
     9dc:	41008000 	.word	0x41008000
     9e0:	00000f19 	.word	0x00000f19
     9e4:	00000fd1 	.word	0x00000fd1

000009e8 <ConvertPressureTemperature>:

void ConvertPressureTemperature(u32_t pressureRaw, u32_t tempRaw, u32_t* temperatureCelcus, double* pressureMbar ) {
     9e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     9ec:	b089      	sub	sp, #36	; 0x24
     9ee:	9301      	str	r3, [sp, #4]
	const u16_t C1 = coefficients_[1];
     9f0:	4c33      	ldr	r4, [pc, #204]	; (ac0 <ConvertPressureTemperature+0xd8>)
     9f2:	f8b4 e002 	ldrh.w	lr, [r4, #2]
	const u16_t C2 = coefficients_[2];
     9f6:	88a3      	ldrh	r3, [r4, #4]
	const u16_t C3 = coefficients_[3];
     9f8:	f8b4 c006 	ldrh.w	ip, [r4, #6]
	const u16_t C4 = coefficients_[4];
     9fc:	8926      	ldrh	r6, [r4, #8]
	const u16_t C5 = coefficients_[5];
     9fe:	8965      	ldrh	r5, [r4, #10]
	const u16_t C6 = coefficients_[6];
     a00:	f8b4 800c 	ldrh.w	r8, [r4, #12]

	// calculate 1st order pressure and temperature (MS5607 1st order algorithm)
	volatile const  int32_t dT = (tempRaw) - ((int32_t)C5 << 8);
     a04:	eba1 2105 	sub.w	r1, r1, r5, lsl #8
     a08:	9107      	str	r1, [sp, #28]
	*temperatureCelcus  = 2000 + (((int64_t)dT * C6) >> 23) ;
     a0a:	9c07      	ldr	r4, [sp, #28]
     a0c:	ea4f 7be4 	mov.w	fp, r4, asr #31
     a10:	fa1f f888 	uxth.w	r8, r8
     a14:	fba8 4504 	umull	r4, r5, r8, r4
     a18:	fb08 550b 	mla	r5, r8, fp, r5
     a1c:	0de1      	lsrs	r1, r4, #23
     a1e:	ea41 2145 	orr.w	r1, r1, r5, lsl #9
     a22:	f501 61fa 	add.w	r1, r1, #2000	; 0x7d0
     a26:	6011      	str	r1, [r2, #0]

	volatile const  int64_t OFF   = ((int64_t)C2 << 16) + ((C4 * (int64_t)dT) >> 7);
     a28:	b29a      	uxth	r2, r3
     a2a:	0c15      	lsrs	r5, r2, #16
     a2c:	0414      	lsls	r4, r2, #16
     a2e:	9a07      	ldr	r2, [sp, #28]
     a30:	ea4f 79e2 	mov.w	r9, r2, asr #31
     a34:	b2b6      	uxth	r6, r6
     a36:	fba6 2302 	umull	r2, r3, r6, r2
     a3a:	fb06 3309 	mla	r3, r6, r9, r3
     a3e:	09d6      	lsrs	r6, r2, #7
     a40:	ea46 6643 	orr.w	r6, r6, r3, lsl #25
     a44:	11df      	asrs	r7, r3, #7
     a46:	19a4      	adds	r4, r4, r6
     a48:	417d      	adcs	r5, r7
     a4a:	e9cd 4504 	strd	r4, r5, [sp, #16]
	volatile const  int64_t SENS  =  ((int64_t)C1 << 15) + ((C3 * (int64_t)dT) >> 8);
     a4e:	2500      	movs	r5, #0
     a50:	ea4f 34ce 	mov.w	r4, lr, lsl #15
     a54:	9a07      	ldr	r2, [sp, #28]
     a56:	17d7      	asrs	r7, r2, #31
     a58:	fa1f f88c 	uxth.w	r8, ip
     a5c:	fba8 2302 	umull	r2, r3, r8, r2
     a60:	fb08 3307 	mla	r3, r8, r7, r3
     a64:	0a16      	lsrs	r6, r2, #8
     a66:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
     a6a:	121f      	asrs	r7, r3, #8
     a6c:	19a4      	adds	r4, r4, r6
     a6e:	417d      	adcs	r5, r7
     a70:	e9cd 4502 	strd	r4, r5, [sp, #8]
	*pressureMbar = ((((pressureRaw * SENS) >> 21) - OFF) >> 15);
     a74:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
     a78:	fba0 4502 	umull	r4, r5, r0, r2
     a7c:	fb00 5503 	mla	r5, r0, r3, r5
     a80:	0d62      	lsrs	r2, r4, #21
     a82:	ea42 22c5 	orr.w	r2, r2, r5, lsl #11
     a86:	156b      	asrs	r3, r5, #21
     a88:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
     a8c:	1a12      	subs	r2, r2, r0
     a8e:	eb63 0301 	sbc.w	r3, r3, r1
     a92:	0bd0      	lsrs	r0, r2, #15
     a94:	ea40 4043 	orr.w	r0, r0, r3, lsl #17
     a98:	13d9      	asrs	r1, r3, #15
     a9a:	4b0a      	ldr	r3, [pc, #40]	; (ac4 <ConvertPressureTemperature+0xdc>)
     a9c:	4798      	blx	r3
	*pressureMbar = *pressureMbar/100;
     a9e:	a306      	add	r3, pc, #24	; (adr r3, ab8 <ConvertPressureTemperature+0xd0>)
     aa0:	e9d3 2300 	ldrd	r2, r3, [r3]
     aa4:	4c08      	ldr	r4, [pc, #32]	; (ac8 <ConvertPressureTemperature+0xe0>)
     aa6:	47a0      	blx	r4
     aa8:	9b01      	ldr	r3, [sp, #4]
     aaa:	e9c3 0100 	strd	r0, r1, [r3]
}
     aae:	b009      	add	sp, #36	; 0x24
     ab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
     ab4:	f3af 8000 	nop.w
     ab8:	47ae147b 	.word	0x47ae147b
     abc:	3f847ae1 	.word	0x3f847ae1
     ac0:	20000458 	.word	0x20000458
     ac4:	000024e9 	.word	0x000024e9
     ac8:	00002545 	.word	0x00002545
     acc:	00000000 	.word	0x00000000

00000ad0 <paToFeetNOAA>:

double paToFeetNOAA(double pressureMbar) {
     ad0:	b538      	push	{r3, r4, r5, lr}

	double lower =(((double)(pressureMbar))/1013.25);
     ad2:	4c11      	ldr	r4, [pc, #68]	; (b18 <paToFeetNOAA+0x48>)
     ad4:	a30a      	add	r3, pc, #40	; (adr r3, b00 <paToFeetNOAA+0x30>)
     ad6:	e9d3 2300 	ldrd	r2, r3, [r3]
     ada:	47a0      	blx	r4
	double exponent = 0.190284;

	double altFeet = (1-pow(lower,exponent))*145366.45;
     adc:	a30a      	add	r3, pc, #40	; (adr r3, b08 <paToFeetNOAA+0x38>)
     ade:	e9d3 2300 	ldrd	r2, r3, [r3]
     ae2:	4d0e      	ldr	r5, [pc, #56]	; (b1c <paToFeetNOAA+0x4c>)
     ae4:	47a8      	blx	r5
     ae6:	4602      	mov	r2, r0
     ae8:	460b      	mov	r3, r1
     aea:	2000      	movs	r0, #0
     aec:	490c      	ldr	r1, [pc, #48]	; (b20 <paToFeetNOAA+0x50>)
     aee:	4d0d      	ldr	r5, [pc, #52]	; (b24 <paToFeetNOAA+0x54>)
     af0:	47a8      	blx	r5
     af2:	a307      	add	r3, pc, #28	; (adr r3, b10 <paToFeetNOAA+0x40>)
     af4:	e9d3 2300 	ldrd	r2, r3, [r3]
     af8:	47a0      	blx	r4
	return altFeet;

}
     afa:	bd38      	pop	{r3, r4, r5, pc}
     afc:	f3af 8000 	nop.w
     b00:	c9de8608 	.word	0xc9de8608
     b04:	3f502b74 	.word	0x3f502b74
     b08:	e279dd3c 	.word	0xe279dd3c
     b0c:	3fc85b39 	.word	0x3fc85b39
     b10:	9999999a 	.word	0x9999999a
     b14:	4101beb3 	.word	0x4101beb3
     b18:	00002545 	.word	0x00002545
     b1c:	0000108d 	.word	0x0000108d
     b20:	3ff00000 	.word	0x3ff00000
     b24:	000021dd 	.word	0x000021dd

00000b28 <readMS5803Coefficients>:



void readMS5803Coefficients() {
     b28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}

	for (u8_t coeff_num = 1; coeff_num < 7 ; ++coeff_num ) {
     b2c:	2401      	movs	r4, #1
     b2e:	e026      	b.n	b7e <readMS5803Coefficients+0x56>
		u8_t _cmd = MS5803_CMD_PROM_READ + ((coeff_num)*2);
     b30:	f104 0550 	add.w	r5, r4, #80	; 0x50
     b34:	006d      	lsls	r5, r5, #1
     b36:	b2ed      	uxtb	r5, r5
	PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     b38:	4f13      	ldr	r7, [pc, #76]	; (b88 <readMS5803Coefficients+0x60>)
     b3a:	f04f 0880 	mov.w	r8, #128	; 0x80
     b3e:	f8c7 8014 	str.w	r8, [r7, #20]
		pinLow(cs_baro);
		delay_us(600);
     b42:	f44f 7016 	mov.w	r0, #600	; 0x258
     b46:	4e11      	ldr	r6, [pc, #68]	; (b8c <readMS5803Coefficients+0x64>)
     b48:	47b0      	blx	r6
		spiDataOut(SPI0, _cmd);
     b4a:	4629      	mov	r1, r5
     b4c:	2000      	movs	r0, #0
     b4e:	4b10      	ldr	r3, [pc, #64]	; (b90 <readMS5803Coefficients+0x68>)
     b50:	4798      	blx	r3
		delay_us(600);
     b52:	f44f 7016 	mov.w	r0, #600	; 0x258
     b56:	47b0      	blx	r6
		u8_t _byte1 = spiDataIn(SPI0);
     b58:	2000      	movs	r0, #0
     b5a:	4d0e      	ldr	r5, [pc, #56]	; (b94 <readMS5803Coefficients+0x6c>)
     b5c:	47a8      	blx	r5
     b5e:	4681      	mov	r9, r0
		u8_t _byte2 = spiDataIn(SPI0);
     b60:	2000      	movs	r0, #0
     b62:	47a8      	blx	r5
     b64:	4605      	mov	r5, r0
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     b66:	f8c7 8018 	str.w	r8, [r7, #24]
		pinHigh(cs_baro);
		delay_us(600);
     b6a:	f44f 7016 	mov.w	r0, #600	; 0x258
     b6e:	47b0      	blx	r6

		coefficients_[coeff_num] = (_byte1 << 8) | _byte2;
     b70:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
     b74:	4b08      	ldr	r3, [pc, #32]	; (b98 <readMS5803Coefficients+0x70>)
     b76:	f823 5014 	strh.w	r5, [r3, r4, lsl #1]
	for (u8_t coeff_num = 1; coeff_num < 7 ; ++coeff_num ) {
     b7a:	3401      	adds	r4, #1
     b7c:	b2e4      	uxtb	r4, r4
     b7e:	2c06      	cmp	r4, #6
     b80:	d9d6      	bls.n	b30 <readMS5803Coefficients+0x8>
	}

}
     b82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
     b86:	bf00      	nop
     b88:	41008000 	.word	0x41008000
     b8c:	000004cd 	.word	0x000004cd
     b90:	00000f19 	.word	0x00000f19
     b94:	00000fd1 	.word	0x00000fd1
     b98:	20000458 	.word	0x20000458

00000b9c <initMS5803Barometer>:

void initMS5803Barometer() {
     b9c:	b538      	push	{r3, r4, r5, lr}
	PORT->Group[p.group].OUTCLR.reg = (1<<p.pin);
     b9e:	4c07      	ldr	r4, [pc, #28]	; (bbc <initMS5803Barometer+0x20>)
     ba0:	2580      	movs	r5, #128	; 0x80
     ba2:	6165      	str	r5, [r4, #20]


	pinLow(cs_baro);
	spiDataOut(SPI0, MS5803_CMD_RES);
     ba4:	211e      	movs	r1, #30
     ba6:	2000      	movs	r0, #0
     ba8:	4b05      	ldr	r3, [pc, #20]	; (bc0 <initMS5803Barometer+0x24>)
     baa:	4798      	blx	r3
	PORT->Group[p.group].OUTSET.reg = (1<<p.pin);
     bac:	61a5      	str	r5, [r4, #24]

	pinHigh(cs_baro);
	delay_ms(300);
     bae:	f44f 7096 	mov.w	r0, #300	; 0x12c
     bb2:	4b04      	ldr	r3, [pc, #16]	; (bc4 <initMS5803Barometer+0x28>)
     bb4:	4798      	blx	r3
	readMS5803Coefficients();
     bb6:	4b04      	ldr	r3, [pc, #16]	; (bc8 <initMS5803Barometer+0x2c>)
     bb8:	4798      	blx	r3
     bba:	bd38      	pop	{r3, r4, r5, pc}
     bbc:	41008000 	.word	0x41008000
     bc0:	00000f19 	.word	0x00000f19
     bc4:	0000049d 	.word	0x0000049d
     bc8:	00000b29 	.word	0x00000b29

00000bcc <SPI0init>:
 * Created: 2/6/2021 4:42:57 PM
 *  Author: Desktop
 */
#include "util.h"

void SPI0init(u8_t id) {
     bcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
     bd0:	4604      	mov	r4, r0

    enable_clock_generator(1, GCLK_GENCTRL_SRC_DFLL, 12);
     bd2:	220c      	movs	r2, #12
     bd4:	2106      	movs	r1, #6
     bd6:	2001      	movs	r0, #1
     bd8:	4b5e      	ldr	r3, [pc, #376]	; (d54 <SPI0init+0x188>)
     bda:	4798      	blx	r3
    connect_gclk_to_peripheral(1, 7);
     bdc:	2107      	movs	r1, #7
     bde:	2001      	movs	r0, #1
     be0:	4b5d      	ldr	r3, [pc, #372]	; (d58 <SPI0init+0x18c>)
     be2:	4798      	blx	r3

    MCLK->APBAMASK.reg |= MCLK_APBAMASK_SERCOM0;
     be4:	4a5d      	ldr	r2, [pc, #372]	; (d5c <SPI0init+0x190>)
     be6:	6953      	ldr	r3, [r2, #20]
     be8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
     bec:	6153      	str	r3, [r2, #20]
u8_t spiDataTransfer(SercomId id, u8_t data);
void spiDataOut(SercomId id, u8_t data);
u8_t spiDataIn(SercomId id);

inline static Sercom* sercom(SercomId id) {
    if ( id == 0) {
     bee:	b164      	cbz	r4, c0a <SPI0init+0x3e>
        return (Sercom*) (0x40003000U);
    } else if ( id == 1) {
     bf0:	2c01      	cmp	r4, #1
     bf2:	d010      	beq.n	c16 <SPI0init+0x4a>
        return (Sercom*) (0x40003400U);
    } else if ( id == 2) {
     bf4:	2c02      	cmp	r4, #2
     bf6:	d011      	beq.n	c1c <SPI0init+0x50>
        return (Sercom*) (0x41012000U);
    } else if ( id == 3) {
     bf8:	2c03      	cmp	r4, #3
     bfa:	d012      	beq.n	c22 <SPI0init+0x56>
        return (Sercom*) (0x41014000U);
    } else if ( id == 4) {
     bfc:	2c04      	cmp	r4, #4
     bfe:	d013      	beq.n	c28 <SPI0init+0x5c>
        return (Sercom*) (0x43000000U);
    } else if ( id == 5) {
     c00:	2c05      	cmp	r4, #5
     c02:	d104      	bne.n	c0e <SPI0init+0x42>
        return (Sercom*) (0x43000400U);
     c04:	f8df a15c 	ldr.w	sl, [pc, #348]	; d64 <SPI0init+0x198>
     c08:	e001      	b.n	c0e <SPI0init+0x42>
        return (Sercom*) (0x40003000U);
     c0a:	f8df a154 	ldr.w	sl, [pc, #340]	; d60 <SPI0init+0x194>


    sercom(id)->SPI.CTRLA.reg = SERCOM_SPI_CTRLA_SWRST;
     c0e:	2301      	movs	r3, #1
     c10:	f8ca 3000 	str.w	r3, [sl]
    while(sercom(id)->SPI.CTRLA.reg & SERCOM_SPI_CTRLA_SWRST);
     c14:	e010      	b.n	c38 <SPI0init+0x6c>
        return (Sercom*) (0x40003400U);
     c16:	f8df a150 	ldr.w	sl, [pc, #336]	; d68 <SPI0init+0x19c>
     c1a:	e7f8      	b.n	c0e <SPI0init+0x42>
        return (Sercom*) (0x41012000U);
     c1c:	f8df a14c 	ldr.w	sl, [pc, #332]	; d6c <SPI0init+0x1a0>
     c20:	e7f5      	b.n	c0e <SPI0init+0x42>
        return (Sercom*) (0x41014000U);
     c22:	f8df a14c 	ldr.w	sl, [pc, #332]	; d70 <SPI0init+0x1a4>
     c26:	e7f2      	b.n	c0e <SPI0init+0x42>
        return (Sercom*) (0x43000000U);
     c28:	f04f 4a86 	mov.w	sl, #1124073472	; 0x43000000
     c2c:	e7ef      	b.n	c0e <SPI0init+0x42>
        return (Sercom*) (0x40003000U);
     c2e:	4e4c      	ldr	r6, [pc, #304]	; (d60 <SPI0init+0x194>)
     c30:	6833      	ldr	r3, [r6, #0]
     c32:	f013 0f01 	tst.w	r3, #1
     c36:	d016      	beq.n	c66 <SPI0init+0x9a>
    if ( id == 0) {
     c38:	2c00      	cmp	r4, #0
     c3a:	d0f8      	beq.n	c2e <SPI0init+0x62>
    } else if ( id == 1) {
     c3c:	2c01      	cmp	r4, #1
     c3e:	d009      	beq.n	c54 <SPI0init+0x88>
    } else if ( id == 2) {
     c40:	2c02      	cmp	r4, #2
     c42:	d009      	beq.n	c58 <SPI0init+0x8c>
    } else if ( id == 3) {
     c44:	2c03      	cmp	r4, #3
     c46:	d009      	beq.n	c5c <SPI0init+0x90>
    } else if ( id == 4) {
     c48:	2c04      	cmp	r4, #4
     c4a:	d009      	beq.n	c60 <SPI0init+0x94>
    } else if ( id == 5) {
     c4c:	2c05      	cmp	r4, #5
     c4e:	d1ef      	bne.n	c30 <SPI0init+0x64>
        return (Sercom*) (0x43000400U);
     c50:	4e44      	ldr	r6, [pc, #272]	; (d64 <SPI0init+0x198>)
     c52:	e7ed      	b.n	c30 <SPI0init+0x64>
        return (Sercom*) (0x40003400U);
     c54:	4e44      	ldr	r6, [pc, #272]	; (d68 <SPI0init+0x19c>)
     c56:	e7eb      	b.n	c30 <SPI0init+0x64>
        return (Sercom*) (0x41012000U);
     c58:	4e44      	ldr	r6, [pc, #272]	; (d6c <SPI0init+0x1a0>)
     c5a:	e7e9      	b.n	c30 <SPI0init+0x64>
        return (Sercom*) (0x41014000U);
     c5c:	4e44      	ldr	r6, [pc, #272]	; (d70 <SPI0init+0x1a4>)
     c5e:	e7e7      	b.n	c30 <SPI0init+0x64>
        return (Sercom*) (0x43000000U);
     c60:	f04f 4686 	mov.w	r6, #1124073472	; 0x43000000
     c64:	e7e4      	b.n	c30 <SPI0init+0x64>
    if ( id == 0) {
     c66:	b164      	cbz	r4, c82 <SPI0init+0xb6>
    } else if ( id == 1) {
     c68:	2c01      	cmp	r4, #1
     c6a:	d01e      	beq.n	caa <SPI0init+0xde>
    } else if ( id == 2) {
     c6c:	2c02      	cmp	r4, #2
     c6e:	d01f      	beq.n	cb0 <SPI0init+0xe4>
    } else if ( id == 3) {
     c70:	2c03      	cmp	r4, #3
     c72:	d020      	beq.n	cb6 <SPI0init+0xea>
    } else if ( id == 4) {
     c74:	2c04      	cmp	r4, #4
     c76:	d021      	beq.n	cbc <SPI0init+0xf0>
    } else if ( id == 5) {
     c78:	2c05      	cmp	r4, #5
     c7a:	d104      	bne.n	c86 <SPI0init+0xba>
        return (Sercom*) (0x43000400U);
     c7c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; d64 <SPI0init+0x198>
     c80:	e001      	b.n	c86 <SPI0init+0xba>
        return (Sercom*) (0x40003000U);
     c82:	f8df 90dc 	ldr.w	r9, [pc, #220]	; d60 <SPI0init+0x194>

    sercom(id)->SPI.CTRLB.reg
        = SERCOM_SPI_CTRLB_RXEN;
     c86:	f44f 3300 	mov.w	r3, #131072	; 0x20000
     c8a:	f8c9 3004 	str.w	r3, [r9, #4]
    if ( id == 0) {
     c8e:	b1c4      	cbz	r4, cc2 <SPI0init+0xf6>
    } else if ( id == 1) {
     c90:	2c01      	cmp	r4, #1
     c92:	d028      	beq.n	ce6 <SPI0init+0x11a>
    } else if ( id == 2) {
     c94:	2c02      	cmp	r4, #2
     c96:	d029      	beq.n	cec <SPI0init+0x120>
    } else if ( id == 3) {
     c98:	2c03      	cmp	r4, #3
     c9a:	d02a      	beq.n	cf2 <SPI0init+0x126>
    } else if ( id == 4) {
     c9c:	2c04      	cmp	r4, #4
     c9e:	d02b      	beq.n	cf8 <SPI0init+0x12c>
    } else if ( id == 5) {
     ca0:	2c05      	cmp	r4, #5
     ca2:	d110      	bne.n	cc6 <SPI0init+0xfa>
        return (Sercom*) (0x43000400U);
     ca4:	f8df 80bc 	ldr.w	r8, [pc, #188]	; d64 <SPI0init+0x198>
     ca8:	e00d      	b.n	cc6 <SPI0init+0xfa>
        return (Sercom*) (0x40003400U);
     caa:	f8df 90bc 	ldr.w	r9, [pc, #188]	; d68 <SPI0init+0x19c>
     cae:	e7ea      	b.n	c86 <SPI0init+0xba>
        return (Sercom*) (0x41012000U);
     cb0:	f8df 90b8 	ldr.w	r9, [pc, #184]	; d6c <SPI0init+0x1a0>
     cb4:	e7e7      	b.n	c86 <SPI0init+0xba>
        return (Sercom*) (0x41014000U);
     cb6:	f8df 90b8 	ldr.w	r9, [pc, #184]	; d70 <SPI0init+0x1a4>
     cba:	e7e4      	b.n	c86 <SPI0init+0xba>
        return (Sercom*) (0x43000000U);
     cbc:	f04f 4986 	mov.w	r9, #1124073472	; 0x43000000
     cc0:	e7e1      	b.n	c86 <SPI0init+0xba>
        return (Sercom*) (0x40003000U);
     cc2:	f8df 809c 	ldr.w	r8, [pc, #156]	; d60 <SPI0init+0x194>

    sercom(id)->SPI.BAUD.reg = 0x05;
     cc6:	2305      	movs	r3, #5
     cc8:	f888 300c 	strb.w	r3, [r8, #12]
    if ( id == 0) {
     ccc:	b1bc      	cbz	r4, cfe <SPI0init+0x132>
    } else if ( id == 1) {
     cce:	2c01      	cmp	r4, #1
     cd0:	d019      	beq.n	d06 <SPI0init+0x13a>
    } else if ( id == 2) {
     cd2:	2c02      	cmp	r4, #2
     cd4:	d019      	beq.n	d0a <SPI0init+0x13e>
    } else if ( id == 3) {
     cd6:	2c03      	cmp	r4, #3
     cd8:	d019      	beq.n	d0e <SPI0init+0x142>
    } else if ( id == 4) {
     cda:	2c04      	cmp	r4, #4
     cdc:	d019      	beq.n	d12 <SPI0init+0x146>
    } else if ( id == 5) {
     cde:	429c      	cmp	r4, r3
     ce0:	d10e      	bne.n	d00 <SPI0init+0x134>
        return (Sercom*) (0x43000400U);
     ce2:	4f20      	ldr	r7, [pc, #128]	; (d64 <SPI0init+0x198>)
     ce4:	e00c      	b.n	d00 <SPI0init+0x134>
        return (Sercom*) (0x40003400U);
     ce6:	f8df 8080 	ldr.w	r8, [pc, #128]	; d68 <SPI0init+0x19c>
     cea:	e7ec      	b.n	cc6 <SPI0init+0xfa>
        return (Sercom*) (0x41012000U);
     cec:	f8df 807c 	ldr.w	r8, [pc, #124]	; d6c <SPI0init+0x1a0>
     cf0:	e7e9      	b.n	cc6 <SPI0init+0xfa>
        return (Sercom*) (0x41014000U);
     cf2:	f8df 807c 	ldr.w	r8, [pc, #124]	; d70 <SPI0init+0x1a4>
     cf6:	e7e6      	b.n	cc6 <SPI0init+0xfa>
        return (Sercom*) (0x43000000U);
     cf8:	f04f 4886 	mov.w	r8, #1124073472	; 0x43000000
     cfc:	e7e3      	b.n	cc6 <SPI0init+0xfa>
        return (Sercom*) (0x40003000U);
     cfe:	4f18      	ldr	r7, [pc, #96]	; (d60 <SPI0init+0x194>)

    sercom(id)->SPI.CTRLA.reg
        = SERCOM_SPI_CTRLA_ENABLE
     d00:	4b1c      	ldr	r3, [pc, #112]	; (d74 <SPI0init+0x1a8>)
     d02:	603b      	str	r3, [r7, #0]
          | SERCOM_SPI_CTRLA_CPOL
          | SERCOM_SPI_CTRLA_CPHA;
          //| (0 ? SERCOM_SPI_CTRLA_CPOL : 0)
          //| (0 ? SERCOM_SPI_CTRLA_CPHA : 0);

    while  (sercom(id)->SPI.SYNCBUSY.bit.CTRLB);
     d04:	e00d      	b.n	d22 <SPI0init+0x156>
        return (Sercom*) (0x40003400U);
     d06:	4f18      	ldr	r7, [pc, #96]	; (d68 <SPI0init+0x19c>)
     d08:	e7fa      	b.n	d00 <SPI0init+0x134>
        return (Sercom*) (0x41012000U);
     d0a:	4f18      	ldr	r7, [pc, #96]	; (d6c <SPI0init+0x1a0>)
     d0c:	e7f8      	b.n	d00 <SPI0init+0x134>
        return (Sercom*) (0x41014000U);
     d0e:	4f18      	ldr	r7, [pc, #96]	; (d70 <SPI0init+0x1a4>)
     d10:	e7f6      	b.n	d00 <SPI0init+0x134>
        return (Sercom*) (0x43000000U);
     d12:	f04f 4786 	mov.w	r7, #1124073472	; 0x43000000
     d16:	e7f3      	b.n	d00 <SPI0init+0x134>
        return (Sercom*) (0x40003000U);
     d18:	4d11      	ldr	r5, [pc, #68]	; (d60 <SPI0init+0x194>)
     d1a:	69eb      	ldr	r3, [r5, #28]
     d1c:	f013 0f04 	tst.w	r3, #4
     d20:	d016      	beq.n	d50 <SPI0init+0x184>
    if ( id == 0) {
     d22:	2c00      	cmp	r4, #0
     d24:	d0f8      	beq.n	d18 <SPI0init+0x14c>
    } else if ( id == 1) {
     d26:	2c01      	cmp	r4, #1
     d28:	d009      	beq.n	d3e <SPI0init+0x172>
    } else if ( id == 2) {
     d2a:	2c02      	cmp	r4, #2
     d2c:	d009      	beq.n	d42 <SPI0init+0x176>
    } else if ( id == 3) {
     d2e:	2c03      	cmp	r4, #3
     d30:	d009      	beq.n	d46 <SPI0init+0x17a>
    } else if ( id == 4) {
     d32:	2c04      	cmp	r4, #4
     d34:	d009      	beq.n	d4a <SPI0init+0x17e>
    } else if ( id == 5) {
     d36:	2c05      	cmp	r4, #5
     d38:	d1ef      	bne.n	d1a <SPI0init+0x14e>
        return (Sercom*) (0x43000400U);
     d3a:	4d0a      	ldr	r5, [pc, #40]	; (d64 <SPI0init+0x198>)
     d3c:	e7ed      	b.n	d1a <SPI0init+0x14e>
        return (Sercom*) (0x40003400U);
     d3e:	4d0a      	ldr	r5, [pc, #40]	; (d68 <SPI0init+0x19c>)
     d40:	e7eb      	b.n	d1a <SPI0init+0x14e>
        return (Sercom*) (0x41012000U);
     d42:	4d0a      	ldr	r5, [pc, #40]	; (d6c <SPI0init+0x1a0>)
     d44:	e7e9      	b.n	d1a <SPI0init+0x14e>
        return (Sercom*) (0x41014000U);
     d46:	4d0a      	ldr	r5, [pc, #40]	; (d70 <SPI0init+0x1a4>)
     d48:	e7e7      	b.n	d1a <SPI0init+0x14e>
        return (Sercom*) (0x43000000U);
     d4a:	f04f 4586 	mov.w	r5, #1124073472	; 0x43000000
     d4e:	e7e4      	b.n	d1a <SPI0init+0x14e>

}
     d50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
     d54:	000003d9 	.word	0x000003d9
     d58:	000003b9 	.word	0x000003b9
     d5c:	40000800 	.word	0x40000800
     d60:	40003000 	.word	0x40003000
     d64:	43000400 	.word	0x43000400
     d68:	40003400 	.word	0x40003400
     d6c:	41012000 	.word	0x41012000
     d70:	41014000 	.word	0x41014000
     d74:	3020000e 	.word	0x3020000e

00000d78 <SPI5init>:

void SPI5init(u8_t id) {
     d78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
     d7c:	4604      	mov	r4, r0

    //enable_clock_generator(1, GCLK_GENCTRL_SRC_DFLL, 1);
    connect_gclk_to_peripheral(1, 35);
     d7e:	2123      	movs	r1, #35	; 0x23
     d80:	2001      	movs	r0, #1
     d82:	4b5d      	ldr	r3, [pc, #372]	; (ef8 <SPI5init+0x180>)
     d84:	4798      	blx	r3
    MCLK->APBDMASK.reg |= MCLK_APBDMASK_SERCOM5;
     d86:	4a5d      	ldr	r2, [pc, #372]	; (efc <SPI5init+0x184>)
     d88:	6a13      	ldr	r3, [r2, #32]
     d8a:	f043 0302 	orr.w	r3, r3, #2
     d8e:	6213      	str	r3, [r2, #32]
    if ( id == 0) {
     d90:	b164      	cbz	r4, dac <SPI5init+0x34>
    } else if ( id == 1) {
     d92:	2c01      	cmp	r4, #1
     d94:	d010      	beq.n	db8 <SPI5init+0x40>
    } else if ( id == 2) {
     d96:	2c02      	cmp	r4, #2
     d98:	d011      	beq.n	dbe <SPI5init+0x46>
    } else if ( id == 3) {
     d9a:	2c03      	cmp	r4, #3
     d9c:	d012      	beq.n	dc4 <SPI5init+0x4c>
    } else if ( id == 4) {
     d9e:	2c04      	cmp	r4, #4
     da0:	d013      	beq.n	dca <SPI5init+0x52>
    } else if ( id == 5) {
     da2:	2c05      	cmp	r4, #5
     da4:	d104      	bne.n	db0 <SPI5init+0x38>
        return (Sercom*) (0x43000400U);
     da6:	f8df a15c 	ldr.w	sl, [pc, #348]	; f04 <SPI5init+0x18c>
     daa:	e001      	b.n	db0 <SPI5init+0x38>
        return (Sercom*) (0x40003000U);
     dac:	f8df a150 	ldr.w	sl, [pc, #336]	; f00 <SPI5init+0x188>




    sercom(id)->SPI.CTRLA.reg = SERCOM_SPI_CTRLA_SWRST;
     db0:	2301      	movs	r3, #1
     db2:	f8ca 3000 	str.w	r3, [sl]
    while(sercom(id)->SPI.CTRLA.reg & SERCOM_SPI_CTRLA_SWRST);
     db6:	e010      	b.n	dda <SPI5init+0x62>
        return (Sercom*) (0x40003400U);
     db8:	f8df a14c 	ldr.w	sl, [pc, #332]	; f08 <SPI5init+0x190>
     dbc:	e7f8      	b.n	db0 <SPI5init+0x38>
        return (Sercom*) (0x41012000U);
     dbe:	f8df a14c 	ldr.w	sl, [pc, #332]	; f0c <SPI5init+0x194>
     dc2:	e7f5      	b.n	db0 <SPI5init+0x38>
        return (Sercom*) (0x41014000U);
     dc4:	f8df a148 	ldr.w	sl, [pc, #328]	; f10 <SPI5init+0x198>
     dc8:	e7f2      	b.n	db0 <SPI5init+0x38>
        return (Sercom*) (0x43000000U);
     dca:	f04f 4a86 	mov.w	sl, #1124073472	; 0x43000000
     dce:	e7ef      	b.n	db0 <SPI5init+0x38>
        return (Sercom*) (0x40003000U);
     dd0:	4e4b      	ldr	r6, [pc, #300]	; (f00 <SPI5init+0x188>)
     dd2:	6833      	ldr	r3, [r6, #0]
     dd4:	f013 0f01 	tst.w	r3, #1
     dd8:	d016      	beq.n	e08 <SPI5init+0x90>
    if ( id == 0) {
     dda:	2c00      	cmp	r4, #0
     ddc:	d0f8      	beq.n	dd0 <SPI5init+0x58>
    } else if ( id == 1) {
     dde:	2c01      	cmp	r4, #1
     de0:	d009      	beq.n	df6 <SPI5init+0x7e>
    } else if ( id == 2) {
     de2:	2c02      	cmp	r4, #2
     de4:	d009      	beq.n	dfa <SPI5init+0x82>
    } else if ( id == 3) {
     de6:	2c03      	cmp	r4, #3
     de8:	d009      	beq.n	dfe <SPI5init+0x86>
    } else if ( id == 4) {
     dea:	2c04      	cmp	r4, #4
     dec:	d009      	beq.n	e02 <SPI5init+0x8a>
    } else if ( id == 5) {
     dee:	2c05      	cmp	r4, #5
     df0:	d1ef      	bne.n	dd2 <SPI5init+0x5a>
        return (Sercom*) (0x43000400U);
     df2:	4e44      	ldr	r6, [pc, #272]	; (f04 <SPI5init+0x18c>)
     df4:	e7ed      	b.n	dd2 <SPI5init+0x5a>
        return (Sercom*) (0x40003400U);
     df6:	4e44      	ldr	r6, [pc, #272]	; (f08 <SPI5init+0x190>)
     df8:	e7eb      	b.n	dd2 <SPI5init+0x5a>
        return (Sercom*) (0x41012000U);
     dfa:	4e44      	ldr	r6, [pc, #272]	; (f0c <SPI5init+0x194>)
     dfc:	e7e9      	b.n	dd2 <SPI5init+0x5a>
        return (Sercom*) (0x41014000U);
     dfe:	4e44      	ldr	r6, [pc, #272]	; (f10 <SPI5init+0x198>)
     e00:	e7e7      	b.n	dd2 <SPI5init+0x5a>
        return (Sercom*) (0x43000000U);
     e02:	f04f 4686 	mov.w	r6, #1124073472	; 0x43000000
     e06:	e7e4      	b.n	dd2 <SPI5init+0x5a>
    if ( id == 0) {
     e08:	b164      	cbz	r4, e24 <SPI5init+0xac>
    } else if ( id == 1) {
     e0a:	2c01      	cmp	r4, #1
     e0c:	d01e      	beq.n	e4c <SPI5init+0xd4>
    } else if ( id == 2) {
     e0e:	2c02      	cmp	r4, #2
     e10:	d01f      	beq.n	e52 <SPI5init+0xda>
    } else if ( id == 3) {
     e12:	2c03      	cmp	r4, #3
     e14:	d020      	beq.n	e58 <SPI5init+0xe0>
    } else if ( id == 4) {
     e16:	2c04      	cmp	r4, #4
     e18:	d021      	beq.n	e5e <SPI5init+0xe6>
    } else if ( id == 5) {
     e1a:	2c05      	cmp	r4, #5
     e1c:	d104      	bne.n	e28 <SPI5init+0xb0>
        return (Sercom*) (0x43000400U);
     e1e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; f04 <SPI5init+0x18c>
     e22:	e001      	b.n	e28 <SPI5init+0xb0>
        return (Sercom*) (0x40003000U);
     e24:	f8df 90d8 	ldr.w	r9, [pc, #216]	; f00 <SPI5init+0x188>

    sercom(id)->SPI.CTRLB.reg
        = SERCOM_SPI_CTRLB_RXEN;
     e28:	f44f 3300 	mov.w	r3, #131072	; 0x20000
     e2c:	f8c9 3004 	str.w	r3, [r9, #4]
    if ( id == 0) {
     e30:	b1c4      	cbz	r4, e64 <SPI5init+0xec>
    } else if ( id == 1) {
     e32:	2c01      	cmp	r4, #1
     e34:	d028      	beq.n	e88 <SPI5init+0x110>
    } else if ( id == 2) {
     e36:	2c02      	cmp	r4, #2
     e38:	d029      	beq.n	e8e <SPI5init+0x116>
    } else if ( id == 3) {
     e3a:	2c03      	cmp	r4, #3
     e3c:	d02a      	beq.n	e94 <SPI5init+0x11c>
    } else if ( id == 4) {
     e3e:	2c04      	cmp	r4, #4
     e40:	d02b      	beq.n	e9a <SPI5init+0x122>
    } else if ( id == 5) {
     e42:	2c05      	cmp	r4, #5
     e44:	d110      	bne.n	e68 <SPI5init+0xf0>
        return (Sercom*) (0x43000400U);
     e46:	f8df 80bc 	ldr.w	r8, [pc, #188]	; f04 <SPI5init+0x18c>
     e4a:	e00d      	b.n	e68 <SPI5init+0xf0>
        return (Sercom*) (0x40003400U);
     e4c:	f8df 90b8 	ldr.w	r9, [pc, #184]	; f08 <SPI5init+0x190>
     e50:	e7ea      	b.n	e28 <SPI5init+0xb0>
        return (Sercom*) (0x41012000U);
     e52:	f8df 90b8 	ldr.w	r9, [pc, #184]	; f0c <SPI5init+0x194>
     e56:	e7e7      	b.n	e28 <SPI5init+0xb0>
        return (Sercom*) (0x41014000U);
     e58:	f8df 90b4 	ldr.w	r9, [pc, #180]	; f10 <SPI5init+0x198>
     e5c:	e7e4      	b.n	e28 <SPI5init+0xb0>
        return (Sercom*) (0x43000000U);
     e5e:	f04f 4986 	mov.w	r9, #1124073472	; 0x43000000
     e62:	e7e1      	b.n	e28 <SPI5init+0xb0>
        return (Sercom*) (0x40003000U);
     e64:	f8df 8098 	ldr.w	r8, [pc, #152]	; f00 <SPI5init+0x188>

    sercom(id)->SPI.BAUD.reg = 0x05;
     e68:	2305      	movs	r3, #5
     e6a:	f888 300c 	strb.w	r3, [r8, #12]
    if ( id == 0) {
     e6e:	b1bc      	cbz	r4, ea0 <SPI5init+0x128>
    } else if ( id == 1) {
     e70:	2c01      	cmp	r4, #1
     e72:	d019      	beq.n	ea8 <SPI5init+0x130>
    } else if ( id == 2) {
     e74:	2c02      	cmp	r4, #2
     e76:	d019      	beq.n	eac <SPI5init+0x134>
    } else if ( id == 3) {
     e78:	2c03      	cmp	r4, #3
     e7a:	d019      	beq.n	eb0 <SPI5init+0x138>
    } else if ( id == 4) {
     e7c:	2c04      	cmp	r4, #4
     e7e:	d019      	beq.n	eb4 <SPI5init+0x13c>
    } else if ( id == 5) {
     e80:	429c      	cmp	r4, r3
     e82:	d10e      	bne.n	ea2 <SPI5init+0x12a>
        return (Sercom*) (0x43000400U);
     e84:	4f1f      	ldr	r7, [pc, #124]	; (f04 <SPI5init+0x18c>)
     e86:	e00c      	b.n	ea2 <SPI5init+0x12a>
        return (Sercom*) (0x40003400U);
     e88:	f8df 807c 	ldr.w	r8, [pc, #124]	; f08 <SPI5init+0x190>
     e8c:	e7ec      	b.n	e68 <SPI5init+0xf0>
        return (Sercom*) (0x41012000U);
     e8e:	f8df 807c 	ldr.w	r8, [pc, #124]	; f0c <SPI5init+0x194>
     e92:	e7e9      	b.n	e68 <SPI5init+0xf0>
        return (Sercom*) (0x41014000U);
     e94:	f8df 8078 	ldr.w	r8, [pc, #120]	; f10 <SPI5init+0x198>
     e98:	e7e6      	b.n	e68 <SPI5init+0xf0>
        return (Sercom*) (0x43000000U);
     e9a:	f04f 4886 	mov.w	r8, #1124073472	; 0x43000000
     e9e:	e7e3      	b.n	e68 <SPI5init+0xf0>
        return (Sercom*) (0x40003000U);
     ea0:	4f17      	ldr	r7, [pc, #92]	; (f00 <SPI5init+0x188>)

    sercom(id)->SPI.CTRLA.reg
        = SERCOM_SPI_CTRLA_ENABLE
     ea2:	4b1c      	ldr	r3, [pc, #112]	; (f14 <SPI5init+0x19c>)
     ea4:	603b      	str	r3, [r7, #0]
          | SERCOM_SPI_CTRLA_DOPO(0x0)
          //| SERCOM_SPI_CTRLA_CPOL
          //| SERCOM_SPI_CTRLA_CPHA;
          | (0 ? SERCOM_SPI_CTRLA_CPOL : 0)
          | (0 ? SERCOM_SPI_CTRLA_CPHA : 0);
    while  (sercom(id)->SPI.SYNCBUSY.bit.CTRLB);
     ea6:	e00d      	b.n	ec4 <SPI5init+0x14c>
        return (Sercom*) (0x40003400U);
     ea8:	4f17      	ldr	r7, [pc, #92]	; (f08 <SPI5init+0x190>)
     eaa:	e7fa      	b.n	ea2 <SPI5init+0x12a>
        return (Sercom*) (0x41012000U);
     eac:	4f17      	ldr	r7, [pc, #92]	; (f0c <SPI5init+0x194>)
     eae:	e7f8      	b.n	ea2 <SPI5init+0x12a>
        return (Sercom*) (0x41014000U);
     eb0:	4f17      	ldr	r7, [pc, #92]	; (f10 <SPI5init+0x198>)
     eb2:	e7f6      	b.n	ea2 <SPI5init+0x12a>
        return (Sercom*) (0x43000000U);
     eb4:	f04f 4786 	mov.w	r7, #1124073472	; 0x43000000
     eb8:	e7f3      	b.n	ea2 <SPI5init+0x12a>
        return (Sercom*) (0x40003000U);
     eba:	4d11      	ldr	r5, [pc, #68]	; (f00 <SPI5init+0x188>)
     ebc:	69eb      	ldr	r3, [r5, #28]
     ebe:	f013 0f04 	tst.w	r3, #4
     ec2:	d016      	beq.n	ef2 <SPI5init+0x17a>
    if ( id == 0) {
     ec4:	2c00      	cmp	r4, #0
     ec6:	d0f8      	beq.n	eba <SPI5init+0x142>
    } else if ( id == 1) {
     ec8:	2c01      	cmp	r4, #1
     eca:	d009      	beq.n	ee0 <SPI5init+0x168>
    } else if ( id == 2) {
     ecc:	2c02      	cmp	r4, #2
     ece:	d009      	beq.n	ee4 <SPI5init+0x16c>
    } else if ( id == 3) {
     ed0:	2c03      	cmp	r4, #3
     ed2:	d009      	beq.n	ee8 <SPI5init+0x170>
    } else if ( id == 4) {
     ed4:	2c04      	cmp	r4, #4
     ed6:	d009      	beq.n	eec <SPI5init+0x174>
    } else if ( id == 5) {
     ed8:	2c05      	cmp	r4, #5
     eda:	d1ef      	bne.n	ebc <SPI5init+0x144>
        return (Sercom*) (0x43000400U);
     edc:	4d09      	ldr	r5, [pc, #36]	; (f04 <SPI5init+0x18c>)
     ede:	e7ed      	b.n	ebc <SPI5init+0x144>
        return (Sercom*) (0x40003400U);
     ee0:	4d09      	ldr	r5, [pc, #36]	; (f08 <SPI5init+0x190>)
     ee2:	e7eb      	b.n	ebc <SPI5init+0x144>
        return (Sercom*) (0x41012000U);
     ee4:	4d09      	ldr	r5, [pc, #36]	; (f0c <SPI5init+0x194>)
     ee6:	e7e9      	b.n	ebc <SPI5init+0x144>
        return (Sercom*) (0x41014000U);
     ee8:	4d09      	ldr	r5, [pc, #36]	; (f10 <SPI5init+0x198>)
     eea:	e7e7      	b.n	ebc <SPI5init+0x144>
        return (Sercom*) (0x43000000U);
     eec:	f04f 4586 	mov.w	r5, #1124073472	; 0x43000000
     ef0:	e7e4      	b.n	ebc <SPI5init+0x144>

}
     ef2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
     ef6:	bf00      	nop
     ef8:	000003b9 	.word	0x000003b9
     efc:	40000800 	.word	0x40000800
     f00:	40003000 	.word	0x40003000
     f04:	43000400 	.word	0x43000400
     f08:	40003400 	.word	0x40003400
     f0c:	41012000 	.word	0x41012000
     f10:	41014000 	.word	0x41014000
     f14:	0030000e 	.word	0x0030000e

00000f18 <spiDataOut>:
    sercom(id)->SPI.DATA.reg = data;
    while(sercom(id)->SPI.INTFLAG.bit.RXC == 0);
    return sercom(id)->SPI.DATA.reg;
}

void spiDataOut(SercomId id, u8_t data) {
     f18:	b430      	push	{r4, r5}
    if ( id == 0) {
     f1a:	4603      	mov	r3, r0
     f1c:	b158      	cbz	r0, f36 <spiDataOut+0x1e>
    } else if ( id == 1) {
     f1e:	2801      	cmp	r0, #1
     f20:	d00c      	beq.n	f3c <spiDataOut+0x24>
    } else if ( id == 2) {
     f22:	2802      	cmp	r0, #2
     f24:	d00c      	beq.n	f40 <spiDataOut+0x28>
    } else if ( id == 3) {
     f26:	2803      	cmp	r0, #3
     f28:	d00c      	beq.n	f44 <spiDataOut+0x2c>
    } else if ( id == 4) {
     f2a:	2804      	cmp	r0, #4
     f2c:	d00c      	beq.n	f48 <spiDataOut+0x30>
    } else if ( id == 5) {
     f2e:	2805      	cmp	r0, #5
     f30:	d102      	bne.n	f38 <spiDataOut+0x20>
        return (Sercom*) (0x43000400U);
     f32:	4a22      	ldr	r2, [pc, #136]	; (fbc <spiDataOut+0xa4>)
     f34:	e000      	b.n	f38 <spiDataOut+0x20>
        return (Sercom*) (0x40003000U);
     f36:	4a22      	ldr	r2, [pc, #136]	; (fc0 <spiDataOut+0xa8>)
    sercom(id)->SPI.DATA.reg = data;
     f38:	6291      	str	r1, [r2, #40]	; 0x28
    while(sercom(id)->SPI.INTFLAG.bit.RXC == 0);
     f3a:	e00d      	b.n	f58 <spiDataOut+0x40>
        return (Sercom*) (0x40003400U);
     f3c:	4a21      	ldr	r2, [pc, #132]	; (fc4 <spiDataOut+0xac>)
     f3e:	e7fb      	b.n	f38 <spiDataOut+0x20>
        return (Sercom*) (0x41012000U);
     f40:	4a21      	ldr	r2, [pc, #132]	; (fc8 <spiDataOut+0xb0>)
     f42:	e7f9      	b.n	f38 <spiDataOut+0x20>
        return (Sercom*) (0x41014000U);
     f44:	4a21      	ldr	r2, [pc, #132]	; (fcc <spiDataOut+0xb4>)
     f46:	e7f7      	b.n	f38 <spiDataOut+0x20>
        return (Sercom*) (0x43000000U);
     f48:	f04f 4286 	mov.w	r2, #1124073472	; 0x43000000
     f4c:	e7f4      	b.n	f38 <spiDataOut+0x20>
        return (Sercom*) (0x40003000U);
     f4e:	4c1c      	ldr	r4, [pc, #112]	; (fc0 <spiDataOut+0xa8>)
     f50:	7e22      	ldrb	r2, [r4, #24]
     f52:	f012 0f04 	tst.w	r2, #4
     f56:	d116      	bne.n	f86 <spiDataOut+0x6e>
    if ( id == 0) {
     f58:	2b00      	cmp	r3, #0
     f5a:	d0f8      	beq.n	f4e <spiDataOut+0x36>
    } else if ( id == 1) {
     f5c:	2b01      	cmp	r3, #1
     f5e:	d009      	beq.n	f74 <spiDataOut+0x5c>
    } else if ( id == 2) {
     f60:	2b02      	cmp	r3, #2
     f62:	d009      	beq.n	f78 <spiDataOut+0x60>
    } else if ( id == 3) {
     f64:	2b03      	cmp	r3, #3
     f66:	d009      	beq.n	f7c <spiDataOut+0x64>
    } else if ( id == 4) {
     f68:	2b04      	cmp	r3, #4
     f6a:	d009      	beq.n	f80 <spiDataOut+0x68>
    } else if ( id == 5) {
     f6c:	2b05      	cmp	r3, #5
     f6e:	d1ef      	bne.n	f50 <spiDataOut+0x38>
        return (Sercom*) (0x43000400U);
     f70:	4c12      	ldr	r4, [pc, #72]	; (fbc <spiDataOut+0xa4>)
     f72:	e7ed      	b.n	f50 <spiDataOut+0x38>
        return (Sercom*) (0x40003400U);
     f74:	4c13      	ldr	r4, [pc, #76]	; (fc4 <spiDataOut+0xac>)
     f76:	e7eb      	b.n	f50 <spiDataOut+0x38>
        return (Sercom*) (0x41012000U);
     f78:	4c13      	ldr	r4, [pc, #76]	; (fc8 <spiDataOut+0xb0>)
     f7a:	e7e9      	b.n	f50 <spiDataOut+0x38>
        return (Sercom*) (0x41014000U);
     f7c:	4c13      	ldr	r4, [pc, #76]	; (fcc <spiDataOut+0xb4>)
     f7e:	e7e7      	b.n	f50 <spiDataOut+0x38>
        return (Sercom*) (0x43000000U);
     f80:	f04f 4486 	mov.w	r4, #1124073472	; 0x43000000
     f84:	e7e4      	b.n	f50 <spiDataOut+0x38>
    if ( id == 0) {
     f86:	b15b      	cbz	r3, fa0 <spiDataOut+0x88>
    } else if ( id == 1) {
     f88:	2b01      	cmp	r3, #1
     f8a:	d00d      	beq.n	fa8 <spiDataOut+0x90>
    } else if ( id == 2) {
     f8c:	2b02      	cmp	r3, #2
     f8e:	d00d      	beq.n	fac <spiDataOut+0x94>
    } else if ( id == 3) {
     f90:	2b03      	cmp	r3, #3
     f92:	d00d      	beq.n	fb0 <spiDataOut+0x98>
    } else if ( id == 4) {
     f94:	2b04      	cmp	r3, #4
     f96:	d00d      	beq.n	fb4 <spiDataOut+0x9c>
    } else if ( id == 5) {
     f98:	2b05      	cmp	r3, #5
     f9a:	d102      	bne.n	fa2 <spiDataOut+0x8a>
        return (Sercom*) (0x43000400U);
     f9c:	4d07      	ldr	r5, [pc, #28]	; (fbc <spiDataOut+0xa4>)
     f9e:	e000      	b.n	fa2 <spiDataOut+0x8a>
        return (Sercom*) (0x40003000U);
     fa0:	4d07      	ldr	r5, [pc, #28]	; (fc0 <spiDataOut+0xa8>)
    u8_t dummy = sercom(id)->SPI.DATA.reg;
     fa2:	6aab      	ldr	r3, [r5, #40]	; 0x28
}
     fa4:	bc30      	pop	{r4, r5}
     fa6:	4770      	bx	lr
        return (Sercom*) (0x40003400U);
     fa8:	4d06      	ldr	r5, [pc, #24]	; (fc4 <spiDataOut+0xac>)
     faa:	e7fa      	b.n	fa2 <spiDataOut+0x8a>
        return (Sercom*) (0x41012000U);
     fac:	4d06      	ldr	r5, [pc, #24]	; (fc8 <spiDataOut+0xb0>)
     fae:	e7f8      	b.n	fa2 <spiDataOut+0x8a>
        return (Sercom*) (0x41014000U);
     fb0:	4d06      	ldr	r5, [pc, #24]	; (fcc <spiDataOut+0xb4>)
     fb2:	e7f6      	b.n	fa2 <spiDataOut+0x8a>
        return (Sercom*) (0x43000000U);
     fb4:	f04f 4586 	mov.w	r5, #1124073472	; 0x43000000
     fb8:	e7f3      	b.n	fa2 <spiDataOut+0x8a>
     fba:	bf00      	nop
     fbc:	43000400 	.word	0x43000400
     fc0:	40003000 	.word	0x40003000
     fc4:	40003400 	.word	0x40003400
     fc8:	41012000 	.word	0x41012000
     fcc:	41014000 	.word	0x41014000

00000fd0 <spiDataIn>:

u8_t spiDataIn(SercomId id) {
     fd0:	b430      	push	{r4, r5}
    if ( id == 0) {
     fd2:	4603      	mov	r3, r0
     fd4:	b158      	cbz	r0, fee <spiDataIn+0x1e>
    } else if ( id == 1) {
     fd6:	2801      	cmp	r0, #1
     fd8:	d00d      	beq.n	ff6 <spiDataIn+0x26>
    } else if ( id == 2) {
     fda:	2802      	cmp	r0, #2
     fdc:	d00d      	beq.n	ffa <spiDataIn+0x2a>
    } else if ( id == 3) {
     fde:	2803      	cmp	r0, #3
     fe0:	d00d      	beq.n	ffe <spiDataIn+0x2e>
    } else if ( id == 4) {
     fe2:	2804      	cmp	r0, #4
     fe4:	d00d      	beq.n	1002 <spiDataIn+0x32>
    } else if ( id == 5) {
     fe6:	2805      	cmp	r0, #5
     fe8:	d102      	bne.n	ff0 <spiDataIn+0x20>
        return (Sercom*) (0x43000400U);
     fea:	4c23      	ldr	r4, [pc, #140]	; (1078 <spiDataIn+0xa8>)
     fec:	e000      	b.n	ff0 <spiDataIn+0x20>
        return (Sercom*) (0x40003000U);
     fee:	4c23      	ldr	r4, [pc, #140]	; (107c <spiDataIn+0xac>)
    sercom(id)->SPI.DATA.reg = 0xFF;
     ff0:	22ff      	movs	r2, #255	; 0xff
     ff2:	62a2      	str	r2, [r4, #40]	; 0x28
    while(sercom(id)->SPI.INTFLAG.bit.RXC == 0);
     ff4:	e00d      	b.n	1012 <spiDataIn+0x42>
        return (Sercom*) (0x40003400U);
     ff6:	4c22      	ldr	r4, [pc, #136]	; (1080 <spiDataIn+0xb0>)
     ff8:	e7fa      	b.n	ff0 <spiDataIn+0x20>
        return (Sercom*) (0x41012000U);
     ffa:	4c22      	ldr	r4, [pc, #136]	; (1084 <spiDataIn+0xb4>)
     ffc:	e7f8      	b.n	ff0 <spiDataIn+0x20>
        return (Sercom*) (0x41014000U);
     ffe:	4c22      	ldr	r4, [pc, #136]	; (1088 <spiDataIn+0xb8>)
    1000:	e7f6      	b.n	ff0 <spiDataIn+0x20>
        return (Sercom*) (0x43000000U);
    1002:	f04f 4486 	mov.w	r4, #1124073472	; 0x43000000
    1006:	e7f3      	b.n	ff0 <spiDataIn+0x20>
        return (Sercom*) (0x40003000U);
    1008:	491c      	ldr	r1, [pc, #112]	; (107c <spiDataIn+0xac>)
    100a:	7e0a      	ldrb	r2, [r1, #24]
    100c:	f012 0f04 	tst.w	r2, #4
    1010:	d116      	bne.n	1040 <spiDataIn+0x70>
    if ( id == 0) {
    1012:	2b00      	cmp	r3, #0
    1014:	d0f8      	beq.n	1008 <spiDataIn+0x38>
    } else if ( id == 1) {
    1016:	2b01      	cmp	r3, #1
    1018:	d009      	beq.n	102e <spiDataIn+0x5e>
    } else if ( id == 2) {
    101a:	2b02      	cmp	r3, #2
    101c:	d009      	beq.n	1032 <spiDataIn+0x62>
    } else if ( id == 3) {
    101e:	2b03      	cmp	r3, #3
    1020:	d009      	beq.n	1036 <spiDataIn+0x66>
    } else if ( id == 4) {
    1022:	2b04      	cmp	r3, #4
    1024:	d009      	beq.n	103a <spiDataIn+0x6a>
    } else if ( id == 5) {
    1026:	2b05      	cmp	r3, #5
    1028:	d1ef      	bne.n	100a <spiDataIn+0x3a>
        return (Sercom*) (0x43000400U);
    102a:	4913      	ldr	r1, [pc, #76]	; (1078 <spiDataIn+0xa8>)
    102c:	e7ed      	b.n	100a <spiDataIn+0x3a>
        return (Sercom*) (0x40003400U);
    102e:	4914      	ldr	r1, [pc, #80]	; (1080 <spiDataIn+0xb0>)
    1030:	e7eb      	b.n	100a <spiDataIn+0x3a>
        return (Sercom*) (0x41012000U);
    1032:	4914      	ldr	r1, [pc, #80]	; (1084 <spiDataIn+0xb4>)
    1034:	e7e9      	b.n	100a <spiDataIn+0x3a>
        return (Sercom*) (0x41014000U);
    1036:	4914      	ldr	r1, [pc, #80]	; (1088 <spiDataIn+0xb8>)
    1038:	e7e7      	b.n	100a <spiDataIn+0x3a>
        return (Sercom*) (0x43000000U);
    103a:	f04f 4186 	mov.w	r1, #1124073472	; 0x43000000
    103e:	e7e4      	b.n	100a <spiDataIn+0x3a>
    if ( id == 0) {
    1040:	b15b      	cbz	r3, 105a <spiDataIn+0x8a>
    } else if ( id == 1) {
    1042:	2b01      	cmp	r3, #1
    1044:	d00e      	beq.n	1064 <spiDataIn+0x94>
    } else if ( id == 2) {
    1046:	2b02      	cmp	r3, #2
    1048:	d00e      	beq.n	1068 <spiDataIn+0x98>
    } else if ( id == 3) {
    104a:	2b03      	cmp	r3, #3
    104c:	d00e      	beq.n	106c <spiDataIn+0x9c>
    } else if ( id == 4) {
    104e:	2b04      	cmp	r3, #4
    1050:	d00e      	beq.n	1070 <spiDataIn+0xa0>
    } else if ( id == 5) {
    1052:	2b05      	cmp	r3, #5
    1054:	d102      	bne.n	105c <spiDataIn+0x8c>
        return (Sercom*) (0x43000400U);
    1056:	4d08      	ldr	r5, [pc, #32]	; (1078 <spiDataIn+0xa8>)
    1058:	e000      	b.n	105c <spiDataIn+0x8c>
        return (Sercom*) (0x40003000U);
    105a:	4d08      	ldr	r5, [pc, #32]	; (107c <spiDataIn+0xac>)
    return sercom(id)->SPI.DATA.reg;
    105c:	6aa8      	ldr	r0, [r5, #40]	; 0x28
    105e:	b2c0      	uxtb	r0, r0
    1060:	bc30      	pop	{r4, r5}
    1062:	4770      	bx	lr
        return (Sercom*) (0x40003400U);
    1064:	4d06      	ldr	r5, [pc, #24]	; (1080 <spiDataIn+0xb0>)
    1066:	e7f9      	b.n	105c <spiDataIn+0x8c>
        return (Sercom*) (0x41012000U);
    1068:	4d06      	ldr	r5, [pc, #24]	; (1084 <spiDataIn+0xb4>)
    106a:	e7f7      	b.n	105c <spiDataIn+0x8c>
        return (Sercom*) (0x41014000U);
    106c:	4d06      	ldr	r5, [pc, #24]	; (1088 <spiDataIn+0xb8>)
    106e:	e7f5      	b.n	105c <spiDataIn+0x8c>
        return (Sercom*) (0x43000000U);
    1070:	f04f 4586 	mov.w	r5, #1124073472	; 0x43000000
    1074:	e7f2      	b.n	105c <spiDataIn+0x8c>
    1076:	bf00      	nop
    1078:	43000400 	.word	0x43000400
    107c:	40003000 	.word	0x40003000
    1080:	40003400 	.word	0x40003400
    1084:	41012000 	.word	0x41012000
    1088:	41014000 	.word	0x41014000

0000108c <pow>:
    108c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1090:	f8df 92f0 	ldr.w	r9, [pc, #752]	; 1384 <pow+0x2f8>
    1094:	b08d      	sub	sp, #52	; 0x34
    1096:	4606      	mov	r6, r0
    1098:	460f      	mov	r7, r1
    109a:	4614      	mov	r4, r2
    109c:	461d      	mov	r5, r3
    109e:	f000 f973 	bl	1388 <__ieee754_pow>
    10a2:	f999 8000 	ldrsb.w	r8, [r9]
    10a6:	f1b8 3fff 	cmp.w	r8, #4294967295
    10aa:	e9cd 0100 	strd	r0, r1, [sp]
    10ae:	d036      	beq.n	111e <pow+0x92>
    10b0:	4622      	mov	r2, r4
    10b2:	462b      	mov	r3, r5
    10b4:	4620      	mov	r0, r4
    10b6:	4629      	mov	r1, r5
    10b8:	f001 fcde 	bl	2a78 <__aeabi_dcmpun>
    10bc:	4683      	mov	fp, r0
    10be:	bb70      	cbnz	r0, 111e <pow+0x92>
    10c0:	4632      	mov	r2, r6
    10c2:	463b      	mov	r3, r7
    10c4:	4630      	mov	r0, r6
    10c6:	4639      	mov	r1, r7
    10c8:	f001 fcd6 	bl	2a78 <__aeabi_dcmpun>
    10cc:	2200      	movs	r2, #0
    10ce:	4682      	mov	sl, r0
    10d0:	2300      	movs	r3, #0
    10d2:	2800      	cmp	r0, #0
    10d4:	f040 80a0 	bne.w	1218 <pow+0x18c>
    10d8:	4630      	mov	r0, r6
    10da:	4639      	mov	r1, r7
    10dc:	f001 fc9a 	bl	2a14 <__aeabi_dcmpeq>
    10e0:	b310      	cbz	r0, 1128 <pow+0x9c>
    10e2:	2200      	movs	r2, #0
    10e4:	2300      	movs	r3, #0
    10e6:	4620      	mov	r0, r4
    10e8:	4629      	mov	r1, r5
    10ea:	f001 fc93 	bl	2a14 <__aeabi_dcmpeq>
    10ee:	4683      	mov	fp, r0
    10f0:	2800      	cmp	r0, #0
    10f2:	d06a      	beq.n	11ca <pow+0x13e>
    10f4:	2201      	movs	r2, #1
    10f6:	4b9c      	ldr	r3, [pc, #624]	; (1368 <pow+0x2dc>)
    10f8:	9202      	str	r2, [sp, #8]
    10fa:	2100      	movs	r1, #0
    10fc:	2200      	movs	r2, #0
    10fe:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    1102:	e9cd 6704 	strd	r6, r7, [sp, #16]
    1106:	e9cd 4506 	strd	r4, r5, [sp, #24]
    110a:	e9cd 1208 	strd	r1, r2, [sp, #32]
    110e:	9303      	str	r3, [sp, #12]
    1110:	f1b8 0f00 	cmp.w	r8, #0
    1114:	d045      	beq.n	11a2 <pow+0x116>
    1116:	4c95      	ldr	r4, [pc, #596]	; (136c <pow+0x2e0>)
    1118:	2300      	movs	r3, #0
    111a:	e9cd 3400 	strd	r3, r4, [sp]
    111e:	e9dd 0100 	ldrd	r0, r1, [sp]
    1122:	b00d      	add	sp, #52	; 0x34
    1124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1128:	e9dd 0100 	ldrd	r0, r1, [sp]
    112c:	f000 ff32 	bl	1f94 <finite>
    1130:	4680      	mov	r8, r0
    1132:	2800      	cmp	r0, #0
    1134:	f000 808b 	beq.w	124e <pow+0x1c2>
    1138:	f04f 0a00 	mov.w	sl, #0
    113c:	f04f 0b00 	mov.w	fp, #0
    1140:	4652      	mov	r2, sl
    1142:	465b      	mov	r3, fp
    1144:	e9dd 0100 	ldrd	r0, r1, [sp]
    1148:	f001 fc64 	bl	2a14 <__aeabi_dcmpeq>
    114c:	2800      	cmp	r0, #0
    114e:	d0e6      	beq.n	111e <pow+0x92>
    1150:	4630      	mov	r0, r6
    1152:	4639      	mov	r1, r7
    1154:	f000 ff1e 	bl	1f94 <finite>
    1158:	2800      	cmp	r0, #0
    115a:	d0e0      	beq.n	111e <pow+0x92>
    115c:	4620      	mov	r0, r4
    115e:	4629      	mov	r1, r5
    1160:	f000 ff18 	bl	1f94 <finite>
    1164:	2800      	cmp	r0, #0
    1166:	d0da      	beq.n	111e <pow+0x92>
    1168:	f999 3000 	ldrsb.w	r3, [r9]
    116c:	4a7e      	ldr	r2, [pc, #504]	; (1368 <pow+0x2dc>)
    116e:	9203      	str	r2, [sp, #12]
    1170:	2104      	movs	r1, #4
    1172:	2200      	movs	r2, #0
    1174:	2b02      	cmp	r3, #2
    1176:	e9cd 6704 	strd	r6, r7, [sp, #16]
    117a:	e9cd 4506 	strd	r4, r5, [sp, #24]
    117e:	e9cd ab08 	strd	sl, fp, [sp, #32]
    1182:	9102      	str	r1, [sp, #8]
    1184:	920a      	str	r2, [sp, #40]	; 0x28
    1186:	d003      	beq.n	1190 <pow+0x104>
    1188:	a802      	add	r0, sp, #8
    118a:	f000 ff09 	bl	1fa0 <matherr>
    118e:	b968      	cbnz	r0, 11ac <pow+0x120>
    1190:	f001 fc88 	bl	2aa4 <__errno>
    1194:	2322      	movs	r3, #34	; 0x22
    1196:	6003      	str	r3, [r0, #0]
    1198:	e008      	b.n	11ac <pow+0x120>
    119a:	2300      	movs	r3, #0
    119c:	2400      	movs	r4, #0
    119e:	e9cd 3408 	strd	r3, r4, [sp, #32]
    11a2:	a802      	add	r0, sp, #8
    11a4:	f000 fefc 	bl	1fa0 <matherr>
    11a8:	2800      	cmp	r0, #0
    11aa:	d030      	beq.n	120e <pow+0x182>
    11ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    11ae:	b11b      	cbz	r3, 11b8 <pow+0x12c>
    11b0:	f001 fc78 	bl	2aa4 <__errno>
    11b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    11b6:	6003      	str	r3, [r0, #0]
    11b8:	e9dd 3408 	ldrd	r3, r4, [sp, #32]
    11bc:	e9cd 3400 	strd	r3, r4, [sp]
    11c0:	e9dd 0100 	ldrd	r0, r1, [sp]
    11c4:	b00d      	add	sp, #52	; 0x34
    11c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    11ca:	4620      	mov	r0, r4
    11cc:	4629      	mov	r1, r5
    11ce:	f000 fee1 	bl	1f94 <finite>
    11d2:	2800      	cmp	r0, #0
    11d4:	d0a3      	beq.n	111e <pow+0x92>
    11d6:	2200      	movs	r2, #0
    11d8:	2300      	movs	r3, #0
    11da:	4620      	mov	r0, r4
    11dc:	4629      	mov	r1, r5
    11de:	f001 fc23 	bl	2a28 <__aeabi_dcmplt>
    11e2:	2800      	cmp	r0, #0
    11e4:	d09b      	beq.n	111e <pow+0x92>
    11e6:	f999 3000 	ldrsb.w	r3, [r9]
    11ea:	4a5f      	ldr	r2, [pc, #380]	; (1368 <pow+0x2dc>)
    11ec:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
    11f0:	2101      	movs	r1, #1
    11f2:	e9cd 6704 	strd	r6, r7, [sp, #16]
    11f6:	e9cd 4506 	strd	r4, r5, [sp, #24]
    11fa:	9102      	str	r1, [sp, #8]
    11fc:	9203      	str	r2, [sp, #12]
    11fe:	2b00      	cmp	r3, #0
    1200:	d0cb      	beq.n	119a <pow+0x10e>
    1202:	495b      	ldr	r1, [pc, #364]	; (1370 <pow+0x2e4>)
    1204:	2000      	movs	r0, #0
    1206:	2b02      	cmp	r3, #2
    1208:	e9cd 0108 	strd	r0, r1, [sp, #32]
    120c:	d1c9      	bne.n	11a2 <pow+0x116>
    120e:	f001 fc49 	bl	2aa4 <__errno>
    1212:	2321      	movs	r3, #33	; 0x21
    1214:	6003      	str	r3, [r0, #0]
    1216:	e7c9      	b.n	11ac <pow+0x120>
    1218:	4620      	mov	r0, r4
    121a:	4629      	mov	r1, r5
    121c:	f001 fbfa 	bl	2a14 <__aeabi_dcmpeq>
    1220:	2800      	cmp	r0, #0
    1222:	f43f af7c 	beq.w	111e <pow+0x92>
    1226:	4b51      	ldr	r3, [pc, #324]	; (136c <pow+0x2e0>)
    1228:	494f      	ldr	r1, [pc, #316]	; (1368 <pow+0x2dc>)
    122a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
    122e:	2001      	movs	r0, #1
    1230:	2200      	movs	r2, #0
    1232:	f1b8 0f02 	cmp.w	r8, #2
    1236:	e9cd 6704 	strd	r6, r7, [sp, #16]
    123a:	e9cd 4506 	strd	r4, r5, [sp, #24]
    123e:	9002      	str	r0, [sp, #8]
    1240:	9103      	str	r1, [sp, #12]
    1242:	e9cd 2308 	strd	r2, r3, [sp, #32]
    1246:	d1ac      	bne.n	11a2 <pow+0x116>
    1248:	e9cd 2300 	strd	r2, r3, [sp]
    124c:	e767      	b.n	111e <pow+0x92>
    124e:	4630      	mov	r0, r6
    1250:	4639      	mov	r1, r7
    1252:	f000 fe9f 	bl	1f94 <finite>
    1256:	2800      	cmp	r0, #0
    1258:	f43f af6e 	beq.w	1138 <pow+0xac>
    125c:	4620      	mov	r0, r4
    125e:	4629      	mov	r1, r5
    1260:	f000 fe98 	bl	1f94 <finite>
    1264:	2800      	cmp	r0, #0
    1266:	f43f af67 	beq.w	1138 <pow+0xac>
    126a:	e9dd 2300 	ldrd	r2, r3, [sp]
    126e:	4610      	mov	r0, r2
    1270:	4619      	mov	r1, r3
    1272:	f001 fc01 	bl	2a78 <__aeabi_dcmpun>
    1276:	2800      	cmp	r0, #0
    1278:	d158      	bne.n	132c <pow+0x2a0>
    127a:	2303      	movs	r3, #3
    127c:	f999 8000 	ldrsb.w	r8, [r9]
    1280:	9302      	str	r3, [sp, #8]
    1282:	4b39      	ldr	r3, [pc, #228]	; (1368 <pow+0x2dc>)
    1284:	900a      	str	r0, [sp, #40]	; 0x28
    1286:	9303      	str	r3, [sp, #12]
    1288:	e9cd 6704 	strd	r6, r7, [sp, #16]
    128c:	e9cd 4506 	strd	r4, r5, [sp, #24]
    1290:	2200      	movs	r2, #0
    1292:	2300      	movs	r3, #0
    1294:	4630      	mov	r0, r6
    1296:	4639      	mov	r1, r7
    1298:	f1b8 0f00 	cmp.w	r8, #0
    129c:	d126      	bne.n	12ec <pow+0x260>
    129e:	4f35      	ldr	r7, [pc, #212]	; (1374 <pow+0x2e8>)
    12a0:	f04f 4660 	mov.w	r6, #3758096384	; 0xe0000000
    12a4:	e9cd 6708 	strd	r6, r7, [sp, #32]
    12a8:	f001 fbbe 	bl	2a28 <__aeabi_dcmplt>
    12ac:	2800      	cmp	r0, #0
    12ae:	f43f af6b 	beq.w	1188 <pow+0xfc>
    12b2:	2200      	movs	r2, #0
    12b4:	4b30      	ldr	r3, [pc, #192]	; (1378 <pow+0x2ec>)
    12b6:	4620      	mov	r0, r4
    12b8:	4629      	mov	r1, r5
    12ba:	f001 f943 	bl	2544 <__aeabi_dmul>
    12be:	4604      	mov	r4, r0
    12c0:	460d      	mov	r5, r1
    12c2:	f000 fe75 	bl	1fb0 <rint>
    12c6:	4602      	mov	r2, r0
    12c8:	460b      	mov	r3, r1
    12ca:	4620      	mov	r0, r4
    12cc:	4629      	mov	r1, r5
    12ce:	f001 fba1 	bl	2a14 <__aeabi_dcmpeq>
    12d2:	bb40      	cbnz	r0, 1326 <pow+0x29a>
    12d4:	4b29      	ldr	r3, [pc, #164]	; (137c <pow+0x2f0>)
    12d6:	f999 8000 	ldrsb.w	r8, [r9]
    12da:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
    12de:	e9cd 2308 	strd	r2, r3, [sp, #32]
    12e2:	f1b8 0f02 	cmp.w	r8, #2
    12e6:	f47f af4f 	bne.w	1188 <pow+0xfc>
    12ea:	e751      	b.n	1190 <pow+0x104>
    12ec:	4f24      	ldr	r7, [pc, #144]	; (1380 <pow+0x2f4>)
    12ee:	2600      	movs	r6, #0
    12f0:	e9cd 6708 	strd	r6, r7, [sp, #32]
    12f4:	f001 fb98 	bl	2a28 <__aeabi_dcmplt>
    12f8:	2800      	cmp	r0, #0
    12fa:	d0f2      	beq.n	12e2 <pow+0x256>
    12fc:	2200      	movs	r2, #0
    12fe:	4b1e      	ldr	r3, [pc, #120]	; (1378 <pow+0x2ec>)
    1300:	4620      	mov	r0, r4
    1302:	4629      	mov	r1, r5
    1304:	f001 f91e 	bl	2544 <__aeabi_dmul>
    1308:	4604      	mov	r4, r0
    130a:	460d      	mov	r5, r1
    130c:	f000 fe50 	bl	1fb0 <rint>
    1310:	4602      	mov	r2, r0
    1312:	460b      	mov	r3, r1
    1314:	4620      	mov	r0, r4
    1316:	4629      	mov	r1, r5
    1318:	f001 fb7c 	bl	2a14 <__aeabi_dcmpeq>
    131c:	b918      	cbnz	r0, 1326 <pow+0x29a>
    131e:	4b14      	ldr	r3, [pc, #80]	; (1370 <pow+0x2e4>)
    1320:	2200      	movs	r2, #0
    1322:	e9cd 2308 	strd	r2, r3, [sp, #32]
    1326:	f999 8000 	ldrsb.w	r8, [r9]
    132a:	e7da      	b.n	12e2 <pow+0x256>
    132c:	f999 9000 	ldrsb.w	r9, [r9]
    1330:	4b0d      	ldr	r3, [pc, #52]	; (1368 <pow+0x2dc>)
    1332:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
    1336:	2201      	movs	r2, #1
    1338:	e9cd 6704 	strd	r6, r7, [sp, #16]
    133c:	e9cd 4506 	strd	r4, r5, [sp, #24]
    1340:	9202      	str	r2, [sp, #8]
    1342:	9303      	str	r3, [sp, #12]
    1344:	f1b9 0f00 	cmp.w	r9, #0
    1348:	f43f af27 	beq.w	119a <pow+0x10e>
    134c:	2200      	movs	r2, #0
    134e:	2300      	movs	r3, #0
    1350:	4610      	mov	r0, r2
    1352:	4619      	mov	r1, r3
    1354:	f001 fa20 	bl	2798 <__aeabi_ddiv>
    1358:	f1b9 0f02 	cmp.w	r9, #2
    135c:	e9cd 0108 	strd	r0, r1, [sp, #32]
    1360:	f43f af55 	beq.w	120e <pow+0x182>
    1364:	e71d      	b.n	11a2 <pow+0x116>
    1366:	bf00      	nop
    1368:	00002c20 	.word	0x00002c20
    136c:	3ff00000 	.word	0x3ff00000
    1370:	fff00000 	.word	0xfff00000
    1374:	47efffff 	.word	0x47efffff
    1378:	3fe00000 	.word	0x3fe00000
    137c:	c7efffff 	.word	0xc7efffff
    1380:	7ff00000 	.word	0x7ff00000
    1384:	20000002 	.word	0x20000002

00001388 <__ieee754_pow>:
    1388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    138c:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
    1390:	ea57 0402 	orrs.w	r4, r7, r2
    1394:	b093      	sub	sp, #76	; 0x4c
    1396:	d037      	beq.n	1408 <__ieee754_pow+0x80>
    1398:	4c67      	ldr	r4, [pc, #412]	; (1538 <__ieee754_pow+0x1b0>)
    139a:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
    139e:	42a6      	cmp	r6, r4
    13a0:	4683      	mov	fp, r0
    13a2:	460d      	mov	r5, r1
    13a4:	dc29      	bgt.n	13fa <__ieee754_pow+0x72>
    13a6:	469a      	mov	sl, r3
    13a8:	4696      	mov	lr, r2
    13aa:	d025      	beq.n	13f8 <__ieee754_pow+0x70>
    13ac:	42a7      	cmp	r7, r4
    13ae:	dc24      	bgt.n	13fa <__ieee754_pow+0x72>
    13b0:	4c61      	ldr	r4, [pc, #388]	; (1538 <__ieee754_pow+0x1b0>)
    13b2:	42a7      	cmp	r7, r4
    13b4:	d079      	beq.n	14aa <__ieee754_pow+0x122>
    13b6:	2d00      	cmp	r5, #0
    13b8:	4689      	mov	r9, r1
    13ba:	4680      	mov	r8, r0
    13bc:	e9cd 2300 	strd	r2, r3, [sp]
    13c0:	db77      	blt.n	14b2 <__ieee754_pow+0x12a>
    13c2:	2400      	movs	r4, #0
    13c4:	f1be 0f00 	cmp.w	lr, #0
    13c8:	d12c      	bne.n	1424 <__ieee754_pow+0x9c>
    13ca:	4b5b      	ldr	r3, [pc, #364]	; (1538 <__ieee754_pow+0x1b0>)
    13cc:	429f      	cmp	r7, r3
    13ce:	f000 808b 	beq.w	14e8 <__ieee754_pow+0x160>
    13d2:	4b5a      	ldr	r3, [pc, #360]	; (153c <__ieee754_pow+0x1b4>)
    13d4:	429f      	cmp	r7, r3
    13d6:	d061      	beq.n	149c <__ieee754_pow+0x114>
    13d8:	f1ba 4f80 	cmp.w	sl, #1073741824	; 0x40000000
    13dc:	f000 83ba 	beq.w	1b54 <__ieee754_pow+0x7cc>
    13e0:	4b57      	ldr	r3, [pc, #348]	; (1540 <__ieee754_pow+0x1b8>)
    13e2:	459a      	cmp	sl, r3
    13e4:	d11e      	bne.n	1424 <__ieee754_pow+0x9c>
    13e6:	2d00      	cmp	r5, #0
    13e8:	db1c      	blt.n	1424 <__ieee754_pow+0x9c>
    13ea:	4640      	mov	r0, r8
    13ec:	4649      	mov	r1, r9
    13ee:	b013      	add	sp, #76	; 0x4c
    13f0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    13f4:	f000 bd0e 	b.w	1e14 <__ieee754_sqrt>
    13f8:	b158      	cbz	r0, 1412 <__ieee754_pow+0x8a>
    13fa:	f106 4640 	add.w	r6, r6, #3221225472	; 0xc0000000
    13fe:	f506 1680 	add.w	r6, r6, #1048576	; 0x100000
    1402:	ea56 030b 	orrs.w	r3, r6, fp
    1406:	d106      	bne.n	1416 <__ieee754_pow+0x8e>
    1408:	494c      	ldr	r1, [pc, #304]	; (153c <__ieee754_pow+0x1b4>)
    140a:	2000      	movs	r0, #0
    140c:	b013      	add	sp, #76	; 0x4c
    140e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1412:	42b7      	cmp	r7, r6
    1414:	ddcc      	ble.n	13b0 <__ieee754_pow+0x28>
    1416:	484b      	ldr	r0, [pc, #300]	; (1544 <__ieee754_pow+0x1bc>)
    1418:	b013      	add	sp, #76	; 0x4c
    141a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    141e:	f000 bdc1 	b.w	1fa4 <nan>
    1422:	2400      	movs	r4, #0
    1424:	4640      	mov	r0, r8
    1426:	4649      	mov	r1, r9
    1428:	f000 fdb0 	bl	1f8c <fabs>
    142c:	f1bb 0f00 	cmp.w	fp, #0
    1430:	d119      	bne.n	1466 <__ieee754_pow+0xde>
    1432:	b126      	cbz	r6, 143e <__ieee754_pow+0xb6>
    1434:	4b41      	ldr	r3, [pc, #260]	; (153c <__ieee754_pow+0x1b4>)
    1436:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
    143a:	429a      	cmp	r2, r3
    143c:	d113      	bne.n	1466 <__ieee754_pow+0xde>
    143e:	f1ba 0f00 	cmp.w	sl, #0
    1442:	f2c0 83bc 	blt.w	1bbe <__ieee754_pow+0x836>
    1446:	2d00      	cmp	r5, #0
    1448:	dae0      	bge.n	140c <__ieee754_pow+0x84>
    144a:	f106 4640 	add.w	r6, r6, #3221225472	; 0xc0000000
    144e:	f506 1680 	add.w	r6, r6, #1048576	; 0x100000
    1452:	ea56 0304 	orrs.w	r3, r6, r4
    1456:	f000 848f 	beq.w	1d78 <__ieee754_pow+0x9f0>
    145a:	2c01      	cmp	r4, #1
    145c:	d1d6      	bne.n	140c <__ieee754_pow+0x84>
    145e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    1462:	4619      	mov	r1, r3
    1464:	e7d2      	b.n	140c <__ieee754_pow+0x84>
    1466:	0fed      	lsrs	r5, r5, #31
    1468:	3d01      	subs	r5, #1
    146a:	ea54 0305 	orrs.w	r3, r4, r5
    146e:	d04e      	beq.n	150e <__ieee754_pow+0x186>
    1470:	4b35      	ldr	r3, [pc, #212]	; (1548 <__ieee754_pow+0x1c0>)
    1472:	429f      	cmp	r7, r3
    1474:	dd6e      	ble.n	1554 <__ieee754_pow+0x1cc>
    1476:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
    147a:	429f      	cmp	r7, r3
    147c:	f340 83e8 	ble.w	1c50 <__ieee754_pow+0x8c8>
    1480:	4b32      	ldr	r3, [pc, #200]	; (154c <__ieee754_pow+0x1c4>)
    1482:	429e      	cmp	r6, r3
    1484:	dd4e      	ble.n	1524 <__ieee754_pow+0x19c>
    1486:	f1ba 0f00 	cmp.w	sl, #0
    148a:	dd4e      	ble.n	152a <__ieee754_pow+0x1a2>
    148c:	a328      	add	r3, pc, #160	; (adr r3, 1530 <__ieee754_pow+0x1a8>)
    148e:	e9d3 2300 	ldrd	r2, r3, [r3]
    1492:	4610      	mov	r0, r2
    1494:	4619      	mov	r1, r3
    1496:	f001 f855 	bl	2544 <__aeabi_dmul>
    149a:	e7b7      	b.n	140c <__ieee754_pow+0x84>
    149c:	f1ba 0f00 	cmp.w	sl, #0
    14a0:	f2c0 843c 	blt.w	1d1c <__ieee754_pow+0x994>
    14a4:	4640      	mov	r0, r8
    14a6:	4649      	mov	r1, r9
    14a8:	e7b0      	b.n	140c <__ieee754_pow+0x84>
    14aa:	f1be 0f00 	cmp.w	lr, #0
    14ae:	d082      	beq.n	13b6 <__ieee754_pow+0x2e>
    14b0:	e7a3      	b.n	13fa <__ieee754_pow+0x72>
    14b2:	4b27      	ldr	r3, [pc, #156]	; (1550 <__ieee754_pow+0x1c8>)
    14b4:	429f      	cmp	r7, r3
    14b6:	dc28      	bgt.n	150a <__ieee754_pow+0x182>
    14b8:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
    14bc:	429f      	cmp	r7, r3
    14be:	dd80      	ble.n	13c2 <__ieee754_pow+0x3a>
    14c0:	153b      	asrs	r3, r7, #20
    14c2:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
    14c6:	2b14      	cmp	r3, #20
    14c8:	f340 843e 	ble.w	1d48 <__ieee754_pow+0x9c0>
    14cc:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
    14d0:	fa2e f203 	lsr.w	r2, lr, r3
    14d4:	fa02 f303 	lsl.w	r3, r2, r3
    14d8:	459e      	cmp	lr, r3
    14da:	f47f af72 	bne.w	13c2 <__ieee754_pow+0x3a>
    14de:	f002 0201 	and.w	r2, r2, #1
    14e2:	f1c2 0402 	rsb	r4, r2, #2
    14e6:	e76d      	b.n	13c4 <__ieee754_pow+0x3c>
    14e8:	f106 4340 	add.w	r3, r6, #3221225472	; 0xc0000000
    14ec:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
    14f0:	ea53 030b 	orrs.w	r3, r3, fp
    14f4:	d088      	beq.n	1408 <__ieee754_pow+0x80>
    14f6:	4b15      	ldr	r3, [pc, #84]	; (154c <__ieee754_pow+0x1c4>)
    14f8:	429e      	cmp	r6, r3
    14fa:	f340 8332 	ble.w	1b62 <__ieee754_pow+0x7da>
    14fe:	f1ba 0f00 	cmp.w	sl, #0
    1502:	db12      	blt.n	152a <__ieee754_pow+0x1a2>
    1504:	e9dd 0100 	ldrd	r0, r1, [sp]
    1508:	e780      	b.n	140c <__ieee754_pow+0x84>
    150a:	2402      	movs	r4, #2
    150c:	e75a      	b.n	13c4 <__ieee754_pow+0x3c>
    150e:	4642      	mov	r2, r8
    1510:	464b      	mov	r3, r9
    1512:	4640      	mov	r0, r8
    1514:	4649      	mov	r1, r9
    1516:	f000 fe61 	bl	21dc <__aeabi_dsub>
    151a:	4602      	mov	r2, r0
    151c:	460b      	mov	r3, r1
    151e:	f001 f93b 	bl	2798 <__aeabi_ddiv>
    1522:	e773      	b.n	140c <__ieee754_pow+0x84>
    1524:	f1ba 0f00 	cmp.w	sl, #0
    1528:	dbb0      	blt.n	148c <__ieee754_pow+0x104>
    152a:	2000      	movs	r0, #0
    152c:	2100      	movs	r1, #0
    152e:	e76d      	b.n	140c <__ieee754_pow+0x84>
    1530:	8800759c 	.word	0x8800759c
    1534:	7e37e43c 	.word	0x7e37e43c
    1538:	7ff00000 	.word	0x7ff00000
    153c:	3ff00000 	.word	0x3ff00000
    1540:	3fe00000 	.word	0x3fe00000
    1544:	00002c24 	.word	0x00002c24
    1548:	41e00000 	.word	0x41e00000
    154c:	3fefffff 	.word	0x3fefffff
    1550:	433fffff 	.word	0x433fffff
    1554:	f5b6 1f80 	cmp.w	r6, #1048576	; 0x100000
    1558:	f04f 0200 	mov.w	r2, #0
    155c:	da05      	bge.n	156a <__ieee754_pow+0x1e2>
    155e:	4bd4      	ldr	r3, [pc, #848]	; (18b0 <__ieee754_pow+0x528>)
    1560:	f000 fff0 	bl	2544 <__aeabi_dmul>
    1564:	f06f 0234 	mvn.w	r2, #52	; 0x34
    1568:	460e      	mov	r6, r1
    156a:	1533      	asrs	r3, r6, #20
    156c:	4fd1      	ldr	r7, [pc, #836]	; (18b4 <__ieee754_pow+0x52c>)
    156e:	f3c6 0613 	ubfx	r6, r6, #0, #20
    1572:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
    1576:	4413      	add	r3, r2
    1578:	f046 5a7f 	orr.w	sl, r6, #1069547520	; 0x3fc00000
    157c:	42be      	cmp	r6, r7
    157e:	461a      	mov	r2, r3
    1580:	930d      	str	r3, [sp, #52]	; 0x34
    1582:	f44a 1a40 	orr.w	sl, sl, #3145728	; 0x300000
    1586:	f340 8321 	ble.w	1bcc <__ieee754_pow+0x844>
    158a:	4bcb      	ldr	r3, [pc, #812]	; (18b8 <__ieee754_pow+0x530>)
    158c:	429e      	cmp	r6, r3
    158e:	f340 83fd 	ble.w	1d8c <__ieee754_pow+0xa04>
    1592:	4613      	mov	r3, r2
    1594:	3301      	adds	r3, #1
    1596:	930d      	str	r3, [sp, #52]	; 0x34
    1598:	4bc8      	ldr	r3, [pc, #800]	; (18bc <__ieee754_pow+0x534>)
    159a:	2200      	movs	r2, #0
    159c:	e9cd 2306 	strd	r2, r3, [sp, #24]
    15a0:	2700      	movs	r7, #0
    15a2:	2600      	movs	r6, #0
    15a4:	e9cd 6708 	strd	r6, r7, [sp, #32]
    15a8:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
    15ac:	f5aa 1a80 	sub.w	sl, sl, #1048576	; 0x100000
    15b0:	2700      	movs	r7, #0
    15b2:	4602      	mov	r2, r0
    15b4:	4653      	mov	r3, sl
    15b6:	4651      	mov	r1, sl
    15b8:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    15bc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    15c0:	f000 fe0c 	bl	21dc <__aeabi_dsub>
    15c4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    15c8:	4680      	mov	r8, r0
    15ca:	4689      	mov	r9, r1
    15cc:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    15d0:	f000 fe06 	bl	21e0 <__adddf3>
    15d4:	4602      	mov	r2, r0
    15d6:	460b      	mov	r3, r1
    15d8:	2000      	movs	r0, #0
    15da:	49b8      	ldr	r1, [pc, #736]	; (18bc <__ieee754_pow+0x534>)
    15dc:	f001 f8dc 	bl	2798 <__aeabi_ddiv>
    15e0:	460a      	mov	r2, r1
    15e2:	4601      	mov	r1, r0
    15e4:	e9cd 1210 	strd	r1, r2, [sp, #64]	; 0x40
    15e8:	4613      	mov	r3, r2
    15ea:	4649      	mov	r1, r9
    15ec:	4602      	mov	r2, r0
    15ee:	4640      	mov	r0, r8
    15f0:	f000 ffa8 	bl	2544 <__aeabi_dmul>
    15f4:	ea4f 036a 	mov.w	r3, sl, asr #1
    15f8:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
    15fc:	468c      	mov	ip, r1
    15fe:	4683      	mov	fp, r0
    1600:	f503 2300 	add.w	r3, r3, #524288	; 0x80000
    1604:	e9cd bc04 	strd	fp, ip, [sp, #16]
    1608:	46da      	mov	sl, fp
    160a:	468b      	mov	fp, r1
    160c:	19d9      	adds	r1, r3, r7
    160e:	2300      	movs	r3, #0
    1610:	e9cd ab02 	strd	sl, fp, [sp, #8]
    1614:	9302      	str	r3, [sp, #8]
    1616:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
    161a:	2000      	movs	r0, #0
    161c:	4606      	mov	r6, r0
    161e:	460f      	mov	r7, r1
    1620:	4602      	mov	r2, r0
    1622:	460b      	mov	r3, r1
    1624:	4650      	mov	r0, sl
    1626:	4659      	mov	r1, fp
    1628:	f000 ff8c 	bl	2544 <__aeabi_dmul>
    162c:	4602      	mov	r2, r0
    162e:	460b      	mov	r3, r1
    1630:	4640      	mov	r0, r8
    1632:	4649      	mov	r1, r9
    1634:	f000 fdd2 	bl	21dc <__aeabi_dsub>
    1638:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    163c:	4680      	mov	r8, r0
    163e:	4689      	mov	r9, r1
    1640:	4630      	mov	r0, r6
    1642:	4639      	mov	r1, r7
    1644:	f000 fdca 	bl	21dc <__aeabi_dsub>
    1648:	4602      	mov	r2, r0
    164a:	460b      	mov	r3, r1
    164c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    1650:	f000 fdc4 	bl	21dc <__aeabi_dsub>
    1654:	4652      	mov	r2, sl
    1656:	465b      	mov	r3, fp
    1658:	f000 ff74 	bl	2544 <__aeabi_dmul>
    165c:	4602      	mov	r2, r0
    165e:	460b      	mov	r3, r1
    1660:	4640      	mov	r0, r8
    1662:	4649      	mov	r1, r9
    1664:	f000 fdba 	bl	21dc <__aeabi_dsub>
    1668:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
    166c:	f000 ff6a 	bl	2544 <__aeabi_dmul>
    1670:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
    1674:	e9cd 0106 	strd	r0, r1, [sp, #24]
    1678:	4632      	mov	r2, r6
    167a:	463b      	mov	r3, r7
    167c:	4630      	mov	r0, r6
    167e:	4639      	mov	r1, r7
    1680:	f000 ff60 	bl	2544 <__aeabi_dmul>
    1684:	a378      	add	r3, pc, #480	; (adr r3, 1868 <__ieee754_pow+0x4e0>)
    1686:	e9d3 2300 	ldrd	r2, r3, [r3]
    168a:	4606      	mov	r6, r0
    168c:	460f      	mov	r7, r1
    168e:	f000 ff59 	bl	2544 <__aeabi_dmul>
    1692:	a377      	add	r3, pc, #476	; (adr r3, 1870 <__ieee754_pow+0x4e8>)
    1694:	e9d3 2300 	ldrd	r2, r3, [r3]
    1698:	f000 fda2 	bl	21e0 <__adddf3>
    169c:	4632      	mov	r2, r6
    169e:	463b      	mov	r3, r7
    16a0:	f000 ff50 	bl	2544 <__aeabi_dmul>
    16a4:	a374      	add	r3, pc, #464	; (adr r3, 1878 <__ieee754_pow+0x4f0>)
    16a6:	e9d3 2300 	ldrd	r2, r3, [r3]
    16aa:	f000 fd99 	bl	21e0 <__adddf3>
    16ae:	4632      	mov	r2, r6
    16b0:	463b      	mov	r3, r7
    16b2:	f000 ff47 	bl	2544 <__aeabi_dmul>
    16b6:	a372      	add	r3, pc, #456	; (adr r3, 1880 <__ieee754_pow+0x4f8>)
    16b8:	e9d3 2300 	ldrd	r2, r3, [r3]
    16bc:	f000 fd90 	bl	21e0 <__adddf3>
    16c0:	4632      	mov	r2, r6
    16c2:	463b      	mov	r3, r7
    16c4:	f000 ff3e 	bl	2544 <__aeabi_dmul>
    16c8:	a36f      	add	r3, pc, #444	; (adr r3, 1888 <__ieee754_pow+0x500>)
    16ca:	e9d3 2300 	ldrd	r2, r3, [r3]
    16ce:	f000 fd87 	bl	21e0 <__adddf3>
    16d2:	4632      	mov	r2, r6
    16d4:	463b      	mov	r3, r7
    16d6:	f000 ff35 	bl	2544 <__aeabi_dmul>
    16da:	a36d      	add	r3, pc, #436	; (adr r3, 1890 <__ieee754_pow+0x508>)
    16dc:	e9d3 2300 	ldrd	r2, r3, [r3]
    16e0:	f000 fd7e 	bl	21e0 <__adddf3>
    16e4:	4632      	mov	r2, r6
    16e6:	4680      	mov	r8, r0
    16e8:	4689      	mov	r9, r1
    16ea:	463b      	mov	r3, r7
    16ec:	4630      	mov	r0, r6
    16ee:	4639      	mov	r1, r7
    16f0:	f000 ff28 	bl	2544 <__aeabi_dmul>
    16f4:	4602      	mov	r2, r0
    16f6:	460b      	mov	r3, r1
    16f8:	4640      	mov	r0, r8
    16fa:	4649      	mov	r1, r9
    16fc:	f000 ff22 	bl	2544 <__aeabi_dmul>
    1700:	4652      	mov	r2, sl
    1702:	4606      	mov	r6, r0
    1704:	460f      	mov	r7, r1
    1706:	465b      	mov	r3, fp
    1708:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    170c:	f000 fd68 	bl	21e0 <__adddf3>
    1710:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    1714:	f000 ff16 	bl	2544 <__aeabi_dmul>
    1718:	4632      	mov	r2, r6
    171a:	463b      	mov	r3, r7
    171c:	f000 fd60 	bl	21e0 <__adddf3>
    1720:	4652      	mov	r2, sl
    1722:	4680      	mov	r8, r0
    1724:	4689      	mov	r9, r1
    1726:	465b      	mov	r3, fp
    1728:	4650      	mov	r0, sl
    172a:	4659      	mov	r1, fp
    172c:	f000 ff0a 	bl	2544 <__aeabi_dmul>
    1730:	2200      	movs	r2, #0
    1732:	4b63      	ldr	r3, [pc, #396]	; (18c0 <__ieee754_pow+0x538>)
    1734:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    1738:	f000 fd52 	bl	21e0 <__adddf3>
    173c:	4642      	mov	r2, r8
    173e:	464b      	mov	r3, r9
    1740:	f000 fd4e 	bl	21e0 <__adddf3>
    1744:	9802      	ldr	r0, [sp, #8]
    1746:	460f      	mov	r7, r1
    1748:	4606      	mov	r6, r0
    174a:	4632      	mov	r2, r6
    174c:	463b      	mov	r3, r7
    174e:	4650      	mov	r0, sl
    1750:	4659      	mov	r1, fp
    1752:	f000 fef7 	bl	2544 <__aeabi_dmul>
    1756:	2200      	movs	r2, #0
    1758:	4682      	mov	sl, r0
    175a:	468b      	mov	fp, r1
    175c:	4b58      	ldr	r3, [pc, #352]	; (18c0 <__ieee754_pow+0x538>)
    175e:	4630      	mov	r0, r6
    1760:	4639      	mov	r1, r7
    1762:	f000 fd3b 	bl	21dc <__aeabi_dsub>
    1766:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    176a:	f000 fd37 	bl	21dc <__aeabi_dsub>
    176e:	4602      	mov	r2, r0
    1770:	460b      	mov	r3, r1
    1772:	4640      	mov	r0, r8
    1774:	4649      	mov	r1, r9
    1776:	f000 fd31 	bl	21dc <__aeabi_dsub>
    177a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    177e:	f000 fee1 	bl	2544 <__aeabi_dmul>
    1782:	4632      	mov	r2, r6
    1784:	4680      	mov	r8, r0
    1786:	4689      	mov	r9, r1
    1788:	463b      	mov	r3, r7
    178a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    178e:	f000 fed9 	bl	2544 <__aeabi_dmul>
    1792:	4602      	mov	r2, r0
    1794:	460b      	mov	r3, r1
    1796:	4640      	mov	r0, r8
    1798:	4649      	mov	r1, r9
    179a:	f000 fd21 	bl	21e0 <__adddf3>
    179e:	4680      	mov	r8, r0
    17a0:	4689      	mov	r9, r1
    17a2:	4602      	mov	r2, r0
    17a4:	460b      	mov	r3, r1
    17a6:	4650      	mov	r0, sl
    17a8:	4659      	mov	r1, fp
    17aa:	e9cd ab04 	strd	sl, fp, [sp, #16]
    17ae:	f000 fd17 	bl	21e0 <__adddf3>
    17b2:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
    17b6:	a338      	add	r3, pc, #224	; (adr r3, 1898 <__ieee754_pow+0x510>)
    17b8:	e9d3 2300 	ldrd	r2, r3, [r3]
    17bc:	4650      	mov	r0, sl
    17be:	460f      	mov	r7, r1
    17c0:	f000 fec0 	bl	2544 <__aeabi_dmul>
    17c4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    17c8:	e9cd 0102 	strd	r0, r1, [sp, #8]
    17cc:	4639      	mov	r1, r7
    17ce:	4650      	mov	r0, sl
    17d0:	f000 fd04 	bl	21dc <__aeabi_dsub>
    17d4:	4602      	mov	r2, r0
    17d6:	460b      	mov	r3, r1
    17d8:	4640      	mov	r0, r8
    17da:	4649      	mov	r1, r9
    17dc:	f000 fcfe 	bl	21dc <__aeabi_dsub>
    17e0:	a32f      	add	r3, pc, #188	; (adr r3, 18a0 <__ieee754_pow+0x518>)
    17e2:	e9d3 2300 	ldrd	r2, r3, [r3]
    17e6:	f000 fead 	bl	2544 <__aeabi_dmul>
    17ea:	a32f      	add	r3, pc, #188	; (adr r3, 18a8 <__ieee754_pow+0x520>)
    17ec:	e9d3 2300 	ldrd	r2, r3, [r3]
    17f0:	4680      	mov	r8, r0
    17f2:	4689      	mov	r9, r1
    17f4:	4650      	mov	r0, sl
    17f6:	4639      	mov	r1, r7
    17f8:	f000 fea4 	bl	2544 <__aeabi_dmul>
    17fc:	4602      	mov	r2, r0
    17fe:	460b      	mov	r3, r1
    1800:	4640      	mov	r0, r8
    1802:	4649      	mov	r1, r9
    1804:	f000 fcec 	bl	21e0 <__adddf3>
    1808:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    180c:	f000 fce8 	bl	21e0 <__adddf3>
    1810:	4680      	mov	r8, r0
    1812:	980d      	ldr	r0, [sp, #52]	; 0x34
    1814:	4689      	mov	r9, r1
    1816:	f000 fe2f 	bl	2478 <__aeabi_i2d>
    181a:	4642      	mov	r2, r8
    181c:	4606      	mov	r6, r0
    181e:	460f      	mov	r7, r1
    1820:	464b      	mov	r3, r9
    1822:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    1826:	f000 fcdb 	bl	21e0 <__adddf3>
    182a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    182e:	f000 fcd7 	bl	21e0 <__adddf3>
    1832:	4632      	mov	r2, r6
    1834:	463b      	mov	r3, r7
    1836:	f000 fcd3 	bl	21e0 <__adddf3>
    183a:	4632      	mov	r2, r6
    183c:	463b      	mov	r3, r7
    183e:	4650      	mov	r0, sl
    1840:	468b      	mov	fp, r1
    1842:	f000 fccb 	bl	21dc <__aeabi_dsub>
    1846:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    184a:	f000 fcc7 	bl	21dc <__aeabi_dsub>
    184e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    1852:	f000 fcc3 	bl	21dc <__aeabi_dsub>
    1856:	4602      	mov	r2, r0
    1858:	460b      	mov	r3, r1
    185a:	4640      	mov	r0, r8
    185c:	4649      	mov	r1, r9
    185e:	f000 fcbd 	bl	21dc <__aeabi_dsub>
    1862:	4680      	mov	r8, r0
    1864:	e02e      	b.n	18c4 <__ieee754_pow+0x53c>
    1866:	bf00      	nop
    1868:	4a454eef 	.word	0x4a454eef
    186c:	3fca7e28 	.word	0x3fca7e28
    1870:	93c9db65 	.word	0x93c9db65
    1874:	3fcd864a 	.word	0x3fcd864a
    1878:	a91d4101 	.word	0xa91d4101
    187c:	3fd17460 	.word	0x3fd17460
    1880:	518f264d 	.word	0x518f264d
    1884:	3fd55555 	.word	0x3fd55555
    1888:	db6fabff 	.word	0xdb6fabff
    188c:	3fdb6db6 	.word	0x3fdb6db6
    1890:	33333303 	.word	0x33333303
    1894:	3fe33333 	.word	0x3fe33333
    1898:	e0000000 	.word	0xe0000000
    189c:	3feec709 	.word	0x3feec709
    18a0:	dc3a03fd 	.word	0xdc3a03fd
    18a4:	3feec709 	.word	0x3feec709
    18a8:	145b01f5 	.word	0x145b01f5
    18ac:	be3e2fe0 	.word	0xbe3e2fe0
    18b0:	43400000 	.word	0x43400000
    18b4:	0003988e 	.word	0x0003988e
    18b8:	000bb679 	.word	0x000bb679
    18bc:	3ff00000 	.word	0x3ff00000
    18c0:	40080000 	.word	0x40080000
    18c4:	4689      	mov	r9, r1
    18c6:	3c01      	subs	r4, #1
    18c8:	ea54 0305 	orrs.w	r3, r4, r5
    18cc:	e9dd 0100 	ldrd	r0, r1, [sp]
    18d0:	bf14      	ite	ne
    18d2:	4cd9      	ldrne	r4, [pc, #868]	; (1c38 <__ieee754_pow+0x8b0>)
    18d4:	4cd9      	ldreq	r4, [pc, #868]	; (1c3c <__ieee754_pow+0x8b4>)
    18d6:	2300      	movs	r3, #0
    18d8:	e9cd 3404 	strd	r3, r4, [sp, #16]
    18dc:	4603      	mov	r3, r0
    18de:	460c      	mov	r4, r1
    18e0:	e9cd 3402 	strd	r3, r4, [sp, #8]
    18e4:	2300      	movs	r3, #0
    18e6:	9302      	str	r3, [sp, #8]
    18e8:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
    18ec:	4622      	mov	r2, r4
    18ee:	462b      	mov	r3, r5
    18f0:	f000 fc74 	bl	21dc <__aeabi_dsub>
    18f4:	4652      	mov	r2, sl
    18f6:	465b      	mov	r3, fp
    18f8:	f000 fe24 	bl	2544 <__aeabi_dmul>
    18fc:	e9dd 2300 	ldrd	r2, r3, [sp]
    1900:	4606      	mov	r6, r0
    1902:	460f      	mov	r7, r1
    1904:	4640      	mov	r0, r8
    1906:	4649      	mov	r1, r9
    1908:	f000 fe1c 	bl	2544 <__aeabi_dmul>
    190c:	4602      	mov	r2, r0
    190e:	460b      	mov	r3, r1
    1910:	4630      	mov	r0, r6
    1912:	4639      	mov	r1, r7
    1914:	f000 fc64 	bl	21e0 <__adddf3>
    1918:	4622      	mov	r2, r4
    191a:	4680      	mov	r8, r0
    191c:	4689      	mov	r9, r1
    191e:	462b      	mov	r3, r5
    1920:	4650      	mov	r0, sl
    1922:	4659      	mov	r1, fp
    1924:	e9cd 8900 	strd	r8, r9, [sp]
    1928:	f000 fe0c 	bl	2544 <__aeabi_dmul>
    192c:	460b      	mov	r3, r1
    192e:	4602      	mov	r2, r0
    1930:	4606      	mov	r6, r0
    1932:	460f      	mov	r7, r1
    1934:	4640      	mov	r0, r8
    1936:	4649      	mov	r1, r9
    1938:	f000 fc52 	bl	21e0 <__adddf3>
    193c:	4bc0      	ldr	r3, [pc, #768]	; (1c40 <__ieee754_pow+0x8b8>)
    193e:	4299      	cmp	r1, r3
    1940:	4604      	mov	r4, r0
    1942:	460d      	mov	r5, r1
    1944:	468a      	mov	sl, r1
    1946:	f340 8116 	ble.w	1b76 <__ieee754_pow+0x7ee>
    194a:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
    194e:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
    1952:	4303      	orrs	r3, r0
    1954:	f040 81ea 	bne.w	1d2c <__ieee754_pow+0x9a4>
    1958:	a3a3      	add	r3, pc, #652	; (adr r3, 1be8 <__ieee754_pow+0x860>)
    195a:	e9d3 2300 	ldrd	r2, r3, [r3]
    195e:	e9dd 0100 	ldrd	r0, r1, [sp]
    1962:	f000 fc3d 	bl	21e0 <__adddf3>
    1966:	4632      	mov	r2, r6
    1968:	4680      	mov	r8, r0
    196a:	4689      	mov	r9, r1
    196c:	463b      	mov	r3, r7
    196e:	4620      	mov	r0, r4
    1970:	4629      	mov	r1, r5
    1972:	f000 fc33 	bl	21dc <__aeabi_dsub>
    1976:	4602      	mov	r2, r0
    1978:	460b      	mov	r3, r1
    197a:	4640      	mov	r0, r8
    197c:	4649      	mov	r1, r9
    197e:	f001 f871 	bl	2a64 <__aeabi_dcmpgt>
    1982:	2800      	cmp	r0, #0
    1984:	f040 81d2 	bne.w	1d2c <__ieee754_pow+0x9a4>
    1988:	46a8      	mov	r8, r5
    198a:	ea4f 5328 	mov.w	r3, r8, asr #20
    198e:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
    1992:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
    1996:	fa42 f303 	asr.w	r3, r2, r3
    199a:	4453      	add	r3, sl
    199c:	f3c3 520a 	ubfx	r2, r3, #20, #11
    19a0:	4da8      	ldr	r5, [pc, #672]	; (1c44 <__ieee754_pow+0x8bc>)
    19a2:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
    19a6:	4115      	asrs	r5, r2
    19a8:	f3c3 0413 	ubfx	r4, r3, #0, #20
    19ac:	ea23 0105 	bic.w	r1, r3, r5
    19b0:	2000      	movs	r0, #0
    19b2:	f1c2 0b14 	rsb	fp, r2, #20
    19b6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
    19ba:	f1ba 0f00 	cmp.w	sl, #0
    19be:	4602      	mov	r2, r0
    19c0:	460b      	mov	r3, r1
    19c2:	fa44 fb0b 	asr.w	fp, r4, fp
    19c6:	4630      	mov	r0, r6
    19c8:	4639      	mov	r1, r7
    19ca:	bfb8      	it	lt
    19cc:	f1cb 0b00 	rsblt	fp, fp, #0
    19d0:	f000 fc04 	bl	21dc <__aeabi_dsub>
    19d4:	4602      	mov	r2, r0
    19d6:	460b      	mov	r3, r1
    19d8:	4606      	mov	r6, r0
    19da:	460f      	mov	r7, r1
    19dc:	e9dd 0100 	ldrd	r0, r1, [sp]
    19e0:	f000 fbfe 	bl	21e0 <__adddf3>
    19e4:	ea4f 5a0b 	mov.w	sl, fp, lsl #20
    19e8:	460d      	mov	r5, r1
    19ea:	2400      	movs	r4, #0
    19ec:	a380      	add	r3, pc, #512	; (adr r3, 1bf0 <__ieee754_pow+0x868>)
    19ee:	e9d3 2300 	ldrd	r2, r3, [r3]
    19f2:	4620      	mov	r0, r4
    19f4:	4629      	mov	r1, r5
    19f6:	f000 fda5 	bl	2544 <__aeabi_dmul>
    19fa:	4632      	mov	r2, r6
    19fc:	4680      	mov	r8, r0
    19fe:	4689      	mov	r9, r1
    1a00:	463b      	mov	r3, r7
    1a02:	4620      	mov	r0, r4
    1a04:	4629      	mov	r1, r5
    1a06:	f000 fbe9 	bl	21dc <__aeabi_dsub>
    1a0a:	4602      	mov	r2, r0
    1a0c:	460b      	mov	r3, r1
    1a0e:	e9dd 0100 	ldrd	r0, r1, [sp]
    1a12:	f000 fbe3 	bl	21dc <__aeabi_dsub>
    1a16:	a378      	add	r3, pc, #480	; (adr r3, 1bf8 <__ieee754_pow+0x870>)
    1a18:	e9d3 2300 	ldrd	r2, r3, [r3]
    1a1c:	f000 fd92 	bl	2544 <__aeabi_dmul>
    1a20:	a377      	add	r3, pc, #476	; (adr r3, 1c00 <__ieee754_pow+0x878>)
    1a22:	e9d3 2300 	ldrd	r2, r3, [r3]
    1a26:	4606      	mov	r6, r0
    1a28:	460f      	mov	r7, r1
    1a2a:	4620      	mov	r0, r4
    1a2c:	4629      	mov	r1, r5
    1a2e:	f000 fd89 	bl	2544 <__aeabi_dmul>
    1a32:	4602      	mov	r2, r0
    1a34:	460b      	mov	r3, r1
    1a36:	4630      	mov	r0, r6
    1a38:	4639      	mov	r1, r7
    1a3a:	f000 fbd1 	bl	21e0 <__adddf3>
    1a3e:	4606      	mov	r6, r0
    1a40:	460f      	mov	r7, r1
    1a42:	4602      	mov	r2, r0
    1a44:	460b      	mov	r3, r1
    1a46:	4640      	mov	r0, r8
    1a48:	4649      	mov	r1, r9
    1a4a:	f000 fbc9 	bl	21e0 <__adddf3>
    1a4e:	4642      	mov	r2, r8
    1a50:	464b      	mov	r3, r9
    1a52:	4604      	mov	r4, r0
    1a54:	460d      	mov	r5, r1
    1a56:	f000 fbc1 	bl	21dc <__aeabi_dsub>
    1a5a:	4602      	mov	r2, r0
    1a5c:	460b      	mov	r3, r1
    1a5e:	4630      	mov	r0, r6
    1a60:	4639      	mov	r1, r7
    1a62:	f000 fbbb 	bl	21dc <__aeabi_dsub>
    1a66:	4622      	mov	r2, r4
    1a68:	4680      	mov	r8, r0
    1a6a:	4689      	mov	r9, r1
    1a6c:	462b      	mov	r3, r5
    1a6e:	4620      	mov	r0, r4
    1a70:	4629      	mov	r1, r5
    1a72:	f000 fd67 	bl	2544 <__aeabi_dmul>
    1a76:	a364      	add	r3, pc, #400	; (adr r3, 1c08 <__ieee754_pow+0x880>)
    1a78:	e9d3 2300 	ldrd	r2, r3, [r3]
    1a7c:	4606      	mov	r6, r0
    1a7e:	460f      	mov	r7, r1
    1a80:	f000 fd60 	bl	2544 <__aeabi_dmul>
    1a84:	a362      	add	r3, pc, #392	; (adr r3, 1c10 <__ieee754_pow+0x888>)
    1a86:	e9d3 2300 	ldrd	r2, r3, [r3]
    1a8a:	f000 fba7 	bl	21dc <__aeabi_dsub>
    1a8e:	4632      	mov	r2, r6
    1a90:	463b      	mov	r3, r7
    1a92:	f000 fd57 	bl	2544 <__aeabi_dmul>
    1a96:	a360      	add	r3, pc, #384	; (adr r3, 1c18 <__ieee754_pow+0x890>)
    1a98:	e9d3 2300 	ldrd	r2, r3, [r3]
    1a9c:	f000 fba0 	bl	21e0 <__adddf3>
    1aa0:	4632      	mov	r2, r6
    1aa2:	463b      	mov	r3, r7
    1aa4:	f000 fd4e 	bl	2544 <__aeabi_dmul>
    1aa8:	a35d      	add	r3, pc, #372	; (adr r3, 1c20 <__ieee754_pow+0x898>)
    1aaa:	e9d3 2300 	ldrd	r2, r3, [r3]
    1aae:	f000 fb95 	bl	21dc <__aeabi_dsub>
    1ab2:	4632      	mov	r2, r6
    1ab4:	463b      	mov	r3, r7
    1ab6:	f000 fd45 	bl	2544 <__aeabi_dmul>
    1aba:	a35b      	add	r3, pc, #364	; (adr r3, 1c28 <__ieee754_pow+0x8a0>)
    1abc:	e9d3 2300 	ldrd	r2, r3, [r3]
    1ac0:	f000 fb8e 	bl	21e0 <__adddf3>
    1ac4:	4632      	mov	r2, r6
    1ac6:	463b      	mov	r3, r7
    1ac8:	f000 fd3c 	bl	2544 <__aeabi_dmul>
    1acc:	4602      	mov	r2, r0
    1ace:	460b      	mov	r3, r1
    1ad0:	4620      	mov	r0, r4
    1ad2:	4629      	mov	r1, r5
    1ad4:	f000 fb82 	bl	21dc <__aeabi_dsub>
    1ad8:	4606      	mov	r6, r0
    1ada:	460f      	mov	r7, r1
    1adc:	4602      	mov	r2, r0
    1ade:	460b      	mov	r3, r1
    1ae0:	4620      	mov	r0, r4
    1ae2:	4629      	mov	r1, r5
    1ae4:	f000 fd2e 	bl	2544 <__aeabi_dmul>
    1ae8:	2200      	movs	r2, #0
    1aea:	e9cd 0100 	strd	r0, r1, [sp]
    1aee:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    1af2:	4630      	mov	r0, r6
    1af4:	4639      	mov	r1, r7
    1af6:	f000 fb71 	bl	21dc <__aeabi_dsub>
    1afa:	4602      	mov	r2, r0
    1afc:	460b      	mov	r3, r1
    1afe:	e9dd 0100 	ldrd	r0, r1, [sp]
    1b02:	f000 fe49 	bl	2798 <__aeabi_ddiv>
    1b06:	4642      	mov	r2, r8
    1b08:	4606      	mov	r6, r0
    1b0a:	460f      	mov	r7, r1
    1b0c:	464b      	mov	r3, r9
    1b0e:	4620      	mov	r0, r4
    1b10:	4629      	mov	r1, r5
    1b12:	f000 fd17 	bl	2544 <__aeabi_dmul>
    1b16:	4642      	mov	r2, r8
    1b18:	464b      	mov	r3, r9
    1b1a:	f000 fb61 	bl	21e0 <__adddf3>
    1b1e:	4602      	mov	r2, r0
    1b20:	460b      	mov	r3, r1
    1b22:	4630      	mov	r0, r6
    1b24:	4639      	mov	r1, r7
    1b26:	f000 fb59 	bl	21dc <__aeabi_dsub>
    1b2a:	4622      	mov	r2, r4
    1b2c:	462b      	mov	r3, r5
    1b2e:	f000 fb55 	bl	21dc <__aeabi_dsub>
    1b32:	4602      	mov	r2, r0
    1b34:	460b      	mov	r3, r1
    1b36:	2000      	movs	r0, #0
    1b38:	493f      	ldr	r1, [pc, #252]	; (1c38 <__ieee754_pow+0x8b0>)
    1b3a:	f000 fb4f 	bl	21dc <__aeabi_dsub>
    1b3e:	448a      	add	sl, r1
    1b40:	f5ba 1f80 	cmp.w	sl, #1048576	; 0x100000
    1b44:	f2c0 8133 	blt.w	1dae <__ieee754_pow+0xa26>
    1b48:	4651      	mov	r1, sl
    1b4a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    1b4e:	f000 fcf9 	bl	2544 <__aeabi_dmul>
    1b52:	e45b      	b.n	140c <__ieee754_pow+0x84>
    1b54:	4642      	mov	r2, r8
    1b56:	4640      	mov	r0, r8
    1b58:	464b      	mov	r3, r9
    1b5a:	4649      	mov	r1, r9
    1b5c:	f000 fcf2 	bl	2544 <__aeabi_dmul>
    1b60:	e454      	b.n	140c <__ieee754_pow+0x84>
    1b62:	f1ba 0f00 	cmp.w	sl, #0
    1b66:	f6bf ace0 	bge.w	152a <__ieee754_pow+0x1a2>
    1b6a:	e9dd 3400 	ldrd	r3, r4, [sp]
    1b6e:	4618      	mov	r0, r3
    1b70:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
    1b74:	e44a      	b.n	140c <__ieee754_pow+0x84>
    1b76:	4b34      	ldr	r3, [pc, #208]	; (1c48 <__ieee754_pow+0x8c0>)
    1b78:	f021 4800 	bic.w	r8, r1, #2147483648	; 0x80000000
    1b7c:	4598      	cmp	r8, r3
    1b7e:	f340 80f2 	ble.w	1d66 <__ieee754_pow+0x9de>
    1b82:	4b32      	ldr	r3, [pc, #200]	; (1c4c <__ieee754_pow+0x8c4>)
    1b84:	440b      	add	r3, r1
    1b86:	4303      	orrs	r3, r0
    1b88:	d10c      	bne.n	1ba4 <__ieee754_pow+0x81c>
    1b8a:	4632      	mov	r2, r6
    1b8c:	463b      	mov	r3, r7
    1b8e:	f000 fb25 	bl	21dc <__aeabi_dsub>
    1b92:	4602      	mov	r2, r0
    1b94:	460b      	mov	r3, r1
    1b96:	e9dd 0100 	ldrd	r0, r1, [sp]
    1b9a:	f000 ff4f 	bl	2a3c <__aeabi_dcmple>
    1b9e:	2800      	cmp	r0, #0
    1ba0:	f43f aef3 	beq.w	198a <__ieee754_pow+0x602>
    1ba4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    1ba8:	a321      	add	r3, pc, #132	; (adr r3, 1c30 <__ieee754_pow+0x8a8>)
    1baa:	e9d3 2300 	ldrd	r2, r3, [r3]
    1bae:	f000 fcc9 	bl	2544 <__aeabi_dmul>
    1bb2:	a31f      	add	r3, pc, #124	; (adr r3, 1c30 <__ieee754_pow+0x8a8>)
    1bb4:	e9d3 2300 	ldrd	r2, r3, [r3]
    1bb8:	f000 fcc4 	bl	2544 <__aeabi_dmul>
    1bbc:	e426      	b.n	140c <__ieee754_pow+0x84>
    1bbe:	4602      	mov	r2, r0
    1bc0:	460b      	mov	r3, r1
    1bc2:	2000      	movs	r0, #0
    1bc4:	491c      	ldr	r1, [pc, #112]	; (1c38 <__ieee754_pow+0x8b0>)
    1bc6:	f000 fde7 	bl	2798 <__aeabi_ddiv>
    1bca:	e43c      	b.n	1446 <__ieee754_pow+0xbe>
    1bcc:	2200      	movs	r2, #0
    1bce:	2300      	movs	r3, #0
    1bd0:	e9cd 2308 	strd	r2, r3, [sp, #32]
    1bd4:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
    1bd8:	4b17      	ldr	r3, [pc, #92]	; (1c38 <__ieee754_pow+0x8b0>)
    1bda:	2200      	movs	r2, #0
    1bdc:	2700      	movs	r7, #0
    1bde:	e9cd 2306 	strd	r2, r3, [sp, #24]
    1be2:	e4e6      	b.n	15b2 <__ieee754_pow+0x22a>
    1be4:	f3af 8000 	nop.w
    1be8:	652b82fe 	.word	0x652b82fe
    1bec:	3c971547 	.word	0x3c971547
    1bf0:	00000000 	.word	0x00000000
    1bf4:	3fe62e43 	.word	0x3fe62e43
    1bf8:	fefa39ef 	.word	0xfefa39ef
    1bfc:	3fe62e42 	.word	0x3fe62e42
    1c00:	0ca86c39 	.word	0x0ca86c39
    1c04:	be205c61 	.word	0xbe205c61
    1c08:	72bea4d0 	.word	0x72bea4d0
    1c0c:	3e663769 	.word	0x3e663769
    1c10:	c5d26bf1 	.word	0xc5d26bf1
    1c14:	3ebbbd41 	.word	0x3ebbbd41
    1c18:	af25de2c 	.word	0xaf25de2c
    1c1c:	3f11566a 	.word	0x3f11566a
    1c20:	16bebd93 	.word	0x16bebd93
    1c24:	3f66c16c 	.word	0x3f66c16c
    1c28:	5555553e 	.word	0x5555553e
    1c2c:	3fc55555 	.word	0x3fc55555
    1c30:	c2f8f359 	.word	0xc2f8f359
    1c34:	01a56e1f 	.word	0x01a56e1f
    1c38:	3ff00000 	.word	0x3ff00000
    1c3c:	bff00000 	.word	0xbff00000
    1c40:	408fffff 	.word	0x408fffff
    1c44:	000fffff 	.word	0x000fffff
    1c48:	4090cbff 	.word	0x4090cbff
    1c4c:	3f6f3400 	.word	0x3f6f3400
    1c50:	4b6b      	ldr	r3, [pc, #428]	; (1e00 <__ieee754_pow+0xa78>)
    1c52:	429e      	cmp	r6, r3
    1c54:	f77f ac66 	ble.w	1524 <__ieee754_pow+0x19c>
    1c58:	4b6a      	ldr	r3, [pc, #424]	; (1e04 <__ieee754_pow+0xa7c>)
    1c5a:	429e      	cmp	r6, r3
    1c5c:	f73f ac13 	bgt.w	1486 <__ieee754_pow+0xfe>
    1c60:	2200      	movs	r2, #0
    1c62:	4b68      	ldr	r3, [pc, #416]	; (1e04 <__ieee754_pow+0xa7c>)
    1c64:	f000 faba 	bl	21dc <__aeabi_dsub>
    1c68:	a357      	add	r3, pc, #348	; (adr r3, 1dc8 <__ieee754_pow+0xa40>)
    1c6a:	e9d3 2300 	ldrd	r2, r3, [r3]
    1c6e:	4606      	mov	r6, r0
    1c70:	460f      	mov	r7, r1
    1c72:	f000 fc67 	bl	2544 <__aeabi_dmul>
    1c76:	a356      	add	r3, pc, #344	; (adr r3, 1dd0 <__ieee754_pow+0xa48>)
    1c78:	e9d3 2300 	ldrd	r2, r3, [r3]
    1c7c:	4680      	mov	r8, r0
    1c7e:	4689      	mov	r9, r1
    1c80:	4630      	mov	r0, r6
    1c82:	4639      	mov	r1, r7
    1c84:	f000 fc5e 	bl	2544 <__aeabi_dmul>
    1c88:	2200      	movs	r2, #0
    1c8a:	4682      	mov	sl, r0
    1c8c:	468b      	mov	fp, r1
    1c8e:	4b5e      	ldr	r3, [pc, #376]	; (1e08 <__ieee754_pow+0xa80>)
    1c90:	4630      	mov	r0, r6
    1c92:	4639      	mov	r1, r7
    1c94:	f000 fc56 	bl	2544 <__aeabi_dmul>
    1c98:	4602      	mov	r2, r0
    1c9a:	460b      	mov	r3, r1
    1c9c:	a14e      	add	r1, pc, #312	; (adr r1, 1dd8 <__ieee754_pow+0xa50>)
    1c9e:	e9d1 0100 	ldrd	r0, r1, [r1]
    1ca2:	f000 fa9b 	bl	21dc <__aeabi_dsub>
    1ca6:	4632      	mov	r2, r6
    1ca8:	463b      	mov	r3, r7
    1caa:	f000 fc4b 	bl	2544 <__aeabi_dmul>
    1cae:	4602      	mov	r2, r0
    1cb0:	460b      	mov	r3, r1
    1cb2:	2000      	movs	r0, #0
    1cb4:	4955      	ldr	r1, [pc, #340]	; (1e0c <__ieee754_pow+0xa84>)
    1cb6:	f000 fa91 	bl	21dc <__aeabi_dsub>
    1cba:	4632      	mov	r2, r6
    1cbc:	e9cd 0102 	strd	r0, r1, [sp, #8]
    1cc0:	463b      	mov	r3, r7
    1cc2:	4630      	mov	r0, r6
    1cc4:	4639      	mov	r1, r7
    1cc6:	f000 fc3d 	bl	2544 <__aeabi_dmul>
    1cca:	4602      	mov	r2, r0
    1ccc:	460b      	mov	r3, r1
    1cce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    1cd2:	f000 fc37 	bl	2544 <__aeabi_dmul>
    1cd6:	a342      	add	r3, pc, #264	; (adr r3, 1de0 <__ieee754_pow+0xa58>)
    1cd8:	e9d3 2300 	ldrd	r2, r3, [r3]
    1cdc:	f000 fc32 	bl	2544 <__aeabi_dmul>
    1ce0:	4602      	mov	r2, r0
    1ce2:	460b      	mov	r3, r1
    1ce4:	4650      	mov	r0, sl
    1ce6:	4659      	mov	r1, fp
    1ce8:	f000 fa78 	bl	21dc <__aeabi_dsub>
    1cec:	4602      	mov	r2, r0
    1cee:	460b      	mov	r3, r1
    1cf0:	4606      	mov	r6, r0
    1cf2:	460f      	mov	r7, r1
    1cf4:	4640      	mov	r0, r8
    1cf6:	4649      	mov	r1, r9
    1cf8:	f000 fa72 	bl	21e0 <__adddf3>
    1cfc:	4642      	mov	r2, r8
    1cfe:	464b      	mov	r3, r9
    1d00:	2000      	movs	r0, #0
    1d02:	4682      	mov	sl, r0
    1d04:	468b      	mov	fp, r1
    1d06:	f000 fa69 	bl	21dc <__aeabi_dsub>
    1d0a:	4602      	mov	r2, r0
    1d0c:	460b      	mov	r3, r1
    1d0e:	4630      	mov	r0, r6
    1d10:	4639      	mov	r1, r7
    1d12:	f000 fa63 	bl	21dc <__aeabi_dsub>
    1d16:	4680      	mov	r8, r0
    1d18:	4689      	mov	r9, r1
    1d1a:	e5d4      	b.n	18c6 <__ieee754_pow+0x53e>
    1d1c:	4642      	mov	r2, r8
    1d1e:	464b      	mov	r3, r9
    1d20:	2000      	movs	r0, #0
    1d22:	4938      	ldr	r1, [pc, #224]	; (1e04 <__ieee754_pow+0xa7c>)
    1d24:	f000 fd38 	bl	2798 <__aeabi_ddiv>
    1d28:	f7ff bb70 	b.w	140c <__ieee754_pow+0x84>
    1d2c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    1d30:	a32d      	add	r3, pc, #180	; (adr r3, 1de8 <__ieee754_pow+0xa60>)
    1d32:	e9d3 2300 	ldrd	r2, r3, [r3]
    1d36:	f000 fc05 	bl	2544 <__aeabi_dmul>
    1d3a:	a32b      	add	r3, pc, #172	; (adr r3, 1de8 <__ieee754_pow+0xa60>)
    1d3c:	e9d3 2300 	ldrd	r2, r3, [r3]
    1d40:	f000 fc00 	bl	2544 <__aeabi_dmul>
    1d44:	f7ff bb62 	b.w	140c <__ieee754_pow+0x84>
    1d48:	f1be 0f00 	cmp.w	lr, #0
    1d4c:	f47f ab69 	bne.w	1422 <__ieee754_pow+0x9a>
    1d50:	f1c3 0314 	rsb	r3, r3, #20
    1d54:	fa47 f203 	asr.w	r2, r7, r3
    1d58:	fa02 f303 	lsl.w	r3, r2, r3
    1d5c:	429f      	cmp	r7, r3
    1d5e:	d02a      	beq.n	1db6 <__ieee754_pow+0xa2e>
    1d60:	4674      	mov	r4, lr
    1d62:	f7ff bb36 	b.w	13d2 <__ieee754_pow+0x4a>
    1d66:	4b29      	ldr	r3, [pc, #164]	; (1e0c <__ieee754_pow+0xa84>)
    1d68:	4598      	cmp	r8, r3
    1d6a:	f73f ae0e 	bgt.w	198a <__ieee754_pow+0x602>
    1d6e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    1d72:	4692      	mov	sl, r2
    1d74:	4693      	mov	fp, r2
    1d76:	e638      	b.n	19ea <__ieee754_pow+0x662>
    1d78:	4602      	mov	r2, r0
    1d7a:	460b      	mov	r3, r1
    1d7c:	f000 fa2e 	bl	21dc <__aeabi_dsub>
    1d80:	4602      	mov	r2, r0
    1d82:	460b      	mov	r3, r1
    1d84:	f000 fd08 	bl	2798 <__aeabi_ddiv>
    1d88:	f7ff bb40 	b.w	140c <__ieee754_pow+0x84>
    1d8c:	a318      	add	r3, pc, #96	; (adr r3, 1df0 <__ieee754_pow+0xa68>)
    1d8e:	e9d3 2300 	ldrd	r2, r3, [r3]
    1d92:	e9cd 2308 	strd	r2, r3, [sp, #32]
    1d96:	a318      	add	r3, pc, #96	; (adr r3, 1df8 <__ieee754_pow+0xa70>)
    1d98:	e9d3 2300 	ldrd	r2, r3, [r3]
    1d9c:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
    1da0:	4b1b      	ldr	r3, [pc, #108]	; (1e10 <__ieee754_pow+0xa88>)
    1da2:	2200      	movs	r2, #0
    1da4:	f44f 2780 	mov.w	r7, #262144	; 0x40000
    1da8:	e9cd 2306 	strd	r2, r3, [sp, #24]
    1dac:	e401      	b.n	15b2 <__ieee754_pow+0x22a>
    1dae:	465a      	mov	r2, fp
    1db0:	f000 f98a 	bl	20c8 <scalbn>
    1db4:	e6c9      	b.n	1b4a <__ieee754_pow+0x7c2>
    1db6:	f002 0201 	and.w	r2, r2, #1
    1dba:	f1c2 0402 	rsb	r4, r2, #2
    1dbe:	f7ff bb08 	b.w	13d2 <__ieee754_pow+0x4a>
    1dc2:	bf00      	nop
    1dc4:	f3af 8000 	nop.w
    1dc8:	60000000 	.word	0x60000000
    1dcc:	3ff71547 	.word	0x3ff71547
    1dd0:	f85ddf44 	.word	0xf85ddf44
    1dd4:	3e54ae0b 	.word	0x3e54ae0b
    1dd8:	55555555 	.word	0x55555555
    1ddc:	3fd55555 	.word	0x3fd55555
    1de0:	652b82fe 	.word	0x652b82fe
    1de4:	3ff71547 	.word	0x3ff71547
    1de8:	8800759c 	.word	0x8800759c
    1dec:	7e37e43c 	.word	0x7e37e43c
    1df0:	40000000 	.word	0x40000000
    1df4:	3fe2b803 	.word	0x3fe2b803
    1df8:	43cfd006 	.word	0x43cfd006
    1dfc:	3e4cfdeb 	.word	0x3e4cfdeb
    1e00:	3feffffe 	.word	0x3feffffe
    1e04:	3ff00000 	.word	0x3ff00000
    1e08:	3fd00000 	.word	0x3fd00000
    1e0c:	3fe00000 	.word	0x3fe00000
    1e10:	3ff80000 	.word	0x3ff80000

00001e14 <__ieee754_sqrt>:
    1e14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    1e18:	4f5b      	ldr	r7, [pc, #364]	; (1f88 <__ieee754_sqrt+0x174>)
    1e1a:	438f      	bics	r7, r1
    1e1c:	4605      	mov	r5, r0
    1e1e:	460c      	mov	r4, r1
    1e20:	f000 8092 	beq.w	1f48 <__ieee754_sqrt+0x134>
    1e24:	2900      	cmp	r1, #0
    1e26:	460b      	mov	r3, r1
    1e28:	4602      	mov	r2, r0
    1e2a:	dd6f      	ble.n	1f0c <__ieee754_sqrt+0xf8>
    1e2c:	150f      	asrs	r7, r1, #20
    1e2e:	d07b      	beq.n	1f28 <__ieee754_sqrt+0x114>
    1e30:	f2a7 37ff 	subw	r7, r7, #1023	; 0x3ff
    1e34:	f3c3 0313 	ubfx	r3, r3, #0, #20
    1e38:	07f8      	lsls	r0, r7, #31
    1e3a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    1e3e:	d45c      	bmi.n	1efa <__ieee754_sqrt+0xe6>
    1e40:	eb03 71d2 	add.w	r1, r3, r2, lsr #31
    1e44:	2600      	movs	r6, #0
    1e46:	440b      	add	r3, r1
    1e48:	107f      	asrs	r7, r7, #1
    1e4a:	0052      	lsls	r2, r2, #1
    1e4c:	46b6      	mov	lr, r6
    1e4e:	2016      	movs	r0, #22
    1e50:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
    1e54:	eb0e 0401 	add.w	r4, lr, r1
    1e58:	429c      	cmp	r4, r3
    1e5a:	ea4f 75d2 	mov.w	r5, r2, lsr #31
    1e5e:	ea4f 0242 	mov.w	r2, r2, lsl #1
    1e62:	dc03      	bgt.n	1e6c <__ieee754_sqrt+0x58>
    1e64:	1b1b      	subs	r3, r3, r4
    1e66:	eb04 0e01 	add.w	lr, r4, r1
    1e6a:	440e      	add	r6, r1
    1e6c:	3801      	subs	r0, #1
    1e6e:	eb05 0343 	add.w	r3, r5, r3, lsl #1
    1e72:	ea4f 0151 	mov.w	r1, r1, lsr #1
    1e76:	d1ed      	bne.n	1e54 <__ieee754_sqrt+0x40>
    1e78:	4684      	mov	ip, r0
    1e7a:	2420      	movs	r4, #32
    1e7c:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
    1e80:	e009      	b.n	1e96 <__ieee754_sqrt+0x82>
    1e82:	d020      	beq.n	1ec6 <__ieee754_sqrt+0xb2>
    1e84:	eb03 75d2 	add.w	r5, r3, r2, lsr #31
    1e88:	3c01      	subs	r4, #1
    1e8a:	ea4f 0151 	mov.w	r1, r1, lsr #1
    1e8e:	442b      	add	r3, r5
    1e90:	ea4f 0242 	mov.w	r2, r2, lsl #1
    1e94:	d020      	beq.n	1ed8 <__ieee754_sqrt+0xc4>
    1e96:	4573      	cmp	r3, lr
    1e98:	eb01 050c 	add.w	r5, r1, ip
    1e9c:	ddf1      	ble.n	1e82 <__ieee754_sqrt+0x6e>
    1e9e:	2d00      	cmp	r5, #0
    1ea0:	eb05 0c01 	add.w	ip, r5, r1
    1ea4:	db09      	blt.n	1eba <__ieee754_sqrt+0xa6>
    1ea6:	46f0      	mov	r8, lr
    1ea8:	4295      	cmp	r5, r2
    1eaa:	eba3 030e 	sub.w	r3, r3, lr
    1eae:	d900      	bls.n	1eb2 <__ieee754_sqrt+0x9e>
    1eb0:	3b01      	subs	r3, #1
    1eb2:	1b52      	subs	r2, r2, r5
    1eb4:	4408      	add	r0, r1
    1eb6:	46c6      	mov	lr, r8
    1eb8:	e7e4      	b.n	1e84 <__ieee754_sqrt+0x70>
    1eba:	f1bc 0f00 	cmp.w	ip, #0
    1ebe:	dbf2      	blt.n	1ea6 <__ieee754_sqrt+0x92>
    1ec0:	f10e 0801 	add.w	r8, lr, #1
    1ec4:	e7f0      	b.n	1ea8 <__ieee754_sqrt+0x94>
    1ec6:	4295      	cmp	r5, r2
    1ec8:	d8dc      	bhi.n	1e84 <__ieee754_sqrt+0x70>
    1eca:	2d00      	cmp	r5, #0
    1ecc:	eb05 0c01 	add.w	ip, r5, r1
    1ed0:	db44      	blt.n	1f5c <__ieee754_sqrt+0x148>
    1ed2:	4698      	mov	r8, r3
    1ed4:	2300      	movs	r3, #0
    1ed6:	e7ec      	b.n	1eb2 <__ieee754_sqrt+0x9e>
    1ed8:	4313      	orrs	r3, r2
    1eda:	d113      	bne.n	1f04 <__ieee754_sqrt+0xf0>
    1edc:	0840      	lsrs	r0, r0, #1
    1ede:	1073      	asrs	r3, r6, #1
    1ee0:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
    1ee4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
    1ee8:	07f2      	lsls	r2, r6, #31
    1eea:	eb03 5907 	add.w	r9, r3, r7, lsl #20
    1eee:	bf48      	it	mi
    1ef0:	f040 4000 	orrmi.w	r0, r0, #2147483648	; 0x80000000
    1ef4:	4649      	mov	r1, r9
    1ef6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    1efa:	005b      	lsls	r3, r3, #1
    1efc:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
    1f00:	0052      	lsls	r2, r2, #1
    1f02:	e79d      	b.n	1e40 <__ieee754_sqrt+0x2c>
    1f04:	1c41      	adds	r1, r0, #1
    1f06:	d02d      	beq.n	1f64 <__ieee754_sqrt+0x150>
    1f08:	3001      	adds	r0, #1
    1f0a:	e7e7      	b.n	1edc <__ieee754_sqrt+0xc8>
    1f0c:	4606      	mov	r6, r0
    1f0e:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
    1f12:	433e      	orrs	r6, r7
    1f14:	d0ef      	beq.n	1ef6 <__ieee754_sqrt+0xe2>
    1f16:	bb69      	cbnz	r1, 1f74 <__ieee754_sqrt+0x160>
    1f18:	460f      	mov	r7, r1
    1f1a:	0ad3      	lsrs	r3, r2, #11
    1f1c:	3f15      	subs	r7, #21
    1f1e:	0552      	lsls	r2, r2, #21
    1f20:	2b00      	cmp	r3, #0
    1f22:	d0fa      	beq.n	1f1a <__ieee754_sqrt+0x106>
    1f24:	02de      	lsls	r6, r3, #11
    1f26:	d420      	bmi.n	1f6a <__ieee754_sqrt+0x156>
    1f28:	2400      	movs	r4, #0
    1f2a:	e000      	b.n	1f2e <__ieee754_sqrt+0x11a>
    1f2c:	4604      	mov	r4, r0
    1f2e:	005b      	lsls	r3, r3, #1
    1f30:	02dd      	lsls	r5, r3, #11
    1f32:	f104 0001 	add.w	r0, r4, #1
    1f36:	d5f9      	bpl.n	1f2c <__ieee754_sqrt+0x118>
    1f38:	f1c0 0120 	rsb	r1, r0, #32
    1f3c:	fa22 f101 	lsr.w	r1, r2, r1
    1f40:	430b      	orrs	r3, r1
    1f42:	1b3f      	subs	r7, r7, r4
    1f44:	4082      	lsls	r2, r0
    1f46:	e773      	b.n	1e30 <__ieee754_sqrt+0x1c>
    1f48:	4602      	mov	r2, r0
    1f4a:	460b      	mov	r3, r1
    1f4c:	f000 fafa 	bl	2544 <__aeabi_dmul>
    1f50:	462a      	mov	r2, r5
    1f52:	4623      	mov	r3, r4
    1f54:	f000 f944 	bl	21e0 <__adddf3>
    1f58:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    1f5c:	f1bc 0f00 	cmp.w	ip, #0
    1f60:	daae      	bge.n	1ec0 <__ieee754_sqrt+0xac>
    1f62:	e7b6      	b.n	1ed2 <__ieee754_sqrt+0xbe>
    1f64:	3601      	adds	r6, #1
    1f66:	4620      	mov	r0, r4
    1f68:	e7b9      	b.n	1ede <__ieee754_sqrt+0xca>
    1f6a:	2000      	movs	r0, #0
    1f6c:	2120      	movs	r1, #32
    1f6e:	f04f 34ff 	mov.w	r4, #4294967295
    1f72:	e7e3      	b.n	1f3c <__ieee754_sqrt+0x128>
    1f74:	4602      	mov	r2, r0
    1f76:	460b      	mov	r3, r1
    1f78:	f000 f930 	bl	21dc <__aeabi_dsub>
    1f7c:	4602      	mov	r2, r0
    1f7e:	460b      	mov	r3, r1
    1f80:	f000 fc0a 	bl	2798 <__aeabi_ddiv>
    1f84:	e7b7      	b.n	1ef6 <__ieee754_sqrt+0xe2>
    1f86:	bf00      	nop
    1f88:	7ff00000 	.word	0x7ff00000

00001f8c <fabs>:
    1f8c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    1f90:	4770      	bx	lr
    1f92:	bf00      	nop

00001f94 <finite>:
    1f94:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
    1f98:	f501 1080 	add.w	r0, r1, #1048576	; 0x100000
    1f9c:	0fc0      	lsrs	r0, r0, #31
    1f9e:	4770      	bx	lr

00001fa0 <matherr>:
    1fa0:	2000      	movs	r0, #0
    1fa2:	4770      	bx	lr

00001fa4 <nan>:
    1fa4:	2000      	movs	r0, #0
    1fa6:	4901      	ldr	r1, [pc, #4]	; (1fac <nan+0x8>)
    1fa8:	4770      	bx	lr
    1faa:	bf00      	nop
    1fac:	7ff80000 	.word	0x7ff80000

00001fb0 <rint>:
    1fb0:	b5f0      	push	{r4, r5, r6, r7, lr}
    1fb2:	f3c1 5e0a 	ubfx	lr, r1, #20, #11
    1fb6:	f2ae 36ff 	subw	r6, lr, #1023	; 0x3ff
    1fba:	2e13      	cmp	r6, #19
    1fbc:	b083      	sub	sp, #12
    1fbe:	4602      	mov	r2, r0
    1fc0:	460b      	mov	r3, r1
    1fc2:	460c      	mov	r4, r1
    1fc4:	ea4f 75d1 	mov.w	r5, r1, lsr #31
    1fc8:	4607      	mov	r7, r0
    1fca:	dc2e      	bgt.n	202a <rint+0x7a>
    1fcc:	2e00      	cmp	r6, #0
    1fce:	db49      	blt.n	2064 <rint+0xb4>
    1fd0:	493a      	ldr	r1, [pc, #232]	; (20bc <rint+0x10c>)
    1fd2:	4131      	asrs	r1, r6
    1fd4:	ea03 0001 	and.w	r0, r3, r1
    1fd8:	4310      	orrs	r0, r2
    1fda:	d02b      	beq.n	2034 <rint+0x84>
    1fdc:	0849      	lsrs	r1, r1, #1
    1fde:	400b      	ands	r3, r1
    1fe0:	ea53 0702 	orrs.w	r7, r3, r2
    1fe4:	d00c      	beq.n	2000 <rint+0x50>
    1fe6:	f44f 2380 	mov.w	r3, #262144	; 0x40000
    1fea:	2e13      	cmp	r6, #19
    1fec:	ea24 0101 	bic.w	r1, r4, r1
    1ff0:	fa43 f406 	asr.w	r4, r3, r6
    1ff4:	ea44 0401 	orr.w	r4, r4, r1
    1ff8:	bf0c      	ite	eq
    1ffa:	f04f 4700 	moveq.w	r7, #2147483648	; 0x80000000
    1ffe:	2700      	movne	r7, #0
    2000:	4b2f      	ldr	r3, [pc, #188]	; (20c0 <rint+0x110>)
    2002:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
    2006:	4621      	mov	r1, r4
    2008:	e9d5 4500 	ldrd	r4, r5, [r5]
    200c:	4638      	mov	r0, r7
    200e:	4622      	mov	r2, r4
    2010:	462b      	mov	r3, r5
    2012:	f000 f8e5 	bl	21e0 <__adddf3>
    2016:	e9cd 0100 	strd	r0, r1, [sp]
    201a:	4622      	mov	r2, r4
    201c:	462b      	mov	r3, r5
    201e:	e9dd 0100 	ldrd	r0, r1, [sp]
    2022:	f000 f8db 	bl	21dc <__aeabi_dsub>
    2026:	b003      	add	sp, #12
    2028:	bdf0      	pop	{r4, r5, r6, r7, pc}
    202a:	2e33      	cmp	r6, #51	; 0x33
    202c:	dd06      	ble.n	203c <rint+0x8c>
    202e:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
    2032:	d040      	beq.n	20b6 <rint+0x106>
    2034:	4610      	mov	r0, r2
    2036:	4619      	mov	r1, r3
    2038:	b003      	add	sp, #12
    203a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    203c:	f2ae 4e13 	subw	lr, lr, #1043	; 0x413
    2040:	f04f 31ff 	mov.w	r1, #4294967295
    2044:	fa21 f10e 	lsr.w	r1, r1, lr
    2048:	4208      	tst	r0, r1
    204a:	d0f3      	beq.n	2034 <rint+0x84>
    204c:	0849      	lsrs	r1, r1, #1
    204e:	4208      	tst	r0, r1
    2050:	d0d6      	beq.n	2000 <rint+0x50>
    2052:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    2056:	ea20 0101 	bic.w	r1, r0, r1
    205a:	fa43 fe0e 	asr.w	lr, r3, lr
    205e:	ea4e 0701 	orr.w	r7, lr, r1
    2062:	e7cd      	b.n	2000 <rint+0x50>
    2064:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    2068:	4301      	orrs	r1, r0
    206a:	d0e3      	beq.n	2034 <rint+0x84>
    206c:	f3c3 0113 	ubfx	r1, r3, #0, #20
    2070:	4e13      	ldr	r6, [pc, #76]	; (20c0 <rint+0x110>)
    2072:	4301      	orrs	r1, r0
    2074:	f1c1 0c00 	rsb	ip, r1, #0
    2078:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
    207c:	e9d6 6700 	ldrd	r6, r7, [r6]
    2080:	ea4c 0c01 	orr.w	ip, ip, r1
    2084:	ea4f 3c1c 	mov.w	ip, ip, lsr #12
    2088:	0c5c      	lsrs	r4, r3, #17
    208a:	0464      	lsls	r4, r4, #17
    208c:	f40c 2300 	and.w	r3, ip, #524288	; 0x80000
    2090:	ea43 0104 	orr.w	r1, r3, r4
    2094:	4632      	mov	r2, r6
    2096:	463b      	mov	r3, r7
    2098:	f000 f8a2 	bl	21e0 <__adddf3>
    209c:	e9cd 0100 	strd	r0, r1, [sp]
    20a0:	4632      	mov	r2, r6
    20a2:	463b      	mov	r3, r7
    20a4:	e9dd 0100 	ldrd	r0, r1, [sp]
    20a8:	f000 f898 	bl	21dc <__aeabi_dsub>
    20ac:	f021 4400 	bic.w	r4, r1, #2147483648	; 0x80000000
    20b0:	ea44 71c5 	orr.w	r1, r4, r5, lsl #31
    20b4:	e7c0      	b.n	2038 <rint+0x88>
    20b6:	f000 f893 	bl	21e0 <__adddf3>
    20ba:	e7bd      	b.n	2038 <rint+0x88>
    20bc:	000fffff 	.word	0x000fffff
    20c0:	00002c28 	.word	0x00002c28
    20c4:	00000000 	.word	0x00000000

000020c8 <scalbn>:
    20c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    20ca:	f3c1 560a 	ubfx	r6, r1, #20, #11
    20ce:	4604      	mov	r4, r0
    20d0:	460d      	mov	r5, r1
    20d2:	460b      	mov	r3, r1
    20d4:	4617      	mov	r7, r2
    20d6:	bb0e      	cbnz	r6, 211c <scalbn+0x54>
    20d8:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
    20dc:	4303      	orrs	r3, r0
    20de:	4686      	mov	lr, r0
    20e0:	d025      	beq.n	212e <scalbn+0x66>
    20e2:	2200      	movs	r2, #0
    20e4:	4b34      	ldr	r3, [pc, #208]	; (21b8 <scalbn+0xf0>)
    20e6:	f000 fa2d 	bl	2544 <__aeabi_dmul>
    20ea:	4a34      	ldr	r2, [pc, #208]	; (21bc <scalbn+0xf4>)
    20ec:	4297      	cmp	r7, r2
    20ee:	4604      	mov	r4, r0
    20f0:	460d      	mov	r5, r1
    20f2:	460b      	mov	r3, r1
    20f4:	db2a      	blt.n	214c <scalbn+0x84>
    20f6:	f3c1 560a 	ubfx	r6, r1, #20, #11
    20fa:	3e36      	subs	r6, #54	; 0x36
    20fc:	443e      	add	r6, r7
    20fe:	f240 72fe 	movw	r2, #2046	; 0x7fe
    2102:	4296      	cmp	r6, r2
    2104:	dc28      	bgt.n	2158 <scalbn+0x90>
    2106:	2e00      	cmp	r6, #0
    2108:	dd12      	ble.n	2130 <scalbn+0x68>
    210a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
    210e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
    2112:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
    2116:	4620      	mov	r0, r4
    2118:	4629      	mov	r1, r5
    211a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    211c:	f240 72ff 	movw	r2, #2047	; 0x7ff
    2120:	4296      	cmp	r6, r2
    2122:	d1eb      	bne.n	20fc <scalbn+0x34>
    2124:	4602      	mov	r2, r0
    2126:	460b      	mov	r3, r1
    2128:	f000 f85a 	bl	21e0 <__adddf3>
    212c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    212e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2130:	f116 0f35 	cmn.w	r6, #53	; 0x35
    2134:	da1d      	bge.n	2172 <scalbn+0xaa>
    2136:	f24c 3350 	movw	r3, #50000	; 0xc350
    213a:	429f      	cmp	r7, r3
    213c:	4622      	mov	r2, r4
    213e:	462b      	mov	r3, r5
    2140:	dc25      	bgt.n	218e <scalbn+0xc6>
    2142:	a119      	add	r1, pc, #100	; (adr r1, 21a8 <scalbn+0xe0>)
    2144:	e9d1 0100 	ldrd	r0, r1, [r1]
    2148:	f000 f83c 	bl	21c4 <copysign>
    214c:	a316      	add	r3, pc, #88	; (adr r3, 21a8 <scalbn+0xe0>)
    214e:	e9d3 2300 	ldrd	r2, r3, [r3]
    2152:	f000 f9f7 	bl	2544 <__aeabi_dmul>
    2156:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2158:	4622      	mov	r2, r4
    215a:	462b      	mov	r3, r5
    215c:	a114      	add	r1, pc, #80	; (adr r1, 21b0 <scalbn+0xe8>)
    215e:	e9d1 0100 	ldrd	r0, r1, [r1]
    2162:	f000 f82f 	bl	21c4 <copysign>
    2166:	a312      	add	r3, pc, #72	; (adr r3, 21b0 <scalbn+0xe8>)
    2168:	e9d3 2300 	ldrd	r2, r3, [r3]
    216c:	f000 f9ea 	bl	2544 <__aeabi_dmul>
    2170:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2172:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
    2176:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
    217a:	3636      	adds	r6, #54	; 0x36
    217c:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
    2180:	4620      	mov	r0, r4
    2182:	4629      	mov	r1, r5
    2184:	2200      	movs	r2, #0
    2186:	4b0e      	ldr	r3, [pc, #56]	; (21c0 <scalbn+0xf8>)
    2188:	f000 f9dc 	bl	2544 <__aeabi_dmul>
    218c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    218e:	a108      	add	r1, pc, #32	; (adr r1, 21b0 <scalbn+0xe8>)
    2190:	e9d1 0100 	ldrd	r0, r1, [r1]
    2194:	f000 f816 	bl	21c4 <copysign>
    2198:	a305      	add	r3, pc, #20	; (adr r3, 21b0 <scalbn+0xe8>)
    219a:	e9d3 2300 	ldrd	r2, r3, [r3]
    219e:	f000 f9d1 	bl	2544 <__aeabi_dmul>
    21a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    21a4:	f3af 8000 	nop.w
    21a8:	c2f8f359 	.word	0xc2f8f359
    21ac:	01a56e1f 	.word	0x01a56e1f
    21b0:	8800759c 	.word	0x8800759c
    21b4:	7e37e43c 	.word	0x7e37e43c
    21b8:	43500000 	.word	0x43500000
    21bc:	ffff3cb0 	.word	0xffff3cb0
    21c0:	3c900000 	.word	0x3c900000

000021c4 <copysign>:
    21c4:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
    21c8:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
    21cc:	ea42 0103 	orr.w	r1, r2, r3
    21d0:	4770      	bx	lr
    21d2:	bf00      	nop

000021d4 <__aeabi_drsub>:
    21d4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
    21d8:	e002      	b.n	21e0 <__adddf3>
    21da:	bf00      	nop

000021dc <__aeabi_dsub>:
    21dc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000021e0 <__adddf3>:
    21e0:	b530      	push	{r4, r5, lr}
    21e2:	ea4f 0441 	mov.w	r4, r1, lsl #1
    21e6:	ea4f 0543 	mov.w	r5, r3, lsl #1
    21ea:	ea94 0f05 	teq	r4, r5
    21ee:	bf08      	it	eq
    21f0:	ea90 0f02 	teqeq	r0, r2
    21f4:	bf1f      	itttt	ne
    21f6:	ea54 0c00 	orrsne.w	ip, r4, r0
    21fa:	ea55 0c02 	orrsne.w	ip, r5, r2
    21fe:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
    2202:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    2206:	f000 80e2 	beq.w	23ce <__adddf3+0x1ee>
    220a:	ea4f 5454 	mov.w	r4, r4, lsr #21
    220e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
    2212:	bfb8      	it	lt
    2214:	426d      	neglt	r5, r5
    2216:	dd0c      	ble.n	2232 <__adddf3+0x52>
    2218:	442c      	add	r4, r5
    221a:	ea80 0202 	eor.w	r2, r0, r2
    221e:	ea81 0303 	eor.w	r3, r1, r3
    2222:	ea82 0000 	eor.w	r0, r2, r0
    2226:	ea83 0101 	eor.w	r1, r3, r1
    222a:	ea80 0202 	eor.w	r2, r0, r2
    222e:	ea81 0303 	eor.w	r3, r1, r3
    2232:	2d36      	cmp	r5, #54	; 0x36
    2234:	bf88      	it	hi
    2236:	bd30      	pophi	{r4, r5, pc}
    2238:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    223c:	ea4f 3101 	mov.w	r1, r1, lsl #12
    2240:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
    2244:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
    2248:	d002      	beq.n	2250 <__adddf3+0x70>
    224a:	4240      	negs	r0, r0
    224c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    2250:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
    2254:	ea4f 3303 	mov.w	r3, r3, lsl #12
    2258:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
    225c:	d002      	beq.n	2264 <__adddf3+0x84>
    225e:	4252      	negs	r2, r2
    2260:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
    2264:	ea94 0f05 	teq	r4, r5
    2268:	f000 80a7 	beq.w	23ba <__adddf3+0x1da>
    226c:	f1a4 0401 	sub.w	r4, r4, #1
    2270:	f1d5 0e20 	rsbs	lr, r5, #32
    2274:	db0d      	blt.n	2292 <__adddf3+0xb2>
    2276:	fa02 fc0e 	lsl.w	ip, r2, lr
    227a:	fa22 f205 	lsr.w	r2, r2, r5
    227e:	1880      	adds	r0, r0, r2
    2280:	f141 0100 	adc.w	r1, r1, #0
    2284:	fa03 f20e 	lsl.w	r2, r3, lr
    2288:	1880      	adds	r0, r0, r2
    228a:	fa43 f305 	asr.w	r3, r3, r5
    228e:	4159      	adcs	r1, r3
    2290:	e00e      	b.n	22b0 <__adddf3+0xd0>
    2292:	f1a5 0520 	sub.w	r5, r5, #32
    2296:	f10e 0e20 	add.w	lr, lr, #32
    229a:	2a01      	cmp	r2, #1
    229c:	fa03 fc0e 	lsl.w	ip, r3, lr
    22a0:	bf28      	it	cs
    22a2:	f04c 0c02 	orrcs.w	ip, ip, #2
    22a6:	fa43 f305 	asr.w	r3, r3, r5
    22aa:	18c0      	adds	r0, r0, r3
    22ac:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
    22b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    22b4:	d507      	bpl.n	22c6 <__adddf3+0xe6>
    22b6:	f04f 0e00 	mov.w	lr, #0
    22ba:	f1dc 0c00 	rsbs	ip, ip, #0
    22be:	eb7e 0000 	sbcs.w	r0, lr, r0
    22c2:	eb6e 0101 	sbc.w	r1, lr, r1
    22c6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
    22ca:	d31b      	bcc.n	2304 <__adddf3+0x124>
    22cc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
    22d0:	d30c      	bcc.n	22ec <__adddf3+0x10c>
    22d2:	0849      	lsrs	r1, r1, #1
    22d4:	ea5f 0030 	movs.w	r0, r0, rrx
    22d8:	ea4f 0c3c 	mov.w	ip, ip, rrx
    22dc:	f104 0401 	add.w	r4, r4, #1
    22e0:	ea4f 5244 	mov.w	r2, r4, lsl #21
    22e4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
    22e8:	f080 809a 	bcs.w	2420 <__adddf3+0x240>
    22ec:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    22f0:	bf08      	it	eq
    22f2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    22f6:	f150 0000 	adcs.w	r0, r0, #0
    22fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    22fe:	ea41 0105 	orr.w	r1, r1, r5
    2302:	bd30      	pop	{r4, r5, pc}
    2304:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
    2308:	4140      	adcs	r0, r0
    230a:	eb41 0101 	adc.w	r1, r1, r1
    230e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    2312:	f1a4 0401 	sub.w	r4, r4, #1
    2316:	d1e9      	bne.n	22ec <__adddf3+0x10c>
    2318:	f091 0f00 	teq	r1, #0
    231c:	bf04      	itt	eq
    231e:	4601      	moveq	r1, r0
    2320:	2000      	moveq	r0, #0
    2322:	fab1 f381 	clz	r3, r1
    2326:	bf08      	it	eq
    2328:	3320      	addeq	r3, #32
    232a:	f1a3 030b 	sub.w	r3, r3, #11
    232e:	f1b3 0220 	subs.w	r2, r3, #32
    2332:	da0c      	bge.n	234e <__adddf3+0x16e>
    2334:	320c      	adds	r2, #12
    2336:	dd08      	ble.n	234a <__adddf3+0x16a>
    2338:	f102 0c14 	add.w	ip, r2, #20
    233c:	f1c2 020c 	rsb	r2, r2, #12
    2340:	fa01 f00c 	lsl.w	r0, r1, ip
    2344:	fa21 f102 	lsr.w	r1, r1, r2
    2348:	e00c      	b.n	2364 <__adddf3+0x184>
    234a:	f102 0214 	add.w	r2, r2, #20
    234e:	bfd8      	it	le
    2350:	f1c2 0c20 	rsble	ip, r2, #32
    2354:	fa01 f102 	lsl.w	r1, r1, r2
    2358:	fa20 fc0c 	lsr.w	ip, r0, ip
    235c:	bfdc      	itt	le
    235e:	ea41 010c 	orrle.w	r1, r1, ip
    2362:	4090      	lslle	r0, r2
    2364:	1ae4      	subs	r4, r4, r3
    2366:	bfa2      	ittt	ge
    2368:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
    236c:	4329      	orrge	r1, r5
    236e:	bd30      	popge	{r4, r5, pc}
    2370:	ea6f 0404 	mvn.w	r4, r4
    2374:	3c1f      	subs	r4, #31
    2376:	da1c      	bge.n	23b2 <__adddf3+0x1d2>
    2378:	340c      	adds	r4, #12
    237a:	dc0e      	bgt.n	239a <__adddf3+0x1ba>
    237c:	f104 0414 	add.w	r4, r4, #20
    2380:	f1c4 0220 	rsb	r2, r4, #32
    2384:	fa20 f004 	lsr.w	r0, r0, r4
    2388:	fa01 f302 	lsl.w	r3, r1, r2
    238c:	ea40 0003 	orr.w	r0, r0, r3
    2390:	fa21 f304 	lsr.w	r3, r1, r4
    2394:	ea45 0103 	orr.w	r1, r5, r3
    2398:	bd30      	pop	{r4, r5, pc}
    239a:	f1c4 040c 	rsb	r4, r4, #12
    239e:	f1c4 0220 	rsb	r2, r4, #32
    23a2:	fa20 f002 	lsr.w	r0, r0, r2
    23a6:	fa01 f304 	lsl.w	r3, r1, r4
    23aa:	ea40 0003 	orr.w	r0, r0, r3
    23ae:	4629      	mov	r1, r5
    23b0:	bd30      	pop	{r4, r5, pc}
    23b2:	fa21 f004 	lsr.w	r0, r1, r4
    23b6:	4629      	mov	r1, r5
    23b8:	bd30      	pop	{r4, r5, pc}
    23ba:	f094 0f00 	teq	r4, #0
    23be:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
    23c2:	bf06      	itte	eq
    23c4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
    23c8:	3401      	addeq	r4, #1
    23ca:	3d01      	subne	r5, #1
    23cc:	e74e      	b.n	226c <__adddf3+0x8c>
    23ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    23d2:	bf18      	it	ne
    23d4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    23d8:	d029      	beq.n	242e <__adddf3+0x24e>
    23da:	ea94 0f05 	teq	r4, r5
    23de:	bf08      	it	eq
    23e0:	ea90 0f02 	teqeq	r0, r2
    23e4:	d005      	beq.n	23f2 <__adddf3+0x212>
    23e6:	ea54 0c00 	orrs.w	ip, r4, r0
    23ea:	bf04      	itt	eq
    23ec:	4619      	moveq	r1, r3
    23ee:	4610      	moveq	r0, r2
    23f0:	bd30      	pop	{r4, r5, pc}
    23f2:	ea91 0f03 	teq	r1, r3
    23f6:	bf1e      	ittt	ne
    23f8:	2100      	movne	r1, #0
    23fa:	2000      	movne	r0, #0
    23fc:	bd30      	popne	{r4, r5, pc}
    23fe:	ea5f 5c54 	movs.w	ip, r4, lsr #21
    2402:	d105      	bne.n	2410 <__adddf3+0x230>
    2404:	0040      	lsls	r0, r0, #1
    2406:	4149      	adcs	r1, r1
    2408:	bf28      	it	cs
    240a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
    240e:	bd30      	pop	{r4, r5, pc}
    2410:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
    2414:	bf3c      	itt	cc
    2416:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
    241a:	bd30      	popcc	{r4, r5, pc}
    241c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    2420:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
    2424:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    2428:	f04f 0000 	mov.w	r0, #0
    242c:	bd30      	pop	{r4, r5, pc}
    242e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    2432:	bf1a      	itte	ne
    2434:	4619      	movne	r1, r3
    2436:	4610      	movne	r0, r2
    2438:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
    243c:	bf1c      	itt	ne
    243e:	460b      	movne	r3, r1
    2440:	4602      	movne	r2, r0
    2442:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    2446:	bf06      	itte	eq
    2448:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
    244c:	ea91 0f03 	teqeq	r1, r3
    2450:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
    2454:	bd30      	pop	{r4, r5, pc}
    2456:	bf00      	nop

00002458 <__aeabi_ui2d>:
    2458:	f090 0f00 	teq	r0, #0
    245c:	bf04      	itt	eq
    245e:	2100      	moveq	r1, #0
    2460:	4770      	bxeq	lr
    2462:	b530      	push	{r4, r5, lr}
    2464:	f44f 6480 	mov.w	r4, #1024	; 0x400
    2468:	f104 0432 	add.w	r4, r4, #50	; 0x32
    246c:	f04f 0500 	mov.w	r5, #0
    2470:	f04f 0100 	mov.w	r1, #0
    2474:	e750      	b.n	2318 <__adddf3+0x138>
    2476:	bf00      	nop

00002478 <__aeabi_i2d>:
    2478:	f090 0f00 	teq	r0, #0
    247c:	bf04      	itt	eq
    247e:	2100      	moveq	r1, #0
    2480:	4770      	bxeq	lr
    2482:	b530      	push	{r4, r5, lr}
    2484:	f44f 6480 	mov.w	r4, #1024	; 0x400
    2488:	f104 0432 	add.w	r4, r4, #50	; 0x32
    248c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
    2490:	bf48      	it	mi
    2492:	4240      	negmi	r0, r0
    2494:	f04f 0100 	mov.w	r1, #0
    2498:	e73e      	b.n	2318 <__adddf3+0x138>
    249a:	bf00      	nop

0000249c <__aeabi_f2d>:
    249c:	0042      	lsls	r2, r0, #1
    249e:	ea4f 01e2 	mov.w	r1, r2, asr #3
    24a2:	ea4f 0131 	mov.w	r1, r1, rrx
    24a6:	ea4f 7002 	mov.w	r0, r2, lsl #28
    24aa:	bf1f      	itttt	ne
    24ac:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
    24b0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    24b4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
    24b8:	4770      	bxne	lr
    24ba:	f092 0f00 	teq	r2, #0
    24be:	bf14      	ite	ne
    24c0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    24c4:	4770      	bxeq	lr
    24c6:	b530      	push	{r4, r5, lr}
    24c8:	f44f 7460 	mov.w	r4, #896	; 0x380
    24cc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    24d0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    24d4:	e720      	b.n	2318 <__adddf3+0x138>
    24d6:	bf00      	nop

000024d8 <__aeabi_ul2d>:
    24d8:	ea50 0201 	orrs.w	r2, r0, r1
    24dc:	bf08      	it	eq
    24de:	4770      	bxeq	lr
    24e0:	b530      	push	{r4, r5, lr}
    24e2:	f04f 0500 	mov.w	r5, #0
    24e6:	e00a      	b.n	24fe <__aeabi_l2d+0x16>

000024e8 <__aeabi_l2d>:
    24e8:	ea50 0201 	orrs.w	r2, r0, r1
    24ec:	bf08      	it	eq
    24ee:	4770      	bxeq	lr
    24f0:	b530      	push	{r4, r5, lr}
    24f2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
    24f6:	d502      	bpl.n	24fe <__aeabi_l2d+0x16>
    24f8:	4240      	negs	r0, r0
    24fa:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    24fe:	f44f 6480 	mov.w	r4, #1024	; 0x400
    2502:	f104 0432 	add.w	r4, r4, #50	; 0x32
    2506:	ea5f 5c91 	movs.w	ip, r1, lsr #22
    250a:	f43f aedc 	beq.w	22c6 <__adddf3+0xe6>
    250e:	f04f 0203 	mov.w	r2, #3
    2512:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    2516:	bf18      	it	ne
    2518:	3203      	addne	r2, #3
    251a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    251e:	bf18      	it	ne
    2520:	3203      	addne	r2, #3
    2522:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
    2526:	f1c2 0320 	rsb	r3, r2, #32
    252a:	fa00 fc03 	lsl.w	ip, r0, r3
    252e:	fa20 f002 	lsr.w	r0, r0, r2
    2532:	fa01 fe03 	lsl.w	lr, r1, r3
    2536:	ea40 000e 	orr.w	r0, r0, lr
    253a:	fa21 f102 	lsr.w	r1, r1, r2
    253e:	4414      	add	r4, r2
    2540:	e6c1      	b.n	22c6 <__adddf3+0xe6>
    2542:	bf00      	nop

00002544 <__aeabi_dmul>:
    2544:	b570      	push	{r4, r5, r6, lr}
    2546:	f04f 0cff 	mov.w	ip, #255	; 0xff
    254a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    254e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    2552:	bf1d      	ittte	ne
    2554:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    2558:	ea94 0f0c 	teqne	r4, ip
    255c:	ea95 0f0c 	teqne	r5, ip
    2560:	f000 f8de 	bleq	2720 <__aeabi_dmul+0x1dc>
    2564:	442c      	add	r4, r5
    2566:	ea81 0603 	eor.w	r6, r1, r3
    256a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
    256e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
    2572:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
    2576:	bf18      	it	ne
    2578:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
    257c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    2580:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    2584:	d038      	beq.n	25f8 <__aeabi_dmul+0xb4>
    2586:	fba0 ce02 	umull	ip, lr, r0, r2
    258a:	f04f 0500 	mov.w	r5, #0
    258e:	fbe1 e502 	umlal	lr, r5, r1, r2
    2592:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
    2596:	fbe0 e503 	umlal	lr, r5, r0, r3
    259a:	f04f 0600 	mov.w	r6, #0
    259e:	fbe1 5603 	umlal	r5, r6, r1, r3
    25a2:	f09c 0f00 	teq	ip, #0
    25a6:	bf18      	it	ne
    25a8:	f04e 0e01 	orrne.w	lr, lr, #1
    25ac:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
    25b0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
    25b4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
    25b8:	d204      	bcs.n	25c4 <__aeabi_dmul+0x80>
    25ba:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
    25be:	416d      	adcs	r5, r5
    25c0:	eb46 0606 	adc.w	r6, r6, r6
    25c4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
    25c8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
    25cc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
    25d0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
    25d4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
    25d8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    25dc:	bf88      	it	hi
    25de:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    25e2:	d81e      	bhi.n	2622 <__aeabi_dmul+0xde>
    25e4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
    25e8:	bf08      	it	eq
    25ea:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
    25ee:	f150 0000 	adcs.w	r0, r0, #0
    25f2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    25f6:	bd70      	pop	{r4, r5, r6, pc}
    25f8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
    25fc:	ea46 0101 	orr.w	r1, r6, r1
    2600:	ea40 0002 	orr.w	r0, r0, r2
    2604:	ea81 0103 	eor.w	r1, r1, r3
    2608:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
    260c:	bfc2      	ittt	gt
    260e:	ebd4 050c 	rsbsgt	r5, r4, ip
    2612:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    2616:	bd70      	popgt	{r4, r5, r6, pc}
    2618:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    261c:	f04f 0e00 	mov.w	lr, #0
    2620:	3c01      	subs	r4, #1
    2622:	f300 80ab 	bgt.w	277c <__aeabi_dmul+0x238>
    2626:	f114 0f36 	cmn.w	r4, #54	; 0x36
    262a:	bfde      	ittt	le
    262c:	2000      	movle	r0, #0
    262e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
    2632:	bd70      	pople	{r4, r5, r6, pc}
    2634:	f1c4 0400 	rsb	r4, r4, #0
    2638:	3c20      	subs	r4, #32
    263a:	da35      	bge.n	26a8 <__aeabi_dmul+0x164>
    263c:	340c      	adds	r4, #12
    263e:	dc1b      	bgt.n	2678 <__aeabi_dmul+0x134>
    2640:	f104 0414 	add.w	r4, r4, #20
    2644:	f1c4 0520 	rsb	r5, r4, #32
    2648:	fa00 f305 	lsl.w	r3, r0, r5
    264c:	fa20 f004 	lsr.w	r0, r0, r4
    2650:	fa01 f205 	lsl.w	r2, r1, r5
    2654:	ea40 0002 	orr.w	r0, r0, r2
    2658:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
    265c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    2660:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    2664:	fa21 f604 	lsr.w	r6, r1, r4
    2668:	eb42 0106 	adc.w	r1, r2, r6
    266c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    2670:	bf08      	it	eq
    2672:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    2676:	bd70      	pop	{r4, r5, r6, pc}
    2678:	f1c4 040c 	rsb	r4, r4, #12
    267c:	f1c4 0520 	rsb	r5, r4, #32
    2680:	fa00 f304 	lsl.w	r3, r0, r4
    2684:	fa20 f005 	lsr.w	r0, r0, r5
    2688:	fa01 f204 	lsl.w	r2, r1, r4
    268c:	ea40 0002 	orr.w	r0, r0, r2
    2690:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    2694:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    2698:	f141 0100 	adc.w	r1, r1, #0
    269c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    26a0:	bf08      	it	eq
    26a2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    26a6:	bd70      	pop	{r4, r5, r6, pc}
    26a8:	f1c4 0520 	rsb	r5, r4, #32
    26ac:	fa00 f205 	lsl.w	r2, r0, r5
    26b0:	ea4e 0e02 	orr.w	lr, lr, r2
    26b4:	fa20 f304 	lsr.w	r3, r0, r4
    26b8:	fa01 f205 	lsl.w	r2, r1, r5
    26bc:	ea43 0302 	orr.w	r3, r3, r2
    26c0:	fa21 f004 	lsr.w	r0, r1, r4
    26c4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    26c8:	fa21 f204 	lsr.w	r2, r1, r4
    26cc:	ea20 0002 	bic.w	r0, r0, r2
    26d0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
    26d4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    26d8:	bf08      	it	eq
    26da:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    26de:	bd70      	pop	{r4, r5, r6, pc}
    26e0:	f094 0f00 	teq	r4, #0
    26e4:	d10f      	bne.n	2706 <__aeabi_dmul+0x1c2>
    26e6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
    26ea:	0040      	lsls	r0, r0, #1
    26ec:	eb41 0101 	adc.w	r1, r1, r1
    26f0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    26f4:	bf08      	it	eq
    26f6:	3c01      	subeq	r4, #1
    26f8:	d0f7      	beq.n	26ea <__aeabi_dmul+0x1a6>
    26fa:	ea41 0106 	orr.w	r1, r1, r6
    26fe:	f095 0f00 	teq	r5, #0
    2702:	bf18      	it	ne
    2704:	4770      	bxne	lr
    2706:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
    270a:	0052      	lsls	r2, r2, #1
    270c:	eb43 0303 	adc.w	r3, r3, r3
    2710:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
    2714:	bf08      	it	eq
    2716:	3d01      	subeq	r5, #1
    2718:	d0f7      	beq.n	270a <__aeabi_dmul+0x1c6>
    271a:	ea43 0306 	orr.w	r3, r3, r6
    271e:	4770      	bx	lr
    2720:	ea94 0f0c 	teq	r4, ip
    2724:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    2728:	bf18      	it	ne
    272a:	ea95 0f0c 	teqne	r5, ip
    272e:	d00c      	beq.n	274a <__aeabi_dmul+0x206>
    2730:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    2734:	bf18      	it	ne
    2736:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    273a:	d1d1      	bne.n	26e0 <__aeabi_dmul+0x19c>
    273c:	ea81 0103 	eor.w	r1, r1, r3
    2740:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    2744:	f04f 0000 	mov.w	r0, #0
    2748:	bd70      	pop	{r4, r5, r6, pc}
    274a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    274e:	bf06      	itte	eq
    2750:	4610      	moveq	r0, r2
    2752:	4619      	moveq	r1, r3
    2754:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    2758:	d019      	beq.n	278e <__aeabi_dmul+0x24a>
    275a:	ea94 0f0c 	teq	r4, ip
    275e:	d102      	bne.n	2766 <__aeabi_dmul+0x222>
    2760:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
    2764:	d113      	bne.n	278e <__aeabi_dmul+0x24a>
    2766:	ea95 0f0c 	teq	r5, ip
    276a:	d105      	bne.n	2778 <__aeabi_dmul+0x234>
    276c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
    2770:	bf1c      	itt	ne
    2772:	4610      	movne	r0, r2
    2774:	4619      	movne	r1, r3
    2776:	d10a      	bne.n	278e <__aeabi_dmul+0x24a>
    2778:	ea81 0103 	eor.w	r1, r1, r3
    277c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    2780:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    2784:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    2788:	f04f 0000 	mov.w	r0, #0
    278c:	bd70      	pop	{r4, r5, r6, pc}
    278e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    2792:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
    2796:	bd70      	pop	{r4, r5, r6, pc}

00002798 <__aeabi_ddiv>:
    2798:	b570      	push	{r4, r5, r6, lr}
    279a:	f04f 0cff 	mov.w	ip, #255	; 0xff
    279e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    27a2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    27a6:	bf1d      	ittte	ne
    27a8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    27ac:	ea94 0f0c 	teqne	r4, ip
    27b0:	ea95 0f0c 	teqne	r5, ip
    27b4:	f000 f8a7 	bleq	2906 <__aeabi_ddiv+0x16e>
    27b8:	eba4 0405 	sub.w	r4, r4, r5
    27bc:	ea81 0e03 	eor.w	lr, r1, r3
    27c0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    27c4:	ea4f 3101 	mov.w	r1, r1, lsl #12
    27c8:	f000 8088 	beq.w	28dc <__aeabi_ddiv+0x144>
    27cc:	ea4f 3303 	mov.w	r3, r3, lsl #12
    27d0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
    27d4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
    27d8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
    27dc:	ea4f 2202 	mov.w	r2, r2, lsl #8
    27e0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
    27e4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
    27e8:	ea4f 2600 	mov.w	r6, r0, lsl #8
    27ec:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
    27f0:	429d      	cmp	r5, r3
    27f2:	bf08      	it	eq
    27f4:	4296      	cmpeq	r6, r2
    27f6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
    27fa:	f504 7440 	add.w	r4, r4, #768	; 0x300
    27fe:	d202      	bcs.n	2806 <__aeabi_ddiv+0x6e>
    2800:	085b      	lsrs	r3, r3, #1
    2802:	ea4f 0232 	mov.w	r2, r2, rrx
    2806:	1ab6      	subs	r6, r6, r2
    2808:	eb65 0503 	sbc.w	r5, r5, r3
    280c:	085b      	lsrs	r3, r3, #1
    280e:	ea4f 0232 	mov.w	r2, r2, rrx
    2812:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
    2816:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
    281a:	ebb6 0e02 	subs.w	lr, r6, r2
    281e:	eb75 0e03 	sbcs.w	lr, r5, r3
    2822:	bf22      	ittt	cs
    2824:	1ab6      	subcs	r6, r6, r2
    2826:	4675      	movcs	r5, lr
    2828:	ea40 000c 	orrcs.w	r0, r0, ip
    282c:	085b      	lsrs	r3, r3, #1
    282e:	ea4f 0232 	mov.w	r2, r2, rrx
    2832:	ebb6 0e02 	subs.w	lr, r6, r2
    2836:	eb75 0e03 	sbcs.w	lr, r5, r3
    283a:	bf22      	ittt	cs
    283c:	1ab6      	subcs	r6, r6, r2
    283e:	4675      	movcs	r5, lr
    2840:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    2844:	085b      	lsrs	r3, r3, #1
    2846:	ea4f 0232 	mov.w	r2, r2, rrx
    284a:	ebb6 0e02 	subs.w	lr, r6, r2
    284e:	eb75 0e03 	sbcs.w	lr, r5, r3
    2852:	bf22      	ittt	cs
    2854:	1ab6      	subcs	r6, r6, r2
    2856:	4675      	movcs	r5, lr
    2858:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    285c:	085b      	lsrs	r3, r3, #1
    285e:	ea4f 0232 	mov.w	r2, r2, rrx
    2862:	ebb6 0e02 	subs.w	lr, r6, r2
    2866:	eb75 0e03 	sbcs.w	lr, r5, r3
    286a:	bf22      	ittt	cs
    286c:	1ab6      	subcs	r6, r6, r2
    286e:	4675      	movcs	r5, lr
    2870:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    2874:	ea55 0e06 	orrs.w	lr, r5, r6
    2878:	d018      	beq.n	28ac <__aeabi_ddiv+0x114>
    287a:	ea4f 1505 	mov.w	r5, r5, lsl #4
    287e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
    2882:	ea4f 1606 	mov.w	r6, r6, lsl #4
    2886:	ea4f 03c3 	mov.w	r3, r3, lsl #3
    288a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
    288e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    2892:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
    2896:	d1c0      	bne.n	281a <__aeabi_ddiv+0x82>
    2898:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    289c:	d10b      	bne.n	28b6 <__aeabi_ddiv+0x11e>
    289e:	ea41 0100 	orr.w	r1, r1, r0
    28a2:	f04f 0000 	mov.w	r0, #0
    28a6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
    28aa:	e7b6      	b.n	281a <__aeabi_ddiv+0x82>
    28ac:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    28b0:	bf04      	itt	eq
    28b2:	4301      	orreq	r1, r0
    28b4:	2000      	moveq	r0, #0
    28b6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    28ba:	bf88      	it	hi
    28bc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    28c0:	f63f aeaf 	bhi.w	2622 <__aeabi_dmul+0xde>
    28c4:	ebb5 0c03 	subs.w	ip, r5, r3
    28c8:	bf04      	itt	eq
    28ca:	ebb6 0c02 	subseq.w	ip, r6, r2
    28ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    28d2:	f150 0000 	adcs.w	r0, r0, #0
    28d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    28da:	bd70      	pop	{r4, r5, r6, pc}
    28dc:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
    28e0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
    28e4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
    28e8:	bfc2      	ittt	gt
    28ea:	ebd4 050c 	rsbsgt	r5, r4, ip
    28ee:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    28f2:	bd70      	popgt	{r4, r5, r6, pc}
    28f4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    28f8:	f04f 0e00 	mov.w	lr, #0
    28fc:	3c01      	subs	r4, #1
    28fe:	e690      	b.n	2622 <__aeabi_dmul+0xde>
    2900:	ea45 0e06 	orr.w	lr, r5, r6
    2904:	e68d      	b.n	2622 <__aeabi_dmul+0xde>
    2906:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    290a:	ea94 0f0c 	teq	r4, ip
    290e:	bf08      	it	eq
    2910:	ea95 0f0c 	teqeq	r5, ip
    2914:	f43f af3b 	beq.w	278e <__aeabi_dmul+0x24a>
    2918:	ea94 0f0c 	teq	r4, ip
    291c:	d10a      	bne.n	2934 <__aeabi_ddiv+0x19c>
    291e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    2922:	f47f af34 	bne.w	278e <__aeabi_dmul+0x24a>
    2926:	ea95 0f0c 	teq	r5, ip
    292a:	f47f af25 	bne.w	2778 <__aeabi_dmul+0x234>
    292e:	4610      	mov	r0, r2
    2930:	4619      	mov	r1, r3
    2932:	e72c      	b.n	278e <__aeabi_dmul+0x24a>
    2934:	ea95 0f0c 	teq	r5, ip
    2938:	d106      	bne.n	2948 <__aeabi_ddiv+0x1b0>
    293a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    293e:	f43f aefd 	beq.w	273c <__aeabi_dmul+0x1f8>
    2942:	4610      	mov	r0, r2
    2944:	4619      	mov	r1, r3
    2946:	e722      	b.n	278e <__aeabi_dmul+0x24a>
    2948:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    294c:	bf18      	it	ne
    294e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    2952:	f47f aec5 	bne.w	26e0 <__aeabi_dmul+0x19c>
    2956:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
    295a:	f47f af0d 	bne.w	2778 <__aeabi_dmul+0x234>
    295e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
    2962:	f47f aeeb 	bne.w	273c <__aeabi_dmul+0x1f8>
    2966:	e712      	b.n	278e <__aeabi_dmul+0x24a>

00002968 <__gedf2>:
    2968:	f04f 3cff 	mov.w	ip, #4294967295
    296c:	e006      	b.n	297c <__cmpdf2+0x4>
    296e:	bf00      	nop

00002970 <__ledf2>:
    2970:	f04f 0c01 	mov.w	ip, #1
    2974:	e002      	b.n	297c <__cmpdf2+0x4>
    2976:	bf00      	nop

00002978 <__cmpdf2>:
    2978:	f04f 0c01 	mov.w	ip, #1
    297c:	f84d cd04 	str.w	ip, [sp, #-4]!
    2980:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    2984:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    2988:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    298c:	bf18      	it	ne
    298e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
    2992:	d01b      	beq.n	29cc <__cmpdf2+0x54>
    2994:	b001      	add	sp, #4
    2996:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
    299a:	bf0c      	ite	eq
    299c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
    29a0:	ea91 0f03 	teqne	r1, r3
    29a4:	bf02      	ittt	eq
    29a6:	ea90 0f02 	teqeq	r0, r2
    29aa:	2000      	moveq	r0, #0
    29ac:	4770      	bxeq	lr
    29ae:	f110 0f00 	cmn.w	r0, #0
    29b2:	ea91 0f03 	teq	r1, r3
    29b6:	bf58      	it	pl
    29b8:	4299      	cmppl	r1, r3
    29ba:	bf08      	it	eq
    29bc:	4290      	cmpeq	r0, r2
    29be:	bf2c      	ite	cs
    29c0:	17d8      	asrcs	r0, r3, #31
    29c2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
    29c6:	f040 0001 	orr.w	r0, r0, #1
    29ca:	4770      	bx	lr
    29cc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    29d0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    29d4:	d102      	bne.n	29dc <__cmpdf2+0x64>
    29d6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    29da:	d107      	bne.n	29ec <__cmpdf2+0x74>
    29dc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    29e0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    29e4:	d1d6      	bne.n	2994 <__cmpdf2+0x1c>
    29e6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    29ea:	d0d3      	beq.n	2994 <__cmpdf2+0x1c>
    29ec:	f85d 0b04 	ldr.w	r0, [sp], #4
    29f0:	4770      	bx	lr
    29f2:	bf00      	nop

000029f4 <__aeabi_cdrcmple>:
    29f4:	4684      	mov	ip, r0
    29f6:	4610      	mov	r0, r2
    29f8:	4662      	mov	r2, ip
    29fa:	468c      	mov	ip, r1
    29fc:	4619      	mov	r1, r3
    29fe:	4663      	mov	r3, ip
    2a00:	e000      	b.n	2a04 <__aeabi_cdcmpeq>
    2a02:	bf00      	nop

00002a04 <__aeabi_cdcmpeq>:
    2a04:	b501      	push	{r0, lr}
    2a06:	f7ff ffb7 	bl	2978 <__cmpdf2>
    2a0a:	2800      	cmp	r0, #0
    2a0c:	bf48      	it	mi
    2a0e:	f110 0f00 	cmnmi.w	r0, #0
    2a12:	bd01      	pop	{r0, pc}

00002a14 <__aeabi_dcmpeq>:
    2a14:	f84d ed08 	str.w	lr, [sp, #-8]!
    2a18:	f7ff fff4 	bl	2a04 <__aeabi_cdcmpeq>
    2a1c:	bf0c      	ite	eq
    2a1e:	2001      	moveq	r0, #1
    2a20:	2000      	movne	r0, #0
    2a22:	f85d fb08 	ldr.w	pc, [sp], #8
    2a26:	bf00      	nop

00002a28 <__aeabi_dcmplt>:
    2a28:	f84d ed08 	str.w	lr, [sp, #-8]!
    2a2c:	f7ff ffea 	bl	2a04 <__aeabi_cdcmpeq>
    2a30:	bf34      	ite	cc
    2a32:	2001      	movcc	r0, #1
    2a34:	2000      	movcs	r0, #0
    2a36:	f85d fb08 	ldr.w	pc, [sp], #8
    2a3a:	bf00      	nop

00002a3c <__aeabi_dcmple>:
    2a3c:	f84d ed08 	str.w	lr, [sp, #-8]!
    2a40:	f7ff ffe0 	bl	2a04 <__aeabi_cdcmpeq>
    2a44:	bf94      	ite	ls
    2a46:	2001      	movls	r0, #1
    2a48:	2000      	movhi	r0, #0
    2a4a:	f85d fb08 	ldr.w	pc, [sp], #8
    2a4e:	bf00      	nop

00002a50 <__aeabi_dcmpge>:
    2a50:	f84d ed08 	str.w	lr, [sp, #-8]!
    2a54:	f7ff ffce 	bl	29f4 <__aeabi_cdrcmple>
    2a58:	bf94      	ite	ls
    2a5a:	2001      	movls	r0, #1
    2a5c:	2000      	movhi	r0, #0
    2a5e:	f85d fb08 	ldr.w	pc, [sp], #8
    2a62:	bf00      	nop

00002a64 <__aeabi_dcmpgt>:
    2a64:	f84d ed08 	str.w	lr, [sp, #-8]!
    2a68:	f7ff ffc4 	bl	29f4 <__aeabi_cdrcmple>
    2a6c:	bf34      	ite	cc
    2a6e:	2001      	movcc	r0, #1
    2a70:	2000      	movcs	r0, #0
    2a72:	f85d fb08 	ldr.w	pc, [sp], #8
    2a76:	bf00      	nop

00002a78 <__aeabi_dcmpun>:
    2a78:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    2a7c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    2a80:	d102      	bne.n	2a88 <__aeabi_dcmpun+0x10>
    2a82:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    2a86:	d10a      	bne.n	2a9e <__aeabi_dcmpun+0x26>
    2a88:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    2a8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    2a90:	d102      	bne.n	2a98 <__aeabi_dcmpun+0x20>
    2a92:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    2a96:	d102      	bne.n	2a9e <__aeabi_dcmpun+0x26>
    2a98:	f04f 0000 	mov.w	r0, #0
    2a9c:	4770      	bx	lr
    2a9e:	f04f 0001 	mov.w	r0, #1
    2aa2:	4770      	bx	lr

00002aa4 <__errno>:
    2aa4:	4b01      	ldr	r3, [pc, #4]	; (2aac <__errno+0x8>)
    2aa6:	6818      	ldr	r0, [r3, #0]
    2aa8:	4770      	bx	lr
    2aaa:	bf00      	nop
    2aac:	20000004 	.word	0x20000004

00002ab0 <__libc_init_array>:
    2ab0:	b570      	push	{r4, r5, r6, lr}
    2ab2:	4e0f      	ldr	r6, [pc, #60]	; (2af0 <__libc_init_array+0x40>)
    2ab4:	4d0f      	ldr	r5, [pc, #60]	; (2af4 <__libc_init_array+0x44>)
    2ab6:	1b76      	subs	r6, r6, r5
    2ab8:	10b6      	asrs	r6, r6, #2
    2aba:	bf18      	it	ne
    2abc:	2400      	movne	r4, #0
    2abe:	d005      	beq.n	2acc <__libc_init_array+0x1c>
    2ac0:	3401      	adds	r4, #1
    2ac2:	f855 3b04 	ldr.w	r3, [r5], #4
    2ac6:	4798      	blx	r3
    2ac8:	42a6      	cmp	r6, r4
    2aca:	d1f9      	bne.n	2ac0 <__libc_init_array+0x10>
    2acc:	4e0a      	ldr	r6, [pc, #40]	; (2af8 <__libc_init_array+0x48>)
    2ace:	4d0b      	ldr	r5, [pc, #44]	; (2afc <__libc_init_array+0x4c>)
    2ad0:	1b76      	subs	r6, r6, r5
    2ad2:	f000 f8b3 	bl	2c3c <_init>
    2ad6:	10b6      	asrs	r6, r6, #2
    2ad8:	bf18      	it	ne
    2ada:	2400      	movne	r4, #0
    2adc:	d006      	beq.n	2aec <__libc_init_array+0x3c>
    2ade:	3401      	adds	r4, #1
    2ae0:	f855 3b04 	ldr.w	r3, [r5], #4
    2ae4:	4798      	blx	r3
    2ae6:	42a6      	cmp	r6, r4
    2ae8:	d1f9      	bne.n	2ade <__libc_init_array+0x2e>
    2aea:	bd70      	pop	{r4, r5, r6, pc}
    2aec:	bd70      	pop	{r4, r5, r6, pc}
    2aee:	bf00      	nop
    2af0:	00002c48 	.word	0x00002c48
    2af4:	00002c48 	.word	0x00002c48
    2af8:	00002c50 	.word	0x00002c50
    2afc:	00002c48 	.word	0x00002c48

00002b00 <register_fini>:
    2b00:	4b02      	ldr	r3, [pc, #8]	; (2b0c <register_fini+0xc>)
    2b02:	b113      	cbz	r3, 2b0a <register_fini+0xa>
    2b04:	4802      	ldr	r0, [pc, #8]	; (2b10 <register_fini+0x10>)
    2b06:	f000 b805 	b.w	2b14 <atexit>
    2b0a:	4770      	bx	lr
    2b0c:	00000000 	.word	0x00000000
    2b10:	00002b21 	.word	0x00002b21

00002b14 <atexit>:
    2b14:	2300      	movs	r3, #0
    2b16:	4601      	mov	r1, r0
    2b18:	461a      	mov	r2, r3
    2b1a:	4618      	mov	r0, r3
    2b1c:	f000 b81e 	b.w	2b5c <__register_exitproc>

00002b20 <__libc_fini_array>:
    2b20:	b538      	push	{r3, r4, r5, lr}
    2b22:	4c0a      	ldr	r4, [pc, #40]	; (2b4c <__libc_fini_array+0x2c>)
    2b24:	4d0a      	ldr	r5, [pc, #40]	; (2b50 <__libc_fini_array+0x30>)
    2b26:	1b64      	subs	r4, r4, r5
    2b28:	10a4      	asrs	r4, r4, #2
    2b2a:	d00a      	beq.n	2b42 <__libc_fini_array+0x22>
    2b2c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
    2b30:	3b01      	subs	r3, #1
    2b32:	eb05 0583 	add.w	r5, r5, r3, lsl #2
    2b36:	3c01      	subs	r4, #1
    2b38:	f855 3904 	ldr.w	r3, [r5], #-4
    2b3c:	4798      	blx	r3
    2b3e:	2c00      	cmp	r4, #0
    2b40:	d1f9      	bne.n	2b36 <__libc_fini_array+0x16>
    2b42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2b46:	f000 b883 	b.w	2c50 <_fini>
    2b4a:	bf00      	nop
    2b4c:	00002c60 	.word	0x00002c60
    2b50:	00002c5c 	.word	0x00002c5c

00002b54 <__retarget_lock_acquire_recursive>:
    2b54:	4770      	bx	lr
    2b56:	bf00      	nop

00002b58 <__retarget_lock_release_recursive>:
    2b58:	4770      	bx	lr
    2b5a:	bf00      	nop

00002b5c <__register_exitproc>:
    2b5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    2b60:	4d2c      	ldr	r5, [pc, #176]	; (2c14 <__register_exitproc+0xb8>)
    2b62:	4606      	mov	r6, r0
    2b64:	6828      	ldr	r0, [r5, #0]
    2b66:	4698      	mov	r8, r3
    2b68:	460f      	mov	r7, r1
    2b6a:	4691      	mov	r9, r2
    2b6c:	f7ff fff2 	bl	2b54 <__retarget_lock_acquire_recursive>
    2b70:	4b29      	ldr	r3, [pc, #164]	; (2c18 <__register_exitproc+0xbc>)
    2b72:	681c      	ldr	r4, [r3, #0]
    2b74:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    2b78:	2b00      	cmp	r3, #0
    2b7a:	d03e      	beq.n	2bfa <__register_exitproc+0x9e>
    2b7c:	685a      	ldr	r2, [r3, #4]
    2b7e:	2a1f      	cmp	r2, #31
    2b80:	dc1c      	bgt.n	2bbc <__register_exitproc+0x60>
    2b82:	f102 0e01 	add.w	lr, r2, #1
    2b86:	b176      	cbz	r6, 2ba6 <__register_exitproc+0x4a>
    2b88:	eb03 0182 	add.w	r1, r3, r2, lsl #2
    2b8c:	2401      	movs	r4, #1
    2b8e:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
    2b92:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
    2b96:	4094      	lsls	r4, r2
    2b98:	4320      	orrs	r0, r4
    2b9a:	2e02      	cmp	r6, #2
    2b9c:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
    2ba0:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
    2ba4:	d023      	beq.n	2bee <__register_exitproc+0x92>
    2ba6:	3202      	adds	r2, #2
    2ba8:	f8c3 e004 	str.w	lr, [r3, #4]
    2bac:	6828      	ldr	r0, [r5, #0]
    2bae:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
    2bb2:	f7ff ffd1 	bl	2b58 <__retarget_lock_release_recursive>
    2bb6:	2000      	movs	r0, #0
    2bb8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    2bbc:	4b17      	ldr	r3, [pc, #92]	; (2c1c <__register_exitproc+0xc0>)
    2bbe:	b30b      	cbz	r3, 2c04 <__register_exitproc+0xa8>
    2bc0:	f44f 70c8 	mov.w	r0, #400	; 0x190
    2bc4:	f3af 8000 	nop.w
    2bc8:	4603      	mov	r3, r0
    2bca:	b1d8      	cbz	r0, 2c04 <__register_exitproc+0xa8>
    2bcc:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
    2bd0:	6002      	str	r2, [r0, #0]
    2bd2:	2100      	movs	r1, #0
    2bd4:	6041      	str	r1, [r0, #4]
    2bd6:	460a      	mov	r2, r1
    2bd8:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
    2bdc:	f04f 0e01 	mov.w	lr, #1
    2be0:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
    2be4:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
    2be8:	2e00      	cmp	r6, #0
    2bea:	d0dc      	beq.n	2ba6 <__register_exitproc+0x4a>
    2bec:	e7cc      	b.n	2b88 <__register_exitproc+0x2c>
    2bee:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
    2bf2:	430c      	orrs	r4, r1
    2bf4:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
    2bf8:	e7d5      	b.n	2ba6 <__register_exitproc+0x4a>
    2bfa:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
    2bfe:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
    2c02:	e7bb      	b.n	2b7c <__register_exitproc+0x20>
    2c04:	6828      	ldr	r0, [r5, #0]
    2c06:	f7ff ffa7 	bl	2b58 <__retarget_lock_release_recursive>
    2c0a:	f04f 30ff 	mov.w	r0, #4294967295
    2c0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    2c12:	bf00      	nop
    2c14:	20000430 	.word	0x20000430
    2c18:	00002c38 	.word	0x00002c38
    2c1c:	00000000 	.word	0x00000000
    2c20:	00776f70 	.word	0x00776f70
    2c24:	00000000 	.word	0x00000000

00002c28 <TWO52>:
    2c28:	00000000 43300000 00000000 c3300000     ......0C......0.

00002c38 <_global_impure_ptr>:
    2c38:	20000008                                ... 

00002c3c <_init>:
    2c3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2c3e:	bf00      	nop
    2c40:	bcf8      	pop	{r3, r4, r5, r6, r7}
    2c42:	bc08      	pop	{r3}
    2c44:	469e      	mov	lr, r3
    2c46:	4770      	bx	lr

00002c48 <__init_array_start>:
    2c48:	00002b01 	.word	0x00002b01

00002c4c <__frame_dummy_init_array_entry>:
    2c4c:	00000289                                ....

00002c50 <_fini>:
    2c50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2c52:	bf00      	nop
    2c54:	bcf8      	pop	{r3, r4, r5, r6, r7}
    2c56:	bc08      	pop	{r3}
    2c58:	469e      	mov	lr, r3
    2c5a:	4770      	bx	lr

00002c5c <__fini_array_start>:
    2c5c:	00000265 	.word	0x00000265
